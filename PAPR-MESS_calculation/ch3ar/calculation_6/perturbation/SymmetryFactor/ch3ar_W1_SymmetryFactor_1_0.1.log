Model::init:  starts
   Model::ExponentialKernel::ExponentialKernel:  ... done
   Model::LennardJonesCollision::LennardJonesCollision:  ... done
   WELL: W1
   Model::RRHO::RRHO:  starts
      Model::new_core:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.001153, elapsed time[sec] = 0
      Model::new_core:  done, cpu time[sec] = 0.002801, elapsed time[sec] = 0
      1-th ROTOR:
      Model::HinderedRotor::HinderedRotor:  starts
         Model::HinderedRotor::_read:  starts
         Model::HinderedRotor::_read:  done, cpu time[sec] = 0.000995, elapsed time[sec] = 0
         Model::HinderedRotor::_init: WARNING: potential second derivative at the minimum is negative, assuming zero
         effective rotational constant[1/cm]  = 27.3382
         analytic  frequency at minimum[1/cm] = 0
         numerical frequency at minimum[1/cm] = 0
         minimum energy[kcal/mol]             = 0
         maximum energy[kcal/mol]             = 0
         maximum frequency[1/cm]              = 0
         ground energy [kcal/mol]             = 0
         highest energy level [kcal/mol]      = 19462.6
         number of levels                     = 999
         10 lowest excited states [kcal/mol] relative to the ground: 0.0782 0.0782 0.313 0.313 0.703 0.703 1.25 1.25 1.95
         Statistical Weight (*** - deep tunneling regime):
          T, K        Quantum             PG             PI  ***
           100        2.82615        2.82615        2.82615
           200        3.99678        3.99678        3.99678
           300        4.89503        4.89503        4.89503
           400         5.6523         5.6523         5.6523
           500        6.31946        6.31946        6.31946
           600        6.92262        6.92262        6.92262
           700        7.47729        7.47729        7.47729
           800        7.99355        7.99355        7.99355
           900        8.47844        8.47844        8.47844
          1000        8.93707        8.93707        8.93707
      Model::HinderedRotor::HinderedRotor:  done, cpu time[sec] = 2.00634, elapsed time[sec] = 0
      ground state energy, kcal/mol:   -90.2506
      interpolating states number/density starts
         core state contribution ... done, cpu time[sec] = 0.170146, elapsed time[sec] = 0
         vibrational modes contribution ... done, cpu time[sec] = 0.050706, elapsed time[sec] = 0
         hindered rotors contribution starts
            Model::HinderedRotor::set:  starts
            Model::HinderedRotor::set:  done, cpu time[sec] = 0.00084, elapsed time[sec] = 0
         hindered rotors contribution done, cpu time[sec] = 0.441548, elapsed time[sec] = 0
         effective power exponent at 590.248 kcal/mol = 11.3721
      interpolating states number/density done, cpu time[sec] = 2.26295, elapsed time[sec] = 0
   Model::RRHO::RRHO:  done, cpu time[sec] = 4.28941, elapsed time[sec] = 0
   BIMOLECULAR: R
   Model::Bimolecular::Bimolecular:  starts
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: linear
               rotational constant[1/cm]:         18.6633
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.002043, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.004049, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.007551, elapsed time[sec] = 0
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:         9.55015        9.55009        4.77506
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.001632, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.003574, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.007509, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 0.021716, elapsed time[sec] = 0
   BIMOLECULAR: P1
   Model::Bimolecular::Bimolecular:  starts
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:         19.7111        11.2504        7.16236
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.001608, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.003515, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.006628, elapsed time[sec] = 0
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:         27.4886        14.3446        9.42584
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.001573, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.003463, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.006544, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 0.018868, elapsed time[sec] = 0
   BIMOLECULAR: P2
   Model::Bimolecular::Bimolecular:  starts
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: linear
               rotational constant[1/cm]:         60.4042
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.001571, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.003507, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.006488, elapsed time[sec] = 0
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:          9.3775        1.21307        1.07412
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.002409, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.004335, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.007575, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 0.019723, elapsed time[sec] = 0
   BIMOLECULAR: P3
   Model::Bimolecular::Bimolecular:  starts
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: linear
               rotational constant[1/cm]:         60.4042
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.001509, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.003494, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.006541, elapsed time[sec] = 0
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:         9.70353        1.21666        1.08111
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.001597, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.003836, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.007111, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 0.01943, elapsed time[sec] = 0
   BIMOLECULAR: P4
   Model::Bimolecular::Bimolecular:  starts
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: linear
               rotational constant[1/cm]:         60.4042
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.001492, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.003406, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.006349, elapsed time[sec] = 0
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:         9.46633        1.30142        1.14413
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.001595, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.003525, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.006695, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 0.018612, elapsed time[sec] = 0
   BIMOLECULAR: P5
   Model::Bimolecular::Bimolecular:  starts
      Model::AtomicFragment::AtomicFragment:  ... done
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:         6.45642       0.996004        0.86988
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.002097, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.004082, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.007376, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 0.012953, elapsed time[sec] = 0
   BIMOLECULAR: P6
   Model::Bimolecular::Bimolecular:  starts
      Model::AtomicFragment::AtomicFragment:  ... done
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:         5.24335        0.93381       0.927142
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.001634, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.003597, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.006874, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 0.012342, elapsed time[sec] = 0
   BARRIER: B1
   Model::ReadSpecies::ReadSpecies: ... done, cpu time[sec] = 0.086574, elapsed time[sec] = 0
   BARRIER: B2
   Model::ReadSpecies::ReadSpecies: ... done, cpu time[sec] = 0.086306, elapsed time[sec] = 0
   BARRIER: B3
   Model::VarBarrier::VarBarrier:  starts
      1-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.001497, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.003515, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -22.6613
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.12444, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.018523, elapsed time[sec] = 0
            effective power exponent at 522.659 kcal/mol = 11.8743
         interpolating states number/density done, cpu time[sec] = 0.204695, elapsed time[sec] = 1
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.212276, elapsed time[sec] = 1
      2-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.5e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 2.4e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -19.4076
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.00122, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000436, elapsed time[sec] = 0
            effective power exponent at 519.405 kcal/mol = 11.8747
         interpolating states number/density done, cpu time[sec] = 0.014688, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.014755, elapsed time[sec] = 0
      3-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.6e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -16.4142
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001217, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000427, elapsed time[sec] = 0
            effective power exponent at 516.412 kcal/mol = 11.8755
         interpolating states number/density done, cpu time[sec] = 0.014275, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.014334, elapsed time[sec] = 0
      4-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 2.6e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -13.678
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001195, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.00041, elapsed time[sec] = 0
            effective power exponent at 513.676 kcal/mol = 11.8759
         interpolating states number/density done, cpu time[sec] = 0.014115, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.014264, elapsed time[sec] = 0
      5-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 2.6e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -11.2049
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001195, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000433, elapsed time[sec] = 0
            effective power exponent at 511.203 kcal/mol = 11.8765
         interpolating states number/density done, cpu time[sec] = 0.014031, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.014155, elapsed time[sec] = 0
      6-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.9e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 2.5e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -9.00049
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001185, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000419, elapsed time[sec] = 0
            effective power exponent at 508.998 kcal/mol = 11.8771
         interpolating states number/density done, cpu time[sec] = 0.01391, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.013977, elapsed time[sec] = 0
      7-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 2.4e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -7.06773
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001179, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000418, elapsed time[sec] = 0
            effective power exponent at 507.065 kcal/mol = 11.8774
         interpolating states number/density done, cpu time[sec] = 0.013867, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.013983, elapsed time[sec] = 0
      8-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.9e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -5.40945
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001177, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.00039, elapsed time[sec] = 0
            effective power exponent at 505.407 kcal/mol = 11.8774
         interpolating states number/density done, cpu time[sec] = 0.013799, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.013864, elapsed time[sec] = 0
      9-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 9e-06, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.5e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -4.05137
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001179, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.00041, elapsed time[sec] = 0
            effective power exponent at 504.049 kcal/mol = 11.8772
         interpolating states number/density done, cpu time[sec] = 0.01409, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.014146, elapsed time[sec] = 0
      10-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 9e-06, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.5e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -2.98779
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001171, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000402, elapsed time[sec] = 0
            effective power exponent at 502.986 kcal/mol = 11.8768
         interpolating states number/density done, cpu time[sec] = 0.014063, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.014118, elapsed time[sec] = 0
      11-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 8e-06, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.5e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -2.23584
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001169, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000404, elapsed time[sec] = 0
            effective power exponent at 502.234 kcal/mol = 11.8766
         interpolating states number/density done, cpu time[sec] = 0.014056, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.014108, elapsed time[sec] = 0
      12-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 9e-06, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 2.6e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -1.76409
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.00116, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000401, elapsed time[sec] = 0
            effective power exponent at 501.762 kcal/mol = 11.8765
         interpolating states number/density done, cpu time[sec] = 0.014168, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.014289, elapsed time[sec] = 0
      13-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 9e-06, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 2.4e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -1.54966
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001165, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000403, elapsed time[sec] = 0
            effective power exponent at 501.547 kcal/mol = 11.8767
         interpolating states number/density done, cpu time[sec] = 0.01399, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.014113, elapsed time[sec] = 0
      14-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.8e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -1.6097
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001169, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000426, elapsed time[sec] = 0
            effective power exponent at 501.607 kcal/mol = 11.8774
         interpolating states number/density done, cpu time[sec] = 0.014184, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.014242, elapsed time[sec] = 0
      15-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.7e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -1.85844
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001167, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000413, elapsed time[sec] = 0
            effective power exponent at 501.856 kcal/mol = 11.8784
         interpolating states number/density done, cpu time[sec] = 0.014152, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.014218, elapsed time[sec] = 0
      16-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.7e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -2.25586
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001169, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000406, elapsed time[sec] = 0
            effective power exponent at 502.254 kcal/mol = 11.8799
         interpolating states number/density done, cpu time[sec] = 0.01419, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.014248, elapsed time[sec] = 0
      17-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.7e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -2.76478
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001723, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000481, elapsed time[sec] = 0
            effective power exponent at 502.763 kcal/mol = 11.8817
         interpolating states number/density done, cpu time[sec] = 0.015028, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.015087, elapsed time[sec] = 0
      Model::EckartTunnel::EckartTunnel:  ... done
      interpolating states number/density ... done, cpu time[sec] = 1.13133, elapsed time[sec] = 1
      effective power exponent at 501.547 kcal/mol = 12.1215
      Constituent transition states partition functions
       T, K            1            2            3            4            5            6            7            8            9           10           11           12           13           14           15           16           17          Min
        100  3.90851e+23  3.05117e+16  8.82979e+09      9323.49    0.0370366  5.69093e-07   3.4347e-11  8.25406e-15  8.99826e-18  4.31673e-20  9.95766e-22  9.42125e-23  3.25854e-23  4.49365e-23  1.59917e-22  1.20344e-21  1.58791e-20  3.25853e-23
        200  4.74443e+13  1.32405e+10  7.11895e+06      7303.75      14.5603    0.0571085  0.000444429  6.90781e-06   2.2911e-07  1.59579e-08   2.4425e-09  7.58546e-10  4.51416e-10  5.37634e-10  1.02897e-09  2.86948e-09  1.06195e-08  4.51416e-10
        300  3.42099e+10  1.45681e+08       960377      9718.32      153.373      3.80009     0.148805   0.00925157  0.000956035  0.000162449  4.68096e-05  2.16894e-05   1.5566e-05  1.78004e-05  2.79599e-05  5.66189e-05  0.000138903   1.5566e-05
        400  1.19567e+09  1.99087e+07       459672      14594.6      647.271      40.2374      3.52783     0.437917    0.0798183     0.021197   0.00839753   0.00476942   0.00377863   0.00426111   0.00610409     0.010613    0.0213749   0.00377863
        500  1.97909e+08  7.47751e+06       366526      23109.1      1904.36      205.421      29.1834         5.48      1.40343     0.487441     0.234093     0.150591     0.127051     0.142683     0.194232     0.309627     0.556692      0.12705
        600  7.12397e+07  4.65261e+06       376964      37555.9      4677.31      728.298      142.671      35.2855      11.3336      4.70886      2.57331      1.80142      1.58842      1.78363      2.35302      3.54995       5.9344      1.58826
        700  3.98103e+07  3.84656e+06       446495      61693.5      10320.9      2088.69      514.634      154.919      58.4907       27.623       16.563      12.3266      11.2316      12.6303      16.3181      23.7079      37.6861      11.2266
        800  2.91324e+07   3.7782e+06       574567       101491      21189.1      5220.36       1527.7      532.884      227.126      118.089      75.9278      59.1877      55.3113      62.3214      79.3361      112.156      171.842       55.239
        900  2.53862e+07  4.14125e+06       777326       166256      41247.9      11844.4       3962.9      1550.26      726.116      406.859      276.234      223.279      212.875      240.329      302.589      418.986       624.19      212.262
       1000  2.48831e+07  4.87863e+06  1.08405e+06       270280      77001.1      24998.7      9311.41      3992.88      2016.92      1199.89      850.963      708.129      686.138      776.027      968.725      1319.68      1922.94      682.556
       1100  2.64619e+07  6.03232e+06  1.53927e+06       435181       138864      49855.4      20277.3       9374.7      5037.66      3147.57      2313.41      1971.51      1935.84      2192.89      2718.59      3654.94      5230.94      1919.88
       1200  2.98122e+07   7.7076e+06   2.2076e+06       693199       243163      94955.1      41563.7      20461.6        11578      7535.95      5706.13      4960.29       4924.8      5586.19      6885.95      9156.96      12911.8      4866.74
       1300  3.50062e+07  1.00695e+07  3.18087e+06  1.09177e+06       414995       174026      81070.3      42093.4      24883.1      16766.7      13019.4      11509.1      11534.2      13097.8      16067.6      21170.3      29478.5      11353.6
       1400  4.23545e+07  1.33522e+07  4.58797e+06  1.69982e+06       692254       308624       151675        82438      50597.4      35121.3      27867.1      24990.6      25245.9      28695.1      35055.3      45823.5      63123.6      24749.4
       1500  5.23704e+07  1.78764e+07  6.60797e+06  2.61623e+06  1.13123e+06       531879       273831       154861      98197.4      69940.8      56542.8      51340.1        52223      59403.9      72307.7      93870.2       128107      50986.5
       1600  6.57789e+07  2.40742e+07  9.48734e+06  3.98125e+06  1.81429e+06       893760       479280       280652       183119       133402       109627       100625       102971       117205       142208       183501       248385       100130
       1700  8.35518e+07  3.25215e+07  1.35624e+07  5.99168e+06  2.86022e+06  1.46833e+06       816282       492930       329848       245128       204372       189391       194829       221878       268440       344531       462986       188722
       1800  1.06962e+08  4.39799e+07  1.92885e+07  8.92067e+06  4.43819e+06  2.36363e+06  1.35686e+06       842134       576329       435957       368170       344086       355613       405162       488927       624511       833818       343202
       1900  1.37654e+08  5.94494e+07   2.7277e+07  1.31437e+07  6.78613e+06  3.73501e+06   2.2067e+06  1.40364e+06       980144       753276       643497       605970       628863       716746       862915  1.09746e+06  1.45678e+06       604809
       2000   1.7774e+08  8.02353e+07  3.83428e+07  1.91721e+07  1.02349e+07  5.80288e+06  3.51851e+06  2.28817e+06  1.62706e+06  1.26845e+06  1.09485e+06  1.03803e+06  1.08124e+06  1.23271e+06  1.48096e+06  1.87612e+06  2.47736e+06  1.03647e+06

   Model::VarBarrier::VarBarrier:  done, cpu time[sec] = 1.59611, elapsed time[sec] = 2
   BARRIER: B4
   Model::VarBarrier::VarBarrier:  starts
      1-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.3e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 2e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -21.8779
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001173, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000399, elapsed time[sec] = 0
            effective power exponent at 521.876 kcal/mol = 11.8794
         interpolating states number/density done, cpu time[sec] = 0.015355, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.015434, elapsed time[sec] = 0
      2-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.7e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -18.8158
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001161, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000412, elapsed time[sec] = 0
            effective power exponent at 518.814 kcal/mol = 11.8788
         interpolating states number/density done, cpu time[sec] = 0.014052, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.014114, elapsed time[sec] = 0
      3-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.6e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -16.0339
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001186, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000392, elapsed time[sec] = 0
            effective power exponent at 516.032 kcal/mol = 11.8783
         interpolating states number/density done, cpu time[sec] = 0.014045, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.014101, elapsed time[sec] = 0
      4-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.6e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -13.5322
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001155, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.00041, elapsed time[sec] = 0
            effective power exponent at 513.53 kcal/mol = 11.8777
         interpolating states number/density done, cpu time[sec] = 0.013892, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.01395, elapsed time[sec] = 0
      5-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.6e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -11.3135
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001146, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000388, elapsed time[sec] = 0
            effective power exponent at 511.311 kcal/mol = 11.8768
         interpolating states number/density done, cpu time[sec] = 0.01379, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.01385, elapsed time[sec] = 0
      6-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 9e-06, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.5e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -9.39794
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.00114, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000403, elapsed time[sec] = 0
            effective power exponent at 509.396 kcal/mol = 11.8759
         interpolating states number/density done, cpu time[sec] = 0.013808, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.013863, elapsed time[sec] = 0
      7-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 9e-06, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.5e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -7.79112
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001145, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000406, elapsed time[sec] = 0
            effective power exponent at 507.789 kcal/mol = 11.8748
         interpolating states number/density done, cpu time[sec] = 0.013737, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.013793, elapsed time[sec] = 0
      8-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.5e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -6.49595
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001132, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000406, elapsed time[sec] = 0
            effective power exponent at 506.494 kcal/mol = 11.8737
         interpolating states number/density done, cpu time[sec] = 0.013744, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.0138, elapsed time[sec] = 0
      9-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 9e-06, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.5e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -5.53243
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001135, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000398, elapsed time[sec] = 0
            effective power exponent at 505.53 kcal/mol = 11.8725
         interpolating states number/density done, cpu time[sec] = 0.01369, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.013745, elapsed time[sec] = 0
      10-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.6e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -4.86054
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001135, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000386, elapsed time[sec] = 0
            effective power exponent at 504.858 kcal/mol = 11.8715
         interpolating states number/density done, cpu time[sec] = 0.013639, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.013694, elapsed time[sec] = 0
      11-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 9e-06, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.5e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -4.47456
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001127, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000392, elapsed time[sec] = 0
            effective power exponent at 504.472 kcal/mol = 11.8707
         interpolating states number/density done, cpu time[sec] = 0.01362, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.013673, elapsed time[sec] = 0
      12-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 9e-06, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.7e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -4.40594
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.00113, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000399, elapsed time[sec] = 0
            effective power exponent at 504.404 kcal/mol = 11.8706
         interpolating states number/density done, cpu time[sec] = 0.013645, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.013701, elapsed time[sec] = 0
      13-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.6e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -4.57463
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001137, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000374, elapsed time[sec] = 0
            effective power exponent at 504.572 kcal/mol = 11.8709
         interpolating states number/density done, cpu time[sec] = 0.013622, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.013678, elapsed time[sec] = 0
      14-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.6e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -4.93202
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001133, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000394, elapsed time[sec] = 0
            effective power exponent at 504.93 kcal/mol = 11.8718
         interpolating states number/density done, cpu time[sec] = 0.013626, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.013683, elapsed time[sec] = 0
      15-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 9e-06, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.5e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -5.43522
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001131, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000374, elapsed time[sec] = 0
            effective power exponent at 505.433 kcal/mol = 11.8731
         interpolating states number/density done, cpu time[sec] = 0.013671, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.013728, elapsed time[sec] = 0
      16-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 9e-06, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 2.6e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -6.04421
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001147, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000407, elapsed time[sec] = 0
            effective power exponent at 506.042 kcal/mol = 11.8749
         interpolating states number/density done, cpu time[sec] = 0.013687, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.013757, elapsed time[sec] = 0
      Model::EckartTunnel::EckartTunnel:  ... done
      interpolating states number/density ... done, cpu time[sec] = 1.25758, elapsed time[sec] = 1
      effective power exponent at 504.404 kcal/mol = 12.1643
      Constituent transition states partition functions
       T, K            1            2            3            4            5            6            7            8            9           10           11           12           13           14           15           16          Min
        100  1.11763e+12       223936     0.185945  6.36018e-07  9.07387e-12  5.96093e-16  1.85463e-19  2.77448e-22  2.20277e-24  7.60156e-26  1.10796e-26  7.98346e-27   1.8962e-26  1.16602e-25  1.49342e-24  3.26249e-23  7.98345e-27
        200  9.38289e+07      39693.5      34.8125    0.0627104  0.000232989  1.87016e-06  3.28565e-08  1.27135e-09  1.13643e-10  2.12422e-11  8.18303e-12   7.0253e-12  1.09568e-11  2.75644e-11  1.00242e-10  4.77296e-10  7.02523e-12
        300  6.32003e+06      33876.1      298.673      4.28808     0.100497   0.00396007  0.000264757  3.01283e-05  6.01963e-06  1.97624e-06  1.05568e-06  9.66276e-07  1.31928e-06  2.48671e-06  6.00912e-06  1.74325e-05  9.65923e-07
        400  2.16563e+06      41250.6      1150.14      46.4593      2.72399     0.236928    0.0308063    0.0060002   0.00179162  0.000780535   0.00049258  0.000467839  0.000601019  0.000987244    0.0019595   0.00447307  0.000466779
        500   1.4162e+06      57738.1      3210.72      241.013      24.4602      3.41597     0.661137     0.177638    0.0675118    0.0348961    0.0243981    0.0237742     0.029557    0.0448976    0.0795572     0.158033    0.0236197
        600  1.27589e+06      86435.1      7616.29      863.909      126.318      24.1718      6.09496      2.02863     0.905643     0.525046     0.393651     0.391048      0.47677     0.689237      1.13548      2.06149     0.386115
        700  1.37387e+06       133833      16387.5      2496.35      473.671      113.476      34.5536      13.3988      6.71107      4.22492      3.33259       3.3607      4.04622      5.65489      8.85794      15.1051      3.29464
        800   1.6448e+06       210487      32996.7      6271.64      1446.87      410.222      143.881      62.5602      34.1598      22.8806      18.7569      19.1427      22.8487      31.1607      47.0425      76.6085      18.6302
        900  2.10236e+06       332770      63236.1      14279.8      3835.57      1239.79      485.378      230.694      134.715      94.6987      80.0083      82.4454      97.7846      130.906      192.133      302.035       79.687
       1000  2.80018e+06       525557       116524      30209.5      9165.51      3290.47      1406.72      717.952      442.392      323.236      279.779      290.578      342.963      452.477      649.485      992.852      279.107
       1100  3.82756e+06       826062       207829      60337.4      20227.9      7914.04      3636.15       1967.2      1266.62      955.178      843.287      881.527      1036.38      1351.23       1904.8      2846.42      842.065
       1200  5.31607e+06  1.28922e+06       360457       115019      41910.5      17617.3      8595.88      4882.09      3260.68      2524.49      2265.75      2381.29      2790.51      3602.71      5002.98      7336.45      2263.75
       1300  7.45235e+06  1.99508e+06       610021       210889      82466.4      36839.3      18913.9      11193.7      7711.33      6104.52      5555.43      5865.21      6854.11      8775.81        12033      17366.4       5552.4
       1400  1.04964e+07  3.05894e+06  1.01001e+06       374033       155407      73145.9      39232.3        24053        17016      13729.2      12643.2      13399.5        15621      19858.2      26933.7      38344.1      12638.8
       1500  1.48064e+07  4.64495e+06  1.63947e+06       644514       282268       139018      77446.4      48958.3      35441.2      29070.2      27045.8      28757.7      33454.1      42264.5      56783.4      79886.7      27039.5
       1600  2.08709e+07  6.98426e+06  2.61358e+06  1.08269e+06       496566       254476       146559      95166.5      70292.7      58492.2      54905.7        58546      67977.4      85409.9       113800       158446      54895.8
       1700  2.93513e+07   1.0399e+07  4.09779e+06  1.77794e+06       849385       450846       267391       177789       133674       112652       106575       113919       132044       165098       218363       301245       106556
       1800  4.11358e+07  1.53337e+07   6.3268e+06  2.86053e+06  1.41712e+06       776084       472475       320840       245068       208865       198969       213137       246660       307062       403463       552054       198924
       1900  5.74084e+07   2.2396e+07  9.62961e+06   4.5176e+06  2.31206e+06  1.30218e+06       811539       561582       435059       374536       358996       385281       445242       552092       721140       979485       358875
       2000  7.97366e+07  3.24089e+07  1.44623e+07  7.01437e+06  3.69673e+06  2.13529e+06  1.35912e+06       956627       750585       652033       628440       675575       779687       963344   1.2516e+06   1.6887e+06       628120

   Model::VarBarrier::VarBarrier:  done, cpu time[sec] = 1.50375, elapsed time[sec] = 1
   BARRIER: B5
   Model::RRHO::RRHO:  starts
      Model::new_core:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.4e-05, elapsed time[sec] = 0
      Model::new_core:  done, cpu time[sec] = 2.1e-05, elapsed time[sec] = 0
      Model::EckartTunnel::EckartTunnel:  ... done
      ground state energy, kcal/mol:   -0.195851
      interpolating states number/density starts
         core state contribution ... done, cpu time[sec] = 0.001286, elapsed time[sec] = 0
         vibrational modes contribution ... done, cpu time[sec] = 0.000457, elapsed time[sec] = 0
         tunneling contribution ... done, cpu time[sec] = 6.02744, elapsed time[sec] = 6
         effective power exponent at 569.903 kcal/mol = 13.605
      interpolating states number/density done, cpu time[sec] = 6.04458, elapsed time[sec] = 6
   Model::RRHO::RRHO:  done, cpu time[sec] = 6.04466, elapsed time[sec] = 6
   BARRIER: B6
   Model::ReadSpecies::ReadSpecies: ... done, cpu time[sec] = 0.000937, elapsed time[sec] = 0
   BARRIER: B7
   Model::ReadSpecies::ReadSpecies: ... done, cpu time[sec] = 0.000887, elapsed time[sec] = 0
   checking input ... done
   setting connectivity ... done
   checking connectivity ... done
   setting dissociation limit ... done
   setting maximum barrier height ... done
   partition functions (relative to the ground level, units - 1/cm3):
     T\Q           W1           OH          CH3          CH2          H2O           H2     cis-HCOH           H2   trans-HCOH           H2         H2CO            H        CH2OH            H         CH3O           B1           B2           B3           B4           B5           B6           B7
     100  1.79396e+28  1.11806e+26  1.79604e+26   1.2706e+26  1.20995e+26  3.09408e+23  9.07788e+27  3.09408e+23  8.88203e+27  3.09408e+23    4.226e+27  3.80284e+23  1.41451e+28  3.80284e+23  1.04337e+28  1.02816e+30  3.90845e+30  1.47525e+35  6.97811e+37 5.12326e+128  6.66948e+29  2.86822e+29
     200   2.0324e+29  7.62333e+26  1.46726e+27  1.01653e+27  9.67966e+26  1.75028e+24  7.26953e+28  1.75028e+24  7.11008e+28  1.75028e+24  3.38185e+28  1.07561e+24  1.21889e+29  1.07561e+24  8.41759e+28  2.65947e+31  6.23677e+31  1.08314e+30  2.15615e+30  1.52798e+59  8.88053e+30  3.66779e+30
     300  8.56131e+29   2.3228e+27   5.2604e+27  3.43512e+27  3.26835e+27   4.8232e+24  2.48522e+29   4.8232e+24  2.42385e+29   4.8232e+24  1.14827e+29  1.97601e+24  4.86817e+29  1.97601e+24  2.97918e+29  1.82852e+32  2.59538e+32  1.44208e+30  1.73256e+30  1.89702e+39  4.41749e+31  1.66476e+31
     400  2.49319e+30  5.05886e+27  1.36172e+28  8.18855e+27  7.76803e+27  9.90107e+24  6.13453e+29  9.90107e+24  5.94872e+29  9.90107e+24   2.7863e+29  3.04227e+24   1.4458e+30  3.04227e+24  7.82149e+29  7.43446e+32  6.76087e+32   3.1193e+30  3.38436e+30  5.81364e+32  1.53178e+32  5.25536e+31
     500  6.09891e+30   9.1848e+27   2.9582e+28  1.61907e+28  1.52765e+28  1.72965e+25  1.28796e+30  1.72965e+25  1.23988e+30  1.72965e+25    5.706e+29   4.2517e+24  3.66252e+30   4.2517e+24  1.77798e+30  2.27531e+33  1.40935e+33  6.99392e+30  7.25794e+30    2.174e+31  4.38422e+32  1.38727e+32
     600   1.3539e+31  1.48864e+28  5.75744e+28  2.85247e+28  2.67121e+28  2.72848e+25  2.45857e+30  2.72848e+25  2.34862e+30  2.72848e+25  1.05862e+30  5.58901e+24  8.37682e+30  5.58901e+24  3.71377e+30  5.83137e+33  2.59752e+33  1.53859e+31   1.5531e+31  1.56572e+31  1.10962e+33  3.28769e+32
     700  2.82296e+31  2.23336e+28  1.03869e+29  4.64933e+28  4.31306e+28  4.01168e+25  4.40321e+30  4.01168e+25   4.1744e+30  4.01168e+25  1.84194e+30  7.04296e+24  1.77967e+31  7.04296e+24  7.32198e+30  1.32406e+34  4.44573e+33  3.28489e+31  3.24865e+31  2.00151e+31  2.57036e+33  7.23031e+32
     800  5.62429e+31  3.16898e+28  1.77211e+29  7.16682e+28  6.57497e+28  5.60287e+25  7.52441e+30  5.60287e+25  7.08144e+30  5.60287e+25  3.06214e+30  8.60484e+24  3.57037e+31  8.60484e+24  1.38193e+31  2.75326e+34  7.26034e+33  6.79296e+31  6.61031e+31  3.04639e+31  5.55986e+33  1.50225e+33
     900  1.08106e+32  4.31186e+28  2.89608e+29  1.05938e+29  9.59741e+28  7.52507e+25  1.23926e+31  7.52507e+25  1.15823e+31  7.52507e+25  4.91733e+30  1.02677e+25  6.83675e+31  1.02677e+25  2.51777e+31  5.35429e+34  1.14977e+34  1.36146e+32  1.30791e+32  4.96309e+31  1.13781e+34  2.98133e+33
    1000  2.01668e+32  5.67887e+28  4.57314e+29  1.51557e+29  1.35425e+29  9.80136e+25  1.98016e+31  9.80136e+25  1.83853e+31  9.80136e+25  7.67995e+30  1.20256e+25  1.25901e+32  1.20256e+25  4.45239e+31  9.87598e+34  1.78334e+34  2.64867e+32  2.51886e+32  8.31132e+31  2.22341e+34  5.69316e+33
    1100  3.66579e+32  7.28764e+28   7.0205e+29  2.11192e+29  1.85967e+29  1.24554e+26  3.08377e+31  1.24554e+26  2.84544e+31  1.24554e+26  1.17192e+31  1.38738e+25  2.24222e+32  1.38738e+25  7.67157e+31  1.74488e+35  2.72616e+34  5.01139e+32  4.72857e+32  1.40422e+32  4.17722e+34  1.05163e+34
    1200  6.51162e+32  9.15662e+28  1.05248e+30  2.87967e+29  2.49743e+29  1.55119e+26  4.69659e+31  1.55119e+26  4.30822e+31  1.55119e+26  1.75283e+31  1.58081e+25  3.87856e+32  1.58081e+25  1.29162e+32   2.9743e+35  4.12339e+34  9.23956e+32  8.66602e+32  2.37075e+32  7.58498e+34  1.88656e+34
    1300  1.13279e+33  1.13052e+29    1.546e+30  3.85517e+29  3.29195e+29  1.89964e+26  7.01353e+31  1.89964e+26  6.39799e+31  1.89964e+26  2.57585e+31  1.78247e+25  6.53851e+32  1.78247e+25  2.12965e+32  4.91797e+35  6.18545e+34  1.66316e+33  1.55283e+33  3.97869e+32  1.33665e+35   3.2971e+34
    1400  1.93331e+33  1.37535e+29  2.23088e+30  5.08038e+29  4.27102e+29  2.29356e+26  1.02907e+32  2.29356e+26  9.33855e+31  2.29356e+26  3.72593e+31  1.99205e+25   1.0772e+33  1.99205e+25  3.44505e+32  7.92117e+35  9.21487e+34  2.92799e+33  2.72427e+33  6.61788e+32  2.29366e+35  5.62797e+34
    1500  3.24164e+33  1.65225e+29  3.16878e+30  6.60342e+29  5.46603e+29  2.73576e+26  1.48608e+32  2.73576e+26  1.34194e+32  2.73576e+26   5.3127e+31  2.20925e+25  1.73819e+33  2.20925e+25  5.47579e+32  1.24691e+36  1.36433e+35  5.04957e+33  4.68567e+33   1.0892e+33  3.84301e+35  9.40249e+34
    1600   5.3464e+33  1.96339e+29  4.43778e+30  8.47909e+29  6.91231e+29  3.22912e+26  2.11513e+32  3.22912e+26  1.90113e+32  3.22912e+26  7.47631e+31  2.43382e+25  2.75236e+33  2.43382e+25  8.56291e+32  1.92344e+36  2.00816e+35  8.54299e+33  7.91062e+33  1.77228e+33   6.3014e+35  1.54022e+35
    1700  8.68251e+33  2.31102e+29  6.13586e+30  1.07695e+30  8.64943e+29  3.77663e+26  2.97068e+32  3.77663e+26  2.65843e+32  3.77663e+26  1.03942e+32  2.66552e+25  4.28362e+33  2.66552e+25  1.31889e+33  2.91389e+36  2.93879e+35  1.41969e+34  1.31235e+34  2.84985e+33  1.01312e+36  2.47765e+35
    1800  1.38969e+34  2.69743e+29  8.38503e+30  1.35448e+30  1.07215e+30   4.3814e+26  4.12136e+32   4.3814e+26  3.67296e+32   4.3814e+26  1.42893e+32  2.90413e+25  6.56161e+33  2.90413e+25  2.00279e+33  4.34318e+36  4.27578e+35  2.32007e+34  2.14159e+34  4.52832e+33  1.59976e+36  3.91921e+35
    1900  2.19401e+34    3.125e+29   1.1336e+31  1.68836e+30  1.31777e+30  5.04659e+26  5.65308e+32  5.04659e+26  5.01844e+32  5.04659e+26  1.94391e+32  3.14948e+25  9.90424e+33  3.14948e+25  3.00115e+33   6.3789e+36  6.18455e+35  3.73235e+34  3.44092e+34  7.11085e+33   2.4845e+36  6.10341e+35
    2000  3.41924e+34  3.59614e+29  1.51739e+31  2.08737e+30  1.60722e+30  5.77547e+26  7.67243e+32  5.77547e+26  6.78607e+32  5.77547e+26  2.61867e+32  3.40136e+25  1.47468e+34  3.40136e+25  4.44133e+33  9.24376e+36  8.89218e+35   5.9162e+34  5.44811e+34  1.10376e+34  3.79973e+36  9.36743e+35
   partition functions (relative to 0 kcal/mol, units - 1/cm3):
     T\Q           W1           B1           B2           B3           B4           B5           B6           B7
     100 3.11568e+225  1.02816e+30  1.82422e+29  3.59409e+38  2.97017e+47 1.37269e+129  2.66912e+20     0.948966
     200  8.4699e+127  2.65947e+31   1.3474e+31   5.3462e+31   1.4067e+35   2.5011e+59  1.77655e+26  6.67151e+15
     300  4.77661e+95  1.82852e+32  9.34454e+31  1.94043e+31  2.80781e+33  2.63481e+39  3.25537e+28  2.48065e+21
     400  5.08967e+79  7.43446e+32  3.14247e+32  2.19148e+31  8.64445e+32  7.43797e+32  6.85118e+29  2.24136e+24
     500   1.7108e+70  2.27531e+33   7.6354e+32   3.3271e+31  6.11818e+32  2.64767e+31  5.78559e+30  1.76233e+26
     600  1.01129e+64  5.83137e+33  1.55861e+33  5.64385e+31  6.25229e+32  1.84524e+31  3.01222e+31  4.01325e+27
     700  4.24434e+59  1.32406e+34  2.86953e+33  1.00078e+32  7.71401e+32  2.30412e+31  1.16805e+32    4.443e+28
     800  2.54118e+56  2.75326e+34  4.94984e+33  1.80053e+32  1.05646e+33  3.44579e+31  3.71834e+32   3.1024e+29
     900  8.89974e+53  5.35429e+34  8.17953e+33  3.23822e+32  1.53628e+33  5.53746e+31  1.02773e+33  1.58057e+30
    1000   1.0681e+52  9.87598e+34  1.31263e+34  5.77697e+32  2.31264e+33  9.17219e+31  2.55416e+33  6.41678e+30
    1100  3.12646e+50  1.74488e+35  2.06328e+34  1.01822e+33  3.54893e+33  1.53585e+32  5.84183e+33    2.197e+31
    1200  1.77965e+49   2.9743e+35  3.19407e+34  1.76961e+33  5.49845e+33  2.57368e+32  1.24971e+34  6.59133e+31
    1300  1.68437e+48  4.91797e+35  4.88644e+34  3.03006e+33  8.54709e+33  4.29205e+32  2.52998e+34  1.77997e+32
    1400  2.37058e+47  7.92117e+35  7.40326e+34  5.11068e+33  1.32752e+34  7.10056e+32  4.88948e+34  4.41176e+32
    1500  4.57173e+46  1.24691e+36  1.11222e+35  8.49252e+33  2.05451e+34  1.16317e+33  9.08149e+34  1.01832e+33
    1600  1.13644e+46  1.92344e+36  1.65812e+35  1.39085e+34  3.16247e+34  1.88489e+33  1.62959e+35   2.2134e+33
    1700  3.47523e+45  2.91389e+36  2.45402e+35  2.24601e+34  4.83576e+34  3.01995e+33  2.83696e+35  4.56984e+33
    1800   1.2609e+45  4.34318e+36  3.60641e+35  3.57809e+34  7.33977e+34  4.78317e+33  4.80794e+35  9.02403e+33
    1900  5.27566e+44   6.3789e+36  5.26331e+35  5.62641e+34  1.10527e+35  7.48943e+33  7.95467e+35  1.71386e+34
    2000  2.48838e+44  9.24376e+36   7.6289e+35  8.73733e+34  1.65081e+35  1.15951e+34  1.28785e+36  3.14487e+34
   tunneling partition function correction factors & high pressure effective energy shifts (D), kcal/mol:
     T\B           B1            D           B2            D           B3            D           B4            D           B5            D           B6            D           B7            D
     100            1           -0            1           -0  5.85098e+06     -3.09647  2.80256e+09      -4.3229 4.82099e+100     -46.0694            1           -0            1           -0
     200            1           -0            1           -0      5.22548    -0.657183      10.5281    -0.935588  1.78989e+30     -27.6854            1           -0            1           -0
     300            1           -0            1           -0      1.84823    -0.366176      2.24851    -0.483048  6.34587e+09     -13.4559            1           -0            1           -0
     400            1           -0            1           -0      1.38767    -0.260424      1.52963    -0.337842      744.397     -5.25618            1           -0            1           -0
     500            1           -0            1           -0      1.22677    -0.203078      1.30161    -0.261913      12.1512     -2.48144            1           -0            1           -0
     600            1           -0            1           -0      1.14989     -0.16653      1.19686    -0.214262       4.1017     -1.68284            1           -0            1           -0
     700            1           -0            1           -0      1.10671    -0.141037       1.1392    -0.181292      2.57296      -1.3146            1           -0            1           -0
     800            1           -0            1           -0      1.07989    -0.122182      1.10381    -0.157022      1.98861     -1.09286            1           -0            1           -0
     900            1           -0            1           -0      1.06204    -0.107644      1.08044    -0.138367      1.69225    -0.940844            1           -0            1           -0
    1000            1           -0            1           -0      1.04954   -0.0960815      1.06415     -0.12356      1.51736    -0.828601            1           -0            1           -0
    1100            1           -0            1           -0      1.04044   -0.0866584      1.05234     -0.11151      1.40393     -0.74163            1           -0            1           -0
    1200            1           -0            1           -0      1.03361   -0.0788278      1.04349    -0.101508      1.32547    -0.671912            1           -0            1           -0
    1300            1           -0            1           -0      1.02835   -0.0722153      1.03668   -0.0930686      1.26859    -0.614589            1           -0            1           -0
    1400            1           -0            1           -0      1.02421    -0.066556      1.03134   -0.0858502      1.22585    -0.566517            1           -0            1           -0
    1500            1           -0            1           -0       1.0209   -0.0616567      1.02707   -0.0796042      1.19281    -0.525558            1           -0            1           -0
    1600            1           -0            1           -0      1.01821   -0.0573734      1.02359   -0.0741457      1.16669      -0.4902            1           -0            1           -0
    1700            1           -0            1           -0      1.01599   -0.0535964      1.02074    -0.069334      1.14565    -0.459342            1           -0            1           -0
    1800            1           -0            1           -0      1.01414   -0.0502407      1.01836   -0.0650602      1.12842    -0.432157            1           -0            1           -0
    1900            1           -0            1           -0      1.01259   -0.0472394      1.01635   -0.0612384      1.11412    -0.408014            1           -0            1           -0
    2000            1           -0            1           -0      1.01127    -0.044539      1.01465   -0.0578005      1.10211     -0.38642            1           -0            1           -0
Model::init:  done, cpu time[sec] = 13.8687, elapsed time[sec] = 10
rate calculation starts
   MasterEquation::set:  starts
      Temperature      = 300 K
      Energy reference = 13058 1/cm
      Energy step      = 50 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.9 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.000144
         W1 Well: collisional kernel bandwidth = 40
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.006918
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.010722
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 6.89565
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 7.95041
         W1 Well: minimal relaxation eigenvalue = 0.0378536
         W1 Well: maximal relaxation eigenvalue = 2.02481
         W1 Well:       grid size = 893
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31592 1/cm
         B1 Barrier:        grid size = 262
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -42 1/cm
         B2 Barrier:        grid size = 257
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 207 1/cm
         B3 Barrier:        grid size = 354
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4642 1/cm
         B4 Barrier:        grid size = 385
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6192 1/cm
         B5 Barrier: nonpositive number of states at -23592 1/cm => truncating
         B5 Barrier:        grid size = 733
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23592 1/cm
         B6 Barrier:        grid size = 232
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1457 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4708 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 14.9991, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31592 -23592 3.11e+05 2.86e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -42 2.63e+12
         B2    208 2.19e+11
         B3  -4642 3.33e+10
         B4  -6192 5.46e+10
         B5 -23592 4.36e+09
         B6   1458 5.82e+11
         B7   4708 1.51e+10
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.71e+44  5.16e+44  5.25e+35  2.24e+32  5.07e-06  2.94e+48  2.38e+55
          R  5.86e-45         1      3.02  3.07e-09  1.31e-12  2.97e-50  1.72e+04  1.39e+11
         P1  1.94e-45     0.331         1  1.02e-09  4.34e-13  9.82e-51   5.7e+03  4.61e+10
         P2   1.9e-36  3.25e+08  9.83e+08         1  0.000427  9.66e-42  5.61e+12  4.53e+19
         P3  4.46e-33  7.62e+11   2.3e+12  2.34e+03         1  2.26e-38  1.31e+16  1.06e+23
         P4  1.97e+05  3.37e+49  1.02e+50  1.04e+41  4.42e+37         1  5.81e+53  4.69e+60
         P5   3.4e-49   5.8e-05  0.000175  1.78e-13  7.62e-17  1.72e-54         1  8.08e+06
         P6   4.2e-56  7.18e-12  2.17e-11  2.21e-20  9.42e-24  2.13e-61  1.24e-07         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  3.91e+40  1.18e+41   1.2e+32  5.13e+28  1.16e-09  6.74e+44  5.45e+51
          R  2.56e-41         1      3.02  3.07e-09  1.31e-12  2.97e-50  1.72e+04  1.39e+11
         P1  8.46e-42     0.331         1  1.02e-09  4.34e-13  9.82e-51   5.7e+03  4.61e+10
         P2  8.32e-33  3.25e+08  9.83e+08         1  0.000427  9.66e-42  5.61e+12  4.53e+19
         P3  1.95e-29  7.62e+11   2.3e+12  2.34e+03         1  2.26e-38  1.31e+16  1.06e+23
         P4  8.62e+08  3.37e+49  1.02e+50  1.04e+41  4.42e+37         1  5.81e+53  4.69e+60
         P5  1.48e-45   5.8e-05  0.000175  1.78e-13  7.62e-17  1.72e-54         1  8.08e+06
         P6  1.84e-52  7.18e-12  2.17e-11  2.21e-20  9.42e-24  2.13e-61  1.24e-07         1
   MasterEquation::set:  done, cpu time[sec] = 15.0034, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 300 K
            Well    Collision, 1/sec
              W1         8.15289e+08
      global relaxation matrix dimension = 893
      setting global matrices ... done, cpu time[sec] = 0.524112, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 12.5022, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             338.02      28.1718      4.27419      7.02281     0.560024      74.7731      1.93941
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.244601, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.018799, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.263654, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.28484e-12  1.12258e-51  1.48388e-59
      low eigenvalue method done, cpu time[sec] = 0.264454, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.12e-51  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.25e-53  4.44e-16         1
         *Z       ---       ---  1.36e+50
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16 -2.97729e-46 -1.30726e-46 -1.03915e-47 -1.34075e-46 -4.56986e-48 -9.86993e-50 -1.17424e-54

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.8412, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 300 K
            Well    Collision, 1/sec
              W1         2.44587e+09
      global relaxation matrix dimension = 893
      setting global matrices ... done, cpu time[sec] = 1.4101, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 12.3302, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            112.673       9.3906      1.42473      2.34094     0.186675      24.9244     0.646469
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.244626, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.018783, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.263686, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.81738e-12  3.74193e-52   3.6842e-60
      low eigenvalue method done, cpu time[sec] = 0.264506, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.74e-52  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.42e-53  4.44e-16         1
         *Z       ---       ---  1.36e+50
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  4.13747e-47 -5.46278e-48 -8.63307e-49 -1.88518e-47 -3.94687e-49   1.8576e-49  1.07893e-54

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.5125, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 300 K
            Well    Collision, 1/sec
              W1         4.07644e+09
      global relaxation matrix dimension = 893
      setting global matrices ... done, cpu time[sec] = 1.43956, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 12.3606, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             67.604      5.63436     0.854839      1.40456     0.112005      14.9546     0.387882
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.244229, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.018802, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.2633, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.33433e-12  2.24516e-52  1.78752e-60
      low eigenvalue method done, cpu time[sec] = 0.264205, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.25e-52  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   8.5e-54  4.44e-16         1
         *Z       ---       ---  1.36e+50
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16 -5.99283e-47 -2.38051e-47 -1.04947e-48 -2.82506e-47  -4.7027e-49 -3.22067e-49 -1.21645e-54

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.5936, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 300 K
            Well    Collision, 1/sec
              W1         5.70702e+09
      global relaxation matrix dimension = 893
      setting global matrices ... done, cpu time[sec] = 1.41865, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 12.3688, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            48.2886      4.02454     0.610599      1.00326    0.0800034      10.6819     0.277058
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.243994, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.018818, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.263076, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.27054e-12  1.60368e-52   1.0805e-60
      low eigenvalue method done, cpu time[sec] = 0.263924, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.6e-52  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.07e-54  4.44e-16         1
         *Z       ---       ---  1.36e+50
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  5.08953e-47  2.06511e-47  6.05372e-49  1.01933e-47  2.31067e-49  3.32305e-50  9.36442e-55

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.591, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 300 K
            Well    Collision, 1/sec
              W1          7.3376e+09
      global relaxation matrix dimension = 893
      setting global matrices ... done, cpu time[sec] = 1.40684, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 13.2046, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            37.5578       3.1302     0.474911     0.780312    0.0622248      8.30812      0.21549
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.243741, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.018837, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.262841, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.38329e-13  1.24731e-52   7.3179e-61
      low eigenvalue method done, cpu time[sec] = 0.263629, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.25e-52  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.72e-54  4.44e-16         1
         *Z       ---       ---  1.36e+50
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  3.59154e-48   1.3773e-47  5.15664e-49  9.38392e-48  2.39637e-49   4.7145e-50  3.42303e-55

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 18.3206, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 300 K
            Well    Collision, 1/sec
              W1         8.15289e+09
      global relaxation matrix dimension = 893
      setting global matrices ... done, cpu time[sec] = 1.42746, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 12.3724, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             33.802      2.81718     0.427419     0.702281    0.0560024      7.47731     0.193941
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.243971, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.018759, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.262982, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.09891e-13  1.12258e-52  6.19388e-61
      low eigenvalue method done, cpu time[sec] = 0.263796, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.12e-52  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.25e-54  4.44e-16         1
         *Z       ---       ---  1.36e+50
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16 -8.95786e-48 -1.39969e-47 -9.31407e-50 -1.11843e-48   7.7794e-50  2.09169e-49 -5.17592e-56

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.5718, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 300 K
            Well    Collision, 1/sec
              W1         1.22293e+10
      global relaxation matrix dimension = 893
      setting global matrices ... done, cpu time[sec] = 1.43597, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 12.3799, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            22.5347      1.87812     0.284946     0.468187    0.0373349      4.98487     0.129294
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.243484, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.018629, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.262368, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -7.23237e-13  7.48385e-53  3.20223e-61
      low eigenvalue method done, cpu time[sec] = 0.263153, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.48e-53  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.83e-54  4.44e-16         1
         *Z       ---       ---  1.36e+50
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16 -2.21002e-47 -5.86846e-48  1.24768e-49   6.6041e-48  1.69378e-49 -7.77606e-50 -5.25861e-55

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.6324, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 300 K
            Well    Collision, 1/sec
              W1         1.63058e+10
      global relaxation matrix dimension = 893
      setting global matrices ... done, cpu time[sec] = 1.39286, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 12.4052, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             16.901      1.40859      0.21371      0.35114    0.0280012      3.73865    0.0969704
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.24374, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.018761, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.262747, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -7.58751e-13  5.61289e-53  1.97264e-61
      low eigenvalue method done, cpu time[sec] = 0.263528, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.61e-53  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.12e-54  4.44e-16         1
         *Z       ---       ---  1.36e+50
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  2.76991e-47  1.01296e-47  1.41269e-49    2.022e-48  9.83066e-50  1.31284e-50   1.3414e-54

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.5557, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 300 K
            Well    Collision, 1/sec
              W1         2.03822e+10
      global relaxation matrix dimension = 893
      setting global matrices ... done, cpu time[sec] = 1.45293, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.9532, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            13.5208      1.12687     0.170968     0.280912    0.0224009      2.99092    0.0775763
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.243299, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.018722, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.26227, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.17791e-13  4.49031e-53  1.34297e-61
      low eigenvalue method done, cpu time[sec] = 0.263057, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.49e-53  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.7e-54  4.44e-16         1
         *Z       ---       ---  1.36e+50
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16 -3.57845e-48 -4.73704e-48 -1.06947e-49  8.46092e-49  7.44639e-50  5.34082e-50  1.04639e-54

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.1746, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 300 K
            Well    Collision, 1/sec
              W1         2.44587e+10
      global relaxation matrix dimension = 893
      setting global matrices ... done, cpu time[sec] = 1.43484, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.9525, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            11.2673      0.93906     0.142473     0.234094    0.0186675      2.49244    0.0646469
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.243148, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.018717, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.262125, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.85421e-14  3.74193e-53  9.75736e-62
      low eigenvalue method done, cpu time[sec] = 0.262968, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.74e-53  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.42e-54  4.44e-16         1
         *Z       ---       ---  1.36e+50
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  3.70308e-47  1.06519e-47  1.60816e-49  2.71368e-49  4.32662e-50   4.8828e-50  1.41174e-54

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.1487, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 300 K
            Well    Collision, 1/sec
              W1         2.85351e+10
      global relaxation matrix dimension = 893
      setting global matrices ... done, cpu time[sec] = 1.44733, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.9541, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            9.65772     0.804909      0.12212     0.200652    0.0160007      2.13637    0.0554117
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.242874, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.018791, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.261919, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.70453e-13  3.20737e-53  7.42194e-62
      low eigenvalue method done, cpu time[sec] = 0.262764, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.21e-53  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.21e-54  4.44e-16         1
         *Z       ---       ---  1.36e+50
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16 -9.84107e-49 -4.01611e-48 -1.25589e-49  -3.3354e-48 -8.85853e-50  3.02988e-50  5.47262e-55

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.1666, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 300 K
            Well    Collision, 1/sec
              W1         3.26116e+10
      global relaxation matrix dimension = 893
      setting global matrices ... done, cpu time[sec] = 1.44427, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.9557, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             8.4505     0.704295     0.106855      0.17557    0.0140006      1.86933    0.0484852
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.243145, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.0187, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.262102, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.26169e-13  2.80645e-53  5.84159e-62
      low eigenvalue method done, cpu time[sec] = 0.263009, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.81e-53  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.06e-54  4.44e-16         1
         *Z       ---       ---  1.36e+50
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16 -1.69632e-47 -3.11701e-48 -2.94067e-50  2.65498e-49  5.64012e-51 -3.50751e-50  4.84983e-55

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.1667, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 310 K
      Energy reference = 13336 1/cm
      Energy step      = 52 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.9 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.011801
         W1 Well: collisional kernel bandwidth = 40
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.749008
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.709086
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 3.79585
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 7.4112
         W1 Well: minimal relaxation eigenvalue = 0.0370967
         W1 Well: maximal relaxation eigenvalue = 2.00674
         W1 Well:       grid size = 864
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31592 1/cm
         B1 Barrier:        grid size = 257
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -28 1/cm
         B2 Barrier:        grid size = 253
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 180 1/cm
         B3 Barrier:        grid size = 345
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4604 1/cm
         B4 Barrier:        grid size = 376
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6216 1/cm
         B5 Barrier: nonpositive number of states at -23584 1/cm => truncating
         B5 Barrier:        grid size = 710
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23584 1/cm
         B6 Barrier:        grid size = 228
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1479 1/cm
         B7 Barrier:        grid size = 166
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4704 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 12.8097, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31592 -23584 3.12e+05 3.04e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -28 3.02e+12
         B2    181 2.54e+11
         B3  -4604 3.92e+10
         B4  -6216 6.39e+10
         B5 -23584 5.14e+09
         B6   1480  6.9e+11
         B7   4705 1.87e+10
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.15e+42  3.35e+42  7.25e+33  3.98e+30  1.51e-06  1.61e+46  8.03e+52
          R  8.71e-43         1      2.92  6.31e-09  3.47e-12  1.32e-48   1.4e+04  6.99e+10
         P1  2.98e-43     0.343         1  2.16e-09  1.19e-12  4.51e-49  4.81e+03  2.39e+10
         P2  1.38e-34  1.58e+08  4.62e+08         1  0.000549  2.09e-40  2.22e+12  1.11e+19
         P3  2.51e-31  2.88e+11  8.42e+11  1.82e+03         1   3.8e-37  4.05e+15  2.02e+22
         P4  6.61e+05  7.59e+47  2.22e+48  4.79e+39  2.63e+36         1  1.07e+52  5.31e+58
         P5   6.2e-47  7.12e-05  0.000208   4.5e-13  2.47e-16  9.38e-53         1  4.98e+06
         P6  1.25e-53  1.43e-11  4.18e-11  9.03e-20  4.96e-23  1.88e-59  2.01e-07         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.74e+38     8e+38  1.73e+30   9.5e+26  3.61e-10  3.85e+42  1.92e+49
          R  3.65e-39         1      2.92  6.31e-09  3.47e-12  1.32e-48   1.4e+04  6.99e+10
         P1  1.25e-39     0.343         1  2.16e-09  1.19e-12  4.51e-49  4.81e+03  2.39e+10
         P2  5.78e-31  1.58e+08  4.62e+08         1  0.000549  2.09e-40  2.22e+12  1.11e+19
         P3  1.05e-27  2.88e+11  8.42e+11  1.82e+03         1   3.8e-37  4.05e+15  2.02e+22
         P4  2.77e+09  7.59e+47  2.22e+48  4.79e+39  2.63e+36         1  1.07e+52  5.31e+58
         P5   2.6e-43  7.12e-05  0.000208   4.5e-13  2.47e-16  9.38e-53         1  4.98e+06
         P6  5.22e-50  1.43e-11  4.18e-11  9.03e-20  4.96e-23  1.88e-59  2.01e-07         1
   MasterEquation::set:  done, cpu time[sec] = 12.8146, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 310 K
            Well    Collision, 1/sec
              W1         7.89746e+08
      global relaxation matrix dimension = 864
      setting global matrices ... done, cpu time[sec] = 0.487342, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.341, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            376.992      31.7665      4.89674      7.97963     0.641658      86.1479      2.33733
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.217976, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.01725, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.236135, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -8.85799e-12  1.27596e-50  2.16824e-57
      low eigenvalue method done, cpu time[sec] = 0.236877, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.28e-50 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.73e-52 -4.44e-16         1
         *Z       ---       ---  8.35e+48
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  4.92983e-45  2.12271e-45  8.43006e-47  6.67158e-46  1.49209e-47  3.64086e-48 -8.76431e-54

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.2999, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 310 K
            Well    Collision, 1/sec
              W1         2.36924e+09
      global relaxation matrix dimension = 864
      setting global matrices ... done, cpu time[sec] = 1.50806, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.3928, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            125.664      10.5888      1.63225      2.65988     0.213886       28.716      0.77911
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.21698, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.017249, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.234518, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.19014e-12  4.25319e-51   5.5944e-58
      low eigenvalue method done, cpu time[sec] = 0.235361, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.25e-51 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.58e-52 -4.44e-16         1
         *Z       ---       ---  8.35e+48
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  6.69348e-46  4.28132e-46  6.10928e-48 -1.38541e-46 -1.19536e-48 -1.01282e-48 -2.79935e-53

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.5492, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 310 K
            Well    Collision, 1/sec
              W1         3.94873e+09
      global relaxation matrix dimension = 864
      setting global matrices ... done, cpu time[sec] = 1.50521, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.3902, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            75.3984       6.3533     0.979349      1.59593     0.128332      17.2296     0.467466
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.217285, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.01728, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.234859, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   1.5627e-12  2.55191e-51  2.76059e-58
      low eigenvalue method done, cpu time[sec] = 0.235605, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.55e-51 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.47e-53 -4.44e-16         1
         *Z       ---       ---  8.35e+48
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -3.07849e-46  9.59827e-47  3.25434e-48   2.4153e-47 -3.58233e-49  5.43902e-49  3.17519e-53

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.38, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 310 K
            Well    Collision, 1/sec
              W1         5.52822e+09
      global relaxation matrix dimension = 864
      setting global matrices ... done, cpu time[sec] = 1.35235, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.5179, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             53.856      4.53807     0.699535      1.13995    0.0916654      12.3068     0.333904
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.217012, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.017278, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.234602, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.72857e-13  1.82279e-51  1.68667e-58
      low eigenvalue method done, cpu time[sec] = 0.235345, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.82e-51 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.76e-53 -4.44e-16         1
         *Z       ---       ---  8.35e+48
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16   6.9682e-46  3.00889e-46  9.21128e-48  5.87153e-47  9.07046e-49 -1.72585e-49 -4.40152e-54

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.3563, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 310 K
            Well    Collision, 1/sec
              W1         7.10772e+09
      global relaxation matrix dimension = 864
      setting global matrices ... done, cpu time[sec] = 1.50488, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.4279, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             41.888      3.52961     0.544083     0.886626    0.0712953      9.57199     0.259703
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.217515, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.017278, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.235078, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -7.49008e-13  1.41773e-51  1.15121e-58
      low eigenvalue method done, cpu time[sec] = 0.235829, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.42e-51 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.26e-53 -4.44e-16         1
         *Z       ---       ---  8.35e+48
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -2.43307e-46 -1.57208e-46   -5.801e-48 -4.06427e-47 -7.88444e-49  2.19531e-49  1.67804e-53

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.422, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 310 K
            Well    Collision, 1/sec
              W1         7.89746e+09
      global relaxation matrix dimension = 864
      setting global matrices ... done, cpu time[sec] = 1.50543, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.4176, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            37.6992      3.17665     0.489674     0.797963    0.0641658      8.61479     0.233733
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.217282, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.017259, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.234823, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.21908e-12  1.27596e-51   9.7747e-59
      low eigenvalue method done, cpu time[sec] = 0.235561, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.28e-51 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.73e-53 -4.44e-16         1
         *Z       ---       ---  8.35e+48
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  1.09831e-45  4.53157e-46   1.2763e-47  1.28167e-46  1.88081e-48  5.25305e-49 -8.53717e-54

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.4039, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 310 K
            Well    Collision, 1/sec
              W1         1.18462e+10
      global relaxation matrix dimension = 864
      setting global matrices ... done, cpu time[sec] = 1.50945, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.4298, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            25.1328      2.11777      0.32645     0.531976    0.0427772      5.74319     0.155822
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.216814, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.017243, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.234336, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -7.31808e-13  8.50638e-52  5.11286e-59
      low eigenvalue method done, cpu time[sec] = 0.235142, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.51e-52 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.16e-53 -4.44e-16         1
         *Z       ---       ---  8.35e+48
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -2.56805e-46 -3.55291e-47 -2.42174e-48 -4.55987e-47 -1.33128e-48  -1.5138e-48 -3.46546e-54

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.4298, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 310 K
            Well    Collision, 1/sec
              W1         1.57949e+10
      global relaxation matrix dimension = 864
      setting global matrices ... done, cpu time[sec] = 1.50744, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.3705, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            18.8496      1.58833     0.244837     0.398982    0.0320829      4.30739     0.116867
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.216075, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.017248, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.233601, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -7.4904e-13  6.37978e-52  3.17408e-59
      low eigenvalue method done, cpu time[sec] = 0.234345, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.38e-52 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.37e-53 -4.44e-16         1
         *Z       ---       ---  8.35e+48
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -1.59479e-46 -6.18012e-47 -2.10051e-48 -3.53925e-48 -4.72624e-50  -4.0509e-49  4.31684e-55

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.3683, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 310 K
            Well    Collision, 1/sec
              W1         1.97437e+10
      global relaxation matrix dimension = 864
      setting global matrices ... done, cpu time[sec] = 1.50569, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.3817, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            15.0797      1.27066      0.19587     0.319185    0.0256663      3.44592    0.0934933
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.216815, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.017258, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.234353, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.99754e-13  5.10383e-52  2.17311e-59
      low eigenvalue method done, cpu time[sec] = 0.235108, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0   5.1e-52 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.89e-53 -4.44e-16         1
         *Z       ---       ---  8.35e+48
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  1.45978e-46  1.72448e-47  9.92506e-49 -1.90878e-47  -4.0517e-49   4.9877e-49 -5.22207e-54

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.3716, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 310 K
            Well    Collision, 1/sec
              W1         2.36924e+10
      global relaxation matrix dimension = 864
      setting global matrices ... done, cpu time[sec] = 1.50883, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.4412, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            12.5664      1.05888     0.163225     0.265988    0.0213886       2.8716     0.077911
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.216568, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.017245, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.234096, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    2.205e-13  4.25319e-52  1.58577e-59
      low eigenvalue method done, cpu time[sec] = 0.234842, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.25e-52 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.58e-53 -4.44e-16         1
         *Z       ---       ---  8.35e+48
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -1.31873e-46  -3.9362e-47  7.46812e-49  4.10524e-47  9.47958e-49 -6.73787e-49  1.69843e-53

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.4536, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 310 K
            Well    Collision, 1/sec
              W1         2.76411e+10
      global relaxation matrix dimension = 864
      setting global matrices ... done, cpu time[sec] = 1.50287, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.4304, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            10.7712     0.907615     0.139907      0.22799    0.0183331      2.46137    0.0667809
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.216959, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.017293, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.234527, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.04513e-13  3.64559e-52  1.21044e-59
      low eigenvalue method done, cpu time[sec] = 0.235267, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.65e-52 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.35e-53 -4.44e-16         1
         *Z       ---       ---  8.35e+48
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  2.29224e-46  9.03553e-47  1.50392e-48 -1.49404e-48  2.34647e-49 -4.37482e-49 -2.30757e-53

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.4296, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 310 K
            Well    Collision, 1/sec
              W1         3.15898e+10
      global relaxation matrix dimension = 864
      setting global matrices ... done, cpu time[sec] = 1.50963, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.4144, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            9.42481     0.794163     0.122419     0.199491    0.0160414       2.1537    0.0584333
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.216062, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.017239, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.233579, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.68581e-13  3.18989e-52  9.55459e-60
      low eigenvalue method done, cpu time[sec] = 0.234323, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.19e-52 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.18e-53 -4.44e-16         1
         *Z       ---       ---  8.35e+48
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16   8.0536e-47    3.983e-47  2.69871e-49 -2.54075e-47 -6.28973e-49 -2.54312e-49  1.40224e-53

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.4201, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 320 K
      Energy reference = 13615 1/cm
      Energy step      = 53 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.8 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.011495
         W1 Well: collisional kernel bandwidth = 40
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.862522
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.833086
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.51846
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 7.24887
         W1 Well: minimal relaxation eigenvalue = 0.0363935
         W1 Well: maximal relaxation eigenvalue = 2.05583
         W1 Well:       grid size = 853
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31594 1/cm
         B1 Barrier:        grid size = 257
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -6 1/cm
         B2 Barrier:        grid size = 253
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 206 1/cm
         B3 Barrier:        grid size = 344
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4617 1/cm
         B4 Barrier:        grid size = 374
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6207 1/cm
         B5 Barrier: nonpositive number of states at -23167 1/cm => truncating
         B5 Barrier:        grid size = 694
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23167 1/cm
         B6 Barrier:        grid size = 229
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1478 1/cm
         B7 Barrier:        grid size = 168
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4711 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 9.607, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31594 -23167 4.23e+05 3.23e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -6 3.46e+12
         B2    207 2.95e+11
         B3  -4617 4.62e+10
         B4  -6207 7.46e+10
         B5 -23167 6.05e+09
         B6   1478 8.16e+11
         B7   4711 2.31e+10
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.08e+40  3.04e+40  1.33e+32  9.27e+28  4.96e-07  1.25e+44  3.94e+50
          R  9.29e-41         1      2.83  1.24e-08  8.62e-12  4.61e-47  1.16e+04  3.66e+10
         P1  3.29e-41     0.354         1  4.39e-09  3.05e-12  1.63e-47   4.1e+03   1.3e+10
         P2   7.5e-33  8.07e+07  2.28e+08         1  0.000695  3.72e-39  9.34e+11  2.95e+18
         P3  1.08e-29  1.16e+11  3.28e+11  1.44e+03         1  5.35e-36  1.34e+15  4.25e+21
         P4  2.02e+06  2.17e+46  6.13e+46  2.69e+38  1.87e+35         1  2.51e+50  7.94e+56
         P5  8.03e-45  8.64e-05  0.000244  1.07e-12  7.44e-16  3.98e-51         1  3.16e+06
         P6  2.54e-51  2.73e-11  7.72e-11  3.38e-19  2.35e-22  1.26e-57  3.16e-07         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.62e+36  7.39e+36  3.24e+28  2.25e+25  1.21e-10  3.03e+40  9.58e+46
          R  3.82e-37         1      2.83  1.24e-08  8.62e-12  4.61e-47  1.16e+04  3.66e+10
         P1  1.35e-37     0.354         1  4.39e-09  3.05e-12  1.63e-47   4.1e+03   1.3e+10
         P2  3.08e-29  8.07e+07  2.28e+08         1  0.000695  3.72e-39  9.34e+11  2.95e+18
         P3  4.44e-26  1.16e+11  3.28e+11  1.44e+03         1  5.35e-36  1.34e+15  4.25e+21
         P4  8.29e+09  2.17e+46  6.13e+46  2.69e+38  1.87e+35         1  2.51e+50  7.94e+56
         P5   3.3e-41  8.64e-05  0.000244  1.07e-12  7.44e-16  3.98e-51         1  3.16e+06
         P6  1.04e-47  2.73e-11  7.72e-11  3.38e-19  2.35e-22  1.26e-57  3.16e-07         1
   MasterEquation::set:  done, cpu time[sec] = 9.61219, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 320 K
            Well    Collision, 1/sec
              W1          7.6597e+08
      global relaxation matrix dimension = 853
      setting global matrices ... done, cpu time[sec] = 0.477045, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.0216, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            419.345      35.7296      5.59371       9.0424      0.73308      98.9102      2.80279
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.207915, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.016523, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.224674, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.85783e-12   1.3712e-49  2.31394e-55
      low eigenvalue method done, cpu time[sec] = 0.225592, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.37e-49         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.99e-51         0         1
         *Z       ---       ---  6.18e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  3.39589e-44  8.24691e-45  2.67189e-46 -1.49992e-45 -6.51197e-47  1.65078e-47  1.13757e-52

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.8099, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 320 K
            Well    Collision, 1/sec
              W1         2.29791e+09
      global relaxation matrix dimension = 853
      setting global matrices ... done, cpu time[sec] = 1.36096, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.1623, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            139.782      11.9099      1.86457      3.01413      0.24436      32.9701     0.934263
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.207486, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.016519, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.22424, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.15738e-12  4.57069e-50  6.18962e-56
      low eigenvalue method done, cpu time[sec] = 0.225025, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.57e-50         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.66e-51         0         1
         *Z       ---       ---  6.18e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.98237e-44  8.72699e-45  3.82318e-46  4.53944e-45  1.08646e-46  2.21042e-47  2.73464e-52

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.9102, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 320 K
            Well    Collision, 1/sec
              W1         3.82985e+09
      global relaxation matrix dimension = 853
      setting global matrices ... done, cpu time[sec] = 1.44582, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.2191, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            83.8691      7.14592      1.11874      1.80848     0.146616       19.782     0.560558
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.207633, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.016489, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.224351, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.43127e-12  2.74242e-50  3.10408e-56
      low eigenvalue method done, cpu time[sec] = 0.225064, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.74e-50         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.98e-52         0         1
         *Z       ---       ---  6.18e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -3.44391e-45 -2.41613e-45   1.6628e-47 -1.84955e-46 -1.87623e-47  3.10866e-47 -2.64404e-52

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.0771, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 320 K
            Well    Collision, 1/sec
              W1         5.36179e+09
      global relaxation matrix dimension = 853
      setting global matrices ... done, cpu time[sec] = 1.43689, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.0754, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            59.9065      5.10423     0.799102      1.29177     0.104726        14.13     0.400398
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.206875, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.016512, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.223623, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.19366e-12  1.95887e-50  1.91628e-56
      low eigenvalue method done, cpu time[sec] = 0.224359, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.96e-50         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.13e-52         0         1
         *Z       ---       ---  6.18e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -3.08623e-46 -4.20171e-46  6.28425e-47  1.50268e-45  3.02732e-47  8.06859e-48 -9.20618e-53

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.9532, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 320 K
            Well    Collision, 1/sec
              W1         6.89373e+09
      global relaxation matrix dimension = 853
      setting global matrices ... done, cpu time[sec] = 1.46351, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.1595, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            46.5939      3.96996     0.621523      1.00471    0.0814533        10.99     0.311421
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.207599, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.016616, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.224451, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -6.43976e-13  1.52357e-50  1.31781e-56
      low eigenvalue method done, cpu time[sec] = 0.22519, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.52e-50         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.54e-52         0         1
         *Z       ---       ---  6.18e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.15618e-44  3.77661e-45  1.12127e-46  8.65015e-46  2.71588e-47  3.36457e-47  2.45216e-52

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.0904, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 320 K
            Well    Collision, 1/sec
              W1          7.6597e+09
      global relaxation matrix dimension = 853
      setting global matrices ... done, cpu time[sec] = 1.46075, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.1399, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            41.9345      3.57296     0.559371      0.90424     0.073308      9.89102     0.280279
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.207087, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.016605, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.223929, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.80665e-13  1.37121e-50  1.12239e-56
      low eigenvalue method done, cpu time[sec] = 0.224713, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.37e-50         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.99e-52         0         1
         *Z       ---       ---  6.18e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  6.15548e-45   4.8222e-45  1.85327e-46  1.52151e-45  2.96998e-47 -2.31096e-47 -2.29115e-52

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.0643, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 320 K
            Well    Collision, 1/sec
              W1         1.14896e+10
      global relaxation matrix dimension = 853
      setting global matrices ... done, cpu time[sec] = 1.46787, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.1291, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            27.9564      2.38197     0.372914     0.602827     0.048872      6.59401     0.186853
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.206772, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.016614, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.223621, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.62787e-13  9.14141e-51  5.93876e-57
      low eigenvalue method done, cpu time[sec] = 0.224575, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.14e-51         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.33e-52         0         1
         *Z       ---       ---  6.18e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -5.81137e-45 -2.11156e-45 -8.44089e-47 -8.96938e-46 -2.42616e-47 -6.07238e-48  2.13946e-52

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.0208, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 320 K
            Well    Collision, 1/sec
              W1         1.53194e+10
      global relaxation matrix dimension = 853
      setting global matrices ... done, cpu time[sec] = 1.45802, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.1527, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            20.9673      1.78648     0.279686      0.45212     0.036654      4.94551     0.140139
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.207031, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.016607, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.22387, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.82816e-13  6.85606e-51  3.71523e-57
      low eigenvalue method done, cpu time[sec] = 0.224576, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.86e-51         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   2.5e-52         0         1
         *Z       ---       ---  6.18e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.71548e-45  2.02482e-46  4.86072e-48   1.7327e-46  3.69046e-48 -2.87601e-48  1.65411e-52

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.0535, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 320 K
            Well    Collision, 1/sec
              W1         1.91493e+10
      global relaxation matrix dimension = 853
      setting global matrices ... done, cpu time[sec] = 1.22877, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.9055, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            16.7738      1.42918     0.223748     0.361696    0.0293232      3.95641     0.112112
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.20691, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.01657, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.223724, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.66146e-13  5.48485e-51    2.558e-57
      low eigenvalue method done, cpu time[sec] = 0.22444, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.48e-51         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0     2e-52         0         1
         *Z       ---       ---  6.18e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.94958e-45  2.32089e-46 -8.99975e-48 -4.46063e-46 -1.13079e-47  8.14665e-48   3.9333e-52

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.0926, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 320 K
            Well    Collision, 1/sec
              W1         2.29791e+10
      global relaxation matrix dimension = 853
      setting global matrices ... done, cpu time[sec] = 1.46699, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.1835, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            13.9782      1.19099     0.186457     0.301413     0.024436      3.29701    0.0934263
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.20732, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.016548, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.224101, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.52645e-14  4.57071e-51  1.87484e-57
      low eigenvalue method done, cpu time[sec] = 0.224816, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.57e-51         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.66e-52         0         1
         *Z       ---       ---  6.18e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.62706e-45  6.33838e-46  9.29357e-50 -2.19926e-47  8.86932e-49  4.08061e-48  2.41183e-53

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.0974, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 320 K
            Well    Collision, 1/sec
              W1          2.6809e+10
      global relaxation matrix dimension = 853
      setting global matrices ... done, cpu time[sec] = 1.4696, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.1837, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            11.9813      1.02085      0.15982     0.258354    0.0209451      2.82601    0.0800796
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.207014, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.016538, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.223784, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.54486e-13  3.91775e-51  1.43617e-57
      low eigenvalue method done, cpu time[sec] = 0.224572, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.92e-51         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.43e-52         0         1
         *Z       ---       ---  6.18e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  3.87829e-45  6.18838e-46  4.48288e-48   5.7125e-48  1.74798e-48  1.43673e-47  -2.5948e-52

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.1031, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 320 K
            Well    Collision, 1/sec
              W1         3.06388e+10
      global relaxation matrix dimension = 853
      setting global matrices ... done, cpu time[sec] = 1.46781, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.1856, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            10.4836     0.893241     0.139843      0.22606     0.018327      2.47275    0.0700697
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.206752, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.016544, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.223529, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.47023e-13  3.42803e-51  1.13697e-57
      low eigenvalue method done, cpu time[sec] = 0.224347, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.43e-51         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.25e-52         0         1
         *Z       ---       ---  6.18e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.64055e-45  1.06818e-45  3.52633e-47  2.70393e-46  1.14602e-47  8.12447e-49 -3.18693e-52

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.0862, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 330 K
      Energy reference = 13893 1/cm
      Energy step      = 55 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.8 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.010979
         W1 Well: collisional kernel bandwidth = 40
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.708108
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.953543
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.563493
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 6.67846
         W1 Well: minimal relaxation eigenvalue = 0.0356984
         W1 Well: maximal relaxation eigenvalue = 1.68436
         W1 Well:       grid size = 827
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31592 1/cm
         B1 Barrier:        grid size = 253
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -22 1/cm
         B2 Barrier:        grid size = 249
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 197 1/cm
         B3 Barrier:        grid size = 337
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4642 1/cm
         B4 Barrier:        grid size = 365
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6182 1/cm
         B5 Barrier: nonpositive number of states at -23177 1/cm => truncating
         B5 Barrier:        grid size = 674
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23177 1/cm
         B6 Barrier:        grid size = 226
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1462 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4708 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 9.08293, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31592 -23177  4.2e+05 3.43e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -22 3.96e+12
         B2    198 3.41e+11
         B3  -4642 5.42e+10
         B4  -6182 8.69e+10
         B5 -23177  7.1e+09
         B6   1463 9.63e+11
         B7   4708 2.84e+10
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.31e+38   3.6e+38  3.07e+30  2.66e+27  1.71e-07  1.27e+42  2.62e+48
          R  7.62e-39         1      2.74  2.34e-08  2.03e-11   1.3e-45  9.67e+03     2e+10
         P1  2.78e-39     0.365         1  8.53e-09   7.4e-12  4.75e-46  3.52e+03  7.29e+09
         P2  3.26e-31  4.28e+07  1.17e+08         1  0.000868  5.57e-38  4.13e+11  8.55e+17
         P3  3.76e-28  4.93e+10  1.35e+11  1.15e+03         1  6.42e-35  4.76e+14  9.85e+20
         P4  5.85e+06  7.68e+44  2.11e+45   1.8e+37  1.56e+34         1  7.42e+48  1.53e+55
         P5  7.88e-43  0.000103  0.000284  2.42e-12   2.1e-15  1.35e-49         1  2.07e+06
         P6  3.81e-49     5e-11  1.37e-10  1.17e-18  1.02e-21  6.52e-56  4.84e-07         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1   3.3e+34  9.05e+34  7.72e+26   6.7e+23   4.3e-11  3.19e+38   6.6e+44
          R  3.03e-35         1      2.74  2.34e-08  2.03e-11   1.3e-45  9.67e+03     2e+10
         P1   1.1e-35     0.365         1  8.53e-09   7.4e-12  4.75e-46  3.52e+03  7.29e+09
         P2   1.3e-27  4.28e+07  1.17e+08         1  0.000868  5.57e-38  4.13e+11  8.55e+17
         P3  1.49e-24  4.93e+10  1.35e+11  1.15e+03         1  6.42e-35  4.76e+14  9.85e+20
         P4  2.33e+10  7.68e+44  2.11e+45   1.8e+37  1.56e+34         1  7.42e+48  1.53e+55
         P5  3.13e-39  0.000103  0.000284  2.42e-12   2.1e-15  1.35e-49         1  2.07e+06
         P6  1.52e-45     5e-11  1.37e-10  1.17e-18  1.02e-21  6.52e-56  4.84e-07         1
   MasterEquation::set:  done, cpu time[sec] = 9.08812, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 330 K
            Well    Collision, 1/sec
              W1         7.43791e+08
      global relaxation matrix dimension = 827
      setting global matrices ... done, cpu time[sec] = 0.450478, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.5861, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            464.994      40.0653      6.36759      10.2135     0.834624      113.103      3.34126
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.191311, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.015438, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.207635, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.69398e-12  1.40406e-48  1.85874e-53
      low eigenvalue method done, cpu time[sec] = 0.208397, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.4e-48  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.01e-50  4.44e-16         1
         *Z       ---       ---   5.3e+46
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  -3.1659e-43 -8.49119e-44  3.57054e-45  1.28581e-43  2.00506e-45 -4.40097e-46  1.49296e-51

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.1924, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 330 K
            Well    Collision, 1/sec
              W1         2.23137e+09
      global relaxation matrix dimension = 827
      setting global matrices ... done, cpu time[sec] = 1.38071, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.931, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            154.998      13.3551      2.12253      3.40451     0.278208      37.7009      1.11375
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.190708, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.015392, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.206383, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.13177e-12  4.68031e-49   5.1453e-54
      low eigenvalue method done, cpu time[sec] = 0.207077, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.68e-49  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.67e-50  4.44e-16         1
         *Z       ---       ---   5.3e+46
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  5.51342e-44  3.91183e-44  9.86512e-46 -6.24997e-45 -2.82606e-46 -2.08101e-46   -6.646e-51

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.4248, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 330 K
            Well    Collision, 1/sec
              W1         3.71895e+09
      global relaxation matrix dimension = 827
      setting global matrices ... done, cpu time[sec] = 1.36, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.2986, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            92.9987      8.01306      1.27352      2.04271     0.166925      22.6205     0.668252
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.191148, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.015344, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.206758, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.23195e-12  2.80821e-49    2.621e-54
      low eigenvalue method done, cpu time[sec] = 0.207449, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.81e-49  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0     1e-50  4.44e-16         1
         *Z       ---       ---   5.3e+46
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16 -1.10129e-43 -4.21615e-44 -1.30927e-45 -1.88339e-44 -4.09889e-46 -1.26857e-47 -4.98292e-52

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.7722, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 330 K
            Well    Collision, 1/sec
              W1         5.20654e+09
      global relaxation matrix dimension = 827
      setting global matrices ... done, cpu time[sec] = 1.38359, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.5674, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            66.4276      5.72362     0.909655      1.45908     0.119232      16.1575     0.477323
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.190707, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.015348, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.206324, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.47166e-12  2.00588e-49  1.63449e-54
      low eigenvalue method done, cpu time[sec] = 0.20701, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.01e-49  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.16e-51  4.44e-16         1
         *Z       ---       ---   5.3e+46
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  9.55721e-44  3.35551e-44  1.08227e-45  6.23123e-45   1.2907e-46  2.71023e-46  3.44794e-51

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.5842, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 330 K
            Well    Collision, 1/sec
              W1         6.69412e+09
      global relaxation matrix dimension = 827
      setting global matrices ... done, cpu time[sec] = 1.38119, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.8686, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            51.6659       4.4517      0.70751      1.13484     0.092736       12.567     0.371251
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.190388, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.015315, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.205971, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.51035e-12  1.56013e-49  1.13236e-54
      low eigenvalue method done, cpu time[sec] = 0.206669, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.56e-49  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.57e-51  4.44e-16         1
         *Z       ---       ---   5.3e+46
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  7.67099e-44  3.23551e-44  5.94025e-46  4.24272e-45  1.37562e-46 -8.12061e-47   1.1016e-51

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.4053, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 330 K
            Well    Collision, 1/sec
              W1         7.43791e+09
      global relaxation matrix dimension = 827
      setting global matrices ... done, cpu time[sec] = 1.38384, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.8815, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            46.4994      4.00653     0.636759      1.02135    0.0834624      11.3103     0.334126
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.191004, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.015387, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.206654, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -9.27657e-13  1.40412e-49  9.67394e-55
      low eigenvalue method done, cpu time[sec] = 0.207345, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.4e-49  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.01e-51  4.44e-16         1
         *Z       ---       ---   5.3e+46
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  1.64488e-44  2.28672e-45 -1.49801e-46  -2.6716e-45 -2.73648e-47  3.35585e-47 -2.29455e-52

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.4179, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 330 K
            Well    Collision, 1/sec
              W1         1.11569e+10
      global relaxation matrix dimension = 827
      setting global matrices ... done, cpu time[sec] = 1.38228, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.8907, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            30.9996      2.67102     0.424506     0.680903    0.0556416      7.54018     0.222751
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.190022, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.015314, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.205602, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -6.43657e-13  9.36083e-50  5.17728e-55
      low eigenvalue method done, cpu time[sec] = 0.206284, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.36e-50  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.34e-51  4.44e-16         1
         *Z       ---       ---   5.3e+46
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  2.39421e-44  1.18125e-44  3.56615e-46  4.17427e-45  7.46603e-47  1.66799e-46  3.46269e-51

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.4443, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 330 K
            Well    Collision, 1/sec
              W1         1.48758e+10
      global relaxation matrix dimension = 827
      setting global matrices ... done, cpu time[sec] = 1.38496, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.8857, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            23.2497      2.00327     0.318379     0.510677    0.0417312      5.65514     0.167063
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.190364, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.015327, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.20596, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.09323e-13  7.02064e-50  3.26383e-55
      low eigenvalue method done, cpu time[sec] = 0.206651, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.02e-50  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.51e-51  4.44e-16         1
         *Z       ---       ---   5.3e+46
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  1.47128e-44  9.53764e-45 -1.47872e-46 -4.14296e-45 -8.54057e-47  -5.9109e-47  2.49971e-51

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.4301, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 330 K
            Well    Collision, 1/sec
              W1         1.85948e+10
      global relaxation matrix dimension = 827
      setting global matrices ... done, cpu time[sec] = 1.38403, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.901, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            18.5997      1.60261     0.254703     0.408542     0.033385      4.52411      0.13365
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.190563, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.01531, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.20614, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -4.0567e-14  5.61652e-50  2.26001e-55
      low eigenvalue method done, cpu time[sec] = 0.206819, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.62e-50  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.01e-51  4.44e-16         1
         *Z       ---       ---   5.3e+46
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  5.81455e-45 -6.14359e-46 -2.23141e-46 -6.59017e-45 -1.34759e-46    2.367e-47  7.48849e-52

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.4455, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 330 K
            Well    Collision, 1/sec
              W1         2.23137e+10
      global relaxation matrix dimension = 827
      setting global matrices ... done, cpu time[sec] = 1.37671, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.8944, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            15.4998      1.33551     0.212253     0.340451    0.0278208      3.77009     0.111375
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.189982, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.01533, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.205579, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.21708e-14  4.68044e-50   1.6638e-55
      low eigenvalue method done, cpu time[sec] = 0.206426, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.68e-50  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.67e-51  4.44e-16         1
         *Z       ---       ---   5.3e+46
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16 -1.99849e-44 -6.37868e-45 -3.24878e-46 -4.89074e-45 -1.03157e-46 -1.91918e-47  2.57505e-51

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.6335, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 330 K
            Well    Collision, 1/sec
              W1         2.60327e+10
      global relaxation matrix dimension = 827
      setting global matrices ... done, cpu time[sec] = 1.38524, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.8456, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            13.2855      1.14472     0.181931     0.291816    0.0238464      3.23151    0.0954646
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.190111, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.015293, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.205666, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.30657e-14  4.01181e-50  1.27911e-55
      low eigenvalue method done, cpu time[sec] = 0.206357, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.01e-50  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.43e-51  4.44e-16         1
         *Z       ---       ---   5.3e+46
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16 -1.16103e-44  -5.6867e-45 -2.78259e-46 -1.97106e-45 -5.97111e-47 -9.26465e-47  2.78387e-51

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.3995, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 330 K
            Well    Collision, 1/sec
              W1         2.97516e+10
      global relaxation matrix dimension = 827
      setting global matrices ... done, cpu time[sec] = 1.38152, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.8695, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            11.6248      1.00163      0.15919     0.255339    0.0208656      2.82757    0.0835315
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.190167, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.015318, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.205747, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.06397e-13  3.51033e-50  1.01567e-55
      low eigenvalue method done, cpu time[sec] = 0.206448, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.51e-50  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.25e-51  4.44e-16         1
         *Z       ---       ---   5.3e+46
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16 -1.60701e-44 -4.23661e-45 -1.30661e-46 -8.99552e-46 -3.07112e-47 -4.22969e-47 -4.09987e-51

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.4071, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 340 K
      Energy reference = 14171 1/cm
      Energy step      = 57 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.7 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.011027
         W1 Well: collisional kernel bandwidth = 39
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.776903
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.898047
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 3.48694
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 6.3646
         W1 Well: minimal relaxation eigenvalue = 0.0350281
         W1 Well: maximal relaxation eigenvalue = 2.11885
         W1 Well:       grid size = 803
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31600 1/cm
         B1 Barrier:        grid size = 249
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -22 1/cm
         B2 Barrier:        grid size = 245
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 205 1/cm
         B3 Barrier:        grid size = 330
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4639 1/cm
         B4 Barrier:        grid size = 357
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6178 1/cm
         B5 Barrier: nonpositive number of states at -23107 1/cm => truncating
         B5 Barrier:        grid size = 654
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23107 1/cm
         B6 Barrier:        grid size = 223
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1459 1/cm
         B7 Barrier:        grid size = 166
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4708 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 11.6984, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31600 -23107 4.42e+05 3.64e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -22 4.52e+12
         B2    206 3.94e+11
         B3  -4639 6.35e+10
         B4  -6178 1.01e+11
         B5 -23107 8.32e+09
         B6   1460 1.13e+12
         B7   4709 3.48e+10
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.06e+36   5.5e+36  8.76e+28  9.37e+25  6.23e-08  1.68e+40  2.33e+46
          R  4.85e-37         1      2.67  4.25e-08  4.54e-11  3.02e-44  8.15e+03  1.13e+10
         P1  1.82e-37     0.375         1  1.59e-08   1.7e-11  1.13e-44  3.06e+03  4.24e+09
         P2  1.14e-29  2.35e+07  6.28e+07         1   0.00107  7.11e-37  1.92e+11  2.66e+17
         P3  1.07e-26   2.2e+10  5.87e+10       935         1  6.65e-34  1.79e+14  2.49e+20
         P4   1.6e+07  3.31e+43  8.82e+43  1.41e+36   1.5e+33         1   2.7e+47  3.74e+53
         P5  5.95e-41  0.000123  0.000327  5.21e-12  5.57e-15  3.71e-48         1  1.39e+06
         P6  4.29e-47  8.85e-11  2.36e-10  3.76e-18  4.02e-21  2.67e-54  7.21e-07         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  5.38e+32  1.43e+33  2.29e+25  2.44e+22  1.63e-11  4.39e+36  6.08e+42
          R  1.86e-33         1      2.67  4.25e-08  4.54e-11  3.02e-44  8.15e+03  1.13e+10
         P1  6.97e-34     0.375         1  1.59e-08   1.7e-11  1.13e-44  3.06e+03  4.24e+09
         P2  4.37e-26  2.35e+07  6.28e+07         1   0.00107  7.11e-37  1.92e+11  2.66e+17
         P3  4.09e-23   2.2e+10  5.87e+10       935         1  6.65e-34  1.79e+14  2.49e+20
         P4  6.15e+10  3.31e+43  8.82e+43  1.41e+36   1.5e+33         1   2.7e+47  3.74e+53
         P5  2.28e-37  0.000123  0.000327  5.21e-12  5.57e-15  3.71e-48         1  1.39e+06
         P6  1.64e-43  8.85e-11  2.36e-10  3.76e-18  4.02e-21  2.67e-54  7.21e-07         1
   MasterEquation::set:  done, cpu time[sec] = 11.7037, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 340 K
            Well    Collision, 1/sec
              W1         7.23059e+08
      global relaxation matrix dimension = 803
      setting global matrices ... done, cpu time[sec] = 0.431164, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.96624, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            514.245      44.8107      7.22688      11.5044     0.947417       128.88      3.96328
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.17634, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.014187, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.19093, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.46197e-13  1.38593e-47  1.15805e-51
      low eigenvalue method done, cpu time[sec] = 0.191579, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.39e-47  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.85e-49  2.22e-16         1
         *Z       ---       ---  5.25e+45
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  4.10319e-42  1.76649e-42   4.3641e-44  4.69565e-43  1.57143e-44  2.86439e-45 -7.84191e-51

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.3564, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 340 K
            Well    Collision, 1/sec
              W1         2.16918e+09
      global relaxation matrix dimension = 803
      setting global matrices ... done, cpu time[sec] = 1.30631, elapsed time[sec] = 1
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.462, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            171.415      14.9369      2.40896       3.8348     0.315806      42.9601      1.32109
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.176524, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.014197, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.190953, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.95071e-12  4.62045e-48  3.31154e-52
      low eigenvalue method done, cpu time[sec] = 0.191602, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.62e-48  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.62e-49  2.22e-16         1
         *Z       ---       ---  5.25e+45
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  3.56827e-43  6.18133e-44  4.19143e-45  7.07907e-44  1.51237e-45  -6.1499e-46 -1.70222e-50

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.7311, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 340 K
            Well    Collision, 1/sec
              W1         3.61529e+09
      global relaxation matrix dimension = 803
      setting global matrices ... done, cpu time[sec] = 1.30891, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.4647, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            102.849      8.96213      1.44538      2.30088     0.189483      25.7761     0.792655
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.176034, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.014172, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.190446, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.11062e-12  2.77243e-48  1.71247e-52
      low eigenvalue method done, cpu time[sec] = 0.19109, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.77e-48  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.71e-50  2.22e-16         1
         *Z       ---       ---  5.25e+45
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -9.62216e-44 -1.08805e-45  1.68717e-45   1.1313e-43  2.20346e-45 -5.30137e-46  1.22397e-50

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.7235, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 340 K
            Well    Collision, 1/sec
              W1         5.06141e+09
      global relaxation matrix dimension = 803
      setting global matrices ... done, cpu time[sec] = 1.31041, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.4789, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            73.4635      6.40152      1.03241      1.64348     0.135345      18.4115     0.566182
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.176073, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.014169, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.190472, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.05231e-12  1.98037e-48  1.07845e-52
      low eigenvalue method done, cpu time[sec] = 0.191119, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.98e-48  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.94e-50  2.22e-16         1
         *Z       ---       ---  5.25e+45
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  1.32741e-42  3.90614e-43  7.45024e-45  1.97489e-45  8.30499e-46  2.54539e-45 -1.12046e-50

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.7316, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 340 K
            Well    Collision, 1/sec
              W1         6.50753e+09
      global relaxation matrix dimension = 803
      setting global matrices ... done, cpu time[sec] = 1.30867, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.4919, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            57.1383      4.97896     0.802987      1.27827     0.105269        14.32     0.440364
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.175753, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.01418, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.190165, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.15955e-13  1.54032e-48   7.5255e-53
      low eigenvalue method done, cpu time[sec] = 0.190817, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.54e-48  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   5.4e-50  2.22e-16         1
         *Z       ---       ---  5.25e+45
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -3.79405e-43 -1.60423e-43 -6.24717e-45 -2.60356e-44  -6.1092e-46  4.31448e-46  -1.5187e-51

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.752, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 340 K
            Well    Collision, 1/sec
              W1         7.23059e+09
      global relaxation matrix dimension = 803
      setting global matrices ... done, cpu time[sec] = 1.30883, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.4759, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            51.4245      4.48107     0.722688      1.15044    0.0947417       12.888     0.396328
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.175956, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.014136, elapsed time[sec] = 1
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.190322, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.13047e-12   1.3863e-48   6.4484e-53
      low eigenvalue method done, cpu time[sec] = 0.190973, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.39e-48  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.86e-50  2.22e-16         1
         *Z       ---       ---  5.25e+45
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -2.74538e-43 -1.56989e-43 -3.39765e-45  1.87986e-46 -3.51297e-46  4.93479e-46 -1.29663e-50

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.736, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 340 K
            Well    Collision, 1/sec
              W1         1.08459e+10
      global relaxation matrix dimension = 803
      setting global matrices ... done, cpu time[sec] = 1.30793, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.4896, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             34.283      2.98738     0.481792     0.766959    0.0631611      8.59202     0.264218
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.177636, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.014121, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.191989, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -6.43808e-14  9.24228e-49     3.49e-53
      low eigenvalue method done, cpu time[sec] = 0.192656, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.24e-49  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.24e-50  2.22e-16         1
         *Z       ---       ---  5.25e+45
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  2.45389e-43  1.08801e-43  3.16598e-45  2.32341e-44  9.08608e-46  1.47535e-45  7.21746e-51

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.7425, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 340 K
            Well    Collision, 1/sec
              W1         1.44612e+10
      global relaxation matrix dimension = 803
      setting global matrices ... done, cpu time[sec] = 1.30849, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.487, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            25.7122      2.24053     0.361344     0.575219    0.0473708      6.44402     0.198164
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.176368, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.014128, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.190735, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.97172e-13  6.93183e-49  2.21699e-53
      low eigenvalue method done, cpu time[sec] = 0.191442, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.93e-49  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.43e-50  2.22e-16         1
         *Z       ---       ---  5.25e+45
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  6.05449e-44  3.06244e-44  2.66654e-45  2.16744e-44  4.04282e-46  9.82045e-46 -1.82335e-51

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.7402, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 340 K
            Well    Collision, 1/sec
              W1         1.80765e+10
      global relaxation matrix dimension = 803
      setting global matrices ... done, cpu time[sec] = 1.30682, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.5044, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            20.5698      1.79243     0.289075     0.460175    0.0378967      5.15521     0.158531
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.175893, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.014167, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.19029, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.93757e-14  5.54552e-49  1.54387e-53
      low eigenvalue method done, cpu time[sec] = 0.19094, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.55e-49  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.94e-50  2.22e-16         1
         *Z       ---       ---  5.25e+45
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -3.92777e-43 -1.48707e-43 -3.23449e-45 -1.66577e-44 -5.76602e-46 -3.94073e-46 -1.04345e-50

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.7582, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 340 K
            Well    Collision, 1/sec
              W1         2.16918e+10
      global relaxation matrix dimension = 803
      setting global matrices ... done, cpu time[sec] = 1.31236, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.4862, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            17.1415      1.49369     0.240896      0.38348    0.0315806      4.29601     0.132109
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.175503, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.014199, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.189931, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.84724e-13   4.6213e-49  1.14167e-53
      low eigenvalue method done, cpu time[sec] = 0.190573, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.62e-49  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.62e-50  2.22e-16         1
         *Z       ---       ---  5.25e+45
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  2.41784e-43  5.67079e-44  1.78927e-45  1.84625e-44  5.17336e-46  1.57504e-45   1.2107e-51

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.7388, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 340 K
            Well    Collision, 1/sec
              W1         2.53071e+10
      global relaxation matrix dimension = 803
      setting global matrices ... done, cpu time[sec] = 1.30714, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.4688, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            14.6927       1.2803     0.206482     0.328697     0.027069       3.6823     0.113236
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.17607, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.014217, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.190534, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.55654e-13  3.96114e-49  8.80898e-54
      low eigenvalue method done, cpu time[sec] = 0.191181, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.96e-49  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.39e-50  2.22e-16         1
         *Z       ---       ---  5.25e+45
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  -3.8015e-43 -8.56407e-44 -1.83502e-45 -1.08949e-44 -3.23135e-46  -1.0277e-45  1.17224e-50

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.7249, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 340 K
            Well    Collision, 1/sec
              W1         2.89223e+10
      global relaxation matrix dimension = 803
      setting global matrices ... done, cpu time[sec] = 1.30929, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.4865, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            12.8561      1.12027     0.180672      0.28761    0.0236854      3.22201    0.0990819
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.175363, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.014205, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.189812, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.94342e-13  3.46601e-49  7.01605e-54
      low eigenvalue method done, cpu time[sec] = 0.190527, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.47e-49  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.21e-50  2.22e-16         1
         *Z       ---       ---  5.25e+45
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -1.52798e-43 -2.39822e-44 -1.68784e-45  -1.7707e-44 -4.92214e-46 -5.29886e-46  3.45193e-50

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.7422, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 350 K
      Energy reference = 14450 1/cm
      Energy step      = 58 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.7 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.010734
         W1 Well: collisional kernel bandwidth = 39
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.680313
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.877552
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 3.46387
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 6.38099
         W1 Well: minimal relaxation eigenvalue = 0.034407
         W1 Well: maximal relaxation eigenvalue = 2.19421
         W1 Well:       grid size = 794
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31603 1/cm
         B1 Barrier:        grid size = 250
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -50 1/cm
         B2 Barrier:        grid size = 246
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 181 1/cm
         B3 Barrier:        grid size = 329
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4633 1/cm
         B4 Barrier:        grid size = 356
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6199 1/cm
         B5 Barrier: nonpositive number of states at -23135 1/cm => truncating
         B5 Barrier:        grid size = 648
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23135 1/cm
         B6 Barrier:        grid size = 224
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1457 1/cm
         B7 Barrier:        grid size = 168
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4705 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 11.5373, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31603 -23135 4.33e+05 3.87e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -50 5.15e+12
         B2    182 4.54e+11
         B3  -4633 7.42e+10
         B4  -6199 1.17e+11
         B5 -23135 9.73e+09
         B6   1457 1.33e+12
         B7   4705 4.24e+10
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  4.18e+34  1.08e+35  3.12e+27  4.06e+24  2.45e-08   2.9e+38  2.76e+44
          R  2.39e-35         1       2.6  7.47e-08  9.72e-11  5.87e-43  6.94e+03  6.61e+09
         P1  9.22e-36     0.385         1  2.87e-08  3.74e-11  2.26e-43  2.67e+03  2.54e+09
         P2  3.21e-28  1.34e+07  3.48e+07         1    0.0013  7.86e-36   9.3e+10  8.85e+16
         P3  2.46e-25  1.03e+10  2.67e+10       768         1  6.04e-33  7.15e+13   6.8e+19
         P4  4.08e+07   1.7e+42  4.43e+42  1.27e+35  1.66e+32         1  1.18e+46  1.13e+52
         P5  3.45e-39  0.000144  0.000374  1.08e-11   1.4e-14  8.45e-47         1  9.52e+05
         P6  3.62e-45  1.51e-10  3.93e-10  1.13e-17  1.47e-20  8.88e-53  1.05e-06         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.11e+31  2.88e+31  8.27e+23  1.08e+21  6.49e-12  7.69e+34  7.32e+40
          R  9.03e-32         1       2.6  7.47e-08  9.72e-11  5.87e-43  6.94e+03  6.61e+09
         P1  3.48e-32     0.385         1  2.87e-08  3.74e-11  2.26e-43  2.67e+03  2.54e+09
         P2  1.21e-24  1.34e+07  3.48e+07         1    0.0013  7.86e-36   9.3e+10  8.85e+16
         P3   9.3e-22  1.03e+10  2.67e+10       768         1  6.04e-33  7.15e+13   6.8e+19
         P4  1.54e+11   1.7e+42  4.43e+42  1.27e+35  1.66e+32         1  1.18e+46  1.13e+52
         P5   1.3e-35  0.000144  0.000374  1.08e-11   1.4e-14  8.45e-47         1  9.52e+05
         P6  1.37e-41  1.51e-10  3.93e-10  1.13e-17  1.47e-20  8.88e-53  1.05e-06         1
   MasterEquation::set:  done, cpu time[sec] = 11.5424, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 350 K
            Well    Collision, 1/sec
              W1          7.0364e+08
      global relaxation matrix dimension = 794
      setting global matrices ... done, cpu time[sec] = 0.408337, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.75579, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            567.252      49.9936      8.17868      12.9239       1.0724      146.368      4.67863
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.170793, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.014033, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.185028, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.74104e-12  1.32106e-46  5.67927e-50
      low eigenvalue method done, cpu time[sec] = 0.185659, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.32e-46 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.55e-48 -4.44e-16         1
         *Z       ---       ---  5.99e+44
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -6.59401e-42 -5.43149e-42 -2.20129e-43 -4.90316e-42 -9.49721e-44  8.77104e-45 -9.20404e-50

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.9805, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 350 K
            Well    Collision, 1/sec
              W1         2.11092e+09
      global relaxation matrix dimension = 794
      setting global matrices ... done, cpu time[sec] = 1.27528, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.2818, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            189.084      16.6645      2.72623      4.30798     0.357466      48.7894      1.55954
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.170712, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.013767, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.184679, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.91689e-12  4.40704e-47  1.67487e-50
      low eigenvalue method done, cpu time[sec] = 0.185311, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.41e-47 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.52e-48 -4.44e-16         1
         *Z       ---       ---  5.99e+44
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  8.32973e-42  2.67368e-42  9.36764e-44  5.73079e-43  1.34694e-44 -7.47937e-45 -1.78302e-49

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.4015, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 350 K
            Well    Collision, 1/sec
              W1          3.5182e+09
      global relaxation matrix dimension = 794
      setting global matrices ... done, cpu time[sec] = 1.2764, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.3027, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             113.45      9.99871      1.63574      2.58479     0.214479      29.2736     0.935726
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.170783, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.013709, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.184692, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   4.2827e-12  2.64505e-47   8.7873e-51
      low eigenvalue method done, cpu time[sec] = 0.185321, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.65e-47 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   9.1e-49 -4.44e-16         1
         *Z       ---       ---  5.99e+44
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  1.26542e-42  5.41149e-43 -3.69698e-45   2.6401e-44   2.6074e-46 -1.38343e-46  2.72147e-49

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.42, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 350 K
            Well    Collision, 1/sec
              W1         4.92548e+09
      global relaxation matrix dimension = 794
      setting global matrices ... done, cpu time[sec] = 1.26242, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.322, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             81.036      7.14194      1.16838      1.84628       0.1532      20.9097     0.668376
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.170455, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.013737, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.184394, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.18897e-12  1.88966e-47  5.58662e-51
      low eigenvalue method done, cpu time[sec] = 0.185216, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.89e-47 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   6.5e-49 -4.44e-16         1
         *Z       ---       ---  5.99e+44
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  6.16654e-43 -9.86104e-43 -4.85366e-44 -7.89113e-43  -1.8563e-44  2.01297e-45 -2.93147e-49

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.4355, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 350 K
            Well    Collision, 1/sec
              W1         6.33276e+09
      global relaxation matrix dimension = 794
      setting global matrices ... done, cpu time[sec] = 1.27762, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.2999, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             63.028      5.55484     0.908742      1.43599     0.119155      16.2631     0.519848
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.17035, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.01372, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.184267, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.28463e-12  1.46991e-47  3.92585e-51
      low eigenvalue method done, cpu time[sec] = 0.184911, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.47e-47 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.06e-49 -4.44e-16         1
         *Z       ---       ---  5.99e+44
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  4.72808e-42  2.10175e-42  3.54228e-44 -6.87484e-44 -1.87146e-45  -3.9264e-45 -3.72199e-49

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.413, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 350 K
            Well    Collision, 1/sec
              W1          7.0364e+09
      global relaxation matrix dimension = 794
      setting global matrices ... done, cpu time[sec] = 1.27446, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.3065, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            56.7252      4.99936     0.817868      1.29239      0.10724      14.6368     0.467863
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.170606, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.013702, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.18451, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.66951e-12  1.32298e-47  3.37377e-51
      low eigenvalue method done, cpu time[sec] = 0.185355, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.32e-47 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.55e-49 -4.44e-16         1
         *Z       ---       ---  5.99e+44
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -1.12067e-43 -1.89607e-43 -6.93288e-45  3.97384e-44 -1.86041e-45 -7.69887e-45 -3.93394e-49

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.4367, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 350 K
            Well    Collision, 1/sec
              W1         1.05546e+10
      global relaxation matrix dimension = 794
      setting global matrices ... done, cpu time[sec] = 1.27469, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.3082, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            37.8168       3.3329     0.545245     0.861597    0.0714931      9.75788     0.311909
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.170605, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.013734, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.184541, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.59406e-12  8.82126e-48  1.84615e-51
      low eigenvalue method done, cpu time[sec] = 0.185168, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.82e-48 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.04e-49 -4.44e-16         1
         *Z       ---       ---  5.99e+44
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  3.20399e-42  9.28556e-43  1.33477e-44 -4.32008e-44 -1.00839e-45   3.1779e-45  7.73963e-50

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.4222, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 350 K
            Well    Collision, 1/sec
              W1         1.40728e+10
      global relaxation matrix dimension = 794
      setting global matrices ... done, cpu time[sec] = 1.27114, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.3187, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            28.3626      2.49968     0.408934     0.646197    0.0536198      7.31841     0.233932
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.170301, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.013739, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.184263, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.55637e-13  6.61655e-48  1.18161e-51
      low eigenvalue method done, cpu time[sec] = 0.184893, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.62e-48 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.28e-49 -4.44e-16         1
         *Z       ---       ---  5.99e+44
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  3.74133e-43 -4.59616e-43 -1.73517e-44 -2.35996e-43 -3.54637e-45 -1.82882e-46 -2.72923e-49

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.6643, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 350 K
            Well    Collision, 1/sec
              W1          1.7591e+10
      global relaxation matrix dimension = 794
      setting global matrices ... done, cpu time[sec] = 0.780678, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.8834, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            22.6901      1.99974     0.327147     0.516958    0.0428959      5.85473     0.187145
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.170449, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.013772, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.184456, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.89282e-13  5.29357e-48  8.27501e-52
      low eigenvalue method done, cpu time[sec] = 0.185084, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.29e-48 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.82e-49 -4.44e-16         1
         *Z       ---       ---  5.99e+44
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  3.65056e-42   1.0816e-42  3.27005e-44  2.59972e-43  7.25864e-45  8.65428e-45   3.1317e-49

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.7458, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 350 K
            Well    Collision, 1/sec
              W1         2.11092e+10
      global relaxation matrix dimension = 794
      setting global matrices ... done, cpu time[sec] = 0.778994, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.9818, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            18.9084      1.66645     0.272623     0.430798    0.0357466      4.87894     0.155954
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.169955, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.013729, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.183907, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.58578e-14   4.4115e-48  6.14653e-52
      low eigenvalue method done, cpu time[sec] = 0.184557, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.41e-48 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.52e-49 -4.44e-16         1
         *Z       ---       ---  5.99e+44
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  -1.6022e-44  7.98233e-44  9.71459e-45  2.60431e-43  6.11256e-45  4.81307e-45  -4.6616e-50

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.5957, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 350 K
            Well    Collision, 1/sec
              W1         2.46274e+10
      global relaxation matrix dimension = 794
      setting global matrices ... done, cpu time[sec] = 1.26938, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.3175, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            16.2072      1.42839     0.233676     0.369256    0.0306399      4.18195     0.133675
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.170293, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.013746, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.184269, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   -6.215e-15  3.78141e-48  4.75987e-52
      low eigenvalue method done, cpu time[sec] = 0.184901, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.78e-48 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.3e-49 -4.44e-16         1
         *Z       ---       ---  5.99e+44
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  3.85281e-42  1.16402e-42  2.99925e-44  1.49224e-43  4.23239e-45  1.08564e-44 -2.90763e-49

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.4351, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 350 K
            Well    Collision, 1/sec
              W1         2.81456e+10
      global relaxation matrix dimension = 794
      setting global matrices ... done, cpu time[sec] = 1.27198, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.2301, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            14.1813      1.24984     0.204467     0.323099    0.0268099       3.6592     0.116966
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.170178, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.013757, elapsed time[sec] = 1
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.184172, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.87732e-13  3.30882e-48  3.80267e-52
      low eigenvalue method done, cpu time[sec] = 0.184806, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.31e-48 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.14e-49 -4.44e-16         1
         *Z       ---       ---  5.99e+44
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -5.60772e-44 -9.21322e-44 -1.46687e-45   4.3501e-45  2.76402e-46  1.32927e-45 -1.28127e-49

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.3535, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 360 K
      Energy reference = 14727 1/cm
      Energy step      = 60 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.6 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.010962
         W1 Well: collisional kernel bandwidth = 39
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.586553
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.828164
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.785169
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 5.85322
         W1 Well: minimal relaxation eigenvalue = 0.0337911
         W1 Well: maximal relaxation eigenvalue = 1.46767
         W1 Well:       grid size = 772
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31593 1/cm
         B1 Barrier:        grid size = 246
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -33 1/cm
         B2 Barrier:        grid size = 242
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 206 1/cm
         B3 Barrier:        grid size = 323
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4653 1/cm
         B4 Barrier:        grid size = 349
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6213 1/cm
         B5 Barrier: nonpositive number of states at -23133 1/cm => truncating
         B5 Barrier:        grid size = 631
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23133 1/cm
         B6 Barrier:        grid size = 221
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1466 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4706 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 8.18517, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31593 -23133 4.34e+05  4.1e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -33 5.85e+12
         B2    207 5.22e+11
         B3  -4653 8.65e+10
         B4  -6213 1.36e+11
         B5 -23133 1.14e+10
         B6   1467 1.55e+12
         B7   4707 5.16e+10
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.03e+33  2.62e+33  1.31e+26  2.06e+23  9.98e-09  6.17e+36  4.12e+42
          R  9.67e-34         1      2.53  1.27e-07  1.99e-10  9.66e-42  5.97e+03  3.98e+09
         P1  3.82e-34     0.395         1  5.02e-08  7.86e-11  3.81e-42  2.35e+03  1.57e+09
         P2  7.61e-27  7.87e+06  1.99e+07         1   0.00157   7.6e-35  4.69e+10  3.13e+16
         P3  4.85e-24  5.02e+09  1.27e+10       638         1  4.85e-32  2.99e+13     2e+19
         P4     1e+08  1.04e+41  2.62e+41  1.32e+34  2.06e+31         1  6.18e+44  4.12e+50
         P5  1.62e-37  0.000168  0.000425  2.13e-11  3.34e-14  1.62e-45         1  6.68e+05
         P6  2.43e-43  2.51e-10  6.36e-10  3.19e-17     5e-20  2.42e-51   1.5e-06         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.82e+29  7.16e+29  3.59e+22  5.63e+19  2.73e-12  1.68e+33  1.12e+39
          R  3.54e-30         1      2.53  1.27e-07  1.99e-10  9.66e-42  5.97e+03  3.98e+09
         P1   1.4e-30     0.395         1  5.02e-08  7.86e-11  3.81e-42  2.35e+03  1.57e+09
         P2  2.79e-23  7.87e+06  1.99e+07         1   0.00157   7.6e-35  4.69e+10  3.13e+16
         P3  1.78e-20  5.02e+09  1.27e+10       638         1  4.85e-32  2.99e+13     2e+19
         P4  3.67e+11  1.04e+41  2.62e+41  1.32e+34  2.06e+31         1  6.18e+44  4.12e+50
         P5  5.94e-34  0.000168  0.000425  2.13e-11  3.34e-14  1.62e-45         1  6.68e+05
         P6  8.89e-40  2.51e-10  6.36e-10  3.19e-17     5e-20  2.42e-51   1.5e-06         1
   MasterEquation::set:  done, cpu time[sec] = 8.19018, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 360 K
            Well    Collision, 1/sec
              W1         6.85418e+08
      global relaxation matrix dimension = 772
      setting global matrices ... done, cpu time[sec] = 0.38871, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.49748, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            624.173      55.6428      9.23045      14.4817      1.21056      165.698      5.49799
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.157877, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.013043, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.171118, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.59776e-12  1.23718e-45  2.23716e-48
      low eigenvalue method done, cpu time[sec] = 0.171802, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.24e-45         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.18e-47         0         1
         *Z       ---       ---  7.68e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.05138e-40  4.33246e-41  8.82985e-43 -8.13139e-42 -4.35295e-44  3.05649e-44  9.64136e-49

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.63, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 360 K
            Well    Collision, 1/sec
              W1         2.05626e+09
      global relaxation matrix dimension = 772
      setting global matrices ... done, cpu time[sec] = 1.19469, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.0818, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            208.058      18.5476      3.07682      4.82723     0.403519      55.2328      1.83266
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.157835, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.013047, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.171075, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.33017e-12  4.13806e-46  6.79491e-49
      low eigenvalue method done, cpu time[sec] = 0.171668, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.14e-46         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.4e-47         0         1
         *Z       ---       ---  7.68e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -8.99724e-42  5.41071e-43  1.20616e-43   2.0043e-42  7.27599e-44   -3.454e-44 -1.72237e-48

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.9996, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 360 K
            Well    Collision, 1/sec
              W1         3.42709e+09
      global relaxation matrix dimension = 772
      setting global matrices ... done, cpu time[sec] = 1.19292, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.0704, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            124.835      11.1286      1.84609      2.89634     0.242111      33.1397       1.0996
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.157953, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.013037, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.171186, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.68437e-12  2.48626e-46  3.61524e-49
      low eigenvalue method done, cpu time[sec] = 0.171785, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.49e-46         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   8.4e-48         0         1
         *Z       ---       ---  7.68e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.52037e-41  1.32571e-41  4.61635e-43  7.25124e-42  1.50614e-43 -1.01072e-43 -1.55814e-50

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.9741, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 360 K
            Well    Collision, 1/sec
              W1         4.79793e+09
      global relaxation matrix dimension = 772
      setting global matrices ... done, cpu time[sec] = 1.19871, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.0589, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            89.1675      7.94898      1.31864      2.06881     0.172937      23.6712     0.785427
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.157931, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.013048, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.171175, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -8.98966e-13  1.77731e-46  2.31977e-49
      low eigenvalue method done, cpu time[sec] = 0.171791, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.78e-46         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.01e-48         0         1
         *Z       ---       ---  7.68e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.48045e-41  4.41964e-42  1.46273e-44 -3.63052e-43   9.6204e-46 -8.26889e-45 -1.29249e-48

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.8959, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 360 K
            Well    Collision, 1/sec
              W1         6.16877e+09
      global relaxation matrix dimension = 772
      setting global matrices ... done, cpu time[sec] = 1.17809, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.1176, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            69.3525      6.18254      1.02561      1.60908     0.134506      18.4109     0.610887
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.157877, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.013044, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.171117, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.92146e-12  1.38309e-46   1.6414e-49
      low eigenvalue method done, cpu time[sec] = 0.171724, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.38e-46         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.67e-48         0         1
         *Z       ---       ---  7.68e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -4.57206e-41 -8.34964e-42 -2.78186e-43 -3.31486e-42 -8.50694e-44 -8.73811e-44 -1.62971e-49

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.9708, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 360 K
            Well    Collision, 1/sec
              W1         6.85418e+09
      global relaxation matrix dimension = 772
      setting global matrices ... done, cpu time[sec] = 1.19824, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.1261, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            62.4173      5.56428     0.923045      1.44817     0.121056      16.5698     0.549799
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.15766, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.012986, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.170838, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.56404e-12  1.24504e-46  1.41462e-49
      low eigenvalue method done, cpu time[sec] = 0.171423, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.25e-46         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.21e-48         0         1
         *Z       ---       ---  7.68e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  3.42784e-41  1.47778e-41  3.39345e-43   3.2322e-42  8.36461e-44  7.29349e-45  9.74972e-49

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.9977, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 360 K
            Well    Collision, 1/sec
              W1         1.02813e+10
      global relaxation matrix dimension = 772
      setting global matrices ... done, cpu time[sec] = 1.20045, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.1404, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            41.6115      3.70952     0.615363     0.965447    0.0807037      11.0466     0.366532
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.157881, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.013046, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.171121, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.21052e-12  8.30613e-47  7.82531e-50
      low eigenvalue method done, cpu time[sec] = 0.17172, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.31e-47         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.81e-48         0         1
         *Z       ---       ---  7.68e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.21281e-41  2.81424e-42 -1.26072e-45 -2.44682e-42 -4.31147e-44  1.00354e-43  -8.6455e-49

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.0139, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 360 K
            Well    Collision, 1/sec
              W1         1.37084e+10
      global relaxation matrix dimension = 772
      setting global matrices ... done, cpu time[sec] = 1.19628, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.1804, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            31.2086      2.78214     0.461522     0.724085    0.0605278      8.28492     0.274899
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.157755, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.012924, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.170873, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   1.6751e-14  6.23221e-47   5.0461e-50
      low eigenvalue method done, cpu time[sec] = 0.171457, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.23e-47         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.11e-48         0         1
         *Z       ---       ---  7.68e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  5.00665e-42  3.60256e-43   2.3844e-44 -1.91517e-43  -5.5418e-45  4.76142e-44  2.35946e-48

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.0515, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 360 K
            Well    Collision, 1/sec
              W1         1.71355e+10
      global relaxation matrix dimension = 772
      setting global matrices ... done, cpu time[sec] = 1.1992, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.1525, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            24.9669      2.22571     0.369218     0.579268    0.0484222      6.62794     0.219919
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.157708, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.013003, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.170924, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -7.92792e-13  4.98717e-47   3.5538e-50
      low eigenvalue method done, cpu time[sec] = 0.171515, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.99e-47         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.69e-48         0         1
         *Z       ---       ---  7.68e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -6.12255e-42 -2.20781e-42 -4.55816e-44 -4.60261e-43 -1.70882e-44  5.93145e-46 -3.65113e-48

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.0279, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 360 K
            Well    Collision, 1/sec
              W1         2.05626e+10
      global relaxation matrix dimension = 772
      setting global matrices ... done, cpu time[sec] = 1.20028, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.1031, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            20.8058      1.85476     0.307682     0.482723    0.0403519      5.52328     0.183266
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.157546, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.012998, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.170737, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.49869e-13  4.15681e-47   2.6515e-50
      low eigenvalue method done, cpu time[sec] = 0.171396, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.16e-47         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.4e-48         0         1
         *Z       ---       ---  7.68e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -1.04329e-41 -9.04962e-43 -7.27632e-44 -8.77872e-43 -2.13755e-44 -9.42823e-44  4.06186e-48

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.9717, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 360 K
            Well    Collision, 1/sec
              W1         2.39896e+10
      global relaxation matrix dimension = 772
      setting global matrices ... done, cpu time[sec] = 1.19605, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.1567, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            17.8335       1.5898     0.263727     0.413763    0.0345873      4.73424     0.157085
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.157642, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.012917, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.170753, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.84223e-13  3.56353e-47  2.06085e-50
      low eigenvalue method done, cpu time[sec] = 0.171358, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.56e-47         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.2e-48         0         1
         *Z       ---       ---  7.68e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -8.94298e-42 -1.76231e-42 -6.32931e-44 -3.27678e-43 -1.14474e-44 -2.09209e-44 -1.92205e-48

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.0375, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 360 K
            Well    Collision, 1/sec
              W1         2.74167e+10
      global relaxation matrix dimension = 772
      setting global matrices ... done, cpu time[sec] = 1.19189, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.1341, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            15.6043      1.39107     0.230761     0.362043    0.0302639      4.14246      0.13745
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.157478, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.012766, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.170463, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.96694e-13  3.11847e-47  1.65151e-50
      low eigenvalue method done, cpu time[sec] = 0.17107, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.12e-47         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.05e-48         0         1
         *Z       ---       ---  7.68e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  6.92061e-42  2.18558e-42  1.02527e-43  1.16007e-42  2.72602e-44  4.26104e-44  1.04257e-48

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.0047, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 370 K
      Energy reference = 15005 1/cm
      Energy step      = 62 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.5 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.010385
         W1 Well: collisional kernel bandwidth = 39
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.612736
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.781999
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 1.1126
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 5.64623
         W1 Well: minimal relaxation eigenvalue = 0.0331938
         W1 Well: maximal relaxation eigenvalue = 2.69189
         W1 Well:       grid size = 752
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31619 1/cm
         B1 Barrier:        grid size = 243
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -61 1/cm
         B2 Barrier:        grid size = 239
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 186 1/cm
         B3 Barrier:        grid size = 317
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4649 1/cm
         B4 Barrier:        grid size = 342
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6199 1/cm
         B5 Barrier: nonpositive number of states at -23125 1/cm => truncating
         B5 Barrier:        grid size = 615
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23125 1/cm
         B6 Barrier:        grid size = 218
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1488 1/cm
         B7 Barrier:        grid size = 166
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4712 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 8.28343, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31619 -23125 4.36e+05 4.35e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -61 6.64e+12
         B2    187 5.99e+11
         B3  -4649 1.01e+11
         B4  -6199 1.57e+11
         B5 -23125 1.32e+10
         B6   1489 1.81e+12
         B7   4713 6.24e+10
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  3.11e+31  7.71e+31  6.55e+24  1.22e+22  4.25e-09  1.61e+35  7.68e+40
          R  3.21e-32         1      2.48   2.1e-07  3.93e-10  1.37e-40  5.17e+03  2.47e+09
         P1   1.3e-32     0.404         1   8.5e-08  1.59e-10  5.52e-41  2.09e+03  9.96e+08
         P2  1.53e-25  4.75e+06  1.18e+07         1   0.00187   6.5e-34  2.46e+10  1.17e+16
         P3  8.17e-23  2.54e+09   6.3e+09       535         1  3.48e-31  1.31e+13  6.27e+18
         P4  2.35e+08  7.31e+39  1.81e+40  1.54e+33  2.88e+30         1  3.78e+43  1.81e+49
         P5  6.22e-36  0.000194  0.000479  4.07e-11  7.61e-14  2.65e-44         1  4.78e+05
         P6   1.3e-41  4.05e-10     1e-09  8.53e-17  1.59e-19  5.54e-50  2.09e-06         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  8.77e+27  2.17e+28  1.84e+21  3.45e+18   1.2e-12  4.53e+31  2.16e+37
          R  1.14e-28         1      2.48   2.1e-07  3.93e-10  1.37e-40  5.17e+03  2.47e+09
         P1  4.61e-29     0.404         1   8.5e-08  1.59e-10  5.52e-41  2.09e+03  9.96e+08
         P2  5.42e-22  4.75e+06  1.18e+07         1   0.00187   6.5e-34  2.46e+10  1.17e+16
         P3   2.9e-19  2.54e+09   6.3e+09       535         1  3.48e-31  1.31e+13  6.27e+18
         P4  8.34e+11  7.31e+39  1.81e+40  1.54e+33  2.88e+30         1  3.78e+43  1.81e+49
         P5  2.21e-32  0.000194  0.000479  4.07e-11  7.61e-14  2.65e-44         1  4.78e+05
         P6  4.62e-38  4.05e-10     1e-09  8.53e-17  1.59e-19  5.54e-50  2.09e-06         1
   MasterEquation::set:  done, cpu time[sec] = 8.28835, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 370 K
            Well    Collision, 1/sec
              W1         6.68288e+08
      global relaxation matrix dimension = 752
      setting global matrices ... done, cpu time[sec] = 0.362062, elapsed time[sec] = 1
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.12442, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            685.219      61.7894      10.3901      16.1876      1.36294      187.008      6.43311
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.146644, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.01225, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.159108, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.23635e-12  1.18294e-44  7.23737e-47
      low eigenvalue method done, cpu time[sec] = 0.159677, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.18e-44         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.93e-46         0         1
         *Z       ---       ---   1.1e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -1.69979e-40 -9.18653e-41  8.42931e-43  9.17666e-41  1.56815e-42 -1.46911e-44 -8.13112e-49

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.0619, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 370 K
            Well    Collision, 1/sec
              W1         2.00486e+09
      global relaxation matrix dimension = 752
      setting global matrices ... done, cpu time[sec] = 1.13064, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.82251, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            228.406      20.5965      3.46336      5.39586     0.454314      62.3362      2.14437
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.146764, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.012217, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.159173, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.05544e-12  3.98999e-45  2.26104e-47
      low eigenvalue method done, cpu time[sec] = 0.159748, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.99e-45         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.32e-46         0         1
         *Z       ---       ---   1.1e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -5.38949e-40 -1.09995e-40 -1.18768e-42  1.63982e-41  1.81538e-43 -1.33113e-42 -1.84104e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.4914, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 370 K
            Well    Collision, 1/sec
              W1         3.34144e+09
      global relaxation matrix dimension = 752
      setting global matrices ... done, cpu time[sec] = 1.13445, elapsed time[sec] = 1
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.84602, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            137.044      12.3579      2.07801      3.23751     0.272588      37.4017      1.28662
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.146426, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.012217, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.158832, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   3.5296e-12  2.40558e-45  1.21938e-47
      low eigenvalue method done, cpu time[sec] = 0.159432, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.41e-45         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.99e-47         0         1
         *Z       ---       ---   1.1e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  -2.5603e-40 -1.08666e-40 -4.13117e-42 -3.15337e-41 -9.00626e-43   3.2321e-43  1.18998e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.5078, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 370 K
            Well    Collision, 1/sec
              W1         4.67801e+09
      global relaxation matrix dimension = 752
      setting global matrices ... done, cpu time[sec] = 1.13484, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.81632, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            97.8885      8.82705       1.4843      2.31251     0.194706      26.7155     0.919016
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.146532, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.012432, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.159183, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.21811e-12  1.72311e-45   7.8949e-48
      low eigenvalue method done, cpu time[sec] = 0.159756, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.72e-45         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.72e-47         0         1
         *Z       ---       ---   1.1e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.50815e-40  5.43819e-41  1.27211e-42  5.90474e-42  8.61067e-44  4.07183e-43 -1.52794e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.4714, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 370 K
            Well    Collision, 1/sec
              W1         6.01459e+09
      global relaxation matrix dimension = 752
      setting global matrices ... done, cpu time[sec] = 1.13272, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.82663, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            76.1355      6.86548      1.15445      1.79862     0.151438      20.7787      0.71479
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.148321, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.012212, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.160724, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.16232e-12  1.34274e-45  5.62373e-48
      low eigenvalue method done, cpu time[sec] = 0.1613, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.34e-45         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.46e-47         0         1
         *Z       ---       ---   1.1e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0   1.1542e-40   8.7177e-41  1.65213e-42  8.74937e-42  3.23388e-43 -8.29494e-43  4.04267e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.5469, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 370 K
            Well    Collision, 1/sec
              W1         6.68288e+09
      global relaxation matrix dimension = 752
      setting global matrices ... done, cpu time[sec] = 1.13302, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.79429, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            68.5219      6.17894      1.03901      1.61876     0.136294      18.7008     0.643311
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.146508, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.012225, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.158928, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -9.80444e-13  1.20936e-45  4.86032e-48
      low eigenvalue method done, cpu time[sec] = 0.159507, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.21e-45         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.01e-47         0         1
         *Z       ---       ---   1.1e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  -1.4188e-41 -1.21822e-41  1.41762e-43  3.51294e-42  8.26704e-44  9.11006e-44 -2.46523e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.4981, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 370 K
            Well    Collision, 1/sec
              W1         1.00243e+10
      global relaxation matrix dimension = 752
      setting global matrices ... done, cpu time[sec] = 1.13229, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.80368, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            45.6813      4.11929     0.692672      1.07917    0.0908628      12.4672     0.428874
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.146804, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.0122, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.159201, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.61142e-13  8.08288e-46  2.71741e-48
      low eigenvalue method done, cpu time[sec] = 0.159796, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.08e-46         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.68e-47         0         1
         *Z       ---       ---   1.1e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -1.17484e-40 -9.58003e-42 -5.83752e-43 -9.57303e-43 -7.97099e-44 -6.50573e-43  2.39657e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.7902, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 370 K
            Well    Collision, 1/sec
              W1         1.33658e+10
      global relaxation matrix dimension = 752
      setting global matrices ... done, cpu time[sec] = 0.693227, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.3638, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             34.261      3.08947     0.519504     0.809378    0.0681471      9.35042     0.321656
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.146504, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.012197, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.158889, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.73619e-12  6.07135e-46  1.76529e-48
      low eigenvalue method done, cpu time[sec] = 0.159481, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.07e-46         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.02e-47         0         1
         *Z       ---       ---   1.1e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -7.38583e-41 -1.67456e-41 -2.90125e-43  1.87369e-42  1.15735e-44 -2.93938e-43  2.79026e-49

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.5716, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 370 K
            Well    Collision, 1/sec
              W1         1.67072e+10
      global relaxation matrix dimension = 752
      setting global matrices ... done, cpu time[sec] = 1.12838, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.87241, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            27.4088      2.47157     0.415603     0.647503    0.0545177      7.48034     0.257324
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.146469, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.012203, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.158889, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.37691e-13  4.86203e-46  1.25019e-48
      low eigenvalue method done, cpu time[sec] = 0.159459, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.86e-46         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.61e-47         0         1
         *Z       ---       ---   1.1e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.89611e-41    8.356e-42  5.34701e-44 -5.19498e-42 -1.07611e-43 -5.54066e-44  1.56519e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.5764, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 370 K
            Well    Collision, 1/sec
              W1         2.00486e+10
      global relaxation matrix dimension = 752
      setting global matrices ... done, cpu time[sec] = 1.13006, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.85122, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            22.8406      2.05965     0.346336     0.539586    0.0454314      6.23362     0.214437
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.146577, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.012201, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.158964, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.40132e-13  4.05469e-46  9.36925e-49
      low eigenvalue method done, cpu time[sec] = 0.159529, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.05e-46         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.35e-47         0         1
         *Z       ---       ---   1.1e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  -4.5563e-41 -7.50176e-42 -1.83809e-43 -1.21248e-42  -5.3078e-44 -4.03581e-43 -1.22164e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.5105, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 370 K
            Well    Collision, 1/sec
              W1         2.33901e+10
      global relaxation matrix dimension = 752
      setting global matrices ... done, cpu time[sec] = 1.13018, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.83713, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            19.5777      1.76541     0.296859     0.462502    0.0389412       5.3431     0.183803
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.147586, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.012205, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.159988, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.67104e-14   3.4774e-46  7.30889e-49
      low eigenvalue method done, cpu time[sec] = 0.160582, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.48e-46         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.15e-47         0         1
         *Z       ---       ---   1.1e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -8.12443e-41 -2.46546e-41 -5.74685e-43 -5.16278e-42 -1.55261e-43  1.44441e-43  8.17916e-48

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.5345, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 370 K
            Well    Collision, 1/sec
              W1         2.67315e+10
      global relaxation matrix dimension = 752
      setting global matrices ... done, cpu time[sec] = 1.1288, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.85468, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            17.1305      1.54473     0.259752     0.404689    0.0340735      4.67521     0.160828
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.146584, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.012202, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.158973, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -1.2256e-12  3.04408e-46  5.87529e-49
      low eigenvalue method done, cpu time[sec] = 0.159562, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.04e-46         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.01e-47         0         1
         *Z       ---       ---   1.1e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.92827e-41  1.12775e-41 -6.58387e-44  -2.1033e-42  -4.0956e-44 -3.14243e-43  4.27141e-48

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.5167, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 380 K
      Energy reference = 15283 1/cm
      Energy step      = 63 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.5 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.01009
         W1 Well: collisional kernel bandwidth = 39
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.70537
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.776149
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.69056
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 5.53
         W1 Well: minimal relaxation eigenvalue = 0.0326611
         W1 Well: maximal relaxation eigenvalue = 1.33693
         W1 Well:       grid size = 744
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31589 1/cm
         B1 Barrier:        grid size = 243
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -25 1/cm
         B2 Barrier:        grid size = 240
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 163 1/cm
         B3 Barrier:        grid size = 316
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4625 1/cm
         B4 Barrier:        grid size = 341
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6200 1/cm
         B5 Barrier: nonpositive number of states at -23147 1/cm => truncating
         B5 Barrier:        grid size = 610
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23147 1/cm
         B6 Barrier:        grid size = 219
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1486 1/cm
         B7 Barrier:        grid size = 168
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4699 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 7.87252, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31589 -23147  4.3e+05 4.61e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -25 7.53e+12
         B2    164 6.87e+11
         B3  -4625 1.17e+11
         B4  -6200 1.81e+11
         B5 -23147 1.54e+10
         B6   1487 2.11e+12
         B7   4700 7.52e+10
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.13e+30  2.75e+30  3.84e+23  8.49e+20  1.91e-09  5.11e+33  1.78e+39
          R  8.83e-31         1      2.42  3.39e-07  7.49e-10  1.68e-39  4.51e+03  1.57e+09
         P1  3.64e-31     0.413         1   1.4e-07  3.09e-10  6.95e-40  1.86e+03  6.47e+08
         P2   2.6e-24  2.95e+06  7.15e+06         1   0.00221  4.96e-33  1.33e+10  4.62e+15
         P3  1.18e-21  1.34e+09  3.24e+09       453         1  2.25e-30  6.02e+12  2.09e+18
         P4  5.24e+08  5.94e+38  1.44e+39  2.01e+32  4.45e+29         1  2.68e+42  9.31e+47
         P5  1.96e-34  0.000222  0.000538  7.52e-11  1.66e-13  3.73e-43         1  3.48e+05
         P6  5.63e-40  6.38e-10  1.55e-09  2.16e-16  4.77e-19  1.07e-48  2.87e-06         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  3.26e+26  7.91e+26  1.11e+20  2.44e+17   5.5e-13  1.47e+30  5.12e+35
          R  3.06e-27         1      2.42  3.39e-07  7.49e-10  1.68e-39  4.51e+03  1.57e+09
         P1  1.26e-27     0.413         1   1.4e-07  3.09e-10  6.95e-40  1.86e+03  6.47e+08
         P2  9.03e-21  2.95e+06  7.15e+06         1   0.00221  4.96e-33  1.33e+10  4.62e+15
         P3  4.09e-18  1.34e+09  3.24e+09       453         1  2.25e-30  6.02e+12  2.09e+18
         P4  1.82e+12  5.94e+38  1.44e+39  2.01e+32  4.45e+29         1  2.68e+42  9.31e+47
         P5  6.79e-31  0.000222  0.000538  7.52e-11  1.66e-13  3.73e-43         1  3.48e+05
         P6  1.95e-36  6.38e-10  1.55e-09  2.16e-16  4.77e-19  1.07e-48  2.87e-06         1
   MasterEquation::set:  done, cpu time[sec] = 7.87751, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 380 K
            Well    Collision, 1/sec
              W1         6.52154e+08
      global relaxation matrix dimension = 744
      setting global matrices ... done, cpu time[sec] = 0.360246, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.00502, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            750.513      68.4636      11.6658      18.0519      1.53066      210.442      7.49623
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.142569, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.011792, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.154543, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.00936e-12  1.21675e-43  1.96294e-45
      low eigenvalue method done, cpu time[sec] = 0.155131, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.22e-43  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.97e-45  2.22e-16         1
         *Z       ---       ---  1.75e+42
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  2.19384e-39   7.1545e-40  3.13839e-41  1.03285e-40  1.36644e-42  7.88229e-43 -6.18151e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.8325, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 380 K
            Well    Collision, 1/sec
              W1         1.95646e+09
      global relaxation matrix dimension = 744
      setting global matrices ... done, cpu time[sec] = 1.09459, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.0568, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            250.171      22.8212      3.88862      6.01731     0.510219      70.1473      2.49874
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.142599, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.011794, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.154572, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.90784e-12  4.18602e-44  6.29934e-46
      low eigenvalue method done, cpu time[sec] = 0.155155, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.19e-44  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.37e-45  2.22e-16         1
         *Z       ---       ---  1.75e+42
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -2.16929e-39 -9.76708e-40  -3.0203e-41  -3.1059e-40 -7.60973e-42 -1.17639e-42 -2.11545e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.6522, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 380 K
            Well    Collision, 1/sec
              W1         3.26077e+09
      global relaxation matrix dimension = 744
      setting global matrices ... done, cpu time[sec] = 1.11324, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.70442, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            150.103      13.6927      2.33317      3.61039     0.306131      42.0884      1.49925
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.142243, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.011788, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.154209, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.99684e-12  2.54442e-44  3.44167e-46
      low eigenvalue method done, cpu time[sec] = 0.154781, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.54e-44  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.31e-46  2.22e-16         1
         *Z       ---       ---  1.75e+42
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -2.54859e-40 -2.17205e-40  3.97338e-42   8.4439e-41  1.90231e-42  2.60354e-42  2.40913e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.3172, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 380 K
            Well    Collision, 1/sec
              W1         4.56508e+09
      global relaxation matrix dimension = 744
      setting global matrices ... done, cpu time[sec] = 1.11375, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.73443, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            107.216      9.78051      1.66655      2.57885     0.218665      30.0631      1.07089
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.142713, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.011794, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.154722, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -2.2385e-13  1.83131e-44  2.24774e-46
      low eigenvalue method done, cpu time[sec] = 0.155307, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.83e-44  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.98e-46  2.22e-16         1
         *Z       ---       ---  1.75e+42
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16   6.5877e-40  3.95785e-40   1.2526e-41  1.33944e-40  2.89148e-42  2.39579e-43  1.90222e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.344, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 380 K
            Well    Collision, 1/sec
              W1         5.86939e+09
      global relaxation matrix dimension = 744
      setting global matrices ... done, cpu time[sec] = 1.11295, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.74175, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            83.3903      7.60706      1.29621      2.00577     0.170073      23.3824     0.832914
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.142673, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.01175, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.154603, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.21952e-12  1.43167e-44  1.61156e-46
      low eigenvalue method done, cpu time[sec] = 0.155166, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.43e-44  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.68e-46  2.22e-16         1
         *Z       ---       ---  1.75e+42
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -3.83065e-40 -7.40707e-41 -3.18918e-42 -3.47289e-41 -7.96266e-43 -1.22396e-42 -2.42505e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.3336, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 380 K
            Well    Collision, 1/sec
              W1         6.52154e+09
      global relaxation matrix dimension = 744
      setting global matrices ... done, cpu time[sec] = 1.11245, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.72666, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            75.0513      6.84636      1.16658      1.80519     0.153066      21.0442     0.749623
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.142441, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.011741, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.154392, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.12951e-12  1.29109e-44  1.39658e-46
      low eigenvalue method done, cpu time[sec] = 0.154975, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.29e-44  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.22e-46  2.22e-16         1
         *Z       ---       ---  1.75e+42
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -1.08018e-39  -3.4281e-40 -7.82227e-42 -6.34182e-41 -2.12242e-42 -2.82949e-42 -4.53048e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.3313, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 380 K
            Well    Collision, 1/sec
              W1         9.78231e+09
      global relaxation matrix dimension = 744
      setting global matrices ... done, cpu time[sec] = 1.10746, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.84512, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            50.0342      4.56424     0.777723      1.20346     0.102044      14.0295     0.499748
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.142398, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.01178, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.154359, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.39147e-13    8.667e-45  7.88989e-47
      low eigenvalue method done, cpu time[sec] = 0.154948, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.67e-45  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.83e-46  2.22e-16         1
         *Z       ---       ---  1.75e+42
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  1.11154e-40  4.04078e-41  1.23748e-42  6.86414e-42  1.94047e-43 -4.85519e-43 -1.59136e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.4501, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 380 K
            Well    Collision, 1/sec
              W1         1.30431e+10
      global relaxation matrix dimension = 744
      setting global matrices ... done, cpu time[sec] = 1.1099, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.72152, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            37.5256      3.42318     0.583292     0.902597    0.0765329      10.5221     0.374811
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.142337, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.011762, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.154284, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.33662e-12  6.52725e-45  5.16269e-47
      low eigenvalue method done, cpu time[sec] = 0.154843, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.53e-45  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.13e-46  2.22e-16         1
         *Z       ---       ---  1.75e+42
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  6.87408e-40  2.18454e-40  5.78266e-42  2.46734e-41  9.81165e-43  3.04112e-42   2.0959e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.2814, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 380 K
            Well    Collision, 1/sec
              W1         1.63039e+10
      global relaxation matrix dimension = 744
      setting global matrices ... done, cpu time[sec] = 1.1122, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.74545, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            30.0205      2.73854     0.466634     0.722077    0.0612263      8.41768     0.299849
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.142244, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.011757, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.154211, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.32242e-13  5.23646e-45  3.67642e-47
      low eigenvalue method done, cpu time[sec] = 0.154777, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.24e-45  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.71e-46  2.22e-16         1
         *Z       ---       ---  1.75e+42
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  6.16958e-40  2.45009e-40  6.06806e-42  3.46198e-41  9.83505e-43 -1.66951e-42 -3.53728e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.3086, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 380 K
            Well    Collision, 1/sec
              W1         1.95646e+10
      global relaxation matrix dimension = 744
      setting global matrices ... done, cpu time[sec] = 1.11493, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.76712, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            25.0171      2.28212     0.388862     0.601731    0.0510219      7.01473     0.249874
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.142276, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.011746, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.154229, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.82193e-13  4.37261e-45  2.76734e-47
      low eigenvalue method done, cpu time[sec] = 0.154792, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.37e-45  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.43e-46  2.22e-16         1
         *Z       ---       ---  1.75e+42
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -1.03857e-41 -1.49451e-41   7.9739e-44 -4.13031e-42 -2.97171e-44  2.50737e-42   1.0579e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.3809, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 380 K
            Well    Collision, 1/sec
              W1         2.28254e+10
      global relaxation matrix dimension = 744
      setting global matrices ... done, cpu time[sec] = 1.115, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.78444, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            21.4432       1.9561      0.33331      0.51577    0.0437331      6.01263     0.214178
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.142618, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.011745, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.15455, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.89329e-13  3.75379e-45  2.16664e-47
      low eigenvalue method done, cpu time[sec] = 0.155134, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.75e-45  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.23e-46  2.22e-16         1
         *Z       ---       ---  1.75e+42
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -6.18121e-41 -7.52729e-41  -1.6359e-42 -6.08204e-42 -2.61317e-43  2.75853e-43 -3.57352e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.3711, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 380 K
            Well    Collision, 1/sec
              W1         2.60862e+10
      global relaxation matrix dimension = 744
      setting global matrices ... done, cpu time[sec] = 1.10911, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.74541, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            18.7628      1.71159     0.291646     0.451298    0.0382664      5.26105     0.187406
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.142542, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.011743, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.154465, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.45738e-13   3.2886e-45  1.74704e-47
      low eigenvalue method done, cpu time[sec] = 0.155029, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.29e-45  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.07e-46  2.22e-16         1
         *Z       ---       ---  1.75e+42
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  2.65104e-40  1.03963e-40  2.96812e-42  3.01082e-41  7.57458e-43  3.87237e-43 -3.69515e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.3375, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 390 K
      Energy reference = 15561 1/cm
      Energy step      = 65 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.4 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.01157
         W1 Well: collisional kernel bandwidth = 38
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.579456
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.734114
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 2.71332
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 5.3567
         W1 Well: minimal relaxation eigenvalue = 0.032088
         W1 Well: maximal relaxation eigenvalue = 3.87846
         W1 Well:       grid size = 726
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31629 1/cm
         B1 Barrier:        grid size = 240
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -38 1/cm
         B2 Barrier:        grid size = 237
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 156 1/cm
         B3 Barrier:        grid size = 311
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4654 1/cm
         B4 Barrier:        grid size = 335
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6213 1/cm
         B5 Barrier: nonpositive number of states at -23179 1/cm => truncating
         B5 Barrier:        grid size = 596
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23179 1/cm
         B6 Barrier:        grid size = 217
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1456 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4706 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 9.51247, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31629 -23179  4.2e+05 4.89e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -38 8.52e+12
         B2    157 7.86e+11
         B3  -4654 1.36e+11
         B4  -6213 2.09e+11
         B5 -23179 1.78e+10
         B6   1457 2.45e+12
         B7   4706 9.04e+10
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  4.87e+28  1.16e+29   2.6e+22  6.72e+19  8.88e-10  1.93e+32  4.97e+37
          R  2.05e-29         1      2.37  5.34e-07  1.38e-09  1.82e-38  3.96e+03  1.02e+09
         P1  8.65e-30     0.421         1  2.25e-07  5.81e-10  7.68e-39  1.67e+03   4.3e+08
         P2  3.85e-23  1.87e+06  4.45e+06         1   0.00259  3.42e-32  7.42e+09  1.91e+15
         P3  1.49e-20  7.25e+08  1.72e+09       387         1  1.32e-29  2.87e+12   7.4e+17
         P4  1.13e+09  5.48e+37   1.3e+38  2.93e+31  7.57e+28         1  2.17e+41   5.6e+46
         P5  5.19e-33  0.000252    0.0006  1.35e-10  3.48e-13  4.61e-42         1  2.58e+05
         P6  2.01e-38   9.8e-10  2.33e-09  5.23e-16  1.35e-18  1.79e-47  3.88e-06         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.44e+25  3.41e+25  7.67e+18  1.98e+16  2.62e-13  5.69e+28  1.47e+34
          R  6.96e-26         1      2.37  5.34e-07  1.38e-09  1.82e-38  3.96e+03  1.02e+09
         P1  2.93e-26     0.421         1  2.25e-07  5.81e-10  7.68e-39  1.67e+03   4.3e+08
         P2   1.3e-19  1.87e+06  4.45e+06         1   0.00259  3.42e-32  7.42e+09  1.91e+15
         P3  5.04e-17  7.25e+08  1.72e+09       387         1  1.32e-29  2.87e+12   7.4e+17
         P4  3.81e+12  5.48e+37   1.3e+38  2.93e+31  7.57e+28         1  2.17e+41   5.6e+46
         P5  1.76e-29  0.000252    0.0006  1.35e-10  3.48e-13  4.61e-42         1  2.58e+05
         P6  6.82e-35   9.8e-10  2.33e-09  5.23e-16  1.35e-18  1.79e-47  3.88e-06         1
   MasterEquation::set:  done, cpu time[sec] = 9.51734, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 390 K
            Well    Collision, 1/sec
              W1         6.36934e+08
      global relaxation matrix dimension = 726
      setting global matrices ... done, cpu time[sec] = 0.345494, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.61078, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             820.28         75.7      13.0665      20.0857      1.71486      236.148      8.70074
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.133247, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.011124, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.145278, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.58451e-11  1.36751e-42  4.43756e-44
      low eigenvalue method done, cpu time[sec] = 0.145827, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.37e-42 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.39e-44 -4.44e-16         1
         *Z       ---       ---  3.06e+41
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  7.16337e-39   2.7567e-40  3.44462e-41 -7.42318e-40 -8.95033e-42  2.45543e-41  2.97036e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.2905, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 390 K
            Well    Collision, 1/sec
              W1          1.9108e+09
      global relaxation matrix dimension = 726
      setting global matrices ... done, cpu time[sec] = 1.05662, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.46205, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            273.427      25.2333       4.3555      6.69522     0.571621      78.7161      2.90025
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.132939, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.011118, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.144917, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.50475e-12  4.85991e-43  1.46133e-44
      low eigenvalue method done, cpu time[sec] = 0.145458, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.86e-43 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.56e-44 -4.44e-16         1
         *Z       ---       ---  3.06e+41
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -8.19507e-39 -2.60968e-39 -6.65848e-41 -3.22772e-40 -1.38052e-41 -1.37033e-41 -1.60289e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.8444, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 390 K
            Well    Collision, 1/sec
              W1         3.18467e+09
      global relaxation matrix dimension = 726
      setting global matrices ... done, cpu time[sec] = 1.05498, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.48297, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            164.056        15.14       2.6133      4.01713     0.342973      47.2296      1.74015
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.13318, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.011076, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.145125, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   1.3901e-12  2.99337e-43  8.08538e-45
      low eigenvalue method done, cpu time[sec] = 0.145667, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.99e-43 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.61e-45 -4.44e-16         1
         *Z       ---       ---  3.06e+41
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -8.19164e-39 -2.66442e-39  -9.9635e-41 -1.29787e-39 -3.29358e-41 -1.08863e-41 -8.34404e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.8743, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 390 K
            Well    Collision, 1/sec
              W1         4.45854e+09
      global relaxation matrix dimension = 726
      setting global matrices ... done, cpu time[sec] = 1.06345, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.44245, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            117.183      10.8143      1.86664      2.86938      0.24498      33.7355      1.24296
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.133205, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.011067, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.14513, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.47472e-12  2.17118e-43  5.32537e-45
      low eigenvalue method done, cpu time[sec] = 0.14567, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.17e-43 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.97e-45 -4.44e-16         1
         *Z       ---       ---  3.06e+41
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -2.10868e-39 -6.85963e-40 -1.08139e-41 -1.61895e-40 -3.85061e-42 -1.27524e-41  2.00663e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.8397, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 390 K
            Well    Collision, 1/sec
              W1         5.73241e+09
      global relaxation matrix dimension = 726
      setting global matrices ... done, cpu time[sec] = 1.06052, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.46688, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            91.1422      8.41111      1.45183      2.23174      0.19054      26.2387     0.966749
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.132874, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.011087, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.144821, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -6.87538e-12  1.70628e-43  3.84246e-45
      low eigenvalue method done, cpu time[sec] = 0.145371, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.71e-43 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.48e-45 -4.44e-16         1
         *Z       ---       ---  3.06e+41
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  4.71085e-39  1.36011e-39  1.83039e-41 -1.18626e-40 -7.41084e-44  5.77145e-43  -4.3113e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.861, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 390 K
            Well    Collision, 1/sec
              W1         6.36934e+09
      global relaxation matrix dimension = 726
      setting global matrices ... done, cpu time[sec] = 1.05736, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.45543, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             82.028         7.57      1.30665      2.00857     0.171486      23.6148     0.870074
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.132882, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.011075, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.144853, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.41218e-12  1.54189e-43   3.3388e-45
      low eigenvalue method done, cpu time[sec] = 0.145408, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.54e-43 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.95e-45 -4.44e-16         1
         *Z       ---       ---  3.06e+41
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  9.52194e-39  2.50143e-39  7.17369e-41  5.08534e-40  1.44117e-41  2.07776e-41 -1.18689e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.9275, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 390 K
            Well    Collision, 1/sec
              W1         9.55401e+09
      global relaxation matrix dimension = 726
      setting global matrices ... done, cpu time[sec] = 1.05691, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.42973, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            54.6853      5.04667       0.8711      1.33904     0.114324      15.7432      0.58005
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.132806, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.011043, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.144706, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.91983e-14  1.04242e-43  1.90561e-45
      low eigenvalue method done, cpu time[sec] = 0.145241, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.04e-43 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.34e-45 -4.44e-16         1
         *Z       ---       ---  3.06e+41
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  1.58212e-39  4.87377e-40  2.09821e-41  2.15502e-40  4.98154e-42  3.56343e-43  1.83092e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.1833, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 390 K
            Well    Collision, 1/sec
              W1         1.27387e+10
      global relaxation matrix dimension = 726
      setting global matrices ... done, cpu time[sec] = 0.656599, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.44964, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             41.014        3.785     0.653325      1.00428    0.0857431      11.8074     0.435037
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.1332, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.011056, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.145141, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.00902e-13  7.88426e-44  1.25588e-45
      low eigenvalue method done, cpu time[sec] = 0.145681, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.88e-44 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.53e-45 -4.44e-16         1
         *Z       ---       ---  3.06e+41
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -4.67535e-39 -1.72202e-39 -4.01177e-41 -2.39475e-40 -7.94482e-42  -8.6933e-43 -1.65607e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.7322, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 390 K
            Well    Collision, 1/sec
              W1         1.59233e+10
      global relaxation matrix dimension = 726
      setting global matrices ... done, cpu time[sec] = 0.64707, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.83875, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            32.8112        3.028      0.52266     0.803426    0.0685945      9.44593      0.34803
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.133056, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.011063, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.144976, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -7.02793e-13   6.3435e-44  8.99225e-46
      low eigenvalue method done, cpu time[sec] = 0.145528, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.34e-44 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.04e-45 -4.44e-16         1
         *Z       ---       ---  3.06e+41
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -9.16181e-40 -4.21681e-40 -1.37048e-41 -1.83796e-40  -5.0819e-42 -1.20524e-41 -3.87737e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.8115, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 390 K
            Well    Collision, 1/sec
              W1          1.9108e+10
      global relaxation matrix dimension = 726
      setting global matrices ... done, cpu time[sec] = 1.06175, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.47044, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            27.3427      2.52333      0.43555     0.669522    0.0571621      7.87161     0.290025
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.132843, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.011068, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.144778, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.16689e-12  5.30827e-44  6.79838e-46
      low eigenvalue method done, cpu time[sec] = 0.145377, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.31e-44 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.7e-45 -4.44e-16         1
         *Z       ---       ---  3.06e+41
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -1.55293e-39 -5.09852e-40 -1.85645e-41 -1.86005e-40 -4.28722e-42   3.8647e-42  3.74662e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.873, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 390 K
            Well    Collision, 1/sec
              W1         2.22927e+10
      global relaxation matrix dimension = 726
      setting global matrices ... done, cpu time[sec] = 1.06534, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.47597, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            23.4366      2.16286     0.373329     0.573876    0.0489961      6.74709     0.248593
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.132925, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.011064, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.144875, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.13206e-12  4.56443e-44  5.34203e-46
      low eigenvalue method done, cpu time[sec] = 0.145426, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.56e-44 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.46e-45 -4.44e-16         1
         *Z       ---       ---  3.06e+41
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  2.34749e-39  1.58405e-40  7.44582e-42 -3.26583e-41  2.50787e-44    1.722e-41 -7.34455e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.8854, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 390 K
            Well    Collision, 1/sec
              W1         2.54774e+10
      global relaxation matrix dimension = 726
      setting global matrices ... done, cpu time[sec] = 1.06191, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.44941, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             20.507       1.8925     0.326662     0.502142    0.0428716       5.9037     0.217519
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.132936, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.011076, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.144865, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.46079e-13  4.00395e-44  4.32078e-46
      low eigenvalue method done, cpu time[sec] = 0.1454, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0     4e-44 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.28e-45 -4.44e-16         1
         *Z       ---       ---  3.06e+41
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  2.79105e-39  4.78293e-40  1.76085e-41  1.50117e-40  4.11652e-42  1.58072e-41 -9.72732e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.8516, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 400 K
      Energy reference = 15839 1/cm
      Energy step      = 67 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.3 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.011203
         W1 Well: collisional kernel bandwidth = 38
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.495457
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.697822
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.669712
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 5.10163
         W1 Well: minimal relaxation eigenvalue = 0.0315963
         W1 Well: maximal relaxation eigenvalue = 1.41263
         W1 Well:       grid size = 708
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31596 1/cm
         B1 Barrier:        grid size = 237
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -40 1/cm
         B2 Barrier:        grid size = 234
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 161 1/cm
         B3 Barrier:        grid size = 306
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4663 1/cm
         B4 Barrier:        grid size = 329
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6204 1/cm
         B5 Barrier: nonpositive number of states at -23155 1/cm => truncating
         B5 Barrier:        grid size = 582
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23155 1/cm
         B6 Barrier:        grid size = 214
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1500 1/cm
         B7 Barrier:        grid size = 166
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4716 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 7.0935, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31596 -23155 4.27e+05 5.18e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -40 9.63e+12
         B2    162 8.99e+11
         B3  -4663 1.57e+11
         B4  -6204  2.4e+11
         B5 -23155 2.06e+10
         B6   1501 2.84e+12
         B7   4717 1.08e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1   2.4e+27   5.6e+27  1.97e+21  5.93e+18  4.22e-10  8.42e+30  1.63e+36
          R  4.16e-28         1      2.33  8.21e-07  2.47e-09  1.75e-37   3.5e+03  6.79e+08
         P1  1.79e-28     0.429         1  3.52e-07  1.06e-09  7.53e-38   1.5e+03  2.91e+08
         P2  5.07e-22  1.22e+06  2.84e+06         1   0.00301  2.14e-31  4.27e+09  8.27e+14
         P3  1.69e-19  4.05e+08  9.44e+08       333         1  7.11e-29  1.42e+12  2.75e+17
         P4  2.37e+09   5.7e+36  1.33e+37  4.68e+30  1.41e+28         1     2e+40  3.87e+45
         P5  1.19e-31  0.000286  0.000665  2.34e-10  7.05e-13  5.01e-41         1  1.94e+05
         P6  6.13e-37  1.47e-09  3.43e-09  1.21e-15  3.64e-18  2.58e-46  5.16e-06         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  7.39e+23  1.72e+24  6.06e+17  1.82e+15   1.3e-13  2.59e+27  5.02e+32
          R  1.35e-24         1      2.33  8.21e-07  2.47e-09  1.75e-37   3.5e+03  6.79e+08
         P1  5.81e-25     0.429         1  3.52e-07  1.06e-09  7.53e-38   1.5e+03  2.91e+08
         P2  1.65e-18  1.22e+06  2.84e+06         1   0.00301  2.14e-31  4.27e+09  8.27e+14
         P3  5.49e-16  4.05e+08  9.44e+08       333         1  7.11e-29  1.42e+12  2.75e+17
         P4  7.71e+12   5.7e+36  1.33e+37  4.68e+30  1.41e+28         1     2e+40  3.87e+45
         P5  3.87e-28  0.000286  0.000665  2.34e-10  7.05e-13  5.01e-41         1  1.94e+05
         P6  1.99e-33  1.47e-09  3.43e-09  1.21e-15  3.64e-18  2.58e-46  5.16e-06         1
   MasterEquation::set:  done, cpu time[sec] = 7.09842, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 400 K
            Well    Collision, 1/sec
              W1         6.22552e+08
      global relaxation matrix dimension = 708
      setting global matrices ... done, cpu time[sec] = 0.323659, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.33598, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             894.67      83.5304      14.6012      22.3001      1.91678      264.282      10.0609
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.124193, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010368, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.134732, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.26842e-12  1.68942e-41  8.71166e-43
      low eigenvalue method done, cpu time[sec] = 0.135233, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.69e-41         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.34e-43         0         1
         *Z       ---       ---   5.8e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  6.33685e-39  1.68934e-38  3.95464e-40  4.23756e-39  1.41042e-40 -8.53485e-41  1.14606e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.8598, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 400 K
            Well    Collision, 1/sec
              W1         1.86766e+09
      global relaxation matrix dimension = 708
      setting global matrices ... done, cpu time[sec] = 1.00869, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.32074, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            298.223      27.8435      4.86706      7.43336     0.638926      88.0941      3.35364
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.124045, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.010375, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.134613, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   5.1332e-12   6.2363e-42  2.94079e-43
      low eigenvalue method done, cpu time[sec] = 0.135131, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.24e-42         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.97e-43         0         1
         *Z       ---       ---   5.8e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0   -1.204e-38 -5.33123e-39  1.27037e-40  3.06047e-39  5.88989e-41  4.61171e-41 -3.98851e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.5232, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 400 K
            Well    Collision, 1/sec
              W1         3.11276e+09
      global relaxation matrix dimension = 708
      setting global matrices ... done, cpu time[sec] = 1.00722, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.32565, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            178.934      16.7061      2.92024      4.46002     0.383356      52.8564      2.01218
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.123964, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010372, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.134503, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.04004e-12  3.89991e-42  1.64708e-43
      low eigenvalue method done, cpu time[sec] = 0.135027, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   3.9e-42         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.23e-43         0         1
         *Z       ---       ---   5.8e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.53183e-38  8.27109e-39 -6.11605e-41 -3.51304e-39 -6.45246e-41 -7.39722e-41  4.25323e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.5254, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 400 K
            Well    Collision, 1/sec
              W1         4.35787e+09
      global relaxation matrix dimension = 708
      setting global matrices ... done, cpu time[sec] = 1.00261, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.28306, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             127.81      11.9329      2.08588      3.18573     0.273825      37.7546      1.43727
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.123952, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010347, elapsed time[sec] = 1
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.134466, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.77229e-12  2.85385e-42  1.09378e-43
      low eigenvalue method done, cpu time[sec] = 0.134975, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.85e-42         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.02e-44         0         1
         *Z       ---       ---   5.8e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0   1.3492e-38  6.91052e-39  2.32458e-40  2.07268e-39  4.99105e-41  -3.9572e-41 -2.27823e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.5403, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 400 K
            Well    Collision, 1/sec
              W1         5.60297e+09
      global relaxation matrix dimension = 708
      setting global matrices ... done, cpu time[sec] = 1.00626, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.30185, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            99.4078      9.28116      1.62235      2.47779     0.212975      29.3647      1.11788
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.12392, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010403, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.134513, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -4.3445e-12   2.2562e-42  7.94101e-44
      low eigenvalue method done, cpu time[sec] = 0.135034, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.26e-42         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.13e-44         0         1
         *Z       ---       ---   5.8e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -2.89325e-38 -8.67719e-39 -1.99764e-40 -1.22921e-39 -4.50364e-41 -2.04244e-41  1.79421e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.5313, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 400 K
            Well    Collision, 1/sec
              W1         6.22552e+09
      global relaxation matrix dimension = 708
      setting global matrices ... done, cpu time[sec] = 1.00684, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.33635, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             89.467      8.35304      1.46012      2.23001     0.191678      26.4282      1.00609
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.123706, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010321, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.134205, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -5.0625e-12  2.04359e-42  6.91809e-44
      low eigenvalue method done, cpu time[sec] = 0.134743, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.04e-42         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.46e-44         0         1
         *Z       ---       ---   5.8e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.29779e-38  6.08369e-39  2.20986e-40  2.87346e-39  6.70751e-41  3.35366e-42  1.60396e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.5437, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 400 K
            Well    Collision, 1/sec
              W1         9.33829e+09
      global relaxation matrix dimension = 708
      setting global matrices ... done, cpu time[sec] = 1.00669, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.34469, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            59.6447       5.5687     0.973412      1.48667     0.127785      17.6188     0.670727
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.123645, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010344, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.134161, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   2.4478e-13  1.39281e-42  3.98819e-44
      low eigenvalue method done, cpu time[sec] = 0.134677, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.39e-42         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   4.4e-44         0         1
         *Z       ---       ---   5.8e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.54071e-38  3.78567e-39  6.17552e-41  5.98498e-42  5.95054e-42  6.30817e-41 -2.24555e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.5569, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 400 K
            Well    Collision, 1/sec
              W1          1.2451e+10
      global relaxation matrix dimension = 708
      setting global matrices ... done, cpu time[sec] = 1.0067, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.32431, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            44.7335      4.17652     0.730059        1.115    0.0958389      13.2141     0.503045
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.123865, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010355, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.134405, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.49015e-12   1.0586e-42  2.64696e-44
      low eigenvalue method done, cpu time[sec] = 0.134918, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.06e-42         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.34e-44         0         1
         *Z       ---       ---   5.8e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -1.08378e-38 -3.54521e-39  -9.1647e-41 -1.78734e-40 -8.77162e-42 -2.21456e-41 -5.76581e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.532, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 400 K
            Well    Collision, 1/sec
              W1         1.55638e+10
      global relaxation matrix dimension = 708
      setting global matrices ... done, cpu time[sec] = 1.00612, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.30007, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            35.7868      3.34122     0.584047     0.892003    0.0766711      10.5713     0.402436
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.123805, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.01034, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.134312, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.46868e-13  8.54563e-43  1.90548e-44
      low eigenvalue method done, cpu time[sec] = 0.134825, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.55e-43         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   2.7e-44         0         1
         *Z       ---       ---   5.8e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.46996e-38  2.15406e-39  1.04387e-40  6.27938e-40  1.82373e-41  9.53985e-41  3.95292e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.5151, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 400 K
            Well    Collision, 1/sec
              W1         1.86766e+10
      global relaxation matrix dimension = 708
      setting global matrices ... done, cpu time[sec] = 1.00817, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.29066, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            29.8223      2.78435     0.486706     0.743336    0.0638926      8.80941     0.335364
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.123691, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010354, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.134267, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.92827e-13  7.16846e-43  1.44685e-44
      low eigenvalue method done, cpu time[sec] = 0.134793, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.17e-43         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.26e-44         0         1
         *Z       ---       ---   5.8e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.56791e-39  6.78213e-40  2.79434e-41   1.0026e-40  3.85434e-42  7.23725e-42  1.10281e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.5486, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 400 K
            Well    Collision, 1/sec
              W1         2.17893e+10
      global relaxation matrix dimension = 708
      setting global matrices ... done, cpu time[sec] = 1.00718, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.31738, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             25.562      2.38658     0.417176     0.637145    0.0547651      7.55092     0.287455
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.123656, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010383, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.134234, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -7.33058e-13   6.1755e-43  1.14101e-44
      low eigenvalue method done, cpu time[sec] = 0.134749, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.18e-43         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.95e-44         0         1
         *Z       ---       ---   5.8e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.64052e-39  2.43837e-40  3.53758e-42 -1.79691e-40 -3.65806e-42 -8.80288e-42 -1.14645e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.5292, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 400 K
            Well    Collision, 1/sec
              W1         2.49021e+10
      global relaxation matrix dimension = 708
      setting global matrices ... done, cpu time[sec] = 1.00499, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.33135, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            22.3668      2.08826     0.365029     0.557502    0.0479194      6.60705     0.251523
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.123815, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010347, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.134333, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.85221e-13  5.42526e-43   9.2572e-45
      low eigenvalue method done, cpu time[sec] = 0.134846, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.43e-43         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.71e-44         0         1
         *Z       ---       ---   5.8e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -6.25985e-40  1.83876e-40 -7.62414e-42  4.40222e-41  1.37138e-42 -1.30962e-41 -6.26627e-48

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.5982, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 410 K
      Energy reference = 16117 1/cm
      Energy step      = 68 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.3 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.011851
         W1 Well: collisional kernel bandwidth = 38
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.562379
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.687839
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.645696
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 5.03209
         W1 Well: minimal relaxation eigenvalue = 0.0310981
         W1 Well: maximal relaxation eigenvalue = 2.4848
         W1 Well:       grid size = 702
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31619 1/cm
         B1 Barrier:        grid size = 238
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -66 1/cm
         B2 Barrier:        grid size = 234
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 205 1/cm
         B3 Barrier:        grid size = 305
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4622 1/cm
         B4 Barrier:        grid size = 328
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6186 1/cm
         B5 Barrier: nonpositive number of states at -23119 1/cm => truncating
         B5 Barrier:        grid size = 577
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23118 1/cm
         B6 Barrier:        grid size = 215
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1497 1/cm
         B7 Barrier:        grid size = 168
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4693 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 7.05537, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31619 -23118 4.38e+05 5.49e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -66 1.09e+13
         B2    206 1.03e+12
         B3  -4622 1.82e+11
         B4  -6186 2.76e+11
         B5 -23118 2.38e+10
         B6   1498 3.29e+12
         B7   4694 1.29e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.41e+26  3.23e+26  1.75e+20  6.05e+17  2.13e-10  4.39e+29   6.5e+34
          R  7.08e-27         1      2.29  1.24e-06  4.29e-09  1.51e-36  3.11e+03  4.61e+08
         P1   3.1e-27     0.437         1   5.4e-07  1.87e-09  6.61e-37  1.36e+03  2.01e+08
         P2  5.73e-21  8.09e+05  1.85e+06         1   0.00347  1.22e-30  2.52e+09  3.73e+14
         P3  1.65e-18  2.33e+08  5.34e+08       288         1  3.52e-28  7.26e+11  1.07e+17
         P4  4.69e+09  6.62e+35  1.51e+36  8.18e+29  2.84e+27         1  2.06e+39  3.05e+44
         P5  2.28e-30  0.000321  0.000735  3.97e-10  1.38e-12  4.86e-40         1  1.48e+05
         P6  1.54e-35  2.17e-09  4.97e-09  2.68e-15  9.31e-18  3.28e-45  6.76e-06         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  4.39e+22     1e+23  5.42e+16  1.88e+14  6.63e-14  1.37e+26  2.02e+31
          R  2.28e-23         1      2.29  1.24e-06  4.29e-09  1.51e-36  3.11e+03  4.61e+08
         P1  9.96e-24     0.437         1   5.4e-07  1.87e-09  6.61e-37  1.36e+03  2.01e+08
         P2  1.84e-17  8.09e+05  1.85e+06         1   0.00347  1.22e-30  2.52e+09  3.73e+14
         P3  5.32e-15  2.33e+08  5.34e+08       288         1  3.52e-28  7.26e+11  1.07e+17
         P4  1.51e+13  6.62e+35  1.51e+36  8.18e+29  2.84e+27         1  2.06e+39  3.05e+44
         P5  7.32e-27  0.000321  0.000735  3.97e-10  1.38e-12  4.86e-40         1  1.48e+05
         P6  4.95e-32  2.17e-09  4.97e-09  2.68e-15  9.31e-18  3.28e-45  6.76e-06         1
   MasterEquation::set:  done, cpu time[sec] = 7.05998, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 410 K
            Well    Collision, 1/sec
              W1         6.08942e+08
      global relaxation matrix dimension = 702
      setting global matrices ... done, cpu time[sec] = 0.326215, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.23684, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            973.856      91.9919      16.2795       24.707      2.13768      295.005      11.5919
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.121568, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010172, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.132542, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.53683e-11  2.10431e-40  1.45818e-41
      low eigenvalue method done, cpu time[sec] = 0.133043, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   2.1e-40         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.54e-42         0         1
         *Z       ---       ---  1.21e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.61159e-37  5.46847e-38  2.45686e-40 -1.97914e-39  1.58034e-41  3.41315e-40 -3.82202e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.7211, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 410 K
            Well    Collision, 1/sec
              W1         1.82683e+09
      global relaxation matrix dimension = 702
      setting global matrices ... done, cpu time[sec] = 0.986071, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.20985, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            324.619       30.664       5.4265      8.23567     0.712561       98.335      3.86396
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.121358, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010161, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.132336, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   3.6699e-12  8.04937e-41  5.04004e-42
      low eigenvalue method done, cpu time[sec] = 0.132859, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.05e-41         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   2.5e-42         0         1
         *Z       ---       ---  1.21e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -4.29356e-38  1.00345e-38 -3.55174e-40  1.89129e-39  9.70483e-41 -2.77812e-40 -2.60095e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.3624, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 410 K
            Well    Collision, 1/sec
              W1         3.04471e+09
      global relaxation matrix dimension = 702
      setting global matrices ... done, cpu time[sec] = 0.996553, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.22805, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            194.771      18.3984       3.2559       4.9414     0.427536       59.001      2.31838
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.121415, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010165, elapsed time[sec] = 1
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.132389, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -9.29144e-13   5.1049e-41  2.85607e-42
      low eigenvalue method done, cpu time[sec] = 0.132893, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0   5.1e-41         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.59e-42         0         1
         *Z       ---       ---  1.21e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -3.58289e-38 -1.66641e-38 -5.07425e-40 -4.80564e-39 -1.36639e-40 -8.10746e-41  2.61559e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.4, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 410 K
            Well    Collision, 1/sec
              W1         4.26259e+09
      global relaxation matrix dimension = 702
      setting global matrices ... done, cpu time[sec] = 0.996032, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.22614, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            139.122      13.1417      2.32564      3.52957     0.305383      42.1436      1.65598
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.121304, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.01017, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.132288, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -6.22547e-12  3.76624e-41  1.91171e-42
      low eigenvalue method done, cpu time[sec] = 0.132802, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.77e-41         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.17e-42         0         1
         *Z       ---       ---  1.21e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -7.12119e-38  4.49873e-39  3.28488e-40  8.57026e-39  1.64878e-40 -4.78735e-40   2.4598e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.3877, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 410 K
            Well    Collision, 1/sec
              W1         5.48048e+09
      global relaxation matrix dimension = 702
      setting global matrices ... done, cpu time[sec] = 0.995768, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.23502, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            108.206      10.2213      1.80883      2.74522      0.23752      32.7783      1.28799
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.121124, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010162, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.132093, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.09164e-12  2.99395e-41  1.39627e-42
      low eigenvalue method done, cpu time[sec] = 0.132603, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.99e-41         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.31e-43         0         1
         *Z       ---       ---  1.21e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.09848e-37  4.05936e-38  1.21188e-39  8.86278e-39  2.37177e-40  9.88814e-41   2.2523e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.4047, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 410 K
            Well    Collision, 1/sec
              W1         6.08942e+09
      global relaxation matrix dimension = 702
      setting global matrices ... done, cpu time[sec] = 0.991073, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.23251, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            97.3856      9.19919      1.62795       2.4707     0.213768      29.5005      1.15919
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.121543, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010169, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.132526, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   1.1514e-12  2.71768e-41  1.21948e-42
      low eigenvalue method done, cpu time[sec] = 0.133031, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.72e-41         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.45e-43         0         1
         *Z       ---       ---  1.21e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.06064e-37   3.0212e-38   7.2841e-40  3.67654e-39  1.35752e-40  3.02216e-40  5.86189e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.8149, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 410 K
            Well    Collision, 1/sec
              W1         9.13413e+09
      global relaxation matrix dimension = 702
      setting global matrices ... done, cpu time[sec] = 0.610984, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.64248, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            64.9237      6.13279       1.0853      1.64713     0.142512       19.667     0.772792
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.121031, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010147, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.132001, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.84026e-12  1.86615e-41  7.09883e-43
      low eigenvalue method done, cpu time[sec] = 0.132524, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.87e-41         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   5.8e-43         0         1
         *Z       ---       ---  1.21e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -2.27083e-38  3.26935e-39 -3.13964e-41  3.75095e-40  6.01905e-42 -1.93181e-40    7.877e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.4033, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 410 K
            Well    Collision, 1/sec
              W1         1.21788e+10
      global relaxation matrix dimension = 702
      setting global matrices ... done, cpu time[sec] = 0.993845, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.24208, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            48.6928      4.59959     0.813974      1.23535     0.106884      14.7503     0.579594
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.121217, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010144, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.132181, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.37249e-12  1.42482e-41  4.74398e-43
      low eigenvalue method done, cpu time[sec] = 0.132707, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.42e-41         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.43e-43         0         1
         *Z       ---       ---  1.21e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0   2.0301e-38  1.93863e-38  3.99536e-40  1.59114e-39  4.98307e-41 -3.47264e-40 -5.38955e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.3948, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 410 K
            Well    Collision, 1/sec
              W1         1.52235e+10
      global relaxation matrix dimension = 702
      setting global matrices ... done, cpu time[sec] = 0.981601, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.23843, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            38.9542      3.67967      0.65118      0.98828    0.0855073      11.8002     0.463675
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.121088, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010125, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.132062, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.09247e-12  1.15379e-41  3.43315e-43
      low eigenvalue method done, cpu time[sec] = 0.132568, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.15e-41         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.59e-43         0         1
         *Z       ---       ---  1.21e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.77604e-38 -1.86148e-42 -4.36882e-41 -3.36233e-40 -3.78165e-42  9.20627e-41  7.15349e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.3915, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 410 K
            Well    Collision, 1/sec
              W1         1.82683e+10
      global relaxation matrix dimension = 702
      setting global matrices ... done, cpu time[sec] = 0.991947, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.24241, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            32.4619       3.0664      0.54265     0.823567    0.0712561       9.8335     0.386396
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.121311, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.01015, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.132275, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.50196e-13  9.70068e-42  2.61795e-43
      low eigenvalue method done, cpu time[sec] = 0.132782, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0   9.7e-42         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.02e-43         0         1
         *Z       ---       ---  1.21e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.09946e-38  3.18152e-39  8.53718e-41 -7.51208e-40 -9.15833e-42   2.3889e-40 -1.21614e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.3992, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 410 K
            Well    Collision, 1/sec
              W1          2.1313e+10
      global relaxation matrix dimension = 702
      setting global matrices ... done, cpu time[sec] = 0.996481, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.24418, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            27.8245      2.62834     0.465128     0.705914    0.0610766      8.42872     0.331197
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.121376, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010124, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.132348, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.53583e-13  8.37173e-42   2.0719e-43
      low eigenvalue method done, cpu time[sec] = 0.13288, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.37e-42         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   2.6e-43         0         1
         *Z       ---       ---  1.21e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -4.72026e-38 -1.12499e-38  -3.1251e-40 -2.11682e-39 -6.50975e-41 -2.63019e-40 -1.36619e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.4041, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 410 K
            Well    Collision, 1/sec
              W1         2.43577e+10
      global relaxation matrix dimension = 702
      setting global matrices ... done, cpu time[sec] = 0.99167, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.24671, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            24.3464       2.2998     0.406987     0.617675    0.0534421      7.37513     0.289797
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.12116, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010145, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.132153, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.46458e-13  7.36505e-42  1.68607e-43
      low eigenvalue method done, cpu time[sec] = 0.132668, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.37e-42         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.29e-43         0         1
         *Z       ---       ---  1.21e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -2.17481e-38  -7.2981e-39  -2.6927e-40 -2.32577e-39 -6.21055e-41 -9.22839e-41  1.84696e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.3968, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 420 K
      Energy reference = 16395 1/cm
      Energy step      = 70 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.2 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.009812
         W1 Well: collisional kernel bandwidth = 38
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.476918
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.653354
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.682811
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 4.80661
         W1 Well: minimal relaxation eigenvalue = 0.0306101
         W1 Well: maximal relaxation eigenvalue = 2.68153
         W1 Well:       grid size = 686
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31624 1/cm
         B1 Barrier:        grid size = 235
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -55 1/cm
         B2 Barrier:        grid size = 232
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 155 1/cm
         B3 Barrier:        grid size = 300
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4604 1/cm
         B4 Barrier:        grid size = 323
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6214 1/cm
         B5 Barrier: nonpositive number of states at -23155 1/cm => truncating
         B5 Barrier:        grid size = 565
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23155 1/cm
         B6 Barrier:        grid size = 213
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1485 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4705 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 6.77159, elapsed time[sec] = 1
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31624 -23155 4.27e+05 5.82e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -55 1.22e+13
         B2    156 1.17e+12
         B3  -4604 2.09e+11
         B4  -6214 3.16e+11
         B5 -23155 2.75e+10
         B6   1486  3.8e+12
         B7   4705 1.54e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1   9.3e+24  2.09e+25   1.7e+19  6.76e+16  1.09e-10  2.59e+28  2.96e+33
          R  1.07e-25         1      2.25  1.83e-06  7.26e-09  1.18e-35  2.78e+03  3.18e+08
         P1  4.78e-26     0.444         1  8.12e-07  3.23e-09  5.22e-36  1.24e+03  1.41e+08
         P2  5.88e-20  5.47e+05  1.23e+06         1   0.00398  6.44e-30  1.52e+09  1.74e+14
         P3  1.48e-17  1.38e+08   3.1e+08       252         1  1.62e-27  3.83e+11  4.38e+16
         P4  9.14e+09   8.5e+34  1.91e+35  1.55e+29  6.18e+26         1  2.37e+38  2.71e+43
         P5  3.86e-29  0.000359  0.000809  6.56e-10  2.61e-12  4.22e-39         1  1.14e+05
         P6  3.38e-34  3.14e-09  7.07e-09  5.74e-15  2.28e-17  3.69e-44  8.74e-06         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.98e+21   6.7e+21  5.44e+15  2.16e+13   3.5e-14  8.28e+24  9.47e+29
          R  3.36e-22         1      2.25  1.83e-06  7.26e-09  1.18e-35  2.78e+03  3.18e+08
         P1  1.49e-22     0.444         1  8.12e-07  3.23e-09  5.22e-36  1.24e+03  1.41e+08
         P2  1.84e-16  5.47e+05  1.23e+06         1   0.00398  6.44e-30  1.52e+09  1.74e+14
         P3  4.63e-14  1.38e+08   3.1e+08       252         1  1.62e-27  3.83e+11  4.38e+16
         P4  2.86e+13   8.5e+34  1.91e+35  1.55e+29  6.18e+26         1  2.37e+38  2.71e+43
         P5  1.21e-25  0.000359  0.000809  6.56e-10  2.61e-12  4.22e-39         1  1.14e+05
         P6  1.06e-30  3.14e-09  7.07e-09  5.74e-15  2.28e-17  3.69e-44  8.74e-06         1
   MasterEquation::set:  done, cpu time[sec] = 6.77659, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 420 K
            Well    Collision, 1/sec
              W1         5.96041e+08
      global relaxation matrix dimension = 686
      setting global matrices ... done, cpu time[sec] = 0.303264, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.99856, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1058.06      101.121      18.1115      27.3188      2.37892      328.483      13.3102
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.113843, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.009761, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.123811, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -3.2648e-11  2.53846e-39  2.14022e-40
      low eigenvalue method done, cpu time[sec] = 0.124311, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.54e-39         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.77e-41         0         1
         *Z       ---       ---  2.69e+39
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  3.63346e-37 -6.07043e-38  5.34573e-39   6.3594e-38  1.09727e-39  1.34581e-39 -9.42678e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.3574, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 420 K
            Well    Collision, 1/sec
              W1         1.78812e+09
      global relaxation matrix dimension = 686
      setting global matrices ... done, cpu time[sec] = 0.945366, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.09829, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            352.687      33.7071      6.03717      9.10625     0.792973      109.494      4.43673
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.113461, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.009657, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.123311, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.74026e-12   1.0013e-39  7.56874e-41
      low eigenvalue method done, cpu time[sec] = 0.123856, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0     1e-39         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.07e-41         0         1
         *Z       ---       ---  2.69e+39
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -1.47667e-37 -1.36169e-37 -6.29694e-39 -6.44195e-38 -1.65085e-39  1.98855e-40 -1.54607e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.0978, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 420 K
            Well    Collision, 1/sec
              W1         2.98021e+09
      global relaxation matrix dimension = 686
      setting global matrices ... done, cpu time[sec] = 0.945018, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.11595, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            211.612      20.2243       3.6223      5.46375     0.475784      65.6967      2.66204
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.113572, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.009673, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.123438, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -7.74172e-12  6.42744e-40  4.33824e-41
      low eigenvalue method done, cpu time[sec] = 0.123913, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.43e-40         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.97e-41         0         1
         *Z       ---       ---  2.69e+39
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -3.58513e-37 -5.57036e-38  1.56244e-39  5.28208e-38  9.98986e-40 -1.11675e-39 -8.79021e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.1183, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 420 K
            Well    Collision, 1/sec
              W1         4.17229e+09
      global relaxation matrix dimension = 686
      setting global matrices ... done, cpu time[sec] = 0.943736, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.12697, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            151.152      14.4459      2.58736      3.90268     0.339845      46.9262      1.90146
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.113623, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.009657, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.123482, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.20223e-11  4.77549e-40  2.92635e-41
      low eigenvalue method done, cpu time[sec] = 0.123965, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.78e-40         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.46e-41         0         1
         *Z       ---       ---  2.69e+39
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -2.95765e-38  3.06688e-38  2.60763e-39  5.91439e-38  1.27459e-39 -1.19751e-39  -2.8337e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.1209, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 420 K
            Well    Collision, 1/sec
              W1         5.36437e+09
      global relaxation matrix dimension = 686
      setting global matrices ... done, cpu time[sec] = 0.946265, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.12027, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            117.562      11.2357      2.01239      3.03542     0.264324      36.4982      1.47891
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.113543, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.009647, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.123359, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.70903e-12  3.81441e-40   2.1499e-41
      low eigenvalue method done, cpu time[sec] = 0.123848, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.81e-40         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.17e-41         0         1
         *Z       ---       ---  2.69e+39
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -1.25265e-37 -2.58062e-38 -4.37279e-40 -5.16668e-39 -1.68463e-40   8.9135e-42 -8.90987e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.2639, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 420 K
            Well    Collision, 1/sec
              W1         5.96041e+09
      global relaxation matrix dimension = 686
      setting global matrices ... done, cpu time[sec] = 0.946079, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.1279, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            105.806      10.1121      1.81115      2.73188     0.237892      32.8483      1.33102
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.113715, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.009686, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.123604, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.52148e-12  3.46894e-40  1.88234e-41
      low eigenvalue method done, cpu time[sec] = 0.124089, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.47e-40         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.06e-41         0         1
         *Z       ---       ---  2.69e+39
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -1.96067e-37 -6.31354e-38 -2.99115e-39 -3.67236e-38 -8.99422e-40  4.34475e-41  4.54042e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.1071, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 420 K
            Well    Collision, 1/sec
              W1         8.94062e+09
      global relaxation matrix dimension = 686
      setting global matrices ... done, cpu time[sec] = 0.931833, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.11008, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            70.5375      6.74142      1.20743      1.82125     0.158595      21.8989     0.887346
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.113524, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.009697, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.123381, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.01164e-12  2.39766e-40  1.10628e-41
      low eigenvalue method done, cpu time[sec] = 0.123857, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   2.4e-40         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.34e-42         0         1
         *Z       ---       ---  2.69e+39
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -2.44665e-37 -6.06642e-38 -1.71612e-39 -1.70793e-38 -4.66589e-40 -1.25208e-39  -1.0897e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.0954, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 420 K
            Well    Collision, 1/sec
              W1         1.19208e+10
      global relaxation matrix dimension = 686
      setting global matrices ... done, cpu time[sec] = 0.947145, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.15154, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            52.9031      5.05606     0.905575      1.36594     0.118946      16.4242      0.66551
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.113412, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.009659, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.123227, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -8.86181e-13    1.838e-40  7.44328e-42
      low eigenvalue method done, cpu time[sec] = 0.123702, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.84e-40         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.63e-42         0         1
         *Z       ---       ---  2.69e+39
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  -3.8216e-37  -7.0829e-38 -1.87704e-39 -2.78139e-39 -2.51139e-40 -2.65954e-39 -8.71326e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.1566, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 420 K
            Well    Collision, 1/sec
              W1          1.4901e+10
      global relaxation matrix dimension = 686
      setting global matrices ... done, cpu time[sec] = 0.947291, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.13869, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            42.3225      4.04485      0.72446      1.09275    0.0951567      13.1393     0.532408
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.113419, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.009681, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.123255, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.66018e-13  1.49249e-40   5.4148e-42
      low eigenvalue method done, cpu time[sec] = 0.123747, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.49e-40         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.57e-42         0         1
         *Z       ---       ---  2.69e+39
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  5.82478e-39 -7.39505e-39  1.47171e-40  2.15294e-39  4.33178e-41  4.89628e-40  5.58898e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.1381, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 420 K
            Well    Collision, 1/sec
              W1         1.78812e+10
      global relaxation matrix dimension = 686
      setting global matrices ... done, cpu time[sec] = 0.948146, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.14397, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            35.2687      3.37071     0.603717     0.910625    0.0792973      10.9494     0.443673
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.113465, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.009667, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.12329, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.29019e-12  1.25741e-40  4.14654e-42
      low eigenvalue method done, cpu time[sec] = 0.123768, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.26e-40         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.85e-42         0         1
         *Z       ---       ---  2.69e+39
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -1.12451e-37  -5.9385e-38 -1.28927e-39   -8.232e-39 -2.29398e-40  1.37304e-39  9.76161e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.1486, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 420 K
            Well    Collision, 1/sec
              W1         2.08614e+10
      global relaxation matrix dimension = 686
      setting global matrices ... done, cpu time[sec] = 0.947509, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.15814, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            30.2303      2.88918     0.517471     0.780536    0.0679691      9.38524     0.380291
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.113701, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00967, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.123527, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.77445e-13  1.08687e-40  3.29328e-42
      low eigenvalue method done, cpu time[sec] = 0.124009, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.09e-40         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.33e-42         0         1
         *Z       ---       ---  2.69e+39
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -6.33538e-38 -1.87421e-38 -7.26735e-40  -7.4026e-39 -1.87734e-40 -1.65242e-40   1.1066e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.1617, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 420 K
            Well    Collision, 1/sec
              W1         2.38416e+10
      global relaxation matrix dimension = 686
      setting global matrices ... done, cpu time[sec] = 0.947, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.12579, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            26.4515      2.52803     0.452787     0.682969     0.059473      8.21209     0.332755
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.113444, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.009668, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.123268, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.62014e-12  9.57398e-41  2.68811e-42
      low eigenvalue method done, cpu time[sec] = 0.123745, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.57e-41         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.93e-42         0         1
         *Z       ---       ---  2.69e+39
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  -1.4209e-37 -1.78782e-38 -3.95993e-40  1.34779e-39 -2.57196e-41 -1.37871e-39 -5.91183e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.1276, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 430 K
      Energy reference = 16673 1/cm
      Energy step      = 72 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.1 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.009013
         W1 Well: collisional kernel bandwidth = 37
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.514812
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.629724
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.611535
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 4.56167
         W1 Well: minimal relaxation eigenvalue = 0.0301428
         W1 Well: maximal relaxation eigenvalue = 1.19281
         W1 Well:       grid size = 670
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31567 1/cm
         B1 Barrier:        grid size = 232
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -30 1/cm
         B2 Barrier:        grid size = 229
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 185 1/cm
         B3 Barrier:        grid size = 296
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4638 1/cm
         B4 Barrier:        grid size = 318
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6222 1/cm
         B5 Barrier: nonpositive number of states at -23143 1/cm => truncating
         B5 Barrier:        grid size = 553
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23142 1/cm
         B6 Barrier:        grid size = 211
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1481 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4649 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 6.59989, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31567 -23142 4.31e+05 6.16e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -30 1.38e+13
         B2    186 1.33e+12
         B3  -4638 2.41e+11
         B4  -6222 3.62e+11
         B5 -23142 3.17e+10
         B6   1482 4.38e+12
         B7   4650 1.83e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  6.94e+23  1.54e+24  1.84e+18  8.33e+15  5.77e-11  1.74e+27  1.56e+32
          R  1.44e-24         1      2.21  2.65e-06   1.2e-08  8.32e-35   2.5e+03  2.24e+08
         P1   6.5e-25     0.451         1   1.2e-06  5.42e-09  3.75e-35  1.13e+03  1.01e+08
         P2  5.43e-19  3.77e+05  8.36e+05         1   0.00453  3.14e-29  9.44e+08  8.45e+13
         P3   1.2e-16  8.34e+07  1.85e+08       221         1  6.93e-27  2.08e+11  1.87e+16
         P4  1.73e+10   1.2e+34  2.66e+34  3.19e+28  1.44e+26         1  3.01e+37  2.69e+42
         P5  5.76e-28    0.0004  0.000886  1.06e-09   4.8e-12  3.33e-38         1  8.96e+04
         P6  6.43e-33  4.47e-09  9.89e-09  1.18e-14  5.36e-17  3.71e-43  1.12e-05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.29e+20  5.06e+20  6.06e+14  2.74e+12   1.9e-14  5.72e+23  5.12e+28
          R  4.37e-21         1      2.21  2.65e-06   1.2e-08  8.32e-35   2.5e+03  2.24e+08
         P1  1.97e-21     0.451         1   1.2e-06  5.42e-09  3.75e-35  1.13e+03  1.01e+08
         P2  1.65e-15  3.77e+05  8.36e+05         1   0.00453  3.14e-29  9.44e+08  8.45e+13
         P3  3.65e-13  8.34e+07  1.85e+08       221         1  6.93e-27  2.08e+11  1.87e+16
         P4  5.26e+13   1.2e+34  2.66e+34  3.19e+28  1.44e+26         1  3.01e+37  2.69e+42
         P5  1.75e-24    0.0004  0.000886  1.06e-09   4.8e-12  3.33e-38         1  8.96e+04
         P6  1.95e-29  4.47e-09  9.89e-09  1.18e-14  5.36e-17  3.71e-43  1.12e-05         1
   MasterEquation::set:  done, cpu time[sec] = 6.60537, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 430 K
            Well    Collision, 1/sec
              W1         5.83796e+08
      global relaxation matrix dimension = 670
      setting global matrices ... done, cpu time[sec] = 0.344569, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.5492, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1147.41      110.954      20.1077      30.1482      2.64189       364.89      15.2328
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.106849, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.009084, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.116675, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.32058e-11  2.85972e-38  2.77269e-39
      low eigenvalue method done, cpu time[sec] = 0.117145, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.86e-38  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.62e-40  2.22e-16         1
         *Z       ---       ---  6.43e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  7.19375e-36  3.09802e-36  1.04617e-37  1.11521e-36  2.70234e-38  6.78312e-39  1.98724e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.8484, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 430 K
            Well    Collision, 1/sec
              W1         1.75139e+09
      global relaxation matrix dimension = 670
      setting global matrices ... done, cpu time[sec] = 0.9087, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.96903, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             382.47      36.9848      6.70258      10.0494      0.88063       121.63      5.07759
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.106445, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00899, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.116172, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.85065e-12  1.15833e-38  1.00224e-39
      low eigenvalue method done, cpu time[sec] = 0.116636, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.16e-38  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.49e-40  2.22e-16         1
         *Z       ---       ---  6.43e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -2.08679e-36  -6.8533e-37  -2.0931e-38 -1.95408e-37 -5.49424e-39 -5.75491e-39  5.83352e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.8323, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 430 K
            Well    Collision, 1/sec
              W1         2.91898e+09
      global relaxation matrix dimension = 670
      setting global matrices ... done, cpu time[sec] = 0.909996, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.96377, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            229.482      22.1909      4.02155      6.02964     0.528378       72.978      3.04656
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.106431, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.009036, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.116208, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.80075e-12  7.51363e-39   5.8081e-40
      low eigenvalue method done, cpu time[sec] = 0.11668, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.51e-39  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.26e-40  2.22e-16         1
         *Z       ---       ---  6.43e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  -1.2393e-38 -2.78036e-37 -5.32195e-39 -6.28357e-38 -1.60264e-39  6.90005e-39  1.26496e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.8273, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 430 K
            Well    Collision, 1/sec
              W1         4.08657e+09
      global relaxation matrix dimension = 670
      setting global matrices ... done, cpu time[sec] = 0.908983, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.95933, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            163.916      15.8506      2.87253      4.30688     0.377413      52.1272      2.17611
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.106607, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00899, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.116329, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -1.8703e-12  5.61691e-39  3.94726e-40
      low eigenvalue method done, cpu time[sec] = 0.116797, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.62e-39  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.69e-40  2.22e-16         1
         *Z       ---       ---  6.43e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  8.79543e-37  2.90947e-37  1.17382e-38  1.34531e-37  3.29638e-39  5.14034e-39  2.30532e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.825, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 430 K
            Well    Collision, 1/sec
              W1         5.25417e+09
      global relaxation matrix dimension = 670
      setting global matrices ... done, cpu time[sec] = 0.910762, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.96647, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             127.49      12.3283      2.23419       3.3498     0.293543      40.5433      1.69253
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.10654, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.009014, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.116297, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.82793e-13  4.50532e-39  2.91647e-40
      low eigenvalue method done, cpu time[sec] = 0.116862, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.51e-39  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.36e-40  2.22e-16         1
         *Z       ---       ---  6.43e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  4.09318e-37   1.1479e-37  6.03512e-39  7.44739e-38  1.66915e-39  -4.4675e-40   8.1515e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.8331, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 430 K
            Well    Collision, 1/sec
              W1         5.83796e+09
      global relaxation matrix dimension = 670
      setting global matrices ... done, cpu time[sec] = 0.910329, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.98002, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            114.741      11.0954      2.01077      3.01482     0.264189       36.489      1.52328
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.106448, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.009003, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.11619, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.88373e-13  4.10406e-39  2.55966e-40
      low eigenvalue method done, cpu time[sec] = 0.116655, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   4.1e-39  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.24e-40  2.22e-16         1
         *Z       ---       ---  6.43e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  8.01479e-38 -8.65453e-38 -3.93684e-39 -4.13138e-38 -1.04496e-39  2.43622e-39  1.41966e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.8423, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 430 K
            Well    Collision, 1/sec
              W1         8.75694e+09
      global relaxation matrix dimension = 670
      setting global matrices ... done, cpu time[sec] = 0.91169, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.93489, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             76.494      7.39696      1.34052      2.00988     0.176126       24.326      1.01552
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.106397, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008979, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.116114, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.34764e-13  2.85317e-39  1.51843e-40
      low eigenvalue method done, cpu time[sec] = 0.116572, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.85e-39  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   8.6e-41  2.22e-16         1
         *Z       ---       ---  6.43e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -5.85598e-37 -1.06033e-37 -3.56565e-39 -1.39692e-38 -5.93098e-40 -5.20747e-39 -6.45816e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.7981, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 430 K
            Well    Collision, 1/sec
              W1         1.16759e+10
      global relaxation matrix dimension = 670
      setting global matrices ... done, cpu time[sec] = 0.910294, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.95187, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            57.3705      5.54772      1.00539      1.50741     0.132095      18.2445     0.761639
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.106378, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008951, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.116064, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.65067e-12  2.19506e-39  1.02844e-40
      low eigenvalue method done, cpu time[sec] = 0.116526, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   2.2e-39  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.62e-41  2.22e-16         1
         *Z       ---       ---  6.43e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16   -7.218e-37 -2.77849e-37 -8.90852e-39 -8.27737e-38 -2.21057e-39  1.68454e-41  -4.8939e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.816, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 430 K
            Well    Collision, 1/sec
              W1         1.45949e+10
      global relaxation matrix dimension = 670
      setting global matrices ... done, cpu time[sec] = 0.909681, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.939, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            45.8964      4.43818     0.804309      1.20593     0.105676      14.5956     0.609311
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.106215, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008977, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.115943, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   2.8724e-13  1.78689e-39  7.52008e-41
      low eigenvalue method done, cpu time[sec] = 0.116408, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.79e-39  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.39e-41  2.22e-16         1
         *Z       ---       ---  6.43e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -5.21248e-37  -1.5429e-37 -4.57081e-39 -3.23932e-38 -9.95606e-40 -1.85707e-39  1.28788e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.8025, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 430 K
            Well    Collision, 1/sec
              W1         1.75139e+10
      global relaxation matrix dimension = 670
      setting global matrices ... done, cpu time[sec] = 0.909689, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.93234, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             38.247      3.69848     0.670258      1.00494     0.088063       12.163     0.507759
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.10657, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.009008, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.116308, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   2.2728e-12  1.50825e-39  5.78271e-41
      low eigenvalue method done, cpu time[sec] = 0.116774, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.51e-39  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.55e-41  2.22e-16         1
         *Z       ---       ---  6.43e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  5.88933e-38  2.75197e-38  4.30059e-41 -3.71441e-39 -9.11813e-41 -3.96375e-39  1.44402e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.8005, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 430 K
            Well    Collision, 1/sec
              W1         2.04329e+10
      global relaxation matrix dimension = 670
      setting global matrices ... done, cpu time[sec] = 0.910017, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.93748, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            32.7831      3.17013     0.574506     0.861377    0.0754826      10.4254     0.435222
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.106315, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.009014, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.116067, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.02098e-13  1.30559e-39  4.60879e-41
      low eigenvalue method done, cpu time[sec] = 0.116526, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.31e-39  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.94e-41  2.22e-16         1
         *Z       ---       ---  6.43e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  1.85431e-37  -1.6785e-38 -2.41579e-40 -1.22024e-38 -2.53268e-40   1.9588e-39 -2.44697e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.8039, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 430 K
            Well    Collision, 1/sec
              W1         2.33518e+10
      global relaxation matrix dimension = 670
      setting global matrices ... done, cpu time[sec] = 0.910844, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.09483, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            28.6852      2.77386     0.502693     0.753704    0.0660473      9.12225      0.38082
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.106442, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008999, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.116173, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.81019e-13   1.1514e-39  3.77315e-41
      low eigenvalue method done, cpu time[sec] = 0.116633, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.15e-39  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.47e-41  2.22e-16         1
         *Z       ---       ---  6.43e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  7.16764e-39 -2.20801e-39 -5.90175e-40 -8.89125e-39 -2.12917e-40 -1.33914e-39 -8.53906e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.9647, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 440 K
      Energy reference = 16951 1/cm
      Energy step      = 73 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.009591
         W1 Well: collisional kernel bandwidth = 38
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.46148
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.619981
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.648619
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 4.38134
         W1 Well: minimal relaxation eigenvalue = 0.0296836
         W1 Well: maximal relaxation eigenvalue = 1.34497
         W1 Well:       grid size = 665
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31593 1/cm
         B1 Barrier:        grid size = 233
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -57 1/cm
         B2 Barrier:        grid size = 230
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 161 1/cm
         B3 Barrier:        grid size = 296
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4656 1/cm
         B4 Barrier:        grid size = 317
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6189 1/cm
         B5 Barrier: nonpositive number of states at -23199 1/cm => truncating
         B5 Barrier:        grid size = 550
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23198 1/cm
         B6 Barrier:        grid size = 212
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1475 1/cm
         B7 Barrier:        grid size = 168
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4687 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 6.44086, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31593 -23198 4.14e+05 6.52e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -57 1.55e+13
         B2    162 1.51e+12
         B3  -4656 2.77e+11
         B4  -6189 4.13e+11
         B5 -23198 3.64e+10
         B6   1476 5.03e+12
         B7   4688 2.16e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  5.96e+22   1.3e+23  2.25e+17  1.15e+15  3.21e-11  1.34e+26  9.53e+30
          R  1.68e-23         1      2.18  3.78e-06  1.94e-08  5.38e-34  2.26e+03   1.6e+08
         P1  7.69e-24     0.458         1  1.73e-06  8.88e-09  2.47e-34  1.03e+03  7.33e+07
         P2  4.44e-18  2.65e+05  5.77e+05         1   0.00513  1.42e-28  5.97e+08  4.23e+13
         P3  8.66e-16  5.16e+07  1.13e+08       195         1  2.78e-26  1.16e+11  8.26e+15
         P4  3.12e+10  1.86e+33  4.06e+33  7.03e+27   3.6e+25         1  4.19e+36  2.97e+41
         P5  7.44e-27  0.000443  0.000967  1.68e-09  8.59e-12  2.38e-37         1  7.09e+04
         P6  1.05e-31  6.25e-09  1.36e-08  2.36e-14  1.21e-16  3.36e-42  1.41e-05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.97e+19   4.3e+19  7.46e+13  3.82e+11  1.06e-14  4.45e+22  3.16e+27
          R  5.07e-20         1      2.18  3.78e-06  1.94e-08  5.38e-34  2.26e+03   1.6e+08
         P1  2.32e-20     0.458         1  1.73e-06  8.88e-09  2.47e-34  1.03e+03  7.33e+07
         P2  1.34e-14  2.65e+05  5.77e+05         1   0.00513  1.42e-28  5.97e+08  4.23e+13
         P3  2.62e-12  5.16e+07  1.13e+08       195         1  2.78e-26  1.16e+11  8.26e+15
         P4  9.42e+13  1.86e+33  4.06e+33  7.03e+27   3.6e+25         1  4.19e+36  2.97e+41
         P5  2.25e-23  0.000443  0.000967  1.68e-09  8.59e-12  2.38e-37         1  7.09e+04
         P6  3.17e-28  6.25e-09  1.36e-08  2.36e-14  1.21e-16  3.36e-42  1.41e-05         1
   MasterEquation::set:  done, cpu time[sec] = 6.45346, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 440 K
            Well    Collision, 1/sec
              W1         5.72157e+08
      global relaxation matrix dimension = 665
      setting global matrices ... done, cpu time[sec] = 0.334799, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.76986, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1242.16      121.533      22.2792      33.2085      2.92807      404.404      17.3781
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.104486, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008973, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.113611, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.55373e-11  2.93455e-37   3.1628e-38
      low eigenvalue method done, cpu time[sec] = 0.11414, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.93e-37  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.71e-39  2.22e-16         1
         *Z       ---       ---  1.66e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -2.96953e-36  3.88771e-38  7.90215e-38  1.33297e-36  3.08058e-38  7.70458e-39 -1.68051e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.0652, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 440 K
            Well    Collision, 1/sec
              W1         1.71647e+09
      global relaxation matrix dimension = 665
      setting global matrices ... done, cpu time[sec] = 0.889874, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.95238, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            414.053      40.5109      7.42639      11.0695     0.976023      134.801      5.79272
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.104282, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008882, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.113309, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.61723e-11  1.21695e-37  1.16764e-38
      low eigenvalue method done, cpu time[sec] = 0.113756, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.22e-37  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.61e-39  2.22e-16         1
         *Z       ---       ---  1.66e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  2.43411e-36   2.3125e-36  3.18112e-38  6.34919e-38  3.70111e-39 -2.68418e-38  1.95768e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.7536, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 440 K
            Well    Collision, 1/sec
              W1         2.86079e+09
      global relaxation matrix dimension = 665
      setting global matrices ... done, cpu time[sec] = 0.889013, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.97061, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            248.432      24.3066      4.45584      6.64171     0.585614      80.8807      3.47563
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.104277, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008908, elapsed time[sec] = 1
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.113334, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.42814e-11  7.96817e-38  6.83893e-39
      low eigenvalue method done, cpu time[sec] = 0.113777, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.97e-38  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.37e-39  2.22e-16         1
         *Z       ---       ---  1.66e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  2.95974e-36  1.07101e-36  1.25561e-38 -3.31163e-37 -6.12971e-39  1.22061e-38  3.53207e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.7728, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 440 K
            Well    Collision, 1/sec
              W1          4.0051e+09
      global relaxation matrix dimension = 665
      setting global matrices ... done, cpu time[sec] = 0.888031, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.97225, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            177.451      17.3618      3.18274      4.74408     0.418296      57.7719      2.48259
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.10419, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008878, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.113213, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.60698e-12  5.98979e-38  4.68163e-39
      low eigenvalue method done, cpu time[sec] = 0.113672, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.99e-38  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.78e-39  2.22e-16         1
         *Z       ---       ---  1.66e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  5.92033e-36  1.19103e-36  4.61286e-38  3.58086e-37  1.02247e-38   2.5422e-38 -1.26888e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.7756, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 440 K
            Well    Collision, 1/sec
              W1         5.14941e+09
      global relaxation matrix dimension = 665
      setting global matrices ... done, cpu time[sec] = 0.886669, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.99432, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            138.018      13.5036      2.47546      3.68984     0.325341      44.9337      1.93091
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.104192, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008942, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.113282, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.96579e-13   4.8227e-38  3.47822e-39
      low eigenvalue method done, cpu time[sec] = 0.113725, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.82e-38  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.43e-39  2.22e-16         1
         *Z       ---       ---  1.66e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16    2.504e-36  3.45218e-38  1.90489e-40 -6.83613e-38 -8.11329e-40  2.29469e-38 -5.03838e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.7956, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 440 K
            Well    Collision, 1/sec
              W1         5.72157e+09
      global relaxation matrix dimension = 665
      setting global matrices ... done, cpu time[sec] = 0.887391, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.97438, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            124.216      12.1533      2.22792      3.32085     0.292807      40.4404      1.73781
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.104155, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008905, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.113204, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.05882e-11  4.39979e-38  3.05981e-39
      low eigenvalue method done, cpu time[sec] = 0.113651, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   4.4e-38  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.31e-39  2.22e-16         1
         *Z       ---       ---  1.66e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  6.13062e-36  1.18851e-36  3.85998e-38  2.26112e-37   6.7097e-39  2.05336e-38  -7.6406e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.7795, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 440 K
            Well    Collision, 1/sec
              W1         8.58236e+09
      global relaxation matrix dimension = 665
      setting global matrices ... done, cpu time[sec] = 0.888665, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.97783, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            82.8107      8.10219      1.48528       2.2139     0.195205      26.9602      1.15854
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.104281, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008852, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.113277, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.29979e-12  3.07511e-38  1.83167e-39
      low eigenvalue method done, cpu time[sec] = 0.113719, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.08e-38  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.13e-40  2.22e-16         1
         *Z       ---       ---  1.66e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -2.56742e-36 -1.35073e-36 -3.41995e-38 -2.71068e-37 -7.57012e-39  1.78727e-38  4.14658e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.7856, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 440 K
            Well    Collision, 1/sec
              W1         1.14431e+10
      global relaxation matrix dimension = 665
      setting global matrices ... done, cpu time[sec] = 0.887193, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.97317, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             62.108      6.07664      1.11396      1.66043     0.146403      20.2202     0.868907
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.104131, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008842, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.11312, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.37134e-13  2.37369e-38  1.24866e-39
      low eigenvalue method done, cpu time[sec] = 0.113564, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.37e-38  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.05e-40  2.22e-16         1
         *Z       ---       ---  1.66e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -4.41382e-36  -1.2168e-36 -3.60758e-38 -2.58489e-37 -7.38848e-39 -1.88557e-38  1.37118e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.7779, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 440 K
            Well    Collision, 1/sec
              W1         1.43039e+10
      global relaxation matrix dimension = 665
      setting global matrices ... done, cpu time[sec] = 0.888359, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.12293, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            49.6864      4.86131     0.891167      1.32834     0.117123      16.1761     0.695126
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.104269, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008853, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.113267, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.95617e-12  1.93682e-38  9.17628e-40
      low eigenvalue method done, cpu time[sec] = 0.113711, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.94e-38  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.75e-40  2.22e-16         1
         *Z       ---       ---  1.66e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  2.87515e-36  4.17728e-37  8.58982e-39 -4.38152e-38  1.36882e-40  1.88859e-38  2.14234e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.9338, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 440 K
            Well    Collision, 1/sec
              W1         1.71647e+10
      global relaxation matrix dimension = 665
      setting global matrices ... done, cpu time[sec] = 0.88362, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.9771, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            41.4053      4.05109     0.742639      1.10695    0.0976023      13.4801     0.579272
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.104146, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008845, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.113136, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.03834e-12  1.63765e-38  7.08511e-40
      low eigenvalue method done, cpu time[sec] = 0.113576, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.64e-38  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.86e-40  2.22e-16         1
         *Z       ---       ---  1.66e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -5.45972e-37  -2.3524e-37 -5.71439e-39 -3.88979e-38  -1.0104e-39   3.4668e-39  2.04484e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.7845, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 440 K
            Well    Collision, 1/sec
              W1         2.00255e+10
      global relaxation matrix dimension = 665
      setting global matrices ... done, cpu time[sec] = 0.890423, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.97744, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            35.4903      3.47237     0.636548     0.948815    0.0836591      11.5544     0.496518
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.104373, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008813, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.11333, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.10259e-14  1.41955e-38  5.66618e-40
      low eigenvalue method done, cpu time[sec] = 0.113771, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.42e-38  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.21e-40  2.22e-16         1
         *Z       ---       ---  1.66e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -1.54333e-36 -2.58123e-37 -1.18379e-38 -6.50141e-38 -2.03265e-39 -8.74361e-39  1.56647e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.2051, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 440 K
            Well    Collision, 1/sec
              W1         2.28863e+10
      global relaxation matrix dimension = 665
      setting global matrices ... done, cpu time[sec] = 0.544001, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.36575, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             31.054      3.03832      0.55698     0.830213    0.0732017      10.1101     0.434454
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.104152, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008837, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.113132, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.47634e-13   1.2533e-38  4.65248e-40
      low eigenvalue method done, cpu time[sec] = 0.113585, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.25e-38  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.72e-40  2.22e-16         1
         *Z       ---       ---  1.66e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -4.04799e-37 -2.38769e-37 -8.87345e-39 -9.58428e-38  -2.5067e-39  5.83825e-39  1.99894e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.8163, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 450 K
      Energy reference = 17229 1/cm
      Energy step      = 75 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.009149
         W1 Well: collisional kernel bandwidth = 37
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.496916
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.592566
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.589436
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 4.17704
         W1 Well: minimal relaxation eigenvalue = 0.0292529
         W1 Well: maximal relaxation eigenvalue = 1.35157
         W1 Well:       grid size = 651
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31596 1/cm
         B1 Barrier:        grid size = 230
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -21 1/cm
         B2 Barrier:        grid size = 227
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 203 1/cm
         B3 Barrier:        grid size = 292
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4671 1/cm
         B4 Barrier:        grid size = 313
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6246 1/cm
         B5 Barrier: nonpositive number of states at -23121 1/cm => truncating
         B5 Barrier:        grid size = 538
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23121 1/cm
         B6 Barrier:        grid size = 210
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1478 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4703 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 6.17999, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31596 -23121 4.38e+05  6.9e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -21 1.73e+13
         B2    204 1.72e+12
         B3  -4671 3.18e+11
         B4  -6246 4.71e+11
         B5 -23121 4.18e+10
         B6   1479 5.77e+12
         B7   4704 2.55e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  5.58e+21   1.2e+22  2.96e+16  1.71e+14  1.79e-11  1.14e+25  6.47e+29
          R  1.79e-22         1      2.15  5.31e-06  3.06e-08  3.21e-33  2.05e+03  1.16e+08
         P1  8.34e-23     0.465         1  2.47e-06  1.42e-08  1.49e-33       951   5.4e+07
         P2  3.38e-17  1.88e+05  4.05e+05         1   0.00577  6.04e-28  3.85e+08  2.19e+13
         P3  5.85e-15  3.26e+07  7.02e+07       173         1  1.05e-25  6.68e+10  3.79e+15
         P4  5.59e+10  3.12e+32  6.71e+32  1.66e+27  9.56e+24         1  6.38e+35  3.62e+40
         P5  8.77e-26  0.000489   0.00105   2.6e-09   1.5e-11  1.57e-36         1  5.68e+04
         P6  1.54e-30  8.61e-09  1.85e-08  4.57e-14  2.64e-16  2.76e-41  1.76e-05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1   1.9e+18  4.08e+18  1.01e+13  5.81e+10  6.08e-15  3.88e+21   2.2e+26
          R  5.27e-19         1      2.15  5.31e-06  3.06e-08  3.21e-33  2.05e+03  1.16e+08
         P1  2.45e-19     0.465         1  2.47e-06  1.42e-08  1.49e-33       951   5.4e+07
         P2  9.93e-14  1.88e+05  4.05e+05         1   0.00577  6.04e-28  3.85e+08  2.19e+13
         P3  1.72e-11  3.26e+07  7.02e+07       173         1  1.05e-25  6.68e+10  3.79e+15
         P4  1.65e+14  3.12e+32  6.71e+32  1.66e+27  9.56e+24         1  6.38e+35  3.62e+40
         P5  2.58e-22  0.000489   0.00105   2.6e-09   1.5e-11  1.57e-36         1  5.68e+04
         P6  4.54e-27  8.61e-09  1.85e-08  4.57e-14  2.64e-16  2.76e-41  1.76e-05         1
   MasterEquation::set:  done, cpu time[sec] = 6.19186, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 450 K
            Well    Collision, 1/sec
              W1         5.61079e+08
      global relaxation matrix dimension = 651
      setting global matrices ... done, cpu time[sec] = 0.465185, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.54167, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1342.46      132.894      24.6374      36.5133      3.23899      447.209      19.7659
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.098399, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008341, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.107453, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -8.92758e-11  2.77559e-36  3.26124e-37
      low eigenvalue method done, cpu time[sec] = 0.107889, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.78e-36 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.12e-38 -4.44e-16         1
         *Z       ---       ---  4.51e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  4.47508e-36  4.14944e-36  2.83776e-38  2.48239e-37   1.6764e-38 -4.69988e-38 -2.28304e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.87763, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 450 K
            Well    Collision, 1/sec
              W1         1.68324e+09
      global relaxation matrix dimension = 651
      setting global matrices ... done, cpu time[sec] = 0.85571, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.80557, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            447.486      44.2981      8.21245      12.1711      1.07966       149.07      6.58864
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.098217, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008335, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.10725, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.95573e-11  1.17606e-36  1.22874e-37
      low eigenvalue method done, cpu time[sec] = 0.107682, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.18e-36 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.44e-38 -4.44e-16         1
         *Z       ---       ---  4.51e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -1.49274e-36  4.34224e-36 -2.40807e-39 -4.07409e-37 -8.49524e-39 -6.50128e-38  8.75564e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.4961, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 450 K
            Well    Collision, 1/sec
              W1          2.8054e+09
      global relaxation matrix dimension = 651
      setting global matrices ... done, cpu time[sec] = 0.856678, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.77734, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            268.491      26.5789      4.92747      7.30265     0.647798      89.4418      3.95318
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.098128, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008366, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.107187, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.34487e-12   7.7671e-37  7.27141e-38
      low eigenvalue method done, cpu time[sec] = 0.107621, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.77e-37 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.27e-38 -4.44e-16         1
         *Z       ---       ---  4.51e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  -4.9778e-36 -6.72964e-38  -3.8483e-38 -4.75702e-37 -1.36054e-38  2.97207e-39 -1.60989e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.4558, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 450 K
            Well    Collision, 1/sec
              W1         3.92755e+09
      global relaxation matrix dimension = 651
      setting global matrices ... done, cpu time[sec] = 0.857267, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.80192, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             191.78      18.9849      3.51962      5.21618     0.462713       63.887       2.8237
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.098059, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.008328, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.107083, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -9.40789e-12  5.86872e-37  5.01294e-38
      low eigenvalue method done, cpu time[sec] = 0.107515, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.87e-37 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.72e-38 -4.44e-16         1
         *Z       ---       ---  4.51e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  2.08765e-35  4.57824e-36  1.20664e-37  3.64143e-37  1.55487e-38  4.88101e-38  3.42448e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.4966, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 450 K
            Well    Collision, 1/sec
              W1         5.04971e+09
      global relaxation matrix dimension = 651
      setting global matrices ... done, cpu time[sec] = 0.855777, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.80478, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            149.162       14.766      2.73748      4.05703     0.359888      49.6899      2.19621
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.098202, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008319, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.107221, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.00016e-13  4.74201e-37  3.74446e-38
      low eigenvalue method done, cpu time[sec] = 0.107663, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.74e-37 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.39e-38 -4.44e-16         1
         *Z       ---       ---  4.51e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  1.10987e-35  3.25572e-36  7.38988e-38  3.21427e-37  1.08884e-38  5.22187e-39  2.02026e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.4936, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 450 K
            Well    Collision, 1/sec
              W1         5.61079e+09
      global relaxation matrix dimension = 651
      setting global matrices ... done, cpu time[sec] = 0.843873, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.8087, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            134.246      13.2894      2.46374      3.65133     0.323899      44.7209      1.97659
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.098183, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008343, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.107222, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.42786e-12   4.3323e-37  3.30155e-38
      low eigenvalue method done, cpu time[sec] = 0.10766, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.33e-37 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.27e-38 -4.44e-16         1
         *Z       ---       ---  4.51e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -7.62553e-36 -1.73511e-36 -2.81811e-38  1.13277e-37  9.01109e-40  -4.7939e-38  1.88169e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.4826, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 450 K
            Well    Collision, 1/sec
              W1         8.41619e+09
      global relaxation matrix dimension = 651
      setting global matrices ... done, cpu time[sec] = 0.857124, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.80881, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            89.4971      8.85963      1.64249      2.43422     0.215933      29.8139      1.31773
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.098011, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008356, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.10706, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.26906e-12  3.04319e-37  1.99403e-38
      low eigenvalue method done, cpu time[sec] = 0.107503, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.04e-37 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   8.9e-39 -4.44e-16         1
         *Z       ---       ---  4.51e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  1.22348e-35  4.77386e-36  1.08781e-37  7.17242e-37   2.0724e-38 -4.58318e-38  5.76665e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.5003, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 450 K
            Well    Collision, 1/sec
              W1         1.12216e+10
      global relaxation matrix dimension = 651
      setting global matrices ... done, cpu time[sec] = 0.855621, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.83185, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            67.1228      6.64472      1.23187      1.82566     0.161949      22.3604     0.988296
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.098195, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008329, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.107217, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.81348e-12  2.35651e-37  1.36801e-38
      low eigenvalue method done, cpu time[sec] = 0.107662, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.36e-37 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.89e-39 -4.44e-16         1
         *Z       ---       ---  4.51e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  1.07133e-35  2.65611e-36  8.31434e-38  6.01364e-37  1.71677e-38  7.43668e-38   1.7129e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.5218, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 450 K
            Well    Collision, 1/sec
              W1          1.4027e+10
      global relaxation matrix dimension = 651
      setting global matrices ... done, cpu time[sec] = 0.857646, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.80025, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            53.6983      5.31578     0.985494      1.46053      0.12956      17.8884     0.790637
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.098063, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008335, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.107099, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.53079e-12  1.92711e-37  1.01032e-38
      low eigenvalue method done, cpu time[sec] = 0.10754, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.93e-37 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.64e-39 -4.44e-16         1
         *Z       ---       ---  4.51e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -5.99827e-36  8.43933e-38 -2.06322e-38 -1.09973e-37 -4.08843e-39  -1.1139e-37  1.20526e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.4929, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 450 K
            Well    Collision, 1/sec
              W1         1.68324e+10
      global relaxation matrix dimension = 651
      setting global matrices ... done, cpu time[sec] = 0.855641, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.79854, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            44.7486      4.42981     0.821245      1.21711     0.107966       14.907     0.658864
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.098068, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008325, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.107092, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.81504e-13  1.63219e-37  7.83231e-39
      low eigenvalue method done, cpu time[sec] = 0.107528, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.63e-37 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.77e-39 -4.44e-16         1
         *Z       ---       ---  4.51e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -1.67734e-35 -4.36639e-36 -1.40182e-37 -1.05365e-36 -2.98181e-38 -4.50852e-38 -6.02651e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.494, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 450 K
            Well    Collision, 1/sec
              W1         1.96378e+10
      global relaxation matrix dimension = 651
      setting global matrices ... done, cpu time[sec] = 0.857258, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.80704, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            38.3559      3.79698     0.703924      1.04324    0.0925425      12.7774     0.564741
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.098077, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008327, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.1071, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.81389e-13  1.41669e-37  6.28499e-39
      low eigenvalue method done, cpu time[sec] = 0.107535, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.42e-37 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.14e-39 -4.44e-16         1
         *Z       ---       ---  4.51e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  2.71001e-36   3.1752e-37  1.34084e-38  5.20069e-38  1.67431e-39  1.46131e-39 -2.12839e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.9826, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 450 K
            Well    Collision, 1/sec
              W1         2.24432e+10
      global relaxation matrix dimension = 651
      setting global matrices ... done, cpu time[sec] = 0.527189, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.1628, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            33.5614      3.32236     0.615934     0.912832    0.0809747      11.1802     0.494148
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.098003, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008371, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.107061, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.14624e-13  1.25213e-37  5.17566e-39
      low eigenvalue method done, cpu time[sec] = 0.107564, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.25e-37 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.66e-39 -4.44e-16         1
         *Z       ---       ---  4.51e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -4.41627e-36 -4.57544e-37 -1.92855e-38 -8.55483e-39 -1.84112e-39 -4.99833e-38 -1.85252e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.5139, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 460 K
      Energy reference = 17507 1/cm
      Energy step      = 77 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -87.9 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.009252
         W1 Well: collisional kernel bandwidth = 37
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.430973
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.566465
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.591042
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 3.99412
         W1 Well: minimal relaxation eigenvalue = 0.0288554
         W1 Well: maximal relaxation eigenvalue = 2.30729
         W1 Well:       grid size = 638
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31619 1/cm
         B1 Barrier:        grid size = 228
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -49 1/cm
         B2 Barrier:        grid size = 225
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 182 1/cm
         B3 Barrier:        grid size = 288
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4669 1/cm
         B4 Barrier:        grid size = 308
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6208 1/cm
         B5 Barrier: nonpositive number of states at -23149 1/cm => truncating
         B5 Barrier:        grid size = 528
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23149 1/cm
         B6 Barrier:        grid size = 208
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1491 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4648 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 5.90373, elapsed time[sec] = 1
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31619 -23149 4.29e+05  7.3e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -49 1.94e+13
         B2    183 1.94e+12
         B3  -4669 3.65e+11
         B4  -6208 5.37e+11
         B5 -23149 4.79e+10
         B6   1492 6.62e+12
         B7   4649    3e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1   5.7e+20  1.21e+21  4.19e+15  2.71e+13  1.01e-11  1.06e+24  4.87e+28
          R  1.75e-21         1      2.12  7.35e-06  4.75e-08  1.77e-32  1.86e+03  8.54e+07
         P1  8.26e-22     0.471         1  3.46e-06  2.24e-08  8.32e-33       877  4.02e+07
         P2  2.39e-16  1.36e+05  2.89e+05         1   0.00647  2.41e-27  2.53e+08  1.16e+13
         P3  3.69e-14  2.11e+07  4.47e+07       155         1  3.72e-25  3.92e+10   1.8e+15
         P4  9.92e+10  5.66e+31   1.2e+32  4.16e+26  2.69e+24         1  1.05e+35  4.83e+39
         P5  9.42e-25  0.000537   0.00114  3.95e-09  2.55e-11   9.5e-36         1  4.59e+04
         P6  2.05e-29  1.17e-08  2.49e-08   8.6e-14  5.56e-16  2.07e-40  2.18e-05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.02e+17  4.28e+17  1.48e+12  9.58e+09  3.56e-15  3.75e+20  1.72e+25
          R  4.96e-18         1      2.12  7.35e-06  4.75e-08  1.77e-32  1.86e+03  8.54e+07
         P1  2.34e-18     0.471         1  3.46e-06  2.24e-08  8.32e-33       877  4.02e+07
         P2  6.75e-13  1.36e+05  2.89e+05         1   0.00647  2.41e-27  2.53e+08  1.16e+13
         P3  1.04e-10  2.11e+07  4.47e+07       155         1  3.72e-25  3.92e+10   1.8e+15
         P4  2.81e+14  5.66e+31   1.2e+32  4.16e+26  2.69e+24         1  1.05e+35  4.83e+39
         P5  2.66e-21  0.000537   0.00114  3.95e-09  2.55e-11   9.5e-36         1  4.59e+04
         P6   5.8e-26  1.17e-08  2.49e-08   8.6e-14  5.56e-16  2.07e-40  2.18e-05         1
   MasterEquation::set:  done, cpu time[sec] = 5.91531, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 460 K
            Well    Collision, 1/sec
              W1         5.50522e+08
      global relaxation matrix dimension = 638
      setting global matrices ... done, cpu time[sec] = 0.602217, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.45351, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             1448.5      145.085      27.1942       40.074      3.57625      493.494      22.4163
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.092974, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007972, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.10108, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.78812e-12  2.43337e-35  3.07598e-36
      low eigenvalue method done, cpu time[sec] = 0.101484, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.43e-35         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.02e-37         0         1
         *Z       ---       ---  1.29e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -5.66882e-35 -1.17073e-35 -2.01578e-37  3.40137e-36  3.56429e-38 -2.57726e-37 -1.15545e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.83363, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 460 K
            Well    Collision, 1/sec
              W1         1.65157e+09
      global relaxation matrix dimension = 638
      setting global matrices ... done, cpu time[sec] = 0.820569, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.76744, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            482.832      48.3616      9.06474       13.358      1.19208      164.498       7.4721
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.0929, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007982, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.101016, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.74931e-11  1.05189e-35  1.18185e-36
      low eigenvalue method done, cpu time[sec] = 0.101421, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.05e-35         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.04e-37         0         1
         *Z       ---       ---  1.29e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.52364e-34  7.41414e-35  2.45652e-36  2.08705e-35  5.58746e-37  4.15926e-37  3.66435e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.3265, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 460 K
            Well    Collision, 1/sec
              W1         2.75261e+09
      global relaxation matrix dimension = 638
      setting global matrices ... done, cpu time[sec] = 0.818468, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.78285, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            289.699       29.017      5.43884       8.0148      0.71525      98.6989      4.48326
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.092848, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.007976, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.100959, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.51502e-12  7.00346e-36  7.06396e-37
      low eigenvalue method done, cpu time[sec] = 0.101365, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0     7e-36         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.02e-37         0         1
         *Z       ---       ---  1.29e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.03167e-34  3.37597e-35  7.71884e-37  5.22824e-36  1.57065e-37  1.48072e-37  1.06187e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.3461, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 460 K
            Well    Collision, 1/sec
              W1         3.85365e+09
      global relaxation matrix dimension = 638
      setting global matrices ... done, cpu time[sec] = 0.81762, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.78534, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            206.928      20.7264      3.88489      5.72486     0.510893      70.4992      3.20233
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.092834, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007961, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.100934, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -7.72389e-12  5.31743e-36  4.90335e-37
      low eigenvalue method done, cpu time[sec] = 0.101372, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.32e-36         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.53e-37         0         1
         *Z       ---       ---  1.29e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  -3.8961e-35 -5.82096e-36 -3.53795e-37 -3.61342e-36 -9.54824e-38 -4.02631e-37 -1.05537e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.3525, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 460 K
            Well    Collision, 1/sec
              W1          4.9547e+09
      global relaxation matrix dimension = 638
      setting global matrices ... done, cpu time[sec] = 0.819998, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.7831, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            160.944      16.1205      3.02158      4.45267     0.397361      54.8327       2.4907
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.092914, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007988, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.101039, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -7.60836e-12  4.31105e-36  3.68181e-37
      low eigenvalue method done, cpu time[sec] = 0.101451, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.31e-36         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.24e-37         0         1
         *Z       ---       ---  1.29e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -1.04379e-34 -3.56622e-35 -1.05892e-36 -8.49869e-36 -2.36738e-37 -9.99831e-38 -7.18691e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.3498, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 460 K
            Well    Collision, 1/sec
              W1         5.50522e+09
      global relaxation matrix dimension = 638
      setting global matrices ... done, cpu time[sec] = 0.819119, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.7854, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             144.85      14.5085      2.71942       4.0074     0.357625      49.3494      2.24163
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.092878, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007994, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.101009, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.05168e-12  3.94387e-36  3.25353e-37
      low eigenvalue method done, cpu time[sec] = 0.101418, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.94e-36         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.14e-37         0         1
         *Z       ---       ---  1.29e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  9.12048e-36  6.22222e-36  3.27544e-37  4.42751e-36  1.00355e-37  5.94888e-38  3.27316e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.3482, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 460 K
            Well    Collision, 1/sec
              W1         8.25783e+09
      global relaxation matrix dimension = 638
      setting global matrices ... done, cpu time[sec] = 0.816325, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.79486, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            96.5664      9.67233      1.81295       2.6716     0.238417      32.8996      1.49442
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.093058, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007971, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.101165, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   3.1649e-12  2.78369e-36  1.98211e-37
      low eigenvalue method done, cpu time[sec] = 0.101577, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.78e-36         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.03e-38         0         1
         *Z       ---       ---  1.29e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0   1.0893e-35  6.27967e-37   2.5196e-38 -3.45266e-39  2.95617e-39   1.7592e-37 -2.60718e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.357, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 460 K
            Well    Collision, 1/sec
              W1         1.10104e+10
      global relaxation matrix dimension = 638
      setting global matrices ... done, cpu time[sec] = 0.819596, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.78516, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            72.4248      7.25425      1.35971       2.0037     0.178813      24.6747      1.12081
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.092885, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007986, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.101009, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.30427e-13  2.16217e-36  1.36833e-37
      low eigenvalue method done, cpu time[sec] = 0.101458, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.16e-36         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.24e-38         0         1
         *Z       ---       ---  1.29e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -1.76072e-35 -1.22785e-36 -2.84767e-38  2.83701e-37  1.23968e-39  1.28632e-38  3.26566e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.3503, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 460 K
            Well    Collision, 1/sec
              W1         1.37631e+10
      global relaxation matrix dimension = 638
      setting global matrices ... done, cpu time[sec] = 0.820399, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.75606, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            57.9399       5.8034      1.08777      1.60296      0.14305      19.7398     0.896652
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.092842, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007963, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.100942, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.99771e-12  1.77203e-36  1.01546e-37
      low eigenvalue method done, cpu time[sec] = 0.101349, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.77e-36         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.11e-38         0         1
         *Z       ---       ---  1.29e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  3.54695e-36 -1.97726e-36  8.81024e-40    3.218e-37  6.74481e-39  2.46187e-38  1.68357e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.3182, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 460 K
            Well    Collision, 1/sec
              W1         1.65157e+10
      global relaxation matrix dimension = 638
      setting global matrices ... done, cpu time[sec] = 0.8186, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.76431, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            48.2832      4.83616     0.906474       1.3358     0.119208      16.4498      0.74721
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.092858, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007991, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.100995, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -6.84126e-13  1.50332e-36  7.90336e-38
      low eigenvalue method done, cpu time[sec] = 0.101405, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.5e-36         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.34e-38         0         1
         *Z       ---       ---  1.29e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0   2.7932e-35  5.25074e-36   1.4432e-37  5.23419e-37  2.12343e-38  4.30278e-38 -4.99261e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.3271, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 460 K
            Well    Collision, 1/sec
              W1         1.92683e+10
      global relaxation matrix dimension = 638
      setting global matrices ... done, cpu time[sec] = 0.821221, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.80106, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            41.3856      4.14528     0.776977      1.14497     0.102179      14.0998     0.640465
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.092811, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007968, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.100921, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.24521e-13  1.30653e-36  6.36318e-38
      low eigenvalue method done, cpu time[sec] = 0.101326, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.31e-36         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.77e-38         0         1
         *Z       ---       ---  1.29e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  3.03064e-35  6.38308e-36  2.25706e-37  1.78765e-36  5.01178e-38   2.1163e-37 -1.04583e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.3735, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 460 K
            Well    Collision, 1/sec
              W1         2.20209e+10
      global relaxation matrix dimension = 638
      setting global matrices ... done, cpu time[sec] = 0.818349, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.80503, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            36.2124      3.62712     0.679855      1.00185    0.0894063      12.3374     0.560407
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.092673, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00798, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.100789, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.28743e-12  1.15599e-36  5.25514e-38
      low eigenvalue method done, cpu time[sec] = 0.101212, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.16e-36         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.34e-38         0         1
         *Z       ---       ---  1.29e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -3.39328e-35 -6.55709e-36 -1.75702e-37 -3.10592e-37 -2.10602e-38 -2.04048e-37  2.42319e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.3656, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 470 K
      Energy reference = 17785 1/cm
      Energy step      = 78 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -87.8 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.011412
         W1 Well: collisional kernel bandwidth = 37
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.4832
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.556619
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.520749
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 3.82227
         W1 Well: minimal relaxation eigenvalue = 0.0284286
         W1 Well: maximal relaxation eigenvalue = 1.29088
         W1 Well:       grid size = 633
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31589 1/cm
         B1 Barrier:        grid size = 229
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -76 1/cm
         B2 Barrier:        grid size = 226
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 156 1/cm
         B3 Barrier:        grid size = 287
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4601 1/cm
         B4 Barrier:        grid size = 308
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6239 1/cm
         B5 Barrier: nonpositive number of states at -23165 1/cm => truncating
         B5 Barrier:        grid size = 525
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23165 1/cm
         B6 Barrier:        grid size = 209
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1482 1/cm
         B7 Barrier:        grid size = 168
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4681 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 5.70756, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31589 -23165 4.24e+05 7.72e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -76 2.17e+13
         B2    157  2.2e+12
         B3  -4601 4.17e+11
         B4  -6239 6.11e+11
         B5 -23165 5.49e+10
         B6   1483 7.56e+12
         B7   4681 3.53e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  6.66e+19   1.4e+20  6.67e+14  4.81e+12  6.03e-12  1.13e+23  4.24e+27
          R   1.5e-20         1       2.1     1e-05  7.23e-08  9.06e-32   1.7e+03  6.37e+07
         P1  7.16e-21     0.477         1  4.78e-06  3.45e-08  4.32e-32       811  3.04e+07
         P2   1.5e-15  9.97e+04  2.09e+05         1   0.00721  9.04e-27   1.7e+08  6.35e+12
         P3  2.08e-13  1.38e+07   2.9e+07       139         1  1.25e-24  2.35e+10  8.81e+14
         P4  1.66e+11   1.1e+31  2.31e+31  1.11e+26  7.97e+23         1  1.88e+34  7.02e+38
         P5  8.83e-24  0.000588   0.00123   5.9e-09  4.25e-11  5.33e-35         1  3.74e+04
         P6  2.36e-28  1.57e-08  3.29e-08  1.57e-13  1.13e-15  1.42e-39  2.67e-05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.36e+16  4.95e+16  2.36e+11   1.7e+09  2.14e-15  4.01e+19   1.5e+24
          R  4.24e-17         1       2.1     1e-05  7.23e-08  9.06e-32   1.7e+03  6.37e+07
         P1  2.02e-17     0.477         1  4.78e-06  3.45e-08  4.32e-32       811  3.04e+07
         P2  4.23e-12  9.97e+04  2.09e+05         1   0.00721  9.04e-27   1.7e+08  6.35e+12
         P3  5.87e-10  1.38e+07   2.9e+07       139         1  1.25e-24  2.35e+10  8.81e+14
         P4  4.68e+14   1.1e+31  2.31e+31  1.11e+26  7.97e+23         1  1.88e+34  7.02e+38
         P5  2.49e-20  0.000588   0.00123   5.9e-09  4.25e-11  5.33e-35         1  3.74e+04
         P6  6.66e-25  1.57e-08  3.29e-08  1.57e-13  1.13e-15  1.42e-39  2.67e-05         1
   MasterEquation::set:  done, cpu time[sec] = 5.71846, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 470 K
            Well    Collision, 1/sec
              W1         5.40449e+08
      global relaxation matrix dimension = 633
      setting global matrices ... done, cpu time[sec] = 0.715405, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.317, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1560.51      158.143      29.9622      43.8972      3.94153      543.456      25.3513
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.091197, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007784, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.099647, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.63632e-11  1.91257e-34  2.56977e-35
      low eigenvalue method done, cpu time[sec] = 0.100049, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.91e-34  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.44e-36  4.44e-16         1
         *Z       ---       ---  3.96e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16 -2.38138e-34 -6.26213e-35 -4.17632e-37   2.2292e-35   4.4226e-37  2.69982e-39  1.48435e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.77471, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 470 K
            Well    Collision, 1/sec
              W1         1.62135e+09
      global relaxation matrix dimension = 633
      setting global matrices ... done, cpu time[sec] = 0.809057, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.68324, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            520.172      52.7144      9.98741      14.6324      1.31384      181.152      8.45044
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.091011, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007791, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.099462, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.71682e-11  8.42521e-35  1.00618e-35
      low eigenvalue method done, cpu time[sec] = 0.099869, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.43e-35  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   2.4e-36  4.44e-16         1
         *Z       ---       ---  3.96e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16 -1.91282e-34 -1.87388e-35  2.34155e-37  1.38152e-35  2.35235e-37  -6.9267e-37  1.67867e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.2099, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 470 K
            Well    Collision, 1/sec
              W1         2.70224e+09
      global relaxation matrix dimension = 633
      setting global matrices ... done, cpu time[sec] = 0.797306, elapsed time[sec] = 1
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.65706, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            312.103      31.6287      5.99245      8.77944     0.788305      108.691      5.07026
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.090899, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007773, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.09933, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.61475e-12  5.65266e-35  6.07226e-36
      low eigenvalue method done, cpu time[sec] = 0.099736, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.65e-35  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.61e-36  4.44e-16         1
         *Z       ---       ---  3.96e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16 -1.43451e-35 -3.80566e-35 -1.06699e-36 -9.02001e-36 -2.30293e-37  2.68066e-37 -9.32037e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.1757, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 470 K
            Well    Collision, 1/sec
              W1         3.78314e+09
      global relaxation matrix dimension = 633
      setting global matrices ... done, cpu time[sec] = 0.808748, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.66759, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            222.931      22.5919      4.28032      6.27103     0.563075      77.6366      3.62162
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.090999, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007733, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.099389, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -6.93186e-12  4.31172e-35  4.24299e-36
      low eigenvalue method done, cpu time[sec] = 0.099798, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.31e-35  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.23e-36  4.44e-16         1
         *Z       ---       ---  3.96e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16 -2.56742e-34  -9.7863e-35 -2.12002e-36 -1.08862e-35 -3.76169e-37 -7.52691e-38  9.29534e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.2004, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 470 K
            Well    Collision, 1/sec
              W1         4.86404e+09
      global relaxation matrix dimension = 633
      setting global matrices ... done, cpu time[sec] = 0.810888, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.66825, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            173.391      17.5715      3.32914      4.87746     0.437947       60.384      2.81681
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.091074, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007778, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.099509, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -3.4878e-12  3.50697e-35  3.20217e-36
      low eigenvalue method done, cpu time[sec] = 0.099922, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.51e-35  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.97e-37  4.44e-16         1
         *Z       ---       ---  3.96e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  1.22659e-34  6.08264e-35  1.40707e-36  1.11173e-35  3.05549e-37 -8.19934e-37  8.18724e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.2022, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 470 K
            Well    Collision, 1/sec
              W1         5.40449e+09
      global relaxation matrix dimension = 633
      setting global matrices ... done, cpu time[sec] = 0.810846, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.6623, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            156.051      15.8143      2.99622      4.38972     0.394153      54.3456      2.53513
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.090898, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00777, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.09933, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.33937e-12  3.21243e-35  2.83578e-36
      low eigenvalue method done, cpu time[sec] = 0.099743, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.21e-35  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.13e-37  4.44e-16         1
         *Z       ---       ---  3.96e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  1.19991e-35  3.69251e-36  8.00756e-38  1.51887e-36  4.46537e-38 -2.80141e-38 -9.45461e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.1916, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 470 K
            Well    Collision, 1/sec
              W1         8.10673e+09
      global relaxation matrix dimension = 633
      setting global matrices ... done, cpu time[sec] = 0.809114, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.66666, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            104.034      10.5429      1.99748      2.92648     0.262768      36.2304      1.69009
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.0908, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007787, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.099238, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.43062e-13  2.27798e-35  1.74222e-36
      low eigenvalue method done, cpu time[sec] = 0.09965, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.28e-35  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.48e-37  4.44e-16         1
         *Z       ---       ---  3.96e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16 -5.99082e-36  5.22476e-36    1.673e-37  1.76554e-36  4.19181e-38 -7.21478e-37 -3.41702e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.1956, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 470 K
            Well    Collision, 1/sec
              W1          1.0809e+10
      global relaxation matrix dimension = 633
      setting global matrices ... done, cpu time[sec] = 0.809795, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.6702, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            78.0257      7.90716      1.49811      2.19486     0.197076      27.1728      1.26757
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.090873, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.007776, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.099305, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.69602e-12  1.77465e-35  1.21004e-36
      low eigenvalue method done, cpu time[sec] = 0.099726, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.77e-35  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.05e-37  4.44e-16         1
         *Z       ---       ---  3.96e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  1.42048e-36  9.90606e-36  5.40781e-38 -8.97536e-37 -1.23082e-38 -5.52913e-37  5.91651e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.2083, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 470 K
            Well    Collision, 1/sec
              W1         1.35112e+10
      global relaxation matrix dimension = 633
      setting global matrices ... done, cpu time[sec] = 0.811081, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.66522, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            62.4206      6.32573      1.19849      1.75589     0.157661      21.7382      1.01405
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.090733, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007806, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.099195, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.41679e-12  1.45753e-35  9.02251e-37
      low eigenvalue method done, cpu time[sec] = 0.099606, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.46e-35  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.14e-37  4.44e-16         1
         *Z       ---       ---  3.96e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  9.14671e-35  1.14304e-35  3.51715e-37  4.24383e-38  2.88524e-38  4.24062e-37  7.40021e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.1932, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 470 K
            Well    Collision, 1/sec
              W1         1.62135e+10
      global relaxation matrix dimension = 633
      setting global matrices ... done, cpu time[sec] = 0.809889, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.67015, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            52.0172      5.27144     0.998741      1.46324     0.131384      18.1152     0.845044
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.090877, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007804, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.099335, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.35136e-12  1.23851e-35  7.04945e-37
      low eigenvalue method done, cpu time[sec] = 0.099748, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.24e-35  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.52e-37  4.44e-16         1
         *Z       ---       ---  3.96e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16 -5.29104e-35 -9.61968e-36  -4.0319e-37 -3.03251e-36 -8.46093e-38 -5.47458e-37  5.31135e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.1981, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 470 K
            Well    Collision, 1/sec
              W1         1.89157e+10
      global relaxation matrix dimension = 633
      setting global matrices ... done, cpu time[sec] = 0.810357, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.67777, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            44.5861      4.51838     0.856064      1.25421     0.112615      15.5273     0.724324
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.09085, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.007784, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.09929, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.85913e-13  1.07777e-35  5.69425e-37
      low eigenvalue method done, cpu time[sec] = 0.099701, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.08e-35  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.06e-37  4.44e-16         1
         *Z       ---       ---  3.96e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  1.01625e-34  2.80486e-35  7.35648e-37  3.82884e-36  1.27308e-37  3.21854e-37  1.21943e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.2098, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 470 K
            Well    Collision, 1/sec
              W1         2.16179e+10
      global relaxation matrix dimension = 633
      setting global matrices ... done, cpu time[sec] = 0.80975, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.68027, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            39.0129      3.95358     0.749056      1.09743    0.0985381      13.5864     0.633783
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.090815, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007768, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.099239, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -5.6534e-13  9.54595e-36  4.71597e-37
      low eigenvalue method done, cpu time[sec] = 0.09965, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.55e-36  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.71e-37  4.44e-16         1
         *Z       ---       ---  3.96e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  3.99719e-35  1.40779e-35  2.25819e-37  2.13867e-37  2.08615e-38  -7.9872e-38  1.12321e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.2076, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 480 K
      Energy reference = 18063 1/cm
      Energy step      = 80 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -87.7 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.010046
         W1 Well: collisional kernel bandwidth = 37
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.41375
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.53815
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.525944
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 3.68257
         W1 Well: minimal relaxation eigenvalue = 0.0280655
         W1 Well: maximal relaxation eigenvalue = 1.88514
         W1 Well:       grid size = 621
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31617 1/cm
         B1 Barrier:        grid size = 226
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -17 1/cm
         B2 Barrier:        grid size = 224
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 142 1/cm
         B3 Barrier:        grid size = 284
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4657 1/cm
         B4 Barrier:        grid size = 303
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6177 1/cm
         B5 Barrier: nonpositive number of states at -23137 1/cm => truncating
         B5 Barrier:        grid size = 515
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23137 1/cm
         B6 Barrier:        grid size = 207
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1502 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4702 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 5.57175, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31617 -23137 4.33e+05 8.16e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -17 2.43e+13
         B2    143 2.49e+12
         B3  -4657 4.76e+11
         B4  -6177 6.94e+11
         B5 -23137 6.27e+10
         B6   1503 8.64e+12
         B7   4703 4.13e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1   8.2e+18   1.7e+19  1.11e+14  8.86e+11  3.56e-12  1.28e+22  3.94e+26
          R  1.22e-19         1      2.07  1.35e-05  1.08e-07  4.34e-31  1.56e+03   4.8e+07
         P1  5.89e-20     0.483         1  6.52e-06  5.21e-08   2.1e-31       752  2.32e+07
         P2  9.03e-15   7.4e+04  1.53e+05         1     0.008  3.22e-26  1.15e+08  3.56e+12
         P3  1.13e-12  9.25e+06  1.92e+07       125         1  4.02e-24  1.44e+10  4.45e+14
         P4  2.81e+11   2.3e+30  4.77e+30  3.11e+25  2.49e+23         1  3.59e+33  1.11e+38
         P5  7.83e-23  0.000642   0.00133  8.67e-09  6.93e-11  2.79e-34         1  3.08e+04
         P6  2.54e-27  2.08e-08  4.31e-08  2.81e-13  2.25e-15  9.04e-39  3.24e-05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  3.01e+15  6.25e+15  4.07e+10  3.26e+08  1.31e-15   4.7e+18  1.45e+23
          R  3.32e-16         1      2.07  1.35e-05  1.08e-07  4.34e-31  1.56e+03   4.8e+07
         P1   1.6e-16     0.483         1  6.52e-06  5.21e-08   2.1e-31       752  2.32e+07
         P2  2.46e-11   7.4e+04  1.53e+05         1     0.008  3.22e-26  1.15e+08  3.56e+12
         P3  3.07e-09  9.25e+06  1.92e+07       125         1  4.02e-24  1.44e+10  4.45e+14
         P4  7.64e+14   2.3e+30  4.77e+30  3.11e+25  2.49e+23         1  3.59e+33  1.11e+38
         P5  2.13e-19  0.000642   0.00133  8.67e-09  6.93e-11  2.79e-34         1  3.08e+04
         P6   6.9e-24  2.08e-08  4.31e-08  2.81e-13  2.25e-15  9.04e-39  3.24e-05         1
   MasterEquation::set:  done, cpu time[sec] = 5.58339, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 480 K
            Well    Collision, 1/sec
              W1         5.30826e+08
      global relaxation matrix dimension = 621
      setting global matrices ... done, cpu time[sec] = 0.613939, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.33963, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1678.62      172.116      32.9544      47.9952      4.33655      597.296      28.5937
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.086265, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007372, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.093762, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.26329e-12  1.41472e-33  2.00969e-34
      low eigenvalue method done, cpu time[sec] = 0.094141, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.41e-33 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.97e-35 -4.44e-16         1
         *Z       ---       ---  1.26e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  7.03056e-34  4.43282e-34  8.36183e-36  9.55582e-35  2.24455e-36 -6.76035e-36  2.15353e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.64131, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 480 K
            Well    Collision, 1/sec
              W1         1.59248e+09
      global relaxation matrix dimension = 621
      setting global matrices ... done, cpu time[sec] = 0.777091, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.69797, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            559.541      57.3721      10.9848      15.9984      1.44552      199.099      9.53125
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.086018, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007345, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.093486, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.72934e-12  6.34494e-34  8.01431e-35
      low eigenvalue method done, cpu time[sec] = 0.093862, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.34e-34 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.78e-35 -4.44e-16         1
         *Z       ---       ---  1.26e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  -1.1535e-34 -1.16277e-34 -4.03157e-36  -5.0086e-35 -1.21439e-36  5.36717e-37  3.68674e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.1169, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 480 K
            Well    Collision, 1/sec
              W1         2.65413e+09
      global relaxation matrix dimension = 621
      setting global matrices ... done, cpu time[sec] = 0.77535, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.71228, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            335.724      34.4233      6.59088      9.59904     0.867311      119.459      5.71875
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.085921, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007363, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.093417, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.78285e-13  4.28832e-34  4.88217e-35
      low eigenvalue method done, cpu time[sec] = 0.093795, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.29e-34 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.2e-35 -4.44e-16         1
         *Z       ---       ---  1.26e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  3.97486e-37  3.45211e-35 -6.53732e-37 -1.13314e-35 -2.31164e-37 -2.69342e-36  -3.3652e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.1332, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 480 K
            Well    Collision, 1/sec
              W1         3.71578e+09
      global relaxation matrix dimension = 621
      setting global matrices ... done, cpu time[sec] = 0.777064, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.92817, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            239.803       24.588      4.70777      6.85646     0.619508       85.328      4.08482
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.086008, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007383, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.093514, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.40512e-11  3.28563e-34  3.43352e-35
      low eigenvalue method done, cpu time[sec] = 0.093892, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.29e-34 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.22e-36 -4.44e-16         1
         *Z       ---       ---  1.26e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  1.14117e-35 -2.09168e-35 -3.10901e-37 -7.55302e-36 -1.53216e-37  1.39616e-36  5.65794e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.9012, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 480 K
            Well    Collision, 1/sec
              W1         4.77743e+09
      global relaxation matrix dimension = 621
      setting global matrices ... done, cpu time[sec] = 0.712809, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.97135, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            186.514       19.124       3.6616       5.3328     0.481839      66.3663      3.17708
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.085864, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007378, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.093366, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.72892e-12  2.68075e-34  2.60414e-35
      low eigenvalue method done, cpu time[sec] = 0.093741, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.68e-34 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.52e-36 -4.44e-16         1
         *Z       ---       ---  1.26e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  8.05151e-34  2.25132e-34  5.81976e-36  3.64481e-35  1.15323e-36   1.0912e-36 -2.82109e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.3187, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 480 K
            Well    Collision, 1/sec
              W1         5.30826e+09
      global relaxation matrix dimension = 621
      setting global matrices ... done, cpu time[sec] = 0.773711, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.72305, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            167.862      17.2116      3.29544      4.79952     0.433655      59.7296      2.85937
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.08592, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00743, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.093472, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.94364e-12  2.45868e-34  2.31104e-35
      low eigenvalue method done, cpu time[sec] = 0.093843, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.46e-34 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   6.9e-36 -4.44e-16         1
         *Z       ---       ---  1.26e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  4.63992e-34  1.64188e-34  3.97747e-36  2.51004e-35  7.81856e-37  1.03069e-36  2.76908e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.1411, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 480 K
            Well    Collision, 1/sec
              W1         7.96238e+09
      global relaxation matrix dimension = 621
      setting global matrices ... done, cpu time[sec] = 0.775311, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.70747, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            111.908      11.4744      2.19696      3.19968     0.289104      39.8198      1.90625
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.085921, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007336, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.09338, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.11737e-12  1.75141e-34   1.4316e-35
      low eigenvalue method done, cpu time[sec] = 0.093752, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.75e-34 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.92e-36 -4.44e-16         1
         *Z       ---       ---  1.26e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  3.85203e-34  6.26769e-35  1.77838e-36  5.00728e-36  2.69619e-37  3.16256e-36 -2.67121e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.1267, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 480 K
            Well    Collision, 1/sec
              W1         1.06165e+10
      global relaxation matrix dimension = 621
      setting global matrices ... done, cpu time[sec] = 0.775721, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.71337, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            83.9311      8.60581      1.64772      2.39976     0.216828      29.8648      1.42969
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.085946, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007393, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.093463, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -6.23055e-12  1.36842e-34  1.00023e-35
      low eigenvalue method done, cpu time[sec] = 0.093837, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.37e-34 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.84e-36 -4.44e-16         1
         *Z       ---       ---  1.26e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  9.09091e-35  2.98929e-35  7.24982e-37  2.92119e-36  1.16365e-37    1.247e-37 -1.52274e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.7135, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 480 K
            Well    Collision, 1/sec
              W1         1.32706e+10
      global relaxation matrix dimension = 621
      setting global matrices ... done, cpu time[sec] = 0.476389, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            67.1449      6.88465      1.31818      1.91981     0.173462      23.8919      1.14375
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.085926, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007386, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.093436, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.00261e-12  1.12625e-34  7.49294e-36
      low eigenvalue method done, cpu time[sec] = 0.09381, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.13e-34 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.16e-36 -4.44e-16         1
         *Z       ---       ---  1.26e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -1.50939e-34 -1.70782e-35 -4.60973e-37  1.93486e-36 -1.91618e-38 -1.16083e-36 -2.46748e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.1079, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 480 K
            Well    Collision, 1/sec
              W1         1.59248e+10
      global relaxation matrix dimension = 621
      setting global matrices ... done, cpu time[sec] = 0.773284, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.75649, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            55.9541      5.73721      1.09848      1.59984     0.144552      19.9099     0.953125
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.086014, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007362, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.0935, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.55476e-12  9.58545e-35  5.87674e-36
      low eigenvalue method done, cpu time[sec] = 0.093881, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.59e-35 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.69e-36 -4.44e-16         1
         *Z       ---       ---  1.26e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -1.49431e-34 -3.66964e-35 -1.21384e-36 -1.01373e-35 -2.62314e-37 -4.22824e-37  2.98752e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.1709, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 480 K
            Well    Collision, 1/sec
              W1         1.85789e+10
      global relaxation matrix dimension = 621
      setting global matrices ... done, cpu time[sec] = 0.773485, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.77638, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            47.9606      4.91761     0.941554      1.37129     0.123902      17.0656     0.816964
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.08594, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007367, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.093433, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.04409e-13  8.35212e-35  4.76232e-36
      low eigenvalue method done, cpu time[sec] = 0.093856, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.35e-35 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.34e-36 -4.44e-16         1
         *Z       ---       ---  1.26e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16   3.4731e-35 -1.56487e-36  2.69372e-37  3.96131e-36  8.77646e-38  6.50801e-37  1.22596e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.1989, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 480 K
            Well    Collision, 1/sec
              W1          2.1233e+10
      global relaxation matrix dimension = 621
      setting global matrices ... done, cpu time[sec] = 0.775272, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.72382, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            41.9656      4.30291      0.82386      1.19988     0.108414      14.9324     0.714844
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.086005, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00738, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.093507, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   7.9585e-13  7.40534e-35  3.95516e-36
      low eigenvalue method done, cpu time[sec] = 0.093886, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.41e-35 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.08e-36 -4.44e-16         1
         *Z       ---       ---  1.26e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  8.72674e-35  3.43785e-35  9.71438e-37  9.24923e-36  2.44309e-37  6.03124e-38 -1.06216e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.1401, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 490 K
      Energy reference = 18341 1/cm
      Energy step      = 82 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -87.6 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.011066
         W1 Well: collisional kernel bandwidth = 37
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.456741
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.515592
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 1.90097
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 3.53691
         W1 Well: minimal relaxation eigenvalue = 0.0276503
         W1 Well: maximal relaxation eigenvalue = 1.32805
         W1 Well:       grid size = 609
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31597 1/cm
         B1 Barrier:        grid size = 224
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -26 1/cm
         B2 Barrier:        grid size = 222
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 136 1/cm
         B3 Barrier:        grid size = 280
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4619 1/cm
         B4 Barrier:        grid size = 299
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6176 1/cm
         B5 Barrier: nonpositive number of states at -23151 1/cm => truncating
         B5 Barrier:        grid size = 506
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23151 1/cm
         B6 Barrier:        grid size = 206
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1449 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4647 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 6.72952, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31597 -23151 4.28e+05 8.63e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -26 2.71e+13
         B2    137 2.81e+12
         B3  -4619 5.43e+11
         B4  -6176 7.87e+11
         B5 -23151 7.15e+10
         B6   1450 9.84e+12
         B7   4648 4.83e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.13e+18  2.31e+18  2.03e+13  1.79e+11   2.2e-12  1.62e+21  4.14e+25
          R  8.87e-19         1      2.05   1.8e-05  1.59e-07  1.95e-30  1.43e+03  3.67e+07
         P1  4.33e-19     0.488         1  8.77e-06  7.76e-08  9.53e-31       699  1.79e+07
         P2  4.93e-14  5.56e+04  1.14e+05         1   0.00884  1.09e-25  7.97e+07  2.04e+12
         P3  5.58e-12  6.29e+06  1.29e+07       113         1  1.23e-23  9.02e+09  2.31e+14
         P4  4.54e+11  5.12e+29  1.05e+30  9.21e+24  8.14e+22         1  7.34e+32  1.88e+37
         P5  6.19e-22  0.000698   0.00143  1.25e-08  1.11e-10  1.36e-33         1  2.56e+04
         P6  2.42e-26  2.73e-08  5.59e-08   4.9e-13  4.33e-15  5.32e-38  3.91e-05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  4.19e+14  8.58e+14  7.53e+09  6.66e+07  8.18e-16     6e+17  1.54e+22
          R  2.39e-15         1      2.05   1.8e-05  1.59e-07  1.95e-30  1.43e+03  3.67e+07
         P1  1.16e-15     0.488         1  8.77e-06  7.76e-08  9.53e-31       699  1.79e+07
         P2  1.33e-10  5.56e+04  1.14e+05         1   0.00884  1.09e-25  7.97e+07  2.04e+12
         P3   1.5e-08  6.29e+06  1.29e+07       113         1  1.23e-23  9.02e+09  2.31e+14
         P4  1.22e+15  5.12e+29  1.05e+30  9.21e+24  8.14e+22         1  7.34e+32  1.88e+37
         P5  1.67e-18  0.000698   0.00143  1.25e-08  1.11e-10  1.36e-33         1  2.56e+04
         P6  6.51e-23  2.73e-08  5.59e-08   4.9e-13  4.33e-15  5.32e-38  3.91e-05         1
   MasterEquation::set:  done, cpu time[sec] = 6.74041, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 490 K
            Well    Collision, 1/sec
              W1         5.21622e+08
      global relaxation matrix dimension = 609
      setting global matrices ... done, cpu time[sec] = 0.752539, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.23973, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1803.09      187.051      36.1842      52.3901      4.76314       655.22      32.1675
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.081717, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007145, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.088984, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.84738e-11  9.44106e-33    1.406e-33
      low eigenvalue method done, cpu time[sec] = 0.08935, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.44e-33         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.61e-34         0         1
         *Z       ---       ---  4.23e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.81165e-33  6.16879e-34  2.33145e-35  2.97995e-34  7.25581e-36 -2.16678e-36 -7.96584e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.60474, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 490 K
            Well    Collision, 1/sec
              W1         1.56487e+09
      global relaxation matrix dimension = 609
      setting global matrices ... done, cpu time[sec] = 0.752677, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.60134, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            601.031      62.3504      12.0614      17.4634      1.58771      218.407      10.7225
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.08139, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007102, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.088613, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.82678e-12  4.30736e-33  5.70675e-34
      low eigenvalue method done, cpu time[sec] = 0.088981, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.31e-33         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.19e-34         0         1
         *Z       ---       ---  4.23e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -5.03112e-34 -1.48576e-34 -9.37901e-36 -6.68158e-35 -1.73659e-36 -2.25385e-36 -3.05298e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.9257, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 490 K
            Well    Collision, 1/sec
              W1         2.60811e+09
      global relaxation matrix dimension = 609
      setting global matrices ... done, cpu time[sec] = 0.750249, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.59695, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            360.618      37.4103      7.23684       10.478     0.952629      131.044       6.4335
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.081429, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007107, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.088656, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.35165e-11  2.93176e-33  3.50816e-34
      low eigenvalue method done, cpu time[sec] = 0.089033, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.93e-33         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.11e-35         0         1
         *Z       ---       ---  4.23e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.37345e-33  8.40967e-34  1.93712e-35  1.61262e-34  4.30241e-36  -3.7175e-36 -3.39195e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.9211, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 490 K
            Well    Collision, 1/sec
              W1         3.65136e+09
      global relaxation matrix dimension = 609
      setting global matrices ... done, cpu time[sec] = 0.75106, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.60015, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            257.585      26.7216      5.16917       7.4843     0.680449      93.6029      4.59536
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.08144, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007098, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.088659, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.62309e-12  2.25592e-33  2.48273e-34
      low eigenvalue method done, cpu time[sec] = 0.089032, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.26e-33         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.24e-35         0         1
         *Z       ---       ---  4.23e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.50533e-33  6.90819e-34  1.87182e-35  1.23936e-34  3.71324e-36  7.97571e-36 -1.62087e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.9284, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 490 K
            Well    Collision, 1/sec
              W1          4.6946e+09
      global relaxation matrix dimension = 609
      setting global matrices ... done, cpu time[sec] = 0.751684, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.59783, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            200.344      20.7835      4.02047      5.82112     0.529238      72.8022      3.57417
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.081571, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.007104, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.088799, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.02237e-12  1.84617e-33  1.89211e-34
      low eigenvalue method done, cpu time[sec] = 0.089166, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.85e-33         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   5.1e-35         0         1
         *Z       ---       ---  4.23e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.44752e-33  5.71839e-34  1.75151e-35  1.28451e-34  3.80687e-36  6.70235e-36 -4.98954e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.9267, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 490 K
            Well    Collision, 1/sec
              W1         5.21622e+09
      global relaxation matrix dimension = 609
      setting global matrices ... done, cpu time[sec] = 0.751717, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.58156, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            180.309      18.7051      3.61842      5.23901     0.476314       65.522      3.21675
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.081543, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007101, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.088761, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.47492e-12   1.6953e-33   1.6826e-34
      low eigenvalue method done, cpu time[sec] = 0.089128, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.7e-33         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.69e-35         0         1
         *Z       ---       ---  4.23e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.60533e-33  4.79966e-34  1.39922e-35  1.03715e-34  2.96541e-36  1.06678e-36 -5.07062e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.9103, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 490 K
            Well    Collision, 1/sec
              W1         7.82434e+09
      global relaxation matrix dimension = 609
      setting global matrices ... done, cpu time[sec] = 0.752202, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.60171, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            120.206      12.4701      2.41228      3.49267     0.317543      43.6813       2.1445
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.081458, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007109, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.088686, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.84561e-13  1.21297e-33  1.05071e-34
      low eigenvalue method done, cpu time[sec] = 0.089098, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.21e-33         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.35e-35         0         1
         *Z       ---       ---  4.23e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  5.91112e-35  1.69001e-34  4.25252e-36   5.1104e-35  1.22059e-36 -7.37772e-36 -4.28311e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.9266, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 490 K
            Well    Collision, 1/sec
              W1         1.04324e+10
      global relaxation matrix dimension = 609
      setting global matrices ... done, cpu time[sec] = 0.7515, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.60206, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            90.1546      9.35256      1.80921      2.61951     0.238157       32.761      1.60837
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.081509, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.00714, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.088769, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.92999e-12  9.50445e-34  7.38401e-35
      low eigenvalue method done, cpu time[sec] = 0.089135, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0   9.5e-34         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.63e-35         0         1
         *Z       ---       ---  4.23e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -2.05896e-34  1.54931e-35 -7.88889e-37 -1.80186e-36 -6.00935e-38 -5.54715e-36 -8.17099e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.9304, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 490 K
            Well    Collision, 1/sec
              W1         1.30406e+10
      global relaxation matrix dimension = 609
      setting global matrices ... done, cpu time[sec] = 0.751916, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.6129, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            72.1237      7.48205      1.44737       2.0956     0.190526      26.2088       1.2867
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.081498, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007143, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.088762, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.15323e-12  7.83863e-34  5.55677e-35
      low eigenvalue method done, cpu time[sec] = 0.089131, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.84e-34         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.17e-35         0         1
         *Z       ---       ---  4.23e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.05817e-34  4.85037e-35  5.60831e-37 -5.14329e-36 -4.24978e-38  1.33555e-36 -1.07079e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.9394, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 490 K
            Well    Collision, 1/sec
              W1         1.56487e+10
      global relaxation matrix dimension = 609
      setting global matrices ... done, cpu time[sec] = 0.749385, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.60253, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            60.1031      6.23504      1.20614      1.74634     0.158771      21.8407      1.07225
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.081434, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007134, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.08869, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.27537e-12  6.68204e-34  4.37453e-35
      low eigenvalue method done, cpu time[sec] = 0.089053, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.68e-34         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.85e-35         0         1
         *Z       ---       ---  4.23e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.36193e-34 -8.46167e-36 -6.86681e-37 -1.55456e-35 -3.16361e-37  9.30486e-37 -1.67475e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.9271, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 490 K
            Well    Collision, 1/sec
              W1         1.82568e+10
      global relaxation matrix dimension = 609
      setting global matrices ... done, cpu time[sec] = 0.752298, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.59633, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            51.5169      5.34432      1.03383      1.49686      0.13609      18.7206     0.919071
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.081424, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00713, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.088686, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.34118e-13  5.82969e-34  3.55622e-35
      low eigenvalue method done, cpu time[sec] = 0.089051, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.83e-34         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.61e-35         0         1
         *Z       ---       ---  4.23e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  9.89543e-34   2.2412e-34  7.18763e-36  4.23517e-35  1.32069e-36  6.64059e-36  6.08268e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.9264, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 490 K
            Well    Collision, 1/sec
              W1         2.08649e+10
      global relaxation matrix dimension = 609
      setting global matrices ... done, cpu time[sec] = 0.752654, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.59779, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            45.0773      4.67628     0.904605      1.30975     0.119079      16.3805     0.804187
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.081477, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007108, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.088709, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.91915e-12  5.17427e-34  2.96159e-35
      low eigenvalue method done, cpu time[sec] = 0.089083, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.17e-34         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.43e-35         0         1
         *Z       ---       ---  4.23e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -4.56446e-34 -1.13195e-34 -3.36445e-36 -2.07887e-35 -6.48661e-37  -9.2893e-37 -9.98737e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.9285, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 500 K
      Energy reference = 18619 1/cm
      Energy step      = 83 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -87.5 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.009097
         W1 Well: collisional kernel bandwidth = 37
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.521872
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.510472
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.461494
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 3.3739
         W1 Well: minimal relaxation eigenvalue = 0.027294
         W1 Well: maximal relaxation eigenvalue = 1.3246
         W1 Well:       grid size = 605
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31596 1/cm
         B1 Barrier:        grid size = 225
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -56 1/cm
         B2 Barrier:        grid size = 222
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 193 1/cm
         B3 Barrier:        grid size = 280
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4621 1/cm
         B4 Barrier:        grid size = 299
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6198 1/cm
         B5 Barrier: nonpositive number of states at -23213 1/cm => truncating
         B5 Barrier:        grid size = 504
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23213 1/cm
         B6 Barrier:        grid size = 207
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1438 1/cm
         B7 Barrier:        grid size = 168
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4675 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 5.27995, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31596 -23213 4.09e+05 9.12e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -56 3.02e+13
         B2    194 3.17e+12
         B3  -4621 6.19e+11
         B4  -6198 8.91e+11
         B5 -23213 8.15e+10
         B6   1439 1.12e+13
         B7   4676 5.63e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.67e+17  3.39e+17  3.96e+12  3.85e+10  1.38e-12  2.21e+20  4.73e+24
          R  5.98e-18         1      2.03  2.37e-05   2.3e-07  8.26e-30  1.32e+03  2.83e+07
         P1  2.95e-18     0.493         1  1.17e-05  1.14e-07  4.08e-30       652   1.4e+07
         P2  2.53e-13  4.23e+04  8.57e+04         1   0.00973  3.49e-25  5.59e+07   1.2e+12
         P3   2.6e-11  4.34e+06  8.81e+06       103         1  3.59e-23  5.74e+09  1.23e+14
         P4  7.23e+11  1.21e+29  2.45e+29  2.86e+24  2.79e+22         1   1.6e+32  3.42e+36
         P5  4.52e-21  0.000756   0.00153  1.79e-08  1.74e-10  6.25e-33         1  2.14e+04
         P6  2.11e-25  3.53e-08  7.17e-08  8.36e-13  8.14e-15  2.92e-37  4.67e-05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1   6.3e+13  1.28e+14  1.49e+09  1.45e+07   5.2e-16  8.33e+16  1.78e+21
          R  1.59e-14         1      2.03  2.37e-05   2.3e-07  8.26e-30  1.32e+03  2.83e+07
         P1  7.83e-15     0.493         1  1.17e-05  1.14e-07  4.08e-30       652   1.4e+07
         P2  6.71e-10  4.23e+04  8.57e+04         1   0.00973  3.49e-25  5.59e+07   1.2e+12
         P3   6.9e-08  4.34e+06  8.81e+06       103         1  3.59e-23  5.74e+09  1.23e+14
         P4  1.92e+15  1.21e+29  2.45e+29  2.86e+24  2.79e+22         1   1.6e+32  3.42e+36
         P5   1.2e-17  0.000756   0.00153  1.79e-08  1.74e-10  6.25e-33         1  2.14e+04
         P6  5.61e-22  3.53e-08  7.17e-08  8.36e-13  8.14e-15  2.92e-37  4.67e-05         1
   MasterEquation::set:  done, cpu time[sec] = 5.29086, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 500 K
            Well    Collision, 1/sec
              W1         5.12811e+08
      global relaxation matrix dimension = 605
      setting global matrices ... done, cpu time[sec] = 0.737416, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.20201, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1934.05      202.991      39.6657      57.1008      5.22318       717.44      36.0983
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.080439, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007018, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.087582, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.56519e-11  5.93228e-32  9.22528e-33
      low eigenvalue method done, cpu time[sec] = 0.087941, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.93e-32 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.62e-33 -4.44e-16         1
         *Z       ---       ---  1.49e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  6.80259e-35 -9.36825e-34 -1.62781e-35  1.67981e-34   1.1698e-36  4.51289e-36   2.5367e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.55287, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 500 K
            Well    Collision, 1/sec
              W1         1.53843e+09
      global relaxation matrix dimension = 605
      setting global matrices ... done, cpu time[sec] = 0.736031, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.54988, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            644.684      67.6636      13.2219      19.0336      1.74106      239.147      12.0328
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.080243, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006994, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.087358, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.51581e-11  2.75112e-32  3.80837e-33
      low eigenvalue method done, cpu time[sec] = 0.087719, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.75e-32 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.51e-34 -4.44e-16         1
         *Z       ---       ---  1.49e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  5.63529e-34 -3.33432e-34 -2.38576e-35 -4.99525e-34  -1.0928e-35 -4.27448e-36 -2.97466e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.8363, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 500 K
            Well    Collision, 1/sec
              W1         2.56406e+09
      global relaxation matrix dimension = 605
      setting global matrices ... done, cpu time[sec] = 0.73642, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.54359, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            386.811      40.5981      7.93314      11.4202      1.04464      143.488      7.21966
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.080154, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006964, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.087248, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.82467e-11   1.8852e-32  2.36171e-33
      low eigenvalue method done, cpu time[sec] = 0.087605, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.89e-32 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.15e-34 -4.44e-16         1
         *Z       ---       ---  1.49e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  2.83718e-33  1.25077e-33  2.58464e-35   1.5057e-34  4.98369e-36 -4.67503e-36  2.31986e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.832, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 500 K
            Well    Collision, 1/sec
              W1         3.58968e+09
      global relaxation matrix dimension = 605
      setting global matrices ... done, cpu time[sec] = 0.736919, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.56689, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            276.293      28.9987      5.66653      8.15726     0.746168      102.491       5.1569
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.080105, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.087224, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.06978e-11  1.45662e-32  1.68153e-33
      low eigenvalue method done, cpu time[sec] = 0.087588, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.46e-32 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.98e-34 -4.44e-16         1
         *Z       ---       ---  1.49e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  2.29537e-33  3.27426e-34  1.65361e-35  1.48714e-34  4.06509e-36  2.62424e-35  3.73036e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.8568, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 500 K
            Well    Collision, 1/sec
              W1          4.6153e+09
      global relaxation matrix dimension = 605
      setting global matrices ... done, cpu time[sec] = 0.733814, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.56575, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            214.895      22.5545       4.4073      6.34454     0.580353      79.7156      4.01092
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.080199, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006966, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.087281, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.90565e-12  1.19554e-32  1.28749e-33
      low eigenvalue method done, cpu time[sec] = 0.087638, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.2e-32 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.26e-34 -4.44e-16         1
         *Z       ---       ---  1.49e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  6.90683e-34  3.85669e-34  3.13952e-36  -2.2706e-35 -3.60953e-37  -2.5481e-36 -1.98683e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.4725, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 500 K
            Well    Collision, 1/sec
              W1         5.12811e+09
      global relaxation matrix dimension = 605
      setting global matrices ... done, cpu time[sec] = 0.725178, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.79752, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            193.405      20.2991      3.96657      5.71008     0.522318       71.744      3.60983
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.080109, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007003, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.08723, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.09041e-12  1.09914e-32   1.1472e-33
      low eigenvalue method done, cpu time[sec] = 0.087593, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.1e-32 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0     3e-34 -4.44e-16         1
         *Z       ---       ---  1.49e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  1.37369e-33  4.20697e-34   5.5255e-36 -1.29708e-35   2.0679e-37  -6.1832e-37 -2.28784e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.0748, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 500 K
            Well    Collision, 1/sec
              W1         7.69217e+09
      global relaxation matrix dimension = 605
      setting global matrices ... done, cpu time[sec] = 0.735083, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.60281, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            128.937      13.5327      2.64438      3.80672     0.348212      47.8293      2.40655
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.080116, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006972, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.087208, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.18369e-12  7.89807e-33  7.21984e-34
      low eigenvalue method done, cpu time[sec] = 0.087578, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   7.9e-33 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.16e-34 -4.44e-16         1
         *Z       ---       ---  1.49e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  2.90204e-33  4.22907e-34  1.19258e-35  6.96366e-36   1.0746e-36   1.9408e-35 -1.54911e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.8932, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 500 K
            Well    Collision, 1/sec
              W1         1.02562e+10
      global relaxation matrix dimension = 605
      setting global matrices ... done, cpu time[sec] = 0.735006, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.58489, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            96.7026      10.1495      1.98329      2.85504     0.261159       35.872      1.80491
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.080119, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007007, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.087244, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.01347e-12  6.20608e-33  5.10258e-34
      low eigenvalue method done, cpu time[sec] = 0.087599, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.21e-33 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.69e-34 -4.44e-16         1
         *Z       ---       ---  1.49e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  3.12111e-33  8.97326e-34  2.30834e-35  1.45251e-34  4.51697e-36 -2.67653e-36 -4.27735e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.8711, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 500 K
            Well    Collision, 1/sec
              W1         1.28203e+10
      global relaxation matrix dimension = 605
      setting global matrices ... done, cpu time[sec] = 0.73668, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.59122, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            77.3621      8.11963      1.58663      2.28403     0.208927      28.6976      1.44393
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.080124, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006974, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.087216, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.33614e-12  5.12878e-33  3.85697e-34
      low eigenvalue method done, cpu time[sec] = 0.087573, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.13e-33 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.4e-34 -4.44e-16         1
         *Z       ---       ---  1.49e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -2.22503e-33  -5.7931e-34 -1.85832e-35 -1.34343e-34 -3.85503e-36 -1.17276e-35 -1.87177e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.879, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 500 K
            Well    Collision, 1/sec
              W1         1.53843e+10
      global relaxation matrix dimension = 605
      setting global matrices ... done, cpu time[sec] = 0.735568, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.58548, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            64.4684      6.76636      1.32219      1.90336     0.174106      23.9147      1.20328
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.080196, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006988, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.087304, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    9.694e-13  4.37889e-33  3.04747e-34
      low eigenvalue method done, cpu time[sec] = 0.087659, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.38e-33 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.2e-34 -4.44e-16         1
         *Z       ---       ---  1.49e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -6.32007e-34  1.78971e-34  3.27681e-36  6.05735e-35  1.24804e-36 -1.55171e-35 -5.90126e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.8679, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 500 K
            Well    Collision, 1/sec
              W1         1.79484e+10
      global relaxation matrix dimension = 605
      setting global matrices ... done, cpu time[sec] = 0.568054, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.47138, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            55.2587      5.79974      1.13331      1.63145     0.149234      20.4983      1.03138
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.080266, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00702, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.087444, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.31644e-12  3.82514e-33  2.48507e-34
      low eigenvalue method done, cpu time[sec] = 0.08783, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.83e-33 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.04e-34 -4.44e-16         1
         *Z       ---       ---  1.49e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  2.35912e-33  4.78991e-34  1.49031e-35  8.06236e-35  2.65014e-36  9.54341e-36  4.49207e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.5932, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 500 K
            Well    Collision, 1/sec
              W1         2.05124e+10
      global relaxation matrix dimension = 605
      setting global matrices ... done, cpu time[sec] = 0.734518, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.55772, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            48.3513      5.07477     0.991643      1.42752     0.130579       17.936     0.902457
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.080279, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.007015, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.087428, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.23492e-12  3.39862e-33   2.0751e-34
      low eigenvalue method done, cpu time[sec] = 0.087792, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0   3.4e-33 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.28e-35 -4.44e-16         1
         *Z       ---       ---  1.49e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -2.88514e-34 -3.63626e-35  7.10027e-38  1.83437e-35  3.56757e-37 -1.78211e-37  -5.7603e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.8448, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 510 K
      Energy reference = 18897 1/cm
      Energy step      = 85 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -87.4 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.009519
         W1 Well: collisional kernel bandwidth = 36
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.495017
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.493174
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 1.75834
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 3.20015
         W1 Well: minimal relaxation eigenvalue = 0.0269346
         W1 Well: maximal relaxation eigenvalue = 1.29465
         W1 Well:       grid size = 594
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31593 1/cm
         B1 Barrier:        grid size = 223
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -58 1/cm
         B2 Barrier:        grid size = 220
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 197 1/cm
         B3 Barrier:        grid size = 277
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4648 1/cm
         B4 Barrier:        grid size = 295
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6178 1/cm
         B5 Barrier: nonpositive number of states at -23263 1/cm => truncating
         B5 Barrier:        grid size = 496
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23263 1/cm
         B6 Barrier:        grid size = 205
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1472 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4702 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 6.26227, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31593 -23263 3.95e+05 9.64e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -58 3.36e+13
         B2    198 3.57e+12
         B3  -4648 7.04e+11
         B4  -6178 1.01e+12
         B5 -23263 9.27e+10
         B6   1472 1.27e+13
         B7   4702 6.55e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.64e+16  5.29e+16  8.12e+11  8.66e+09  8.72e-13  3.22e+19  5.81e+23
          R  3.79e-17         1      2.01  3.08e-05  3.29e-07  3.31e-29  1.22e+03   2.2e+07
         P1  1.89e-17     0.498         1  1.53e-05  1.64e-07  1.65e-29       609   1.1e+07
         P2  1.23e-12  3.25e+04  6.52e+04         1    0.0107  1.07e-24  3.97e+07  7.16e+11
         P3  1.15e-10  3.04e+06  6.11e+06      93.7         1  1.01e-22  3.72e+09  6.71e+13
         P4  1.15e+12  3.02e+28  6.07e+28  9.31e+23  9.94e+21         1   3.7e+31  6.67e+35
         P5   3.1e-20  0.000818   0.00164  2.52e-08  2.69e-10   2.7e-32         1   1.8e+04
         P6  1.72e-24  4.54e-08   9.1e-08   1.4e-12  1.49e-14   1.5e-36  5.55e-05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.02e+13  2.05e+13  3.14e+08  3.35e+06  3.37e-16  1.25e+16  2.25e+20
          R  9.81e-14         1      2.01  3.08e-05  3.29e-07  3.31e-29  1.22e+03   2.2e+07
         P1  4.89e-14     0.498         1  1.53e-05  1.64e-07  1.65e-29       609   1.1e+07
         P2  3.19e-09  3.25e+04  6.52e+04         1    0.0107  1.07e-24  3.97e+07  7.16e+11
         P3  2.99e-07  3.04e+06  6.11e+06      93.7         1  1.01e-22  3.72e+09  6.71e+13
         P4  2.97e+15  3.02e+28  6.07e+28  9.31e+23  9.94e+21         1   3.7e+31  6.67e+35
         P5  8.02e-17  0.000818   0.00164  2.52e-08  2.69e-10   2.7e-32         1   1.8e+04
         P6  4.45e-21  4.54e-08   9.1e-08   1.4e-12  1.49e-14   1.5e-36  5.55e-05         1
   MasterEquation::set:  done, cpu time[sec] = 6.27307, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 510 K
            Well    Collision, 1/sec
              W1         5.04366e+08
      global relaxation matrix dimension = 594
      setting global matrices ... done, cpu time[sec] = 0.708222, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.31492, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2071.71      219.989      43.4134      62.1443       5.7186      784.174      40.4122
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.076627, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006682, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.083431, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   4.9433e-11  3.48125e-31  5.62908e-32
      low eigenvalue method done, cpu time[sec] = 0.083789, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.48e-31 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.38e-33 -4.44e-16         1
         *Z       ---       ---  5.42e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  3.45175e-32  1.19996e-32  1.70526e-34 -4.83558e-34  6.82877e-36   5.8557e-35   -1.284e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.55254, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 510 K
            Well    Collision, 1/sec
              W1          1.5131e+09
      global relaxation matrix dimension = 594
      setting global matrices ... done, cpu time[sec] = 0.713196, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.52734, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            690.571      73.3295      14.4711      20.7148       1.9062      261.391      13.4707
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.076416, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00666, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.083196, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.84491e-11  1.63999e-31  2.36247e-32
      low eigenvalue method done, cpu time[sec] = 0.083554, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.64e-31 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.42e-33 -4.44e-16         1
         *Z       ---       ---  5.42e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  2.17667e-32  5.71761e-33  1.73672e-34  1.04836e-33  3.12534e-35  1.14915e-34   8.4438e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.7305, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 510 K
            Well    Collision, 1/sec
              W1         2.52183e+09
      global relaxation matrix dimension = 594
      setting global matrices ... done, cpu time[sec] = 0.714766, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.52488, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            414.342      43.9977      8.68269      12.4289      1.14372      156.835      8.08244
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.076361, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.006669, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.083153, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   4.1359e-12  1.13115e-31  1.47763e-32
      low eigenvalue method done, cpu time[sec] = 0.083563, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.13e-31 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.05e-33 -4.44e-16         1
         *Z       ---       ---  5.42e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  7.32699e-33  1.41237e-33  5.59356e-35  4.57732e-34   1.2833e-35  8.22111e-36 -9.57811e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.7303, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 510 K
            Well    Collision, 1/sec
              W1         3.53056e+09
      global relaxation matrix dimension = 594
      setting global matrices ... done, cpu time[sec] = 0.714746, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.5348, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            295.959      31.4269      6.20192      8.87776     0.816944      112.025      5.77317
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.076421, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006648, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.083217, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.05982e-11  8.77517e-32  1.05831e-32
      low eigenvalue method done, cpu time[sec] = 0.083589, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.78e-32 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.36e-33 -4.44e-16         1
         *Z       ---       ---  5.42e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  1.05006e-32  2.88365e-33   7.9422e-35  5.76318e-34  1.67059e-35 -1.28005e-35  2.09373e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.7412, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 510 K
            Well    Collision, 1/sec
              W1         4.53929e+09
      global relaxation matrix dimension = 594
      setting global matrices ... done, cpu time[sec] = 0.714066, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.51294, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             230.19      24.4432      4.82372      6.90493     0.635401      87.1304      4.49024
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.076393, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00665, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.083165, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.28708e-11  7.22285e-32  8.14012e-33
      low eigenvalue method done, cpu time[sec] = 0.083521, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.22e-32 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.95e-33 -4.44e-16         1
         *Z       ---       ---  5.42e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  7.02014e-33  2.74941e-33  7.92024e-35  7.70361e-34  1.97595e-35   2.0652e-36   2.7574e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.7187, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 510 K
            Well    Collision, 1/sec
              W1         5.04366e+09
      global relaxation matrix dimension = 594
      setting global matrices ... done, cpu time[sec] = 0.710968, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.51357, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            207.171      21.9989      4.34134      6.21443      0.57186      78.4174      4.04122
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.076424, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006649, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.083192, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.27549e-11  6.64812e-32  7.26727e-33
      low eigenvalue method done, cpu time[sec] = 0.083563, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.65e-32 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.79e-33 -4.44e-16         1
         *Z       ---       ---  5.42e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -4.36603e-33 -9.75445e-34 -1.97099e-35  1.84896e-35 -1.20501e-36  2.66714e-35  2.00469e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.7133, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 510 K
            Well    Collision, 1/sec
              W1         7.56549e+09
      global relaxation matrix dimension = 594
      setting global matrices ... done, cpu time[sec] = 0.711914, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.53933, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            138.114      14.6659      2.89423      4.14296      0.38124      52.2783      2.69415
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.076379, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006646, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.083144, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.01107e-11  4.79736e-32   4.6087e-33
      low eigenvalue method done, cpu time[sec] = 0.083523, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   4.8e-32 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.29e-33 -4.44e-16         1
         *Z       ---       ---  5.42e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  1.05925e-33  9.70347e-34  1.70625e-35  1.37259e-34  3.81283e-36 -5.58506e-35  -6.7433e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.7431, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 510 K
            Well    Collision, 1/sec
              W1         1.00873e+10
      global relaxation matrix dimension = 594
      setting global matrices ... done, cpu time[sec] = 0.713733, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.52842, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            103.586      10.9994      2.17067      3.10722      0.28593      39.2087      2.02061
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.076503, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006632, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.08325, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.30013e-12   3.7801e-32  3.27531e-33
      low eigenvalue method done, cpu time[sec] = 0.083603, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.78e-32 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.02e-33 -4.44e-16         1
         *Z       ---       ---  5.42e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16   3.3141e-33  9.18536e-34  2.78888e-35  1.85819e-34  5.68251e-36  1.56178e-35  3.81093e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.7348, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 510 K
            Well    Collision, 1/sec
              W1         1.26092e+10
      global relaxation matrix dimension = 594
      setting global matrices ... done, cpu time[sec] = 0.714332, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.54296, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            82.8685      8.79954      1.73654      2.48577     0.228744       31.367      1.61649
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.076345, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006633, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.083092, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -3.3671e-12  3.13023e-32  2.48659e-33
      low eigenvalue method done, cpu time[sec] = 0.083449, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.13e-32 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.43e-34 -4.44e-16         1
         *Z       ---       ---  5.42e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -1.35802e-33 -4.67251e-34 -1.25825e-35 -8.78793e-35  -2.6857e-36   3.5487e-36  5.26396e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.7481, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 510 K
            Well    Collision, 1/sec
              W1          1.5131e+10
      global relaxation matrix dimension = 594
      setting global matrices ... done, cpu time[sec] = 0.716072, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.55638, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            69.0571      7.33295      1.44711      2.07148      0.19062      26.1391      1.34707
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.076383, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00666, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.083157, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.08687e-13  2.67673e-32  1.97178e-33
      low eigenvalue method done, cpu time[sec] = 0.083522, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.68e-32 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.21e-34 -4.44e-16         1
         *Z       ---       ---  5.42e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  3.69681e-33  9.29163e-34  2.30276e-35  1.08196e-34   3.8325e-36  8.56214e-36 -8.13884e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.7649, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 510 K
            Well    Collision, 1/sec
              W1         1.76528e+10
      global relaxation matrix dimension = 594
      setting global matrices ... done, cpu time[sec] = 0.716828, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.50201, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            59.1918      6.28539      1.24038      1.77555     0.163389       22.405      1.15463
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.076464, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006659, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.083237, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -1.9954e-12  2.34118e-32  1.61281e-33
      low eigenvalue method done, cpu time[sec] = 0.083592, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.34e-32 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.31e-34 -4.44e-16         1
         *Z       ---       ---  5.42e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -3.50862e-33 -7.79239e-34 -2.28721e-35 -1.29262e-34 -4.20115e-36 -5.08055e-38  6.30158e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.7067, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 510 K
            Well    Collision, 1/sec
              W1         2.01746e+10
      global relaxation matrix dimension = 594
      setting global matrices ... done, cpu time[sec] = 0.713817, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.50168, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            51.7928      5.49971      1.08534      1.55361     0.142965      19.6044       1.0103
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.076413, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006658, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.08319, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.06267e-12   2.0823e-32  1.35031e-33
      low eigenvalue method done, cpu time[sec] = 0.083553, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.08e-32 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.61e-34 -4.44e-16         1
         *Z       ---       ---  5.42e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  1.27789e-34  1.49739e-35  3.96477e-36   5.7748e-35  1.34291e-36 -1.09313e-36 -8.13248e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.7006, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 520 K
      Energy reference = 19175 1/cm
      Energy step      = 87 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -87.3 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.009534
         W1 Well: collisional kernel bandwidth = 36
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.489564
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.480373
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.416167
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 3.08037
         W1 Well: minimal relaxation eigenvalue = 0.0266036
         W1 Well: maximal relaxation eigenvalue = 2.49993
         W1 Well:       grid size = 584
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31632 1/cm
         B1 Barrier:        grid size = 221
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -51 1/cm
         B2 Barrier:        grid size = 218
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 209 1/cm
         B3 Barrier:        grid size = 274
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4662 1/cm
         B4 Barrier:        grid size = 292
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6228 1/cm
         B5 Barrier: nonpositive number of states at -23107 1/cm => truncating
         B5 Barrier:        grid size = 486
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23107 1/cm
         B6 Barrier:        grid size = 204
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1427 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4646 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 4.85832, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31632 -23107 4.42e+05 1.02e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -51 3.74e+13
         B2    210 4.01e+12
         B3  -4662    8e+11
         B4  -6228 1.14e+12
         B5 -23107 1.05e+11
         B6   1428 1.44e+13
         B7   4647 7.61e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  4.43e+15  8.81e+15  1.76e+11  2.05e+09  5.55e-13  5.02e+18  7.68e+22
          R  2.26e-16         1      1.99  3.97e-05  4.63e-07  1.25e-28  1.13e+03  1.73e+07
         P1  1.14e-16     0.503         1  1.99e-05  2.33e-07  6.31e-29       571  8.72e+06
         P2  5.69e-12  2.52e+04  5.01e+04         1    0.0117  3.16e-24  2.86e+07  4.37e+11
         P3  4.88e-10  2.16e+06   4.3e+06      85.7         1  2.71e-22  2.45e+09  3.75e+13
         P4   1.8e+12  7.97e+27  1.59e+28  3.16e+23  3.69e+21         1  9.05e+30  1.38e+35
         P5  1.99e-19  0.000881   0.00175   3.5e-08  4.08e-10  1.11e-31         1  1.53e+04
         P6   1.3e-23  5.76e-08  1.15e-07  2.29e-12  2.67e-14  7.23e-36  6.54e-05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.77e+12  3.52e+12  7.01e+07  8.18e+05  2.22e-16  2.01e+15  3.07e+19
          R  5.66e-13         1      1.99  3.97e-05  4.63e-07  1.25e-28  1.13e+03  1.73e+07
         P1  2.84e-13     0.503         1  1.99e-05  2.33e-07  6.31e-29       571  8.72e+06
         P2  1.43e-08  2.52e+04  5.01e+04         1    0.0117  3.16e-24  2.86e+07  4.37e+11
         P3  1.22e-06  2.16e+06   4.3e+06      85.7         1  2.71e-22  2.45e+09  3.75e+13
         P4  4.51e+15  7.97e+27  1.59e+28  3.16e+23  3.69e+21         1  9.05e+30  1.38e+35
         P5  4.98e-16  0.000881   0.00175   3.5e-08  4.08e-10  1.11e-31         1  1.53e+04
         P6  3.26e-20  5.76e-08  1.15e-07  2.29e-12  2.67e-14  7.23e-36  6.54e-05         1
   MasterEquation::set:  done, cpu time[sec] = 4.86925, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 520 K
            Well    Collision, 1/sec
              W1         4.96264e+08
      global relaxation matrix dimension = 584
      setting global matrices ... done, cpu time[sec] = 0.687125, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.26739, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             2216.3      238.091      47.4425      67.5379      6.25145      855.644      45.1376
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.072726, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.00647, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.079757, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.10815e-10  1.92196e-30  3.22164e-31
      low eigenvalue method done, cpu time[sec] = 0.080103, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.92e-30 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.11e-32 -4.44e-16         1
         *Z       ---       ---  2.05e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  1.81872e-31  7.61318e-32  2.17898e-33  1.57781e-32  4.43354e-34  1.72283e-34 -2.50941e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.37361, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 520 K
            Well    Collision, 1/sec
              W1         1.48879e+09
      global relaxation matrix dimension = 584
      setting global matrices ... done, cpu time[sec] = 0.68469, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.4391, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            738.766      79.3638      15.8142      22.5126      2.08382      285.215      15.0459
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.072412, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006403, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.07937, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.69931e-11  9.19148e-31  1.37384e-31
      low eigenvalue method done, cpu time[sec] = 0.079717, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.19e-31 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.45e-32 -4.44e-16         1
         *Z       ---       ---  2.05e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16   1.5513e-31  5.02561e-32  1.43169e-33   1.0635e-32  3.02417e-34  2.23047e-34  5.14574e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.5384, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 520 K
            Well    Collision, 1/sec
              W1         2.48132e+09
      global relaxation matrix dimension = 584
      setting global matrices ... done, cpu time[sec] = 0.687598, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.43795, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             443.26      47.6183      9.48849      13.5076      1.25029      171.129      9.02752
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.072468, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006378, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.0794, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.41525e-12  6.37968e-31  8.66426e-32
      low eigenvalue method done, cpu time[sec] = 0.079747, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.38e-31 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.7e-32 -4.44e-16         1
         *Z       ---       ---  2.05e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  7.49104e-32  2.27571e-32  5.90788e-34   3.8938e-33  1.16639e-34  3.27459e-35 -4.30419e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.5315, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 520 K
            Well    Collision, 1/sec
              W1         3.47385e+09
      global relaxation matrix dimension = 584
      setting global matrices ... done, cpu time[sec] = 0.687971, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.44307, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            316.614      34.0131       6.7775      9.64827     0.893065      122.235      6.44823
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.072398, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006361, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.079317, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.02883e-11  4.96847e-31  6.24129e-32
      low eigenvalue method done, cpu time[sec] = 0.079656, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.97e-31 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.32e-32 -4.44e-16         1
         *Z       ---       ---  2.05e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  6.24566e-32  1.72228e-32  4.79336e-34  3.22643e-33  9.66909e-35  1.02212e-34 -2.52239e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.3818, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 520 K
            Well    Collision, 1/sec
              W1         4.46638e+09
      global relaxation matrix dimension = 584
      setting global matrices ... done, cpu time[sec] = 0.686071, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.48826, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            246.255      26.4546      5.27139      7.50421     0.694606      95.0715      5.01529
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.072367, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00636, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.07928, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -8.15205e-12   4.1009e-31  4.82191e-32
      low eigenvalue method done, cpu time[sec] = 0.079626, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   4.1e-31 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.09e-32 -4.44e-16         1
         *Z       ---       ---  2.05e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  2.77283e-32  9.17049e-33  2.63463e-34  2.01952e-33  5.69199e-35  5.26447e-35  -7.1273e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.5868, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 520 K
            Well    Collision, 1/sec
              W1         4.96264e+09
      global relaxation matrix dimension = 584
      setting global matrices ... done, cpu time[sec] = 0.684747, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.4673, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             221.63      23.8091      4.74425      6.75379     0.625145      85.5644      4.51376
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.07241, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006348, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.079307, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.20609e-12  3.77884e-31  4.31302e-32
      low eigenvalue method done, cpu time[sec] = 0.079665, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.78e-31 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.01e-32 -4.44e-16         1
         *Z       ---       ---  2.05e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  3.47818e-32  9.82379e-33  2.65342e-34  1.75154e-33  5.30363e-35  2.00096e-35  1.67067e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.5599, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 520 K
            Well    Collision, 1/sec
              W1         7.44396e+09
      global relaxation matrix dimension = 584
      setting global matrices ... done, cpu time[sec] = 0.683045, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.4538, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            147.753      15.8728      3.16283      4.50253     0.416764      57.0429      3.00917
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.072311, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006381, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.079246, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.44839e-12  2.73814e-31  2.75565e-32
      low eigenvalue method done, cpu time[sec] = 0.079594, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.74e-31 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.28e-33 -4.44e-16         1
         *Z       ---       ---  2.05e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  1.88688e-32  3.65057e-33  1.24378e-34   6.6646e-34  2.21564e-35  1.54809e-34  2.56765e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.5456, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 520 K
            Well    Collision, 1/sec
              W1         9.92528e+09
      global relaxation matrix dimension = 584
      setting global matrices ... done, cpu time[sec] = 0.689219, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.44926, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            110.815      11.9046      2.37212      3.37689     0.312573      42.7822      2.25688
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.07226, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006384, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.079201, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.68052e-12  2.16342e-31  1.96903e-32
      low eigenvalue method done, cpu time[sec] = 0.079548, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.16e-31 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.76e-33 -4.44e-16         1
         *Z       ---       ---  2.05e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  1.43316e-32  4.31037e-33  1.31693e-34  9.62469e-34  2.74886e-35   6.3082e-35  1.72011e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.5479, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 520 K
            Well    Collision, 1/sec
              W1         1.24066e+10
      global relaxation matrix dimension = 584
      setting global matrices ... done, cpu time[sec] = 0.689023, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.44393, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             88.652      9.52366       1.8977      2.70152     0.250058      34.2258       1.8055
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.072317, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006376, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.079249, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -8.22232e-13  1.79507e-31  1.50127e-32
      low eigenvalue method done, cpu time[sec] = 0.079592, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.8e-31 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.78e-33 -4.44e-16         1
         *Z       ---       ---  2.05e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  2.06019e-32  4.85718e-33  1.24706e-34  6.01306e-34  2.13195e-35  4.47436e-35  9.46796e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.1343, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 520 K
            Well    Collision, 1/sec
              W1         1.48879e+10
      global relaxation matrix dimension = 584
      setting global matrices ... done, cpu time[sec] = 0.409139, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.27087, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            73.8766      7.93638      1.58142      2.25126     0.208382      28.5215      1.50459
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.072372, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006387, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.079355, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.66496e-12  1.53738e-31  1.19465e-32
      low eigenvalue method done, cpu time[sec] = 0.079712, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.54e-31 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.09e-33 -4.44e-16         1
         *Z       ---       ---  2.05e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  3.61262e-33  1.53682e-33  3.27966e-35  1.34395e-34  5.06628e-36 -1.29579e-35  1.94942e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.0841, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 520 K
            Well    Collision, 1/sec
              W1         1.73692e+10
      global relaxation matrix dimension = 584
      setting global matrices ... done, cpu time[sec] = 0.686252, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.44616, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            63.3228      6.80261       1.3555      1.92965     0.178613       24.447      1.28965
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.072375, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006396, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.079326, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.58431e-12  1.34634e-31  9.80089e-33
      low eigenvalue method done, cpu time[sec] = 0.079673, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.35e-31 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.58e-33 -4.44e-16         1
         *Z       ---       ---  2.05e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  6.85629e-33  6.19554e-34  2.82088e-35  4.71241e-35  3.53418e-36  7.50882e-35  1.04399e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.5456, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 520 K
            Well    Collision, 1/sec
              W1         1.98506e+10
      global relaxation matrix dimension = 584
      setting global matrices ... done, cpu time[sec] = 0.685679, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.45159, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            55.4075      5.95229      1.18606      1.68845     0.156286      21.3911      1.12844
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.072326, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006359, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.079243, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.57516e-12  1.19871e-31  8.22706e-33
      low eigenvalue method done, cpu time[sec] = 0.079583, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.2e-31 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.19e-33 -4.44e-16         1
         *Z       ---       ---  2.05e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  1.35287e-32  9.10212e-34  5.76087e-35  2.19423e-34  9.10046e-36  1.53725e-34  -5.3059e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.55, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 530 K
      Energy reference = 19453 1/cm
      Energy step      = 88 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -87.2 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.009016
         W1 Well: collisional kernel bandwidth = 36
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.504244
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.481209
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 1.67002
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 2.98001
         W1 Well: minimal relaxation eigenvalue = 0.0262767
         W1 Well: maximal relaxation eigenvalue = 1.26073
         W1 Well:       grid size = 580
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31586 1/cm
         B1 Barrier:        grid size = 222
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -82 1/cm
         B2 Barrier:        grid size = 219
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 181 1/cm
         B3 Barrier:        grid size = 274
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4658 1/cm
         B4 Barrier:        grid size = 292
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6242 1/cm
         B5 Barrier: nonpositive number of states at -23139 1/cm => truncating
         B5 Barrier:        grid size = 484
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23139 1/cm
         B6 Barrier:        grid size = 204
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1500 1/cm
         B7 Barrier:        grid size = 168
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4669 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 5.94958, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31586 -23139 4.32e+05 1.08e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -82 4.15e+13
         B2    182 4.51e+12
         B3  -4658 9.07e+11
         B4  -6242 1.28e+12
         B5 -23139  1.2e+11
         B6   1501 1.63e+13
         B7   4670 8.81e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  8.15e+14  1.61e+15  4.12e+10  5.24e+08  3.69e-13   8.6e+17  1.12e+22
          R  1.23e-15         1      1.97  5.06e-05  6.43e-07  4.52e-28  1.06e+03  1.38e+07
         P1  6.23e-16     0.507         1  2.57e-05  3.26e-07   2.3e-28       535  6.99e+06
         P2  2.43e-11  1.98e+04  3.89e+04         1    0.0127  8.94e-24  2.08e+07  2.72e+11
         P3  1.91e-09  1.55e+06  3.06e+06      78.7         1  7.03e-22  1.64e+09  2.14e+13
         P4  2.71e+12  2.21e+27  4.36e+27  1.12e+23  1.42e+21         1  2.33e+30  3.04e+34
         P5  1.16e-18  0.000948   0.00187   4.8e-08   6.1e-10  4.29e-31         1  1.31e+04
         P6  8.91e-23  7.26e-08  1.43e-07  3.68e-12  4.67e-14  3.29e-35  7.66e-05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  3.28e+11  6.46e+11  1.66e+07  2.11e+05  1.48e-16  3.46e+14  4.51e+18
          R  3.05e-12         1      1.97  5.06e-05  6.43e-07  4.52e-28  1.06e+03  1.38e+07
         P1  1.55e-12     0.507         1  2.57e-05  3.26e-07   2.3e-28       535  6.99e+06
         P2  6.03e-08  1.98e+04  3.89e+04         1    0.0127  8.94e-24  2.08e+07  2.72e+11
         P3  4.74e-06  1.55e+06  3.06e+06      78.7         1  7.03e-22  1.64e+09  2.14e+13
         P4  6.74e+15  2.21e+27  4.36e+27  1.12e+23  1.42e+21         1  2.33e+30  3.04e+34
         P5  2.89e-15  0.000948   0.00187   4.8e-08   6.1e-10  4.29e-31         1  1.31e+04
         P6  2.22e-19  7.26e-08  1.43e-07  3.68e-12  4.67e-14  3.29e-35  7.66e-05         1
   MasterEquation::set:  done, cpu time[sec] = 5.96072, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 530 K
            Well    Collision, 1/sec
              W1         4.88484e+08
      global relaxation matrix dimension = 580
      setting global matrices ... done, cpu time[sec] = 0.68343, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.30289, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2367.92      257.353      51.7684      73.2991      6.82383      932.078       50.303
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.07145, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006471, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.078321, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.14296e-11  9.83088e-30  1.70159e-30
      low eigenvalue method done, cpu time[sec] = 0.078663, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.83e-30         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.58e-31         0         1
         *Z       ---       ---  8.12e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.04986e-30   4.3404e-31  1.32178e-32  1.15938e-31  3.07294e-33  1.10458e-33 -5.14243e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.40006, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 530 K
            Well    Collision, 1/sec
              W1         1.46545e+09
      global relaxation matrix dimension = 580
      setting global matrices ... done, cpu time[sec] = 0.684229, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.45433, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            789.308      85.7843      17.2561       24.433      2.27461      310.693      16.7677
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.071192, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006275, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.07759, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.83227e-11  4.76976e-30  7.36833e-31
      low eigenvalue method done, cpu time[sec] = 0.077942, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.77e-30         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.25e-31         0         1
         *Z       ---       ---  8.12e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  5.44922e-31  1.83295e-31  5.26578e-33   4.0251e-32  1.13381e-33  1.09405e-33  2.14781e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.5626, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 530 K
            Well    Collision, 1/sec
              W1         2.44242e+09
      global relaxation matrix dimension = 580
      setting global matrices ... done, cpu time[sec] = 0.682347, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.41341, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            473.585      51.4706      10.3537      14.6598      1.36477      186.416      10.0606
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.071175, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.006291, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.077592, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   7.1739e-12  3.33072e-30  4.68413e-31
      low eigenvalue method done, cpu time[sec] = 0.077946, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.33e-30         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.75e-32         0         1
         *Z       ---       ---  8.12e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  4.65981e-31  1.50371e-31  4.12834e-33   2.9521e-32  8.49689e-34   5.8232e-34   3.2039e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.5197, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 530 K
            Well    Collision, 1/sec
              W1         3.41939e+09
      global relaxation matrix dimension = 580
      setting global matrices ... done, cpu time[sec] = 0.68287, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.43125, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            338.275      36.7647      7.39549      10.4713     0.974832      133.154      7.18614
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.071085, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00626, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.077462, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   1.5746e-11  2.60372e-30  3.39298e-31
      low eigenvalue method done, cpu time[sec] = 0.077805, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   2.6e-30         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.84e-32         0         1
         *Z       ---       ---  8.12e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  3.16709e-31  8.81503e-32    2.639e-33  1.87996e-32   5.4554e-34  1.02413e-33  4.47728e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.5386, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 530 K
            Well    Collision, 1/sec
              W1         4.39636e+09
      global relaxation matrix dimension = 580
      setting global matrices ... done, cpu time[sec] = 0.68422, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.42717, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            263.103      28.5948      5.75205      8.14434     0.758203      103.564      5.58922
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.071513, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006263, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.077899, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.07515e-12  2.15485e-30  2.63261e-31
      low eigenvalue method done, cpu time[sec] = 0.078248, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.15e-30         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.66e-32         0         1
         *Z       ---       ---  8.12e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.11197e-31  5.39577e-32  1.47878e-33  8.55509e-33  2.71527e-34  6.49843e-34  2.73023e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.5274, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 530 K
            Well    Collision, 1/sec
              W1         4.88484e+09
      global relaxation matrix dimension = 580
      setting global matrices ... done, cpu time[sec] = 0.681666, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.45163, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            236.792      25.7353      5.17684      7.32991     0.682383      93.2078       5.0303
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.071236, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006258, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.077633, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.23329e-12  1.98779e-30  2.35909e-31
      low eigenvalue method done, cpu time[sec] = 0.077979, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.99e-30         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.22e-32         0         1
         *Z       ---       ---  8.12e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.76948e-31  4.14163e-32  1.17594e-33  6.42725e-33  2.10584e-34  5.37169e-34  5.29515e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.5557, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 530 K
            Well    Collision, 1/sec
              W1         7.32726e+09
      global relaxation matrix dimension = 580
      setting global matrices ... done, cpu time[sec] = 0.682591, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.4454, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            157.862      17.1569      3.45123      4.88661     0.454922      62.1385      3.35353
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.071161, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006252, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.077534, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   1.3212e-12  1.44616e-30  1.51817e-31
      low eigenvalue method done, cpu time[sec] = 0.077877, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.45e-30         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   3.8e-32         0         1
         *Z       ---       ---  8.12e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0   8.9411e-32  2.09389e-32  6.35167e-34  4.16886e-33  1.26412e-34  2.91674e-34  3.26036e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.553, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 530 K
            Well    Collision, 1/sec
              W1         9.76968e+09
      global relaxation matrix dimension = 580
      setting global matrices ... done, cpu time[sec] = 0.684864, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.43047, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            118.396      12.8676      2.58842      3.66495     0.341191      46.6039      2.51515
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.071327, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006254, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.0777, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.25843e-11  1.14568e-30  1.09053e-31
      low eigenvalue method done, cpu time[sec] = 0.078045, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.15e-30         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.01e-32         0         1
         *Z       ---       ---  8.12e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  4.42262e-32  1.25226e-32  3.54676e-34  2.55155e-33  7.36392e-35  4.33678e-37 -3.44275e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.5413, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 530 K
            Well    Collision, 1/sec
              W1         1.22121e+10
      global relaxation matrix dimension = 580
      setting global matrices ... done, cpu time[sec] = 0.683589, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.4277, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             94.717      10.2941      2.07074      2.93196     0.272953      37.2831      2.01212
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.071547, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006256, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.077923, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.31099e-12  9.52478e-31  8.34925e-32
      low eigenvalue method done, cpu time[sec] = 0.078268, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.52e-31         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   2.5e-32         0         1
         *Z       ---       ---  8.12e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  6.71972e-32  1.65197e-32  4.81311e-34  3.16807e-33  9.58209e-35  2.15952e-34  5.82321e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.5321, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 530 K
            Well    Collision, 1/sec
              W1         1.46545e+10
      global relaxation matrix dimension = 580
      setting global matrices ... done, cpu time[sec] = 0.682821, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.45343, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            78.9308      8.57843      1.72561       2.4433     0.227461      31.0693      1.67677
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.071169, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006271, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.077565, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.29198e-12  8.16995e-31   6.6668e-32
      low eigenvalue method done, cpu time[sec] = 0.077913, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.17e-31         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.15e-32         0         1
         *Z       ---       ---  8.12e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  3.62589e-32  1.09631e-32  3.11279e-34  2.26849e-33  6.52086e-35  9.79784e-35  2.47503e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.5558, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 530 K
            Well    Collision, 1/sec
              W1         1.70969e+10
      global relaxation matrix dimension = 580
      setting global matrices ... done, cpu time[sec] = 0.681948, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.45848, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             67.655      7.35294       1.4791      2.09426     0.194966      26.6308      1.43723
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.071185, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006274, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.077577, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.63259e-13  7.16359e-31   5.4854e-32
      low eigenvalue method done, cpu time[sec] = 0.077924, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.16e-31         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.88e-32         0         1
         *Z       ---       ---  8.12e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  3.76181e-32  9.55186e-33  2.88301e-34  1.91472e-33  5.73909e-35   1.2789e-34 -1.41193e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.5622, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 530 K
            Well    Collision, 1/sec
              W1         1.95394e+10
      global relaxation matrix dimension = 580
      setting global matrices ... done, cpu time[sec] = 0.683739, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.45548, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            59.1981      6.43382      1.29421      1.83248     0.170596       23.302      1.25757
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.071186, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006286, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.07759, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -9.52712e-13  6.38467e-31  4.61625e-32
      low eigenvalue method done, cpu time[sec] = 0.077937, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.38e-31         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.68e-32         0         1
         *Z       ---       ---  8.12e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0   2.4019e-32  6.28476e-33  1.84322e-34  1.15715e-33  3.53167e-35  7.85301e-35  4.63473e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.5558, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 540 K
      Energy reference = 19731 1/cm
      Energy step      = 90 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -87.2 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.009182
         W1 Well: collisional kernel bandwidth = 36
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.472886
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.454314
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.342598
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 2.91569
         W1 Well: minimal relaxation eigenvalue = 0.0259495
         W1 Well: maximal relaxation eigenvalue = 1.21786
         W1 Well:       grid size = 570
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31569 1/cm
         B1 Barrier:        grid size = 220
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -69 1/cm
         B2 Barrier:        grid size = 217
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 200 1/cm
         B3 Barrier:        grid size = 271
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4658 1/cm
         B4 Barrier:        grid size = 288
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6189 1/cm
         B5 Barrier: nonpositive number of states at -23109 1/cm => truncating
         B5 Barrier:        grid size = 476
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23109 1/cm
         B6 Barrier:        grid size = 203
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1461 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4700 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 4.57146, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31569 -23109 4.42e+05 1.14e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -69  4.6e+13
         B2    201 5.06e+12
         B3  -4658 1.03e+12
         B4  -6189 1.45e+12
         B5 -23109 1.36e+11
         B6   1462 1.85e+13
         B7   4701 1.02e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.57e+14  3.07e+14  1.01e+10  1.39e+08  2.44e-13  1.54e+17  1.73e+21
          R  6.37e-15         1      1.95   6.4e-05  8.83e-07  1.56e-27       984   1.1e+07
         P1  3.26e-15     0.512         1  3.27e-05  4.52e-07  7.96e-28       503  5.64e+06
         P2  9.95e-11  1.56e+04  3.05e+04         1    0.0138  2.43e-23  1.54e+07  1.72e+11
         P3  7.21e-09  1.13e+06  2.21e+06      72.5         1  1.76e-21  1.11e+09  1.25e+13
         P4  4.09e+12  6.42e+26  1.26e+27  4.11e+22  5.67e+20         1  6.32e+29  7.08e+33
         P5  6.47e-18   0.00102   0.00199  6.51e-08  8.98e-10  1.58e-30         1  1.12e+04
         P6  5.78e-22  9.07e-08  1.77e-07  5.81e-12  8.01e-14  1.41e-34  8.92e-05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  6.46e+10  1.26e+11  4.14e+06  5.71e+04  1.01e-16  6.36e+13  7.13e+17
          R  1.55e-11         1      1.95   6.4e-05  8.83e-07  1.56e-27       984   1.1e+07
         P1  7.92e-12     0.512         1  3.27e-05  4.52e-07  7.96e-28       503  5.64e+06
         P2  2.42e-07  1.56e+04  3.05e+04         1    0.0138  2.43e-23  1.54e+07  1.72e+11
         P3  1.75e-05  1.13e+06  2.21e+06      72.5         1  1.76e-21  1.11e+09  1.25e+13
         P4  9.94e+15  6.42e+26  1.26e+27  4.11e+22  5.67e+20         1  6.32e+29  7.08e+33
         P5  1.57e-14   0.00102   0.00199  6.51e-08  8.98e-10  1.58e-30         1  1.12e+04
         P6   1.4e-18  9.07e-08  1.77e-07  5.81e-12  8.01e-14  1.41e-34  8.92e-05         1
   MasterEquation::set:  done, cpu time[sec] = 4.5823, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 540 K
            Well    Collision, 1/sec
              W1         4.81006e+08
      global relaxation matrix dimension = 570
      setting global matrices ... done, cpu time[sec] = 0.656797, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.23734, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2526.87      277.823      56.4075      79.4462      7.43789      1013.71      55.9388
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.067955, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006397, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.074892, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.23717e-10  4.75536e-29  8.47662e-30
      low eigenvalue method done, cpu time[sec] = 0.075223, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.76e-29         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.23e-30         0         1
         *Z       ---       ---  3.31e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  5.43401e-30   2.1541e-30  6.60701e-32  5.84817e-31  1.55364e-32  3.91225e-33 -4.92041e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.26361, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 540 K
            Well    Collision, 1/sec
              W1         1.44302e+09
      global relaxation matrix dimension = 570
      setting global matrices ... done, cpu time[sec] = 0.65674, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.21449, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             842.29      92.6078      18.8025      26.4821       2.4793      337.903      18.6463
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.067738, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006013, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.074296, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.33005e-11  2.33951e-29  3.72604e-30
      low eigenvalue method done, cpu time[sec] = 0.074622, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.34e-29         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.07e-31         0         1
         *Z       ---       ---  3.31e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.49209e-30  8.05085e-31  2.29175e-32  1.70817e-31  4.85714e-33  4.76774e-33  2.17532e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.235, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 540 K
            Well    Collision, 1/sec
              W1         2.40503e+09
      global relaxation matrix dimension = 570
      setting global matrices ... done, cpu time[sec] = 0.655489, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.21941, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            505.374      55.5647      11.2815      15.8892      1.48758      202.742      11.1878
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.068002, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006004, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.074535, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.28678e-12  1.64331e-29  2.38725e-30
      low eigenvalue method done, cpu time[sec] = 0.074873, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.64e-29         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.26e-31         0         1
         *Z       ---       ---  3.31e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.61344e-30  4.72009e-31  1.31777e-32  8.85606e-32   2.6292e-33   3.7903e-33 -8.51955e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.2352, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 540 K
            Well    Collision, 1/sec
              W1         3.36704e+09
      global relaxation matrix dimension = 570
      setting global matrices ... done, cpu time[sec] = 0.655885, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.24343, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            360.981      39.6891      8.05821      11.3495      1.06256      144.815      7.99126
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.067909, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005994, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.074431, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.22192e-12  1.28933e-29  1.73864e-30
      low eigenvalue method done, cpu time[sec] = 0.074754, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.29e-29         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.35e-31         0         1
         *Z       ---       ---  3.31e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.47174e-30  4.10188e-31  1.15821e-32  7.63016e-32  2.28555e-33  3.78805e-33 -7.56324e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.2646, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 540 K
            Well    Collision, 1/sec
              W1         4.32905e+09
      global relaxation matrix dimension = 570
      setting global matrices ... done, cpu time[sec] = 0.65685, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.26462, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            280.763      30.8693       6.2675      8.82735     0.826433      112.634      6.21543
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.067852, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.074377, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.05105e-11  1.06987e-29  1.35469e-30
      low eigenvalue method done, cpu time[sec] = 0.07471, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.07e-29         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.78e-31         0         1
         *Z       ---       ---  3.31e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0   8.4346e-31  2.18788e-31  6.21294e-33  3.98459e-32  1.21676e-33  2.31458e-33 -7.39272e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.2864, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 540 K
            Well    Collision, 1/sec
              W1         4.81006e+09
      global relaxation matrix dimension = 570
      setting global matrices ... done, cpu time[sec] = 0.657036, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.20899, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            252.687      27.7823      5.64075      7.94462     0.743789      101.371      5.59388
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.067742, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005992, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.074264, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.63485e-11  9.87983e-30  1.21612e-30
      low eigenvalue method done, cpu time[sec] = 0.074589, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.88e-30         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.56e-31         0         1
         *Z       ---       ---  3.31e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  8.94039e-31  2.16536e-31  6.23383e-33  3.79662e-32  1.19101e-33  3.30367e-33 -1.69137e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.231, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 540 K
            Well    Collision, 1/sec
              W1         7.21509e+09
      global relaxation matrix dimension = 570
      setting global matrices ... done, cpu time[sec] = 0.657188, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.20823, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            168.458      18.5216       3.7605      5.29641      0.49586      67.5806      3.72926
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.068063, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005986, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.074577, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -7.4563e-12  7.21633e-30   7.8819e-31
      low eigenvalue method done, cpu time[sec] = 0.074904, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.22e-30         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.87e-31         0         1
         *Z       ---       ---  3.31e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  7.13925e-31  1.70951e-31  4.90983e-33  2.83246e-32  9.05413e-34  2.76912e-33 -1.29422e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.2252, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 540 K
            Well    Collision, 1/sec
              W1         9.62012e+09
      global relaxation matrix dimension = 570
      setting global matrices ... done, cpu time[sec] = 0.655021, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.22478, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            126.343      13.8912      2.82038      3.97231     0.371895      50.6854      2.79694
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.067745, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006002, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.074278, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.50079e-12  5.73207e-30  5.69108e-31
      low eigenvalue method done, cpu time[sec] = 0.074613, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.73e-30         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.49e-31         0         1
         *Z       ---       ---  3.31e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  4.83509e-31  1.06517e-31  3.11757e-33   1.7067e-32  5.62604e-34   2.0489e-33  5.40293e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.2392, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 540 K
            Well    Collision, 1/sec
              W1         1.20251e+10
      global relaxation matrix dimension = 570
      setting global matrices ... done, cpu time[sec] = 0.653469, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.22631, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            101.075      11.1129       2.2563      3.17785     0.297516      40.5483      2.23755
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.06778, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006018, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.074329, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.58466e-12  4.77475e-30  4.37501e-31
      low eigenvalue method done, cpu time[sec] = 0.074672, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.77e-30         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.24e-31         0         1
         *Z       ---       ---  3.31e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.57369e-31  5.40481e-32  1.63652e-33  8.75624e-33  2.90198e-34  1.34172e-33 -3.10864e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.2408, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 540 K
            Well    Collision, 1/sec
              W1         1.44302e+10
      global relaxation matrix dimension = 570
      setting global matrices ... done, cpu time[sec] = 0.655931, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.26534, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             84.229      9.26078      1.88025      2.64821      0.24793      33.7903      1.86463
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.067866, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006007, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.074399, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   5.2453e-12  4.10182e-30  3.50522e-31
      low eigenvalue method done, cpu time[sec] = 0.074722, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   4.1e-30         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.06e-31         0         1
         *Z       ---       ---  3.31e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.74992e-31  5.53865e-32   1.6334e-33   7.9474e-33  2.76985e-34  1.27322e-33 -1.78148e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.2871, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 540 K
            Well    Collision, 1/sec
              W1         1.68352e+10
      global relaxation matrix dimension = 570
      setting global matrices ... done, cpu time[sec] = 0.656708, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.26054, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            72.1963      7.93781      1.61164      2.26989     0.212511      28.9631      1.59825
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.067828, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005996, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.074353, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.44344e-12  3.60102e-30  2.89238e-31
      low eigenvalue method done, cpu time[sec] = 0.074685, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   3.6e-30         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.34e-32         0         1
         *Z       ---       ---  3.31e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0   1.9365e-31   4.8817e-32   1.4057e-33  8.64113e-33  2.66934e-34  5.21097e-34  5.52088e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.2795, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 540 K
            Well    Collision, 1/sec
              W1         1.92402e+10
      global relaxation matrix dimension = 570
      setting global matrices ... done, cpu time[sec] = 0.656868, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.27809, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            63.1717      6.94559      1.41019      1.98615     0.185947      25.3427      1.39847
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.067828, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005998, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.074359, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.26971e-12  3.21279e-30  2.44019e-31
      low eigenvalue method done, cpu time[sec] = 0.07469, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.21e-30         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.34e-32         0         1
         *Z       ---       ---  3.31e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.59432e-31  3.34824e-32  9.88185e-34  5.40333e-33  1.78925e-34  6.17308e-34  4.65181e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.94128, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 550 K
      Energy reference = 20009 1/cm
      Energy step      = 92 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -87.1 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.005848
         W1 Well: collisional kernel bandwidth = 36
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.259912
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.289117
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 1.85387
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 2.71373
         W1 Well: minimal relaxation eigenvalue = 0.0256195
         W1 Well: maximal relaxation eigenvalue = 1.33435
         W1 Well:       grid size = 561
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31603 1/cm
         B1 Barrier:        grid size = 218
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -46 1/cm
         B2 Barrier:        grid size = 216
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 136 1/cm
         B3 Barrier:        grid size = 268
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4646 1/cm
         B4 Barrier:        grid size = 285
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6210 1/cm
         B5 Barrier: nonpositive number of states at -23139 1/cm => truncating
         B5 Barrier:        grid size = 469
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23138 1/cm
         B6 Barrier:        grid size = 202
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1425 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4645 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 5.42324, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31603 -23138 4.32e+05  1.2e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -46  5.1e+13
         B2    137 5.67e+12
         B3  -4646 1.16e+12
         B4  -6210 1.63e+12
         B5 -23138 1.53e+11
         B6   1426 2.09e+13
         B7   4646 1.18e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  3.22e+13  6.25e+13  2.59e+09  3.86e+07  1.65e-13  2.96e+16  2.87e+20
          R   3.1e-14         1      1.94  8.03e-05   1.2e-06  5.12e-27       919   8.9e+06
         P1   1.6e-14     0.516         1  4.14e-05  6.18e-07  2.64e-27       474  4.59e+06
         P2  3.87e-10  1.25e+04  2.42e+04         1    0.0149  6.38e-23  1.15e+07  1.11e+11
         P3  2.59e-08  8.34e+05  1.62e+06      66.9         1  4.27e-21  7.67e+08  7.42e+12
         P4  6.06e+12  1.95e+26  3.79e+26  1.57e+22  2.34e+20         1  1.79e+29  1.74e+33
         P5  3.38e-17   0.00109   0.00211  8.73e-08   1.3e-09  5.57e-30         1  9.68e+03
         P6  3.49e-21  1.12e-07  2.18e-07  9.02e-12  1.35e-13  5.76e-34  0.000103         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.35e+10  2.62e+10  1.08e+06  1.62e+04  6.92e-17  1.24e+13   1.2e+17
          R   7.4e-11         1      1.94  8.03e-05   1.2e-06  5.12e-27       919   8.9e+06
         P1  3.82e-11     0.516         1  4.14e-05  6.18e-07  2.64e-27       474  4.59e+06
         P2  9.22e-07  1.25e+04  2.42e+04         1    0.0149  6.38e-23  1.15e+07  1.11e+11
         P3  6.17e-05  8.34e+05  1.62e+06      66.9         1  4.27e-21  7.67e+08  7.42e+12
         P4  1.44e+16  1.95e+26  3.79e+26  1.57e+22  2.34e+20         1  1.79e+29  1.74e+33
         P5  8.05e-14   0.00109   0.00211  8.73e-08   1.3e-09  5.57e-30         1  9.68e+03
         P6  8.31e-18  1.12e-07  2.18e-07  9.02e-12  1.35e-13  5.76e-34  0.000103         1
   MasterEquation::set:  done, cpu time[sec] = 5.43456, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 550 K
            Well    Collision, 1/sec
              W1         4.73812e+08
      global relaxation matrix dimension = 561
      setting global matrices ... done, cpu time[sec] = 0.637536, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.27524, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2693.26      299.559      61.3764      85.9979      8.09591      1100.77      62.0773
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.065231, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005751, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.071088, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   4.6735e-11  2.16709e-28  3.96643e-29
      low eigenvalue method done, cpu time[sec] = 0.071427, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.17e-28 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.55e-30 -4.44e-16         1
         *Z       ---       ---   1.4e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  2.58232e-29    1.022e-29  3.09497e-31    2.694e-30  7.19075e-32  2.31259e-32  6.21531e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.22919, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 550 K
            Well    Collision, 1/sec
              W1         1.42144e+09
      global relaxation matrix dimension = 561
      setting global matrices ... done, cpu time[sec] = 0.636747, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.15584, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            897.753      99.8531      20.4588       28.666      2.69864      366.924      20.6924
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.064865, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005731, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.070707, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.77572e-11  1.08042e-28  1.76876e-29
      low eigenvalue method done, cpu time[sec] = 0.071039, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.08e-28 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.77e-30 -4.44e-16         1
         *Z       ---       ---   1.4e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  1.22874e-29   3.9505e-30  1.10563e-31  8.05204e-31  2.31138e-32  1.96695e-32 -3.34477e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.1103, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 550 K
            Well    Collision, 1/sec
              W1         2.36906e+09
      global relaxation matrix dimension = 561
      setting global matrices ... done, cpu time[sec] = 0.637707, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.14806, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            538.652      59.9118      12.2753      17.1996      1.61918      220.155      12.4155
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.064834, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005732, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.070676, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.18776e-11  7.63204e-29  1.14182e-29
      low eigenvalue method done, cpu time[sec] = 0.071019, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.63e-29 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.96e-30 -4.44e-16         1
         *Z       ---       ---   1.4e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  8.28551e-30  2.37108e-30  6.59379e-32  4.39462e-31   1.3128e-32  1.93664e-32 -1.80606e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.0991, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 550 K
            Well    Collision, 1/sec
              W1         3.31668e+09
      global relaxation matrix dimension = 561
      setting global matrices ... done, cpu time[sec] = 0.637999, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.17816, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            384.751      42.7942      8.76806      12.2854      1.15656      157.253      8.86818
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.064804, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005735, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.070644, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -9.08175e-12  6.00933e-29  8.35976e-30
      low eigenvalue method done, cpu time[sec] = 0.070954, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.01e-29 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.54e-30 -4.44e-16         1
         *Z       ---       ---   1.4e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  6.54069e-30  1.82641e-30  5.05661e-32   3.2552e-31  9.87538e-33  1.74561e-32  5.23859e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.1326, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 550 K
            Well    Collision, 1/sec
              W1         4.26431e+09
      global relaxation matrix dimension = 561
      setting global matrices ... done, cpu time[sec] = 0.639665, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.17487, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            299.251      33.2844       6.8196      9.55532     0.899546      122.308      6.89748
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.064788, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005729, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.070623, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.49948e-11  4.99916e-29  6.54024e-30
      low eigenvalue method done, cpu time[sec] = 0.070949, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0     5e-29 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.28e-30 -4.44e-16         1
         *Z       ---       ---   1.4e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  5.13491e-30  1.31908e-30  3.70992e-32    2.278e-31   7.0785e-33  1.55735e-32 -2.80533e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.84642, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 550 K
            Well    Collision, 1/sec
              W1         4.73812e+09
      global relaxation matrix dimension = 561
      setting global matrices ... done, cpu time[sec] = 0.389501, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.64225, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            269.326      29.9559      6.13764      8.59979     0.809591      110.077      6.20773
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.064965, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005715, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.070798, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.08495e-11  4.62137e-29   5.8815e-30
      low eigenvalue method done, cpu time[sec] = 0.071123, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.62e-29 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.18e-30 -4.44e-16         1
         *Z       ---       ---   1.4e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  4.43513e-30  1.13822e-30  3.23476e-32  1.99281e-31  6.18096e-33  1.45378e-32  8.17379e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.33789, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 550 K
            Well    Collision, 1/sec
              W1         7.10718e+09
      global relaxation matrix dimension = 561
      setting global matrices ... done, cpu time[sec] = 0.628187, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.17542, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            179.551      19.9706      4.09176      5.73319     0.539727      73.3849      4.13849
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.0649, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005736, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.070748, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.14487e-12  3.38858e-29  3.83825e-30
      low eigenvalue method done, cpu time[sec] = 0.071098, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.39e-29 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.68e-31 -4.44e-16         1
         *Z       ---       ---   1.4e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  2.67461e-30  6.24992e-31  1.79306e-32  1.01276e-31  3.27632e-33  1.01191e-32 -2.24927e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.1261, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 550 K
            Well    Collision, 1/sec
              W1         9.47624e+09
      global relaxation matrix dimension = 561
      setting global matrices ... done, cpu time[sec] = 0.635978, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.18303, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            134.663       14.978      3.06882      4.29989     0.404796      55.0386      3.10386
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.06482, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005705, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.070631, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -6.71102e-12   2.6986e-29   2.7854e-30
      low eigenvalue method done, cpu time[sec] = 0.070951, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   2.7e-29 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.91e-31 -4.44e-16         1
         *Z       ---       ---   1.4e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16    2.123e-30  4.98943e-31  1.40586e-32  7.76938e-32  2.54021e-33  7.61192e-33 -1.20187e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.1388, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 550 K
            Well    Collision, 1/sec
              W1         1.18453e+10
      global relaxation matrix dimension = 561
      setting global matrices ... done, cpu time[sec] = 0.639503, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.15378, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             107.73      11.9824      2.45506      3.43992     0.323836      44.0309      2.48309
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.064806, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00572, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.070718, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.18848e-11  2.25222e-29  2.14983e-30
      low eigenvalue method done, cpu time[sec] = 0.071041, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.25e-29 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.77e-31 -4.44e-16         1
         *Z       ---       ---   1.4e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  1.89484e-30  3.99005e-31  1.19565e-32  6.31498e-32  2.11343e-33  9.73605e-33  3.06775e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.1117, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 550 K
            Well    Collision, 1/sec
              W1         1.42144e+10
      global relaxation matrix dimension = 561
      setting global matrices ... done, cpu time[sec] = 0.640043, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.18029, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            89.7753      9.98531      2.04588       2.8666     0.269864      36.6924      2.06924
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.064943, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00568, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.070729, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.54616e-12  1.93772e-29  1.72812e-30
      low eigenvalue method done, cpu time[sec] = 0.071055, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.94e-29 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.96e-31 -4.44e-16         1
         *Z       ---       ---   1.4e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  1.33891e-30  2.86113e-31  8.39063e-33  4.35523e-32   1.4711e-33  6.12286e-33  1.66171e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.1368, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 550 K
            Well    Collision, 1/sec
              W1         1.65834e+10
      global relaxation matrix dimension = 561
      setting global matrices ... done, cpu time[sec] = 0.638292, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.17827, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            76.9502      8.55883      1.75361      2.45708     0.231312      31.4507      1.77364
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.064875, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00571, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.070688, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.83459e-13  1.70323e-29     1.43e-30
      low eigenvalue method done, cpu time[sec] = 0.071008, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.7e-29 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.36e-31 -4.44e-16         1
         *Z       ---       ---   1.4e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  9.38395e-31  2.02602e-31  6.03395e-33  3.31069e-32  1.08842e-33  4.61743e-33     3.71e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.128, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 550 K
            Well    Collision, 1/sec
              W1         1.89525e+10
      global relaxation matrix dimension = 561
      setting global matrices ... done, cpu time[sec] = 0.638854, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.18209, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            67.3315      7.48898      1.53441      2.14995     0.202398      27.5193      1.55193
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.064787, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005678, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.070572, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.58366e-12  1.52116e-29  1.20939e-30
      low eigenvalue method done, cpu time[sec] = 0.070889, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.52e-29 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   3.9e-31 -4.44e-16         1
         *Z       ---       ---   1.4e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  8.86699e-31  1.67968e-31  5.39622e-33  2.77206e-32  9.44305e-34   6.2835e-33  4.53053e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.1401, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 560 K
      Energy reference = 20287 1/cm
      Energy step      = 93 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -87 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.008384
         W1 Well: collisional kernel bandwidth = 36
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.459284
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.435187
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.378869
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 2.75661
         W1 Well: minimal relaxation eigenvalue = 0.02532
         W1 Well: maximal relaxation eigenvalue = 1.36927
         W1 Well:       grid size = 558
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31606 1/cm
         B1 Barrier:        grid size = 219
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -79 1/cm
         B2 Barrier:        grid size = 216
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 199 1/cm
         B3 Barrier:        grid size = 268
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4637 1/cm
         B4 Barrier:        grid size = 285
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6217 1/cm
         B5 Barrier: nonpositive number of states at -23237 1/cm => truncating
         B5 Barrier:        grid size = 468
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23236 1/cm
         B6 Barrier:        grid size = 202
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1500 1/cm
         B7 Barrier:        grid size = 168
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4663 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 4.33893, elapsed time[sec] = 1
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31606 -23236 4.02e+05 1.26e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -79 5.65e+13
         B2    200 6.36e+12
         B3  -4637 1.31e+12
         B4  -6217 1.83e+12
         B5 -23236 1.73e+11
         B6   1501 2.35e+13
         B7   4664 1.35e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  7.05e+12  1.36e+13  7.04e+08  1.14e+07  1.14e-13  6.07e+15   5.1e+19
          R  1.42e-13         1      1.92  9.98e-05  1.61e-06  1.61e-26       861  7.23e+06
         P1  7.37e-14      0.52         1  5.19e-05  8.36e-07  8.39e-27       447  3.76e+06
         P2  1.42e-09     1e+04  1.93e+04         1    0.0161  1.62e-22  8.62e+06  7.25e+10
         P3  8.81e-08  6.21e+05   1.2e+06        62         1     1e-20  5.35e+08  4.49e+12
         P4  8.78e+12  6.19e+25  1.19e+26  6.18e+21  9.97e+19         1  5.33e+28  4.48e+32
         P5  1.65e-16   0.00116   0.00224  1.16e-07  1.87e-09  1.88e-29         1  8.41e+03
         P6  1.96e-20  1.38e-07  2.66e-07  1.38e-11  2.23e-13  2.23e-33  0.000119         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.99e+09  5.75e+09  2.98e+05  4.81e+03  4.83e-17  2.57e+12  2.16e+16
          R  3.35e-10         1      1.92  9.98e-05  1.61e-06  1.61e-26       861  7.23e+06
         P1  1.74e-10      0.52         1  5.19e-05  8.36e-07  8.39e-27       447  3.76e+06
         P2  3.35e-06     1e+04  1.93e+04         1    0.0161  1.62e-22  8.62e+06  7.25e+10
         P3  0.000208  6.21e+05   1.2e+06        62         1     1e-20  5.35e+08  4.49e+12
         P4  2.07e+16  6.19e+25  1.19e+26  6.18e+21  9.97e+19         1  5.33e+28  4.48e+32
         P5  3.89e-13   0.00116   0.00224  1.16e-07  1.87e-09  1.88e-29         1  8.41e+03
         P6  4.62e-17  1.38e-07  2.66e-07  1.38e-11  2.23e-13  2.23e-33  0.000119         1
   MasterEquation::set:  done, cpu time[sec] = 4.35035, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 560 K
            Well    Collision, 1/sec
              W1         4.66885e+08
      global relaxation matrix dimension = 558
      setting global matrices ... done, cpu time[sec] = 0.630755, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.25185, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2867.32      322.615      66.6924      92.9734       8.8002      1193.52      68.7511
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.064212, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006069, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.070798, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.24974e-10  9.37096e-28   1.7581e-28
      low eigenvalue method done, cpu time[sec] = 0.071121, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.37e-28  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.37e-29  2.22e-16         1
         *Z       ---       ---  6.12e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  1.16823e-28  4.59954e-29  1.39998e-30  1.22468e-29  3.26044e-31  9.96885e-32 -1.16018e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.18788, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 560 K
            Well    Collision, 1/sec
              W1         1.40066e+09
      global relaxation matrix dimension = 558
      setting global matrices ... done, cpu time[sec] = 0.628901, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.02805, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            955.772      107.538      22.2308      30.9911       2.9334      397.838       22.917
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.064173, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005697, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.070382, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.76766e-11  4.73256e-28  7.95106e-29
      low eigenvalue method done, cpu time[sec] = 0.070708, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.73e-28  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.2e-29  2.22e-16         1
         *Z       ---       ---  6.12e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  5.84528e-29  1.87414e-29  5.24929e-31  3.79964e-30   1.0923e-31  9.62723e-32    2.029e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.95911, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 560 K
            Well    Collision, 1/sec
              W1         2.33443e+09
      global relaxation matrix dimension = 558
      setting global matrices ... done, cpu time[sec] = 0.628024, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.02851, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            573.463      64.5231      13.3385      18.5947      1.76004      238.703      13.7502
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.064105, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005688, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.070298, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.48848e-11   3.3615e-28  5.17063e-29
      low eigenvalue method done, cpu time[sec] = 0.070622, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.36e-28  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.51e-30  2.22e-16         1
         *Z       ---       ---  6.12e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  3.85436e-29  1.10872e-29  3.09206e-31  2.06304e-30  6.15502e-32  8.66656e-32  2.85528e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.8005, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 560 K
            Well    Collision, 1/sec
              W1          3.2682e+09
      global relaxation matrix dimension = 558
      setting global matrices ... done, cpu time[sec] = 0.629845, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.02249, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            409.617      46.0879      9.52749      13.2819      1.25717      170.502      9.82159
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.06411, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.005724, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.070341, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.09589e-11  2.65596e-28   3.8051e-29
      low eigenvalue method done, cpu time[sec] = 0.070666, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.66e-28  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.72e-30  2.22e-16         1
         *Z       ---       ---  6.12e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16   2.8595e-29  7.70057e-30  2.15792e-31  1.36573e-30  4.17707e-32  7.76371e-32 -1.10714e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.95707, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 560 K
            Well    Collision, 1/sec
              W1         4.20197e+09
      global relaxation matrix dimension = 558
      setting global matrices ... done, cpu time[sec] = 0.629277, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.02979, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            318.591      35.8462      7.41027      10.3304       0.9778      132.613      7.63901
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.064182, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005707, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.070398, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -2.1666e-11  2.21501e-28  2.98875e-29
      low eigenvalue method done, cpu time[sec] = 0.070719, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.22e-28  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.61e-30  2.22e-16         1
         *Z       ---       ---  6.12e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  2.31844e-29  5.96533e-30  1.69302e-31  1.04473e-30  3.23649e-32  7.47528e-32  1.98573e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.88455, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 560 K
            Well    Collision, 1/sec
              W1         4.66885e+09
      global relaxation matrix dimension = 558
      setting global matrices ... done, cpu time[sec] = 0.382893, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.9726, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            286.732      32.2615      6.66924      9.29734      0.88002      119.352      6.87511
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.064065, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005715, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.0703, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.61858e-12  2.04971e-28  2.69228e-29
      low eigenvalue method done, cpu time[sec] = 0.070643, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.05e-28  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.19e-30  2.22e-16         1
         *Z       ---       ---  6.12e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  2.01055e-29  5.11079e-30  1.44874e-31  8.82004e-31   2.7489e-32  6.62008e-32   1.3453e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.65705, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 560 K
            Well    Collision, 1/sec
              W1         7.00328e+09
      global relaxation matrix dimension = 558
      setting global matrices ... done, cpu time[sec] = 0.386238, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.97768, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            191.154      21.5077      4.44616      6.19823      0.58668      79.5677      4.58341
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.064083, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005696, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.070292, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -7.22841e-12  1.50866e-28   1.7688e-29
      low eigenvalue method done, cpu time[sec] = 0.070614, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.51e-28  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.82e-30  2.22e-16         1
         *Z       ---       ---  6.12e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  1.43446e-29  3.39647e-30  9.76129e-32  5.62225e-31  1.80144e-32  5.58312e-32  1.29206e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.66321, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 560 K
            Well    Collision, 1/sec
              W1          9.3377e+09
      global relaxation matrix dimension = 558
      setting global matrices ... done, cpu time[sec] = 0.629309, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.01632, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            143.366      16.1308      3.33462      4.64867      0.44001      59.6758      3.43755
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.064056, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.005684, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.070243, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.79698e-12  1.20455e-28  1.28994e-29
      low eigenvalue method done, cpu time[sec] = 0.070567, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.2e-28  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.05e-30  2.22e-16         1
         *Z       ---       ---  6.12e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  1.02518e-29  2.29769e-30  6.73319e-32  3.73102e-31  1.21931e-32  4.62308e-32 -7.26785e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.94873, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 560 K
            Well    Collision, 1/sec
              W1         1.16721e+10
      global relaxation matrix dimension = 558
      setting global matrices ... done, cpu time[sec] = 0.630308, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.06345, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            114.693      12.9046       2.6677      3.71894     0.352008      47.7406      2.75004
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.064041, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00568, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.070235, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -8.9731e-12  1.00721e-28  9.99479e-30
      low eigenvalue method done, cpu time[sec] = 0.070616, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.01e-28  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.55e-30  2.22e-16         1
         *Z       ---       ---  6.12e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  8.19961e-30  1.76108e-30   5.2499e-32  2.82141e-31  9.36786e-33  4.17548e-32  9.31813e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.99583, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 560 K
            Well    Collision, 1/sec
              W1         1.40066e+10
      global relaxation matrix dimension = 558
      setting global matrices ... done, cpu time[sec] = 0.629133, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.39753, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            95.5772      10.7538      2.22308      3.09911      0.29334      39.7838       2.2917
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.064126, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005734, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.070361, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.82051e-12   8.6786e-29  8.06012e-30
      low eigenvalue method done, cpu time[sec] = 0.070694, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.68e-29  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   2.2e-30  2.22e-16         1
         *Z       ---       ---  6.12e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  6.53788e-30  1.37104e-30  4.12122e-32  2.17479e-31  7.29114e-33  3.54977e-32  1.11976e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.3283, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 560 K
            Well    Collision, 1/sec
              W1          1.6341e+10
      global relaxation matrix dimension = 558
      setting global matrices ... done, cpu time[sec] = 0.629722, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.07562, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            81.9233      9.21758       1.9055      2.65638     0.251434      34.1004      1.96432
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.064087, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005706, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.070303, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   1.9199e-12  7.63765e-29  6.68801e-30
      low eigenvalue method done, cpu time[sec] = 0.070622, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.64e-29  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.93e-30  2.22e-16         1
         *Z       ---       ---  6.12e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  5.21294e-30  1.03338e-30   3.2065e-32  1.64412e-31  5.59865e-33  3.27456e-32  2.70119e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.0037, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 560 K
            Well    Collision, 1/sec
              W1         1.86754e+10
      global relaxation matrix dimension = 558
      setting global matrices ... done, cpu time[sec] = 0.631697, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.0342, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            71.6829      8.06539      1.66731      2.32434     0.220005      29.8379      1.71878
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.064112, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.005738, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.070364, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.53895e-12   6.8282e-29  5.66984e-30
      low eigenvalue method done, cpu time[sec] = 0.070685, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.83e-29  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.73e-30  2.22e-16         1
         *Z       ---       ---  6.12e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  4.62938e-30  9.21064e-31  2.85988e-32  1.47632e-31  5.00736e-33  2.89618e-32   1.1838e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.94653, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 570 K
      Energy reference = 20565 1/cm
      Energy step      = 95 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -86.9 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.005655
         W1 Well: collisional kernel bandwidth = 36
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.253989
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.2781
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.304634
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 2.32668
         W1 Well: minimal relaxation eigenvalue = 0.0250144
         W1 Well: maximal relaxation eigenvalue = 1.27881
         W1 Well:       grid size = 549
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31590 1/cm
         B1 Barrier:        grid size = 217
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -50 1/cm
         B2 Barrier:        grid size = 215
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 139 1/cm
         B3 Barrier:        grid size = 265
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4610 1/cm
         B4 Barrier:        grid size = 282
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6225 1/cm
         B5 Barrier: nonpositive number of states at -23135 1/cm => truncating
         B5 Barrier:        grid size = 460
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23134 1/cm
         B6 Barrier:        grid size = 201
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1469 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4699 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 3.36218, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31590 -23134 4.33e+05 1.33e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -50 6.25e+13
         B2    140 7.11e+12
         B3  -4610 1.48e+12
         B4  -6225 2.06e+12
         B5 -23134 1.96e+11
         B6   1470 2.65e+13
         B7   4700 1.56e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.61e+12  3.08e+12  1.99e+08  3.45e+06  7.89e-14   1.3e+15  9.56e+18
          R   6.2e-13         1      1.91  0.000123  2.14e-06  4.89e-26       807  5.92e+06
         P1  3.24e-13     0.523         1  6.45e-05  1.12e-06  2.56e-26       423   3.1e+06
         P2  5.03e-09  8.12e+03  1.55e+04         1    0.0174  3.97e-22  6.56e+06  4.81e+10
         P3   2.9e-07  4.68e+05  8.93e+05      57.6         1  2.29e-20  3.78e+08  2.77e+12
         P4  1.27e+13  2.05e+25  3.91e+25  2.52e+21  4.37e+19         1  1.65e+28  1.21e+32
         P5  7.67e-16   0.00124   0.00237  1.53e-07  2.65e-09  6.06e-29         1  7.34e+03
         P6  1.05e-19  1.69e-07  3.23e-07  2.08e-11  3.61e-13  8.25e-33  0.000136         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  6.97e+08  1.33e+09  8.58e+04  1.49e+03  3.41e-17  5.63e+11  4.13e+15
          R  1.44e-09         1      1.91  0.000123  2.14e-06  4.89e-26       807  5.92e+06
         P1  7.51e-10     0.523         1  6.45e-05  1.12e-06  2.56e-26       423   3.1e+06
         P2  1.17e-05  8.12e+03  1.55e+04         1    0.0174  3.97e-22  6.56e+06  4.81e+10
         P3  0.000671  4.68e+05  8.93e+05      57.6         1  2.29e-20  3.78e+08  2.77e+12
         P4  2.93e+16  2.05e+25  3.91e+25  2.52e+21  4.37e+19         1  1.65e+28  1.21e+32
         P5  1.78e-12   0.00124   0.00237  1.53e-07  2.65e-09  6.06e-29         1  7.34e+03
         P6  2.42e-16  1.69e-07  3.23e-07  2.08e-11  3.61e-13  8.25e-33  0.000136         1
   MasterEquation::set:  done, cpu time[sec] = 3.37148, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 570 K
            Well    Collision, 1/sec
              W1          4.6021e+08
      global relaxation matrix dimension = 549
      setting global matrices ... done, cpu time[sec] = 0.369813, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.49799, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            3049.26      347.042      72.3733      100.393      9.55317      1292.18      75.9946
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.061267, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005481, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.06686, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    1.328e-10  3.84485e-27  7.37819e-28
      low eigenvalue method done, cpu time[sec] = 0.067169, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.84e-27 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.62e-29 -4.44e-16         1
         *Z       ---       ---  2.74e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  4.92559e-28  1.91675e-28  5.79428e-30  5.00895e-29  1.33975e-30  4.49593e-31 -1.32772e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.12343, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 570 K
            Well    Collision, 1/sec
              W1         1.38063e+09
      global relaxation matrix dimension = 549
      setting global matrices ... done, cpu time[sec] = 0.609293, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.98295, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1016.42      115.681      24.1244      33.4642      3.18439      430.726      25.3315
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.061211, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005422, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.066741, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.39102e-11  1.96577e-27  3.38208e-28
      low eigenvalue method done, cpu time[sec] = 0.067058, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.97e-27 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.92e-29 -4.44e-16         1
         *Z       ---       ---  2.74e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  2.42939e-28  7.70362e-29  2.15962e-30   1.5569e-29  4.48547e-31  4.22142e-31  4.20554e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.83985, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 570 K
            Well    Collision, 1/sec
              W1         2.30105e+09
      global relaxation matrix dimension = 549
      setting global matrices ... done, cpu time[sec] = 0.610305, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.98223, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            609.852      69.4084      14.4747      20.0785      1.91063      258.436      15.1989
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.061117, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005473, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.066698, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.65326e-11  1.40367e-27  2.21507e-28
      low eigenvalue method done, cpu time[sec] = 0.067018, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.4e-27 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.51e-29 -4.44e-16         1
         *Z       ---       ---  2.74e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  1.63621e-28  4.66951e-29  1.30462e-30  8.65916e-30  2.58971e-31  3.87416e-31   2.6065e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.84711, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 570 K
            Well    Collision, 1/sec
              W1         3.22147e+09
      global relaxation matrix dimension = 549
      setting global matrices ... done, cpu time[sec] = 0.61229, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.98488, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            435.609      49.5774       10.339      14.3418      1.36474      184.597      10.8564
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.061208, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.005469, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.066809, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.56116e-11  1.11276e-27  1.63821e-28
      low eigenvalue method done, cpu time[sec] = 0.067124, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.11e-27 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.78e-29 -4.44e-16         1
         *Z       ---       ---  2.74e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16   1.2336e-28  3.30279e-29  9.27725e-31  5.86574e-30  1.79525e-31  3.48173e-31  1.58221e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.85752, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 570 K
            Well    Collision, 1/sec
              W1         4.14189e+09
      global relaxation matrix dimension = 549
      setting global matrices ... done, cpu time[sec] = 0.609969, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.99665, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            338.807      38.5602      8.04148      11.1547      1.06146      143.575      8.44385
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.061235, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005452, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.066793, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.42059e-11  9.30268e-28  1.29172e-28
      low eigenvalue method done, cpu time[sec] = 0.067109, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   9.3e-28 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.33e-29 -4.44e-16         1
         *Z       ---       ---  2.74e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  9.90346e-29  2.51975e-29  7.16543e-31  4.38119e-30  1.36236e-31    3.208e-31  4.52598e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.86482, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 570 K
            Well    Collision, 1/sec
              W1          4.6021e+09
      global relaxation matrix dimension = 549
      setting global matrices ... done, cpu time[sec] = 0.609889, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.97116, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            304.926      34.7042      7.23733      10.0393     0.955317      129.218      7.59946
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.061161, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00544, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.066706, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -9.41439e-12  8.61703e-28  1.16551e-28
      low eigenvalue method done, cpu time[sec] = 0.067038, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.62e-28 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.16e-29 -4.44e-16         1
         *Z       ---       ---  2.74e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  8.94275e-29  2.22539e-29   6.3383e-31   3.7969e-30  1.19264e-31  3.07235e-31  9.21045e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.83742, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 570 K
            Well    Collision, 1/sec
              W1         6.90316e+09
      global relaxation matrix dimension = 549
      setting global matrices ... done, cpu time[sec] = 0.608577, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.98867, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            203.284      23.1361      4.82489      6.69284     0.636878      86.1453      5.06631
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.061165, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005394, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.066661, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -7.01528e-12  6.36601e-28  7.70759e-29
      low eigenvalue method done, cpu time[sec] = 0.06698, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.37e-28 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.59e-29 -4.44e-16         1
         *Z       ---       ---  2.74e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  5.99314e-29  1.38657e-29  4.03942e-31  2.30802e-30  7.42646e-32  2.51292e-31    5.337e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.85689, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 570 K
            Well    Collision, 1/sec
              W1         9.20421e+09
      global relaxation matrix dimension = 549
      setting global matrices ... done, cpu time[sec] = 0.611126, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.00436, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            152.463      17.3521      3.61867      5.01963     0.477658       64.609      3.79973
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.061177, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.005422, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.0667, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.44726e-13  5.09554e-28  5.64801e-29
      low eigenvalue method done, cpu time[sec] = 0.067041, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0   5.1e-28 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.27e-29 -4.44e-16         1
         *Z       ---       ---  2.74e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  4.51647e-29  9.91234e-30  2.92906e-31  1.60025e-30  5.26725e-32   2.1619e-31  3.10446e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.87355, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 570 K
            Well    Collision, 1/sec
              W1         1.15053e+10
      global relaxation matrix dimension = 549
      setting global matrices ... done, cpu time[sec] = 0.612451, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.99642, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             121.97      13.8817      2.89493       4.0157     0.382127      51.6872      3.03979
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.061171, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005487, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.066761, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   4.1263e-12  4.26874e-28  4.39293e-29
      low eigenvalue method done, cpu time[sec] = 0.067077, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.27e-28 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.07e-29 -4.44e-16         1
         *Z       ---       ---  2.74e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  3.44899e-29  7.27501e-30  2.18874e-31  1.16514e-30  3.88674e-32  1.85139e-31  3.79885e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.86756, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 570 K
            Well    Collision, 1/sec
              W1         1.38063e+10
      global relaxation matrix dimension = 549
      setting global matrices ... done, cpu time[sec] = 0.611475, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.02226, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            101.642      11.5681      2.41244      3.34642     0.318439      43.0726      2.53315
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.061152, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005418, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.066672, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.22602e-12  3.68356e-28  3.55381e-29
      low eigenvalue method done, cpu time[sec] = 0.067005, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.68e-28 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.21e-30 -4.44e-16         1
         *Z       ---       ---  2.74e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  2.81178e-29   5.7379e-30  1.74935e-31  9.08392e-31  3.07026e-32  1.63021e-31  1.50533e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.89024, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 570 K
            Well    Collision, 1/sec
              W1         1.61074e+10
      global relaxation matrix dimension = 549
      setting global matrices ... done, cpu time[sec] = 0.613192, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.98937, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            87.1218      9.91548      2.06781      2.86836     0.272948      36.9194      2.17128
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.061085, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005409, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.066593, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.22487e-12  3.24566e-28   2.9568e-29
      low eigenvalue method done, cpu time[sec] = 0.066906, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.25e-28 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.12e-30 -4.44e-16         1
         *Z       ---       ---  2.74e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  2.37778e-29  4.74278e-30  1.45905e-31  7.45051e-31  2.54177e-32  1.42311e-31  2.68543e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.85587, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 570 K
            Well    Collision, 1/sec
              W1         1.84084e+10
      global relaxation matrix dimension = 549
      setting global matrices ... done, cpu time[sec] = 0.610178, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.99003, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            76.2315      8.67605      1.80933      2.50981     0.238829      32.3045      1.89987
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.061162, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.005446, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.066709, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.93707e-12  2.90462e-28  2.51258e-29
      low eigenvalue method done, cpu time[sec] = 0.067029, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0   2.9e-28 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.27e-30 -4.44e-16         1
         *Z       ---       ---  2.74e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  2.07546e-29  4.03942e-30  1.26043e-31  6.36272e-31  2.18454e-32   1.3401e-31  1.38651e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.69899, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 580 K
      Energy reference = 20843 1/cm
      Energy step      = 97 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -86.7 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.009685
         W1 Well: collisional kernel bandwidth = 35
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.393958
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.409228
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.381225
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 2.52541
         W1 Well: minimal relaxation eigenvalue = 0.0247344
         W1 Well: maximal relaxation eigenvalue = 2.06722
         W1 Well:       grid size = 541
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31634 1/cm
         B1 Barrier:        grid size = 215
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -12 1/cm
         B2 Barrier:        grid size = 213
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 181 1/cm
         B3 Barrier:        grid size = 263
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4668 1/cm
         B4 Barrier:        grid size = 279
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6220 1/cm
         B5 Barrier: nonpositive number of states at -23195 1/cm => truncating
         B5 Barrier:        grid size = 454
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23195 1/cm
         B6 Barrier:        grid size = 200
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1443 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4644 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 4.01907, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31634 -23195 4.15e+05 1.41e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -12  6.9e+13
         B2    182 7.95e+12
         B3  -4668 1.67e+12
         B4  -6220 2.31e+12
         B5 -23195 2.21e+11
         B6   1444 2.98e+13
         B7   4645 1.79e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  3.85e+11  7.31e+11  5.82e+07  1.08e+06  5.49e-14  2.93e+14  1.88e+18
          R  2.59e-12         1       1.9  0.000151  2.81e-06  1.43e-25       759  4.88e+06
         P1  1.37e-12     0.527         1  7.95e-05  1.48e-06  7.51e-26       400  2.57e+06
         P2  1.72e-08  6.63e+03  1.26e+04         1    0.0187  9.45e-22  5.03e+06  3.24e+10
         P3  9.22e-07  3.55e+05  6.74e+05      53.6         1  5.06e-20   2.7e+08  1.74e+12
         P4  1.82e+13  7.02e+24  1.33e+25  1.06e+21  1.97e+19         1  5.32e+27  3.43e+31
         P5  3.42e-15   0.00132    0.0025  1.99e-07  3.71e-09  1.88e-28         1  6.43e+03
         P6  5.31e-19  2.05e-07  3.89e-07  3.09e-11  5.76e-13  2.92e-32  0.000155         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.71e+08  3.24e+08  2.58e+04       481  2.43e-17   1.3e+11  8.34e+14
          R  5.86e-09         1       1.9  0.000151  2.81e-06  1.43e-25       759  4.88e+06
         P1  3.09e-09     0.527         1  7.95e-05  1.48e-06  7.51e-26       400  2.57e+06
         P2  3.88e-05  6.63e+03  1.26e+04         1    0.0187  9.45e-22  5.03e+06  3.24e+10
         P3   0.00208  3.55e+05  6.74e+05      53.6         1  5.06e-20   2.7e+08  1.74e+12
         P4  4.11e+16  7.02e+24  1.33e+25  1.06e+21  1.97e+19         1  5.32e+27  3.43e+31
         P5  7.72e-12   0.00132    0.0025  1.99e-07  3.71e-09  1.88e-28         1  6.43e+03
         P6   1.2e-15  2.05e-07  3.89e-07  3.09e-11  5.76e-13  2.92e-32  0.000155         1
   MasterEquation::set:  done, cpu time[sec] = 4.03031, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 580 K
            Well    Collision, 1/sec
              W1         4.53773e+08
      global relaxation matrix dimension = 541
      setting global matrices ... done, cpu time[sec] = 0.590036, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.31261, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            3239.22      372.908      78.4371      108.276      10.3573      1397.02      83.8436
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.058861, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005377, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.064339, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.87855e-10  1.51128e-26  2.96391e-27
      low eigenvalue method done, cpu time[sec] = 0.064635, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.51e-26 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.74e-28 -4.44e-16         1
         *Z       ---       ---  1.26e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  1.95895e-27  7.58215e-28  2.29326e-29  1.97896e-28  5.29692e-30  1.88581e-30  5.26139e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.11699, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 580 K
            Well    Collision, 1/sec
              W1         1.36132e+09
      global relaxation matrix dimension = 541
      setting global matrices ... done, cpu time[sec] = 0.591774, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.90075, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1079.74      124.303      26.1457      36.0919      3.45243      465.673      27.9479
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.058725, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005311, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.06413, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.45836e-11  7.82024e-27   1.3769e-27
      low eigenvalue method done, cpu time[sec] = 0.064421, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.82e-27 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.93e-28 -4.44e-16         1
         *Z       ---       ---  1.26e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  9.90255e-28  3.09494e-28  8.66735e-30  6.18567e-29   1.7905e-30  1.79175e-30  1.56873e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.70391, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 580 K
            Well    Collision, 1/sec
              W1         2.26887e+09
      global relaxation matrix dimension = 541
      setting global matrices ... done, cpu time[sec] = 0.59211, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.89832, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            647.843      74.5815      15.6874      21.6551      2.07146      279.404      16.7687
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.058759, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005296, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.064152, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.95817e-12  5.61316e-27  9.08117e-28
      low eigenvalue method done, cpu time[sec] = 0.064446, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.61e-27 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.39e-28 -4.44e-16         1
         *Z       ---       ---  1.26e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  6.75443e-28  1.90799e-28  5.34037e-30  3.52334e-29  1.05684e-30  1.63445e-30  1.98298e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.70902, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 580 K
            Well    Collision, 1/sec
              W1         3.17641e+09
      global relaxation matrix dimension = 541
      setting global matrices ... done, cpu time[sec] = 0.590521, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.91258, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            462.745      53.2725      11.2053       15.468      1.47961      199.574      11.9777
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.058763, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.005279, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.06414, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.53068e-11  4.46453e-27  6.74907e-28
      low eigenvalue method done, cpu time[sec] = 0.064438, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.46e-27 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.1e-28 -4.44e-16         1
         *Z       ---       ---  1.26e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  5.07154e-28  1.34518e-28  3.79321e-30   2.3886e-29  7.32454e-31  1.48482e-30  1.24753e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.72051, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 580 K
            Well    Collision, 1/sec
              W1         4.08396e+09
      global relaxation matrix dimension = 541
      setting global matrices ... done, cpu time[sec] = 0.591521, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.90459, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            359.913      41.4342      8.71523      12.0306      1.15081      155.224      9.31596
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.058746, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005276, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.064119, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.74866e-12  3.74127e-27  5.34179e-28
      low eigenvalue method done, cpu time[sec] = 0.064414, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.74e-27 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.25e-29 -4.44e-16         1
         *Z       ---       ---  1.26e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  4.08422e-28  1.02745e-28  2.92443e-30  1.76888e-29  5.53077e-31  1.37605e-30  1.64504e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.71359, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 580 K
            Well    Collision, 1/sec
              W1         4.53773e+09
      global relaxation matrix dimension = 541
      setting global matrices ... done, cpu time[sec] = 0.590762, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.92026, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            323.922      37.2908      7.84371      10.8276      1.03573      139.702      8.38436
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.058785, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005252, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.064137, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.70327e-11  3.46893e-27   4.8277e-28
      low eigenvalue method done, cpu time[sec] = 0.064436, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.47e-27 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.58e-29 -4.44e-16         1
         *Z       ---       ---  1.26e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  3.70429e-28  9.13981e-29   2.6108e-30  1.55556e-29  4.89954e-31  1.30478e-30  1.20108e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.70836, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 580 K
            Well    Collision, 1/sec
              W1          6.8066e+09
      global relaxation matrix dimension = 541
      setting global matrices ... done, cpu time[sec] = 0.580403, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.86116, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            215.948      24.8605      5.22914      7.21838     0.690486      93.1347      5.58957
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.058675, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005288, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.06406, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.54519e-13  2.57218e-27  3.21314e-28
      low eigenvalue method done, cpu time[sec] = 0.064358, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.57e-27 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.36e-29 -4.44e-16         1
         *Z       ---       ---  1.26e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  2.50597e-28  5.70972e-29  1.66662e-30  9.36419e-30  3.03771e-31  1.07986e-30  5.50842e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.65802, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 580 K
            Well    Collision, 1/sec
              W1         9.07547e+09
      global relaxation matrix dimension = 541
      setting global matrices ... done, cpu time[sec] = 0.591616, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.90355, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            161.961      18.6454      3.92185      5.41379     0.517864       69.851      4.19218
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.058688, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005282, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.064069, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -1.0623e-11  2.06399e-27  2.36567e-28
      low eigenvalue method done, cpu time[sec] = 0.064367, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.06e-27 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.11e-29 -4.44e-16         1
         *Z       ---       ---  1.26e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  1.89721e-28  4.12231e-29  1.22654e-30  6.68902e-30  2.20357e-31  9.31384e-31  5.99107e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.71067, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 580 K
            Well    Collision, 1/sec
              W1         1.13443e+10
      global relaxation matrix dimension = 541
      setting global matrices ... done, cpu time[sec] = 0.59178, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.90725, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            129.569      14.9163      3.13748      4.33103     0.414291      55.8808      3.35374
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.058703, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005306, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.064103, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.04428e-12  1.73232e-27  1.84687e-28
      low eigenvalue method done, cpu time[sec] = 0.064394, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.73e-27 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.28e-29 -4.44e-16         1
         *Z       ---       ---  1.26e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  1.47572e-28  3.08539e-29  9.30762e-31  4.91765e-30    1.647e-31  8.00902e-31  1.84604e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.7144, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 580 K
            Well    Collision, 1/sec
              W1         1.36132e+10
      global relaxation matrix dimension = 541
      setting global matrices ... done, cpu time[sec] = 0.593565, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.11566, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            107.974      12.4303      2.61457      3.60919     0.345243      46.5673      2.79479
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.058676, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005244, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.06402, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -2.8264e-12  1.49705e-27  1.49873e-28
      low eigenvalue method done, cpu time[sec] = 0.064305, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.5e-27 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   3.7e-29 -4.44e-16         1
         *Z       ---       ---  1.26e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  1.19757e-28  2.41844e-29  7.42133e-31  3.84128e-30  1.30094e-31  7.15154e-31  1.57424e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.92109, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 580 K
            Well    Collision, 1/sec
              W1         1.58821e+10
      global relaxation matrix dimension = 541
      setting global matrices ... done, cpu time[sec] = 0.592156, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.25906, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            92.5491      10.6545      2.24106      3.09359     0.295922      39.9149      2.39553
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.058702, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005272, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.064067, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.73387e-12  1.32067e-27  1.25026e-28
      low eigenvalue method done, cpu time[sec] = 0.064357, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.32e-27 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.27e-29 -4.44e-16         1
         *Z       ---       ---  1.26e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16   1.0035e-28  1.97791e-29  6.13588e-31  3.11983e-30  1.06665e-31  6.37587e-31  1.67154e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.0716, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 580 K
            Well    Collision, 1/sec
              W1         1.81509e+10
      global relaxation matrix dimension = 541
      setting global matrices ... done, cpu time[sec] = 0.590658, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.90608, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            80.9804      9.32269      1.96093      2.70689     0.258932      34.9255      2.09609
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.058713, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005345, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.064159, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.76469e-12  1.18311e-27  1.06489e-28
      low eigenvalue method done, cpu time[sec] = 0.064454, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.18e-27 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.93e-29 -4.44e-16         1
         *Z       ---       ---  1.26e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  8.60331e-29  1.65776e-29  5.18878e-31  2.58086e-30  8.92645e-32  5.74709e-31  1.50539e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.71205, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 590 K
      Energy reference = 21121 1/cm
      Energy step      = 98 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -86.6 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.008399
         W1 Well: collisional kernel bandwidth = 35
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.429541
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.404926
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.289451
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 2.44981
         W1 Well: minimal relaxation eigenvalue = 0.0244443
         W1 Well: maximal relaxation eigenvalue = 1.33848
         W1 Well:       grid size = 538
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31603 1/cm
         B1 Barrier:        grid size = 216
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -47 1/cm
         B2 Barrier:        grid size = 214
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 148 1/cm
         B3 Barrier:        grid size = 263
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4653 1/cm
         B4 Barrier:        grid size = 279
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6221 1/cm
         B5 Barrier: nonpositive number of states at -23175 1/cm => truncating
         B5 Barrier:        grid size = 452
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23175 1/cm
         B6 Barrier:        grid size = 201
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1422 1/cm
         B7 Barrier:        grid size = 168
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4656 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 3.87927, elapsed time[sec] = 1
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31603 -23175 4.21e+05 1.48e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -47 7.62e+13
         B2    149 8.87e+12
         B3  -4653 1.88e+12
         B4  -6221 2.59e+12
         B5 -23175 2.49e+11
         B6   1423 3.34e+13
         B7   4657 2.05e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  9.86e+10  1.86e+11  1.81e+07  3.62e+05  3.95e-14  7.05e+13     4e+17
          R  1.01e-11         1      1.89  0.000184  3.67e-06  4.01e-25       715  4.05e+06
         P1  5.38e-12      0.53         1  9.73e-05  1.95e-06  2.12e-25       379  2.15e+06
         P2  5.52e-08  5.45e+03  1.03e+04         1      0.02  2.18e-21  3.89e+06  2.21e+10
         P3  2.76e-06  2.73e+05  5.14e+05        50         1  1.09e-19  1.95e+08   1.1e+12
         P4  2.53e+13   2.5e+24  4.71e+24  4.58e+20  9.15e+18         1  1.78e+27  1.01e+31
         P5  1.42e-14    0.0014   0.00264  2.57e-07  5.13e-09  5.61e-28         1  5.67e+03
         P6   2.5e-18  2.47e-07  4.65e-07  4.53e-11  9.05e-13  9.89e-32  0.000176         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  4.39e+07  8.28e+07  8.06e+03       161  1.76e-17  3.14e+10  1.78e+14
          R  2.28e-08         1      1.89  0.000184  3.67e-06  4.01e-25       715  4.05e+06
         P1  1.21e-08      0.53         1  9.73e-05  1.95e-06  2.12e-25       379  2.15e+06
         P2  0.000124  5.45e+03  1.03e+04         1      0.02  2.18e-21  3.89e+06  2.21e+10
         P3   0.00621  2.73e+05  5.14e+05        50         1  1.09e-19  1.95e+08   1.1e+12
         P4  5.69e+16   2.5e+24  4.71e+24  4.58e+20  9.15e+18         1  1.78e+27  1.01e+31
         P5  3.19e-11    0.0014   0.00264  2.57e-07  5.13e-09  5.61e-28         1  5.67e+03
         P6  5.62e-15  2.47e-07  4.65e-07  4.53e-11  9.05e-13  9.89e-32  0.000176         1
   MasterEquation::set:  done, cpu time[sec] = 3.89058, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 590 K
            Well    Collision, 1/sec
              W1         4.47561e+08
      global relaxation matrix dimension = 538
      setting global matrices ... done, cpu time[sec] = 0.582669, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.2907, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            3437.47      400.268      84.8989      116.644      11.2151      1508.29      92.3349
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.05802, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005187, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.063306, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.36409e-10  5.61899e-26  1.12291e-26
      low eigenvalue method done, cpu time[sec] = 0.063606, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.62e-26 -8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.37e-27 -8.88e-16         1
         *Z       ---       ---  6.03e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -8.88178e-16  7.50164e-27  2.88213e-27   8.6848e-29  7.44578e-28  1.99778e-29  7.54422e-30  9.25513e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.07721, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 590 K
            Well    Collision, 1/sec
              W1         1.34268e+09
      global relaxation matrix dimension = 538
      setting global matrices ... done, cpu time[sec] = 0.586001, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.79911, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1145.82      133.423      28.2996      38.8812      3.73837      502.764      30.7783
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.057938, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005159, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.063196, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.94023e-12   2.9409e-26  5.28281e-27
      low eigenvalue method done, cpu time[sec] = 0.063481, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.94e-26 -8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.19e-28 -8.88e-16         1
         *Z       ---       ---  6.03e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -8.88178e-16  3.82889e-27   1.1891e-27  3.32769e-29  2.36096e-28  6.85251e-30  7.22689e-30  6.95061e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.58556, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 590 K
            Well    Collision, 1/sec
              W1         2.23781e+09
      global relaxation matrix dimension = 538
      setting global matrices ... done, cpu time[sec] = 0.583948, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.78608, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            687.493      80.0536      16.9798      23.3287      2.24302      301.658       18.467
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.057875, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005171, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.063143, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.33875e-11  2.12137e-26  3.50756e-27
      low eigenvalue method done, cpu time[sec] = 0.06344, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.12e-26 -8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.19e-28 -8.88e-16         1
         *Z       ---       ---  6.03e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -8.88178e-16  2.62433e-27  7.34971e-28  2.05798e-29  1.34898e-28  4.05881e-30  6.63909e-30  7.33735e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.57369, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 590 K
            Well    Collision, 1/sec
              W1         3.13293e+09
      global relaxation matrix dimension = 538
      setting global matrices ... done, cpu time[sec] = 0.58745, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.76103, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            491.067      57.1812      12.1284      16.6634      1.60216       215.47      13.1907
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.057875, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005169, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.06314, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.36385e-11   1.6926e-26  2.61903e-27
      low eigenvalue method done, cpu time[sec] = 0.063449, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.69e-26 -8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.14e-28 -8.88e-16         1
         *Z       ---       ---  6.03e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -8.88178e-16  1.98932e-27  5.21498e-28   1.4718e-29  9.17355e-29  2.82646e-30  6.01826e-30  6.18118e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.54669, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 590 K
            Well    Collision, 1/sec
              W1         4.02805e+09
      global relaxation matrix dimension = 538
      setting global matrices ... done, cpu time[sec] = 0.586688, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.80619, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            381.941      44.4742      9.43321      12.9604      1.24612      167.588      10.2594
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.058039, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005174, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.06331, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -5.5734e-13  1.42165e-26  2.08048e-27
      low eigenvalue method done, cpu time[sec] = 0.063615, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.42e-26 -8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.48e-28 -8.88e-16         1
         *Z       ---       ---  6.03e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -8.88178e-16  1.59958e-27  3.99061e-28  1.13729e-29  6.83509e-29  2.14377e-30  5.52083e-30  4.59966e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.59683, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 590 K
            Well    Collision, 1/sec
              W1         4.47561e+09
      global relaxation matrix dimension = 538
      setting global matrices ... done, cpu time[sec] = 0.58537, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.81038, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            343.747      40.0268      8.48989      11.6644      1.12151      150.829      9.23349
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.057914, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005172, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.063186, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.86088e-12  1.31942e-26   1.8832e-27
      low eigenvalue method done, cpu time[sec] = 0.06348, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.32e-26 -8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.23e-28 -8.88e-16         1
         *Z       ---       ---  6.03e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -8.88178e-16  1.46224e-27  3.57592e-28  1.02384e-29   6.0636e-29  1.91563e-30  5.32039e-30  5.39569e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.43914, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 590 K
            Well    Collision, 1/sec
              W1         6.71342e+09
      global relaxation matrix dimension = 538
      setting global matrices ... done, cpu time[sec] = 0.585928, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.81128, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            229.164      26.6845      5.65992      7.77625     0.747675      100.553      6.15566
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.057858, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005156, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.063111, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.14152e-11  9.81817e-27  1.26117e-27
      low eigenvalue method done, cpu time[sec] = 0.063404, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.82e-27 -8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   2.4e-28 -8.88e-16         1
         *Z       ---       ---  6.03e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -8.88178e-16  9.92301e-28  2.24633e-28  6.57827e-30  3.68323e-29  1.19699e-30  4.42045e-30  4.65368e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.59864, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 590 K
            Well    Collision, 1/sec
              W1         8.95123e+09
      global relaxation matrix dimension = 538
      setting global matrices ... done, cpu time[sec] = 0.585689, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.81332, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            171.873      20.0134      4.24494      5.83219     0.560756      75.4146      4.61675
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.057894, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005167, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.063164, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -6.87667e-13  7.89749e-27  9.32781e-28
      low eigenvalue method done, cpu time[sec] = 0.063457, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   7.9e-27 -8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.93e-28 -8.88e-16         1
         *Z       ---       ---  6.03e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -8.88178e-16  7.39338e-28  1.58402e-28  4.73415e-30  2.54907e-29  8.45328e-31  3.78746e-30  5.63337e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.60138, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 590 K
            Well    Collision, 1/sec
              W1          1.1189e+10
      global relaxation matrix dimension = 538
      setting global matrices ... done, cpu time[sec] = 0.584271, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.82403, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            137.499      16.0107      3.39595      4.66575     0.448605      60.3316       3.6934
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.057914, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005185, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.063198, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.13361e-12  6.64044e-27  7.30862e-28
      low eigenvalue method done, cpu time[sec] = 0.063496, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.64e-27 -8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.62e-28 -8.88e-16         1
         *Z       ---       ---  6.03e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -8.88178e-16  5.93428e-28  1.22377e-28  3.71242e-30  1.94379e-29  6.54177e-31  3.33975e-30  5.81656e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.61252, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 590 K
            Well    Collision, 1/sec
              W1         1.34268e+10
      global relaxation matrix dimension = 538
      setting global matrices ... done, cpu time[sec] = 0.586174, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.8129, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            114.582      13.3423      2.82996      3.88812     0.373837      50.2764      3.07783
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.057861, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00517, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.063139, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.80328e-12  5.74686e-27  5.94879e-28
      low eigenvalue method done, cpu time[sec] = 0.063429, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.75e-27 -8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.4e-28 -8.88e-16         1
         *Z       ---       ---  6.03e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -8.88178e-16  4.79308e-28  9.58719e-29  2.95191e-30  1.51562e-29  5.15464e-31  2.91569e-30  5.00317e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.59736, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 590 K
            Well    Collision, 1/sec
              W1         1.56646e+10
      global relaxation matrix dimension = 538
      setting global matrices ... done, cpu time[sec] = 0.586855, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.81341, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            98.2134      11.4362      2.42568      3.33268     0.320432       43.094      2.63814
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.057831, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005187, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.063117, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.67497e-12  5.07579e-27  4.97538e-28
      low eigenvalue method done, cpu time[sec] = 0.063412, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.08e-27 -8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.24e-28 -8.88e-16         1
         *Z       ---       ---  6.03e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -8.88178e-16  4.04141e-28  7.89601e-29  2.45895e-30  1.24169e-29  4.26177e-31  2.62149e-30  3.55706e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.5971, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 590 K
            Well    Collision, 1/sec
              W1         1.79025e+10
      global relaxation matrix dimension = 538
      setting global matrices ... done, cpu time[sec] = 0.585335, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.79328, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            85.9367      10.0067      2.12247      2.91609     0.280378      37.7073      2.30837
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.057821, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005181, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.0631, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.26155e-12  4.55163e-27  4.24724e-28
      low eigenvalue method done, cpu time[sec] = 0.063391, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.55e-27 -8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.11e-28 -8.88e-16         1
         *Z       ---       ---  6.03e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -8.88178e-16  3.46523e-28  6.59777e-29  2.07943e-30  1.02983e-29  3.57199e-31   2.3753e-30  5.09455e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.57939, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 600 K
      Energy reference = 21399 1/cm
      Energy step      = 100 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -86.5 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.009852
         W1 Well: collisional kernel bandwidth = 35
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.420847
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.394236
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.30671
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 2.37309
         W1 Well: minimal relaxation eigenvalue = 0.0241683
         W1 Well: maximal relaxation eigenvalue = 1.32302
         W1 Well:       grid size = 530
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31600 1/cm
         B1 Barrier:        grid size = 214
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -1 1/cm
         B2 Barrier:        grid size = 212
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 199 1/cm
         B3 Barrier:        grid size = 260
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4601 1/cm
         B4 Barrier:        grid size = 276
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6201 1/cm
         B5 Barrier: nonpositive number of states at -23101 1/cm => truncating
         B5 Barrier:        grid size = 445
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23101 1/cm
         B6 Barrier:        grid size = 199
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1499 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4699 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 3.80169, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31600 -23101 4.44e+05 1.57e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -1  8.4e+13
         B2    200 9.89e+12
         B3  -4601 2.12e+12
         B4  -6201 2.89e+12
         B5 -23101  2.8e+11
         B6   1500 3.75e+13
         B7   4700 2.34e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1   2.6e+10  4.86e+10  5.76e+06  1.23e+05  2.82e-14  1.75e+13  8.78e+16
          R  3.85e-11         1      1.87  0.000222  4.74e-06  1.09e-24       674  3.38e+06
         P1  2.06e-11     0.533         1  0.000118  2.53e-06  5.81e-25       360   1.8e+06
         P2  1.74e-07  4.51e+03  8.45e+03         1    0.0214  4.91e-21  3.04e+06  1.52e+10
         P3  8.13e-06  2.11e+05  3.96e+05      46.8         1   2.3e-19  1.42e+08  7.14e+11
         P4  3.54e+13  9.19e+23  1.72e+24  2.04e+20  4.35e+18         1   6.2e+26  3.11e+30
         P5  5.71e-14   0.00148   0.00278  3.29e-07  7.03e-09  1.61e-27         1  5.02e+03
         P6  1.14e-17  2.96e-07  5.54e-07  6.56e-11   1.4e-12  3.22e-31  0.000199         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.18e+07  2.21e+07  2.62e+03      55.9  1.28e-17  7.96e+09  3.99e+13
          R  8.48e-08         1      1.87  0.000222  4.74e-06  1.09e-24       674  3.38e+06
         P1  4.52e-08     0.533         1  0.000118  2.53e-06  5.81e-25       360   1.8e+06
         P2  0.000382  4.51e+03  8.45e+03         1    0.0214  4.91e-21  3.04e+06  1.52e+10
         P3    0.0179  2.11e+05  3.96e+05      46.8         1   2.3e-19  1.42e+08  7.14e+11
         P4  7.79e+16  9.19e+23  1.72e+24  2.04e+20  4.35e+18         1   6.2e+26  3.11e+30
         P5  1.26e-10   0.00148   0.00278  3.29e-07  7.03e-09  1.61e-27         1  5.02e+03
         P6  2.51e-14  2.96e-07  5.54e-07  6.56e-11   1.4e-12  3.22e-31  0.000199         1
   MasterEquation::set:  done, cpu time[sec] = 3.81275, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 600 K
            Well    Collision, 1/sec
              W1         4.41562e+08
      global relaxation matrix dimension = 530
      setting global matrices ... done, cpu time[sec] = 0.567974, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.31022, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            3644.11       429.18      91.7601      125.518      12.1293      1626.25      101.507
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.055645, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005051, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.060791, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.67431e-10  2.01058e-25  4.09215e-26
      low eigenvalue method done, cpu time[sec] = 0.061072, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.01e-25         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.86e-27         0         1
         *Z       ---       ---  2.93e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.74558e-26   1.0461e-26  3.14606e-28  2.68096e-27  7.21028e-29  2.88194e-29  2.11144e-34

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.04228, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 600 K
            Well    Collision, 1/sec
              W1         1.32468e+09
      global relaxation matrix dimension = 530
      setting global matrices ... done, cpu time[sec] = 0.567882, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.74613, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             1214.7       143.06      30.5867      41.8393       4.0431      542.084      33.8358
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.055649, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005025, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.060771, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -8.65914e-11   1.0641e-25  1.94948e-26
      low eigenvalue method done, cpu time[sec] = 0.06105, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.06e-25         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.57e-27         0         1
         *Z       ---       ---  2.93e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.41406e-26    4.352e-27  1.21934e-28  8.60329e-28  2.50303e-29  2.75864e-29   2.1228e-34

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.47539, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 600 K
            Well    Collision, 1/sec
              W1         2.20781e+09
      global relaxation matrix dimension = 530
      setting global matrices ... done, cpu time[sec] = 0.568594, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.74672, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            728.823      85.8359       18.352      25.1036      2.42586       325.25      20.3015
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.055556, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005016, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.060667, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.54457e-11  7.71318e-26  1.30294e-26
      low eigenvalue method done, cpu time[sec] = 0.060948, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.71e-26         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.86e-27         0         1
         *Z       ---       ---  2.93e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  9.73087e-27  2.70081e-27  7.57136e-29  4.92798e-28  1.48755e-29  2.52839e-29  2.21211e-34

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.47707, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 600 K
            Well    Collision, 1/sec
              W1         3.09093e+09
      global relaxation matrix dimension = 530
      setting global matrices ... done, cpu time[sec] = 0.568932, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.74374, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            520.588      61.3114      13.1086      17.9311      1.73276      232.322      14.5011
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.055486, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005022, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.060611, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.83408e-12  6.17335e-26   9.7739e-27
      low eigenvalue method done, cpu time[sec] = 0.060889, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.17e-26         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.49e-27         0         1
         *Z       ---       ---  2.93e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  7.42945e-27  1.93095e-27   5.4588e-29  3.38082e-28  1.04494e-29  2.31149e-29   2.2743e-34

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.31347, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 600 K
            Well    Collision, 1/sec
              W1         3.97405e+09
      global relaxation matrix dimension = 530
      setting global matrices ... done, cpu time[sec] = 0.566815, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.73931, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            404.901      47.6866      10.1956      13.9464       1.3477      180.695      11.2786
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.055548, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005057, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.0607, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.76607e-11  5.19695e-26  7.79204e-27
      low eigenvalue method done, cpu time[sec] = 0.06098, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   5.2e-26         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.26e-27         0         1
         *Z       ---       ---  2.93e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  6.00293e-27  1.48443e-27  4.23836e-29  2.52933e-28  7.96038e-30  2.12799e-29  2.44635e-34

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.47084, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 600 K
            Well    Collision, 1/sec
              W1         4.41562e+09
      global relaxation matrix dimension = 530
      setting global matrices ... done, cpu time[sec] = 0.566728, elapsed time[sec] = 1
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.76774, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            364.411       42.918      9.17601      12.5518      1.21293      162.625      10.1507
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.055571, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005026, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.060692, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.21233e-12  4.82774e-26  7.06401e-27
      low eigenvalue method done, cpu time[sec] = 0.06098, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.83e-26         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.17e-27         0         1
         *Z       ---       ---  2.93e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  5.46827e-27  1.32295e-27  3.79837e-29  2.23165e-28  7.07832e-30  2.05171e-29  2.02842e-34

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.49623, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 600 K
            Well    Collision, 1/sec
              W1         6.62342e+09
      global relaxation matrix dimension = 530
      setting global matrices ... done, cpu time[sec] = 0.567235, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.76198, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            242.941       28.612      6.11734      8.36787     0.808621      108.417      6.76716
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.055448, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005057, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.060599, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.36454e-11  3.60517e-26  4.75974e-27
      low eigenvalue method done, cpu time[sec] = 0.060882, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.61e-26         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.71e-28         0         1
         *Z       ---       ---  2.93e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  3.74039e-27   8.3872e-28  2.46452e-29  1.37122e-28  4.47089e-30  1.70593e-29  2.25312e-34

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.49134, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 600 K
            Well    Collision, 1/sec
              W1         8.83123e+09
      global relaxation matrix dimension = 530
      setting global matrices ... done, cpu time[sec] = 0.568638, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.71347, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            182.206       21.459      4.58801       6.2759     0.606466      81.3126      5.07537
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.055539, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005024, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.060657, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.83522e-12  2.90692e-26  3.53623e-27
      low eigenvalue method done, cpu time[sec] = 0.060947, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.91e-26         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.03e-28         0         1
         *Z       ---       ---  2.93e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.81144e-27  5.98014e-28  1.79164e-29   9.5899e-29  3.19009e-30  1.46924e-29  2.33907e-34

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.44742, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 600 K
            Well    Collision, 1/sec
              W1          1.1039e+10
      global relaxation matrix dimension = 530
      setting global matrices ... done, cpu time[sec] = 0.567988, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.76355, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            145.765      17.1672       3.6704      5.02072     0.485172      65.0501       4.0603
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.055511, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005038, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.060646, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.18849e-12  2.44866e-26  2.78066e-27
      low eigenvalue method done, cpu time[sec] = 0.060929, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.45e-26         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.92e-28         0         1
         *Z       ---       ---  2.93e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.23212e-27  4.55697e-28  1.38948e-29  7.22885e-29  2.44127e-30  1.29213e-29  2.78978e-34

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.49305, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 600 K
            Well    Collision, 1/sec
              W1         1.32468e+10
      global relaxation matrix dimension = 530
      setting global matrices ... done, cpu time[sec] = 0.568743, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.74163, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             121.47       14.306      3.05867      4.18393      0.40431      54.2084      3.38358
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.055497, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005019, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.060611, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.94249e-12  2.12221e-26  2.27002e-27
      low eigenvalue method done, cpu time[sec] = 0.060892, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.12e-26         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.13e-28         0         1
         *Z       ---       ---  2.93e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0   1.8231e-27  3.60878e-28  1.11593e-29  5.67951e-29   1.9408e-30  1.13947e-29  2.83983e-34

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.47188, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 600 K
            Well    Collision, 1/sec
              W1         1.54547e+10
      global relaxation matrix dimension = 530
      setting global matrices ... done, cpu time[sec] = 0.567551, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.75071, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            104.118      12.2623      2.62172      3.58623     0.346552      46.4644      2.90021
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.055475, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00503, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.060599, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -1.9092e-12  1.87662e-26   1.9034e-27
      low eigenvalue method done, cpu time[sec] = 0.060887, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.88e-26         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.54e-28         0         1
         *Z       ---       ---  2.93e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.54498e-27  2.97412e-28  9.32126e-30  4.64863e-29  1.60607e-30  1.03372e-29  2.77538e-34

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.48247, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 600 K
            Well    Collision, 1/sec
              W1         1.76625e+10
      global relaxation matrix dimension = 530
      setting global matrices ... done, cpu time[sec] = 0.56813, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.75658, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            91.1028      10.7295        2.294      3.13795     0.303233      40.6563      2.53769
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.055503, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005025, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.060624, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.89524e-12  1.68452e-26  1.62846e-27
      low eigenvalue method done, cpu time[sec] = 0.060909, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.68e-26         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.07e-28         0         1
         *Z       ---       ---  2.93e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.32713e-27   2.5012e-28  7.92588e-30  3.89754e-29  1.35705e-30  9.34079e-30  2.66097e-34

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.48844, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 610 K
      Energy reference = 21677 1/cm
      Energy step      = 102 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -86.4 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.008974
         W1 Well: collisional kernel bandwidth = 35
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.409709
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.382648
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.344473
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 2.28071
         W1 Well: minimal relaxation eigenvalue = 0.0239299
         W1 Well: maximal relaxation eigenvalue = 1.21867
         W1 Well:       grid size = 522
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31567 1/cm
         B1 Barrier:        grid size = 213
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -49 1/cm
         B2 Barrier:        grid size = 211
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 155 1/cm
         B3 Barrier:        grid size = 258
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4639 1/cm
         B4 Barrier:        grid size = 274
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6270 1/cm
         B5 Barrier: nonpositive number of states at -23101 1/cm => truncating
         B5 Barrier:        grid size = 439
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23101 1/cm
         B6 Barrier:        grid size = 198
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1480 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4643 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 3.72104, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31567 -23101 4.44e+05 1.65e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -49 9.25e+13
         B2    156  1.1e+13
         B3  -4639 2.37e+12
         B4  -6270 3.24e+12
         B5 -23101 3.14e+11
         B6   1481  4.2e+13
         B7   4643 2.67e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  7.08e+09  1.32e+10  1.89e+06   4.3e+04  2.03e-14  4.51e+12  2.01e+16
          R  1.41e-10         1      1.86  0.000266  6.07e-06  2.86e-24       637  2.84e+06
         P1  7.58e-11     0.536         1  0.000143  3.26e-06  1.54e-24       342  1.52e+06
         P2   5.3e-07  3.75e+03  6.99e+03         1    0.0228  1.07e-20  2.39e+06  1.07e+10
         P3  2.33e-05  1.65e+05  3.07e+05      43.9         1  4.71e-19  1.05e+08  4.68e+11
         P4  4.93e+13  3.49e+23  6.51e+23  9.31e+19  2.12e+18         1  2.23e+26  9.92e+29
         P5  2.22e-13   0.00157   0.00293  4.18e-07  9.53e-09  4.49e-27         1  4.46e+03
         P6  4.97e-17  3.52e-07  6.56e-07  9.38e-11  2.14e-12  1.01e-30  0.000224         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  3.31e+06  6.17e+06       883      20.1  9.48e-18  2.11e+09  9.41e+12
          R  3.02e-07         1      1.86  0.000266  6.07e-06  2.86e-24       637  2.84e+06
         P1  1.62e-07     0.536         1  0.000143  3.26e-06  1.54e-24       342  1.52e+06
         P2   0.00113  3.75e+03  6.99e+03         1    0.0228  1.07e-20  2.39e+06  1.07e+10
         P3    0.0497  1.65e+05  3.07e+05      43.9         1  4.71e-19  1.05e+08  4.68e+11
         P4  1.06e+17  3.49e+23  6.51e+23  9.31e+19  2.12e+18         1  2.23e+26  9.92e+29
         P5  4.74e-10   0.00157   0.00293  4.18e-07  9.53e-09  4.49e-27         1  4.46e+03
         P6  1.06e-13  3.52e-07  6.56e-07  9.38e-11  2.14e-12  1.01e-30  0.000224         1
   MasterEquation::set:  done, cpu time[sec] = 3.73147, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 610 K
            Well    Collision, 1/sec
              W1         4.35763e+08
      global relaxation matrix dimension = 522
      setting global matrices ... done, cpu time[sec] = 0.551625, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.29156, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            3859.38       459.71      99.0288      134.921      13.1026      1751.17      111.401
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.053373, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004775, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.058243, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.08805e-11  6.94058e-25  1.43871e-25
      low eigenvalue method done, cpu time[sec] = 0.058516, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.94e-25  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.66e-26  2.22e-16         1
         *Z       ---       ---  1.45e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  9.59603e-26  3.63153e-26   1.0893e-27  9.23138e-27  2.48802e-28  1.04787e-28  1.30066e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.97077, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 610 K
            Well    Collision, 1/sec
              W1         1.30729e+09
      global relaxation matrix dimension = 522
      setting global matrices ... done, cpu time[sec] = 0.551909, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.58386, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1286.46      153.237      33.0096      44.9735      4.36752      583.723      37.1336
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.053446, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004795, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.05833, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.40431e-11  3.71282e-25  6.93701e-26
      low eigenvalue method done, cpu time[sec] = 0.058607, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.71e-25  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.88e-27  2.22e-16         1
         *Z       ---       ---  1.45e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  5.00199e-26  1.52719e-26  4.27907e-28  3.00141e-27  8.75548e-29  1.00788e-28  9.08498e-34

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.26272, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 610 K
            Well    Collision, 1/sec
              W1         2.17882e+09
      global relaxation matrix dimension = 522
      setting global matrices ... done, cpu time[sec] = 0.551768, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.5772, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            771.877      91.9421      19.8058      26.9841      2.62051      350.234      22.2802
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.05326, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004752, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.058102, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.87691e-13  2.70394e-25  4.66603e-26
      low eigenvalue method done, cpu time[sec] = 0.058375, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   2.7e-25  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.47e-27  2.22e-16         1
         *Z       ---       ---  1.45e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  3.46558e-26   9.5432e-27  2.67811e-28  1.73292e-27  5.24542e-29   9.2754e-29  9.02629e-34

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.25201, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 610 K
            Well    Collision, 1/sec
              W1         3.05034e+09
      global relaxation matrix dimension = 522
      setting global matrices ... done, cpu time[sec] = 0.548117, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.59854, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             551.34      65.6729       14.147      19.2744       1.8718      250.167      15.9144
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.053301, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004804, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.058191, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.71115e-11  2.17067e-25  3.51588e-26
      low eigenvalue method done, cpu time[sec] = 0.05846, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.17e-25  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.19e-27  2.22e-16         1
         *Z       ---       ---  1.45e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  2.66016e-26    6.844e-27  1.93901e-28  1.19225e-27  3.69792e-29   8.5367e-29  9.25278e-34

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.27625, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 610 K
            Well    Collision, 1/sec
              W1         3.92187e+09
      global relaxation matrix dimension = 522
      setting global matrices ... done, cpu time[sec] = 0.550936, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.60441, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             428.82      51.0789      11.0032      14.9912      1.45584      194.574      12.3779
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.053295, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004768, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.058154, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.73101e-11  1.83139e-25  2.81274e-26
      low eigenvalue method done, cpu time[sec] = 0.058432, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.83e-25  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.38e-27  2.22e-16         1
         *Z       ---       ---  1.45e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  2.15379e-26  5.27325e-27  1.51006e-28  8.95149e-28  2.82663e-29  7.87326e-29  1.08855e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.11566, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 610 K
            Well    Collision, 1/sec
              W1         4.35763e+09
      global relaxation matrix dimension = 522
      setting global matrices ... done, cpu time[sec] = 0.552422, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.60577, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            385.938       45.971      9.90288      13.4921      1.31026      175.117      11.1401
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.053271, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004757, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.058118, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.37321e-12  1.70284e-25  2.55376e-26
      low eigenvalue method done, cpu time[sec] = 0.058391, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.7e-25  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.07e-27  2.22e-16         1
         *Z       ---       ---  1.45e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  1.96641e-26  4.71705e-27  1.35784e-28  7.92959e-28  2.52272e-29   7.5785e-29  1.05747e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.28358, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 610 K
            Well    Collision, 1/sec
              W1         6.53645e+09
      global relaxation matrix dimension = 522
      setting global matrices ... done, cpu time[sec] = 0.552055, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.60669, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            257.292      30.6474      6.60192       8.9947     0.873504      116.745      7.42672
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.053317, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004757, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.058166, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.95782e-12    1.276e-25  1.73097e-26
      low eigenvalue method done, cpu time[sec] = 0.058521, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.28e-25  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.05e-27  2.22e-16         1
         *Z       ---       ---  1.45e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  1.35575e-26  3.00873e-27  8.87475e-29  4.90041e-28    1.604e-29  6.37347e-29  9.99836e-34

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.28315, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 610 K
            Well    Collision, 1/sec
              W1         8.71526e+09
      global relaxation matrix dimension = 522
      setting global matrices ... done, cpu time[sec] = 0.549716, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.61423, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            192.969      22.9855      4.95144      6.74603     0.655128      87.5585      5.57004
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.053309, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004772, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.058171, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.78973e-12   1.0313e-25  1.29166e-26
      low eigenvalue method done, cpu time[sec] = 0.058447, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.03e-25  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.47e-27  2.22e-16         1
         *Z       ---       ---  1.45e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  1.02046e-26  2.14726e-27  6.46106e-29  3.43181e-28  1.14626e-29  5.47828e-29  1.00089e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.29001, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 610 K
            Well    Collision, 1/sec
              W1         1.08941e+10
      global relaxation matrix dimension = 522
      setting global matrices ... done, cpu time[sec] = 0.550371, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.59971, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            154.375      18.3884      3.96115      5.39682     0.524103      70.0468      4.45603
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.053304, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004779, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.058174, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.13981e-12  8.70276e-26  1.01922e-26
      low eigenvalue method done, cpu time[sec] = 0.058451, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   8.7e-26  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.08e-27  2.22e-16         1
         *Z       ---       ---  1.45e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  8.11204e-27  1.63903e-27  5.02071e-29  2.59264e-28  8.79053e-30  4.81763e-29  1.11879e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.275, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 610 K
            Well    Collision, 1/sec
              W1         1.30729e+10
      global relaxation matrix dimension = 522
      setting global matrices ... done, cpu time[sec] = 0.550449, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.58193, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            128.646      15.3237      3.30096      4.49735     0.436752      58.3723      3.71336
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.053374, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004768, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.058233, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.00679e-11  7.55324e-26  8.34469e-27
      low eigenvalue method done, cpu time[sec] = 0.058508, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.55e-26  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.81e-27  2.22e-16         1
         *Z       ---       ---  1.45e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  6.68993e-27  1.31059e-27  4.07241e-29  2.05665e-28  7.05731e-30  4.29001e-29  9.63627e-34

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.09091, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 610 K
            Well    Collision, 1/sec
              W1         1.52517e+10
      global relaxation matrix dimension = 522
      setting global matrices ... done, cpu time[sec] = 0.550759, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.60888, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            110.268      13.1346      2.82939      3.85487     0.374359      50.0334      3.18288
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.053176, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.004777, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.058042, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.51742e-12    6.687e-26  7.01439e-27
      low eigenvalue method done, cpu time[sec] = 0.058328, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.69e-26  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.6e-27  2.22e-16         1
         *Z       ---       ---  1.45e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  5.65456e-27  1.07819e-27  3.39581e-29  1.68266e-28  5.83413e-30  3.87689e-29  1.12071e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.28711, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 610 K
            Well    Collision, 1/sec
              W1         1.74305e+10
      global relaxation matrix dimension = 522
      setting global matrices ... done, cpu time[sec] = 0.552183, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.60025, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            96.4846      11.4928      2.47572      3.37301     0.327564      43.7792      2.78502
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.053229, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004777, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.0581, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.25918e-12  6.00844e-26  6.01424e-27
      low eigenvalue method done, cpu time[sec] = 0.058378, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.01e-26  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.44e-27  2.22e-16         1
         *Z       ---       ---  1.45e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  4.86005e-27  9.06178e-28  2.88703e-29  1.40768e-28  4.92422e-30  3.51711e-29  1.10766e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.11528, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 620 K
      Energy reference = 21955 1/cm
      Energy step      = 103 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -86.3 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.008457
         W1 Well: collisional kernel bandwidth = 35
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.41164
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.379027
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.340436
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 2.25919
         W1 Well: minimal relaxation eigenvalue = 0.0236448
         W1 Well: maximal relaxation eigenvalue = 1.34265
         W1 Well:       grid size = 520
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31605 1/cm
         B1 Barrier:        grid size = 214
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -87 1/cm
         B2 Barrier:        grid size = 212
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 118 1/cm
         B3 Barrier:        grid size = 258
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4619 1/cm
         B4 Barrier:        grid size = 274
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6266 1/cm
         B5 Barrier: nonpositive number of states at -23159 1/cm => truncating
         B5 Barrier:        grid size = 438
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23159 1/cm
         B6 Barrier:        grid size = 199
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1457 1/cm
         B7 Barrier:        grid size = 168
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4650 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 3.69338, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31605 -23159 4.26e+05 1.74e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -87 1.02e+14
         B2    119 1.23e+13
         B3  -4619 2.66e+12
         B4  -6266 3.61e+12
         B5 -23159 3.53e+11
         B6   1458  4.7e+13
         B7   4651 3.04e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.07e+09  3.83e+09  6.58e+05   1.6e+04  1.51e-14  1.25e+12  4.96e+15
          R  4.84e-10         1      1.85  0.000318  7.72e-06  7.29e-24       603   2.4e+06
         P1  2.61e-10     0.539         1  0.000172  4.16e-06  3.93e-24       325  1.29e+06
         P2  1.52e-06  3.14e+03  5.83e+03         1    0.0243  2.29e-20   1.9e+06  7.54e+09
         P3  6.27e-05   1.3e+05   2.4e+05      41.2         1  9.45e-19  7.81e+07  3.11e+11
         P4  6.63e+13  1.37e+23  2.54e+23  4.36e+19  1.06e+18         1  8.27e+25  3.29e+29
         P5  8.02e-13   0.00166   0.00307  5.28e-07  1.28e-08  1.21e-26         1  3.98e+03
         P6  2.02e-16  4.17e-07  7.73e-07  1.33e-10  3.22e-12  3.04e-30  0.000252         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  9.68e+05   1.8e+06       308      7.47  7.06e-18  5.84e+08  2.32e+12
          R  1.03e-06         1      1.85  0.000318  7.72e-06  7.29e-24       603   2.4e+06
         P1  5.57e-07     0.539         1  0.000172  4.16e-06  3.93e-24       325  1.29e+06
         P2   0.00325  3.14e+03  5.83e+03         1    0.0243  2.29e-20   1.9e+06  7.54e+09
         P3     0.134   1.3e+05   2.4e+05      41.2         1  9.45e-19  7.81e+07  3.11e+11
         P4  1.42e+17  1.37e+23  2.54e+23  4.36e+19  1.06e+18         1  8.27e+25  3.29e+29
         P5  1.71e-09   0.00166   0.00307  5.28e-07  1.28e-08  1.21e-26         1  3.98e+03
         P6  4.31e-13  4.17e-07  7.73e-07  1.33e-10  3.22e-12  3.04e-30  0.000252         1
   MasterEquation::set:  done, cpu time[sec] = 3.70373, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 620 K
            Well    Collision, 1/sec
              W1         4.30155e+08
      global relaxation matrix dimension = 520
      setting global matrices ... done, cpu time[sec] = 0.54827, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.30671, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            4083.48       491.92      106.742      144.874      14.1377      1883.31      122.056
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.052895, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004819, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.057804, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.99909e-10   2.2694e-24  4.77222e-25
      low eigenvalue method done, cpu time[sec] = 0.058078, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.27e-24  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.37e-26  2.22e-16         1
         *Z       ---       ---  7.46e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  3.21944e-25  1.20998e-25  3.62014e-27  3.05149e-26  8.24166e-28  3.66003e-28  3.95455e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.96982, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 620 K
            Well    Collision, 1/sec
              W1         1.29047e+09
      global relaxation matrix dimension = 520
      setting global matrices ... done, cpu time[sec] = 0.548008, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.56418, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1361.16      163.973      35.5806      48.2912      4.71256       627.77      40.6855
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.053005, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004793, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.057887, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -6.36967e-11   1.2265e-24  2.32785e-25
      low eigenvalue method done, cpu time[sec] = 0.058161, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.23e-24  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   2.9e-26  2.22e-16         1
         *Z       ---       ---  7.46e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  1.69687e-25  5.13938e-26  1.44001e-27    1.004e-26  2.93665e-28  3.53498e-28   3.8099e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.22662, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 620 K
            Well    Collision, 1/sec
              W1         2.15078e+09
      global relaxation matrix dimension = 520
      setting global matrices ... done, cpu time[sec] = 0.54898, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.57224, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            816.697      98.3841      21.3484      28.9747      2.82754      376.662      24.4113
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.052779, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004798, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.057667, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.05886e-11  8.97283e-25  1.57545e-25
      low eigenvalue method done, cpu time[sec] = 0.057953, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.97e-25  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.12e-26  2.22e-16         1
         *Z       ---       ---  7.46e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  1.18349e-25  3.23171e-26  9.07838e-28   5.8373e-27  1.77219e-28  3.26379e-28  3.92807e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.23416, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 620 K
            Well    Collision, 1/sec
              W1         3.01109e+09
      global relaxation matrix dimension = 520
      setting global matrices ... done, cpu time[sec] = 0.546385, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.57121, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            583.355      70.2743      15.2488      20.6962      2.01967      269.044      17.4366
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.052899, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004807, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.057794, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.77471e-12  7.22424e-25  1.19226e-25
      low eigenvalue method done, cpu time[sec] = 0.058067, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.22e-25  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.71e-26  2.22e-16         1
         *Z       ---       ---  7.46e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  9.11477e-26  2.32613e-26  6.60023e-28  4.03275e-27  1.25464e-28  3.00453e-28  4.06447e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.24517, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 620 K
            Well    Collision, 1/sec
              W1          3.8714e+09
      global relaxation matrix dimension = 520
      setting global matrices ... done, cpu time[sec] = 0.547242, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.57003, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             453.72      54.6578      11.8602      16.0971      1.57085      209.257      13.5618
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.053, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004803, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.057893, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.97276e-12  6.10814e-25  9.57043e-26
      low eigenvalue method done, cpu time[sec] = 0.058164, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.11e-25  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.44e-26  2.22e-16         1
         *Z       ---       ---  7.46e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  7.40459e-26  1.79745e-26  5.15828e-28  3.03815e-27  9.62436e-29  2.78043e-28  4.04584e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.22918, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 620 K
            Well    Collision, 1/sec
              W1         4.30155e+09
      global relaxation matrix dimension = 520
      setting global matrices ... done, cpu time[sec] = 0.543619, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.56841, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            408.348       49.192      10.6742      14.4874      1.41377      188.331      12.2056
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.052829, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004799, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.057717, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.91989e-12  5.68443e-25  8.70183e-26
      low eigenvalue method done, cpu time[sec] = 0.057994, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.68e-25  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.34e-26  2.22e-16         1
         *Z       ---       ---  7.46e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16   6.7586e-26  1.60728e-26  4.63791e-28  2.69106e-27  8.58881e-29  2.67515e-28  4.18699e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.22281, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 620 K
            Well    Collision, 1/sec
              W1         6.45233e+09
      global relaxation matrix dimension = 520
      setting global matrices ... done, cpu time[sec] = 0.547179, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.56753, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            272.232      32.7947      7.11612      9.65825     0.942512      125.554      8.13709
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.052836, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004782, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.057715, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.30513e-11  4.27388e-25  5.93227e-26
      low eigenvalue method done, cpu time[sec] = 0.057995, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.27e-25  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.01e-26  2.22e-16         1
         *Z       ---       ---  7.46e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  4.69082e-26  1.03174e-26  3.05267e-28  1.67403e-27  5.49894e-29  2.26163e-28  4.16277e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.22678, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 620 K
            Well    Collision, 1/sec
              W1         8.60311e+09
      global relaxation matrix dimension = 520
      setting global matrices ... done, cpu time[sec] = 0.547985, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.61698, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            204.174       24.596      5.33709      7.24369     0.706884      94.1654      6.10282
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.052796, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.004786, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.05767, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.10728e-12  3.46228e-25  4.44557e-26
      low eigenvalue method done, cpu time[sec] = 0.057947, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.46e-25  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.19e-27  2.22e-16         1
         *Z       ---       ---  7.46e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  3.54954e-26  7.39723e-27  2.23527e-28  1.17942e-27  3.95323e-29  1.95695e-28  4.32284e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.28132, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 620 K
            Well    Collision, 1/sec
              W1         1.07539e+10
      global relaxation matrix dimension = 520
      setting global matrices ... done, cpu time[sec] = 0.545228, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.56949, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            163.339      19.6768      4.26967      5.79495     0.565507      75.3323      4.88226
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.052756, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004818, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.057662, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.25354e-12  2.92679e-25  3.51981e-26
      low eigenvalue method done, cpu time[sec] = 0.057937, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.93e-25  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.92e-27  2.22e-16         1
         *Z       ---       ---  7.46e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16   2.8331e-26  5.67132e-27  1.74429e-28  8.94326e-28  3.04387e-29  1.72474e-28   4.3788e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.06849, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 620 K
            Well    Collision, 1/sec
              W1         1.29047e+10
      global relaxation matrix dimension = 520
      setting global matrices ... done, cpu time[sec] = 0.54803, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.57404, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            136.116      16.3973      3.55806      4.82912     0.471256       62.777      4.06855
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.052781, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004814, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.057685, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.27554e-12  2.54375e-25  2.88992e-26
      low eigenvalue method done, cpu time[sec] = 0.057957, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.54e-25  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.01e-27  2.22e-16         1
         *Z       ---       ---  7.46e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  2.33913e-26  4.53393e-27  1.41608e-28  7.09672e-28  2.44541e-29  1.54065e-28  4.16156e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.23506, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 620 K
            Well    Collision, 1/sec
              W1         1.50554e+10
      global relaxation matrix dimension = 520
      setting global matrices ... done, cpu time[sec] = 0.545657, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.57163, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            116.671      14.0549      3.04977      4.13925     0.403934      53.8088      3.48733
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.052781, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004779, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.057651, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   6.0492e-12  2.25463e-25   2.4351e-26
      low eigenvalue method done, cpu time[sec] = 0.057939, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.25e-25  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.33e-27  2.22e-16         1
         *Z       ---       ---  7.46e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  1.98181e-26  3.74104e-27  1.18404e-28   5.8224e-28   2.0272e-29  1.39209e-28  4.22801e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.22939, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 620 K
            Well    Collision, 1/sec
              W1         1.72062e+10
      global relaxation matrix dimension = 520
      setting global matrices ... done, cpu time[sec] = 0.550379, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.6013, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            102.087       12.298      2.66855      3.62184     0.353442      47.0827      3.05141
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.0528, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004808, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.057697, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.43477e-12  2.02783e-25  2.09232e-26
      low eigenvalue method done, cpu time[sec] = 0.05797, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.03e-25  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.79e-27  2.22e-16         1
         *Z       ---       ---  7.46e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  1.70714e-26   3.1507e-27   1.0093e-28  4.88594e-28  1.71595e-29  1.26664e-28  4.32152e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.09989, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 630 K
      Energy reference = 22233 1/cm
      Energy step      = 105 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -86.2 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.009162
         W1 Well: collisional kernel bandwidth = 35
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.403476
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.372644
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.30999
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 2.17874
         W1 Well: minimal relaxation eigenvalue = 0.0233915
         W1 Well: maximal relaxation eigenvalue = 1.60998
         W1 Well:       grid size = 513
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31631 1/cm
         B1 Barrier:        grid size = 212
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -26 1/cm
         B2 Barrier:        grid size = 210
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 183 1/cm
         B3 Barrier:        grid size = 256
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4646 1/cm
         B4 Barrier:        grid size = 271
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6221 1/cm
         B5 Barrier: nonpositive number of states at -23127 1/cm => truncating
         B5 Barrier:        grid size = 432
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23127 1/cm
         B6 Barrier:        grid size = 198
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1443 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4698 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 3.5706, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31631 -23127 4.36e+05 1.83e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -26 1.12e+14
         B2    184 1.36e+13
         B3  -4646 2.98e+12
         B4  -6221 4.03e+12
         B5 -23127 3.95e+11
         B6   1444 5.25e+13
         B7   4699 3.46e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  6.16e+08  1.14e+09  2.32e+05  5.99e+03  1.11e-14  3.52e+11  1.25e+15
          R  1.62e-09         1      1.84  0.000378  9.73e-06   1.8e-23       572  2.03e+06
         P1  8.81e-10     0.542         1  0.000205  5.28e-06  9.78e-24       310   1.1e+06
         P2   4.3e-06  2.65e+03  4.88e+03         1    0.0258  4.78e-20  1.51e+06  5.39e+09
         P3  0.000167  1.03e+05   1.9e+05      38.8         1  1.85e-18  5.87e+07  2.09e+11
         P4  9.01e+13  5.54e+22  1.02e+23  2.09e+19   5.4e+17         1  3.17e+25  1.13e+29
         P5  2.84e-12   0.00175   0.00323  6.61e-07   1.7e-08  3.16e-26         1  3.56e+03
         P6  7.98e-16  4.91e-07  9.07e-07  1.86e-10  4.78e-12  8.86e-30  0.000281         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.94e+05  5.43e+05       111      2.87  5.31e-18  1.68e+08  5.99e+11
          R   3.4e-06         1      1.84  0.000378  9.73e-06   1.8e-23       572  2.03e+06
         P1  1.84e-06     0.542         1  0.000205  5.28e-06  9.78e-24       310   1.1e+06
         P2   0.00899  2.65e+03  4.88e+03         1    0.0258  4.78e-20  1.51e+06  5.39e+09
         P3     0.349  1.03e+05   1.9e+05      38.8         1  1.85e-18  5.87e+07  2.09e+11
         P4  1.88e+17  5.54e+22  1.02e+23  2.09e+19   5.4e+17         1  3.17e+25  1.13e+29
         P5  5.94e-09   0.00175   0.00323  6.61e-07   1.7e-08  3.16e-26         1  3.56e+03
         P6  1.67e-12  4.91e-07  9.07e-07  1.86e-10  4.78e-12  8.86e-30  0.000281         1
   MasterEquation::set:  done, cpu time[sec] = 3.58097, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 630 K
            Well    Collision, 1/sec
              W1         4.24729e+08
      global relaxation matrix dimension = 513
      setting global matrices ... done, cpu time[sec] = 0.533531, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.32785, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            4316.52      525.876      114.927      155.401      15.2375      2022.94      133.517
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.050864, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004591, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.055548, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   3.5861e-10   7.1984e-24  1.53679e-24
      low eigenvalue method done, cpu time[sec] = 0.055817, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   7.2e-24  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.68e-25  2.22e-16         1
         *Z       ---       ---  3.88e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  1.03785e-24  3.87025e-25  1.15637e-26  9.69412e-26  2.62384e-27  1.22962e-27  1.59183e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.96009, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 630 K
            Well    Collision, 1/sec
              W1         1.27419e+09
      global relaxation matrix dimension = 513
      setting global matrices ... done, cpu time[sec] = 0.532904, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.48427, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1438.84      175.292      38.3091      51.8002      5.07918      674.314      44.5055
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.050808, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004587, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.055485, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   5.3152e-11  3.93008e-24   7.5838e-25
      low eigenvalue method done, cpu time[sec] = 0.055754, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.93e-24  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.19e-26  2.22e-16         1
         *Z       ---       ---  3.88e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16   5.5328e-25  1.66218e-25  4.66073e-27  3.23121e-26  9.47528e-28  1.19138e-27  1.52096e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.11173, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 630 K
            Well    Collision, 1/sec
              W1         2.12364e+09
      global relaxation matrix dimension = 513
      setting global matrices ... done, cpu time[sec] = 0.531416, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.48046, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            863.304      105.175      22.9854      31.0801      3.04751      404.589      26.7033
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.050794, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004596, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.055479, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.59817e-11  2.88812e-24  5.16404e-25
      low eigenvalue method done, cpu time[sec] = 0.055752, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.89e-24  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.76e-26  2.22e-16         1
         *Z       ---       ---  3.88e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  3.87959e-25  1.05042e-25  2.95572e-27  1.88926e-26   5.7519e-28  1.10281e-27  1.54429e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.11051, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 630 K
            Well    Collision, 1/sec
              W1          2.9731e+09
      global relaxation matrix dimension = 513
      setting global matrices ... done, cpu time[sec] = 0.531212, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.48379, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            616.645      75.1251      16.4182      22.2001      2.17679      288.992      19.0738
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.050789, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004593, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.055472, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.08566e-12  2.33206e-24  3.92479e-25
      low eigenvalue method done, cpu time[sec] = 0.055754, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.33e-24  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.46e-26  2.22e-16         1
         *Z       ---       ---  3.88e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  2.99979e-25  7.58892e-26  2.15834e-27   1.3108e-26  4.09015e-28  1.01772e-27  1.56218e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.11126, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 630 K
            Well    Collision, 1/sec
              W1         3.82256e+09
      global relaxation matrix dimension = 513
      setting global matrices ... done, cpu time[sec] = 0.53331, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.51373, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            479.613      58.4306      12.7697      17.2667      1.69306      224.771      14.8352
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.050746, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.004591, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.055429, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.52232e-12  1.97598e-24    3.161e-25
      low eigenvalue method done, cpu time[sec] = 0.055706, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.98e-24  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.62e-26  2.22e-16         1
         *Z       ---       ---  3.88e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  2.44541e-25  5.88444e-26  1.69315e-27  9.91053e-27  3.14926e-28  9.43134e-28  1.51946e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.14966, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 630 K
            Well    Collision, 1/sec
              W1         4.24729e+09
      global relaxation matrix dimension = 513
      setting global matrices ... done, cpu time[sec] = 0.531301, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.48437, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            431.652      52.5876      11.4927      15.5401      1.52375      202.294      13.3517
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.0511, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004576, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.055767, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.94845e-12  1.84054e-24  2.87823e-25
      low eigenvalue method done, cpu time[sec] = 0.056042, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.84e-24  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.31e-26  2.22e-16         1
         *Z       ---       ---  3.88e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  2.23725e-25  5.27224e-26  1.52562e-27   8.7937e-27  2.81597e-28  9.09476e-28  1.49462e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.11144, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 630 K
            Well    Collision, 1/sec
              W1         6.37093e+09
      global relaxation matrix dimension = 513
      setting global matrices ... done, cpu time[sec] = 0.533316, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.48886, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            287.768      35.0584      7.66181        10.36      1.01584      134.863      8.90111
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.050793, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004579, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.055463, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.18885e-11  1.38847e-24  1.97336e-25
      low eigenvalue method done, cpu time[sec] = 0.055741, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.39e-24  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.25e-26  2.22e-16         1
         *Z       ---       ---  3.88e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  1.55925e-25  3.39746e-26  1.00892e-27  5.49619e-27  1.81164e-28  7.71555e-28   1.5548e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.1183, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 630 K
            Well    Collision, 1/sec
              W1         8.49458e+09
      global relaxation matrix dimension = 513
      setting global matrices ... done, cpu time[sec] = 0.532785, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.49171, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            215.826      26.2938      5.74636      7.77003     0.761876      101.147      6.67583
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.050718, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004592, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.0554, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.57783e-12  1.12741e-24  1.48503e-25
      low eigenvalue method done, cpu time[sec] = 0.055674, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.13e-24  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.64e-26  2.22e-16         1
         *Z       ---       ---  3.88e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  1.18622e-25  2.44881e-26  7.43065e-28  3.89455e-27  1.31004e-28  6.70541e-28  1.60517e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.12195, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 630 K
            Well    Collision, 1/sec
              W1         1.06182e+10
      global relaxation matrix dimension = 513
      setting global matrices ... done, cpu time[sec] = 0.531537, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.48406, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            172.661       21.035      4.59709      6.21602     0.609501      80.9177      5.34066
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.050708, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00458, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.055379, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -7.96503e-12  9.54714e-25  1.17972e-25
      low eigenvalue method done, cpu time[sec] = 0.055655, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.55e-25  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.23e-26  2.22e-16         1
         *Z       ---       ---  3.88e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16   9.4967e-26   1.8824e-26  5.81642e-28  2.96093e-27  1.01165e-28   5.9285e-28  1.60029e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.10995, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 630 K
            Well    Collision, 1/sec
              W1         1.27419e+10
      global relaxation matrix dimension = 513
      setting global matrices ... done, cpu time[sec] = 0.53172, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.48467, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            143.884      17.5292      3.83091      5.18002     0.507918      67.4314      4.45055
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.050699, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004596, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.055387, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.31852e-12   8.3093e-25  9.71304e-26
      low eigenvalue method done, cpu time[sec] = 0.055663, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.31e-25  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.94e-26  2.22e-16         1
         *Z       ---       ---  3.88e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  7.86492e-26   1.5094e-26  4.73724e-28  2.35682e-27  8.15354e-29  5.30851e-28  1.62251e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.11381, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 630 K
            Well    Collision, 1/sec
              W1         1.48655e+10
      global relaxation matrix dimension = 513
      setting global matrices ... done, cpu time[sec] = 0.531983, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.49389, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            123.329       15.025      3.28363      4.44002     0.435358      57.7984      3.81476
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.05075, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004582, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.05542, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.36548e-12  7.37341e-25  8.20395e-26
      low eigenvalue method done, cpu time[sec] = 0.055691, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.37e-25  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.72e-26  2.22e-16         1
         *Z       ---       ---  3.88e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  6.67112e-26  1.24679e-26  3.96652e-28  1.93635e-27  6.76896e-29  4.80124e-28  1.63912e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.1215, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 630 K
            Well    Collision, 1/sec
              W1         1.69892e+10
      global relaxation matrix dimension = 513
      setting global matrices ... done, cpu time[sec] = 0.530838, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.49075, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            107.913      13.1469      2.87318      3.88502     0.380938      50.5736      3.33792
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.050802, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004555, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.055447, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.00667e-11  6.63823e-25  7.06387e-26
      low eigenvalue method done, cpu time[sec] = 0.055718, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.64e-25  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.55e-26  2.22e-16         1
         *Z       ---       ---  3.88e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  5.77242e-26  1.05434e-26  3.39589e-28  1.63101e-27  5.75332e-29  4.39146e-28  1.67246e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.11722, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 640 K
      Energy reference = 22511 1/cm
      Energy step      = 107 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -86.1 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.008536
         W1 Well: collisional kernel bandwidth = 35
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.396511
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.360237
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.310272
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 2.12061
         W1 Well: minimal relaxation eigenvalue = 0.0231513
         W1 Well: maximal relaxation eigenvalue = 1.56239
         W1 Well:       grid size = 506
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31631 1/cm
         B1 Barrier:        grid size = 211
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -66 1/cm
         B2 Barrier:        grid size = 209
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 147 1/cm
         B3 Barrier:        grid size = 254
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4667 1/cm
         B4 Barrier:        grid size = 269
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6272 1/cm
         B5 Barrier: nonpositive number of states at -23285 1/cm => truncating
         B5 Barrier:        grid size = 428
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23285 1/cm
         B6 Barrier:        grid size = 197
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1432 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4642 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 3.48874, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31631 -23285 3.89e+05 1.93e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -66 1.23e+14
         B2    148 1.52e+13
         B3  -4667 3.34e+12
         B4  -6272  4.5e+12
         B5 -23285 4.43e+11
         B6   1433 5.86e+13
         B7   4642 3.94e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.91e+08  3.51e+08  8.53e+04  2.33e+03   8.3e-15  1.04e+11  3.32e+14
          R  5.22e-09         1      1.84  0.000446  1.22e-05  4.34e-23       543  1.74e+06
         P1  2.85e-09     0.545         1  0.000243  6.64e-06  2.36e-23       296  9.45e+05
         P2  1.17e-05  2.24e+03  4.12e+03         1    0.0273  9.73e-20  1.22e+06  3.89e+09
         P3  0.000429  8.21e+04  1.51e+05      36.6         1  3.56e-18  4.45e+07  1.42e+11
         P4   1.2e+14  2.31e+22  4.23e+22  1.03e+19  2.81e+17         1  1.25e+25     4e+28
         P5  9.63e-12   0.00184   0.00338  8.22e-07  2.25e-08  7.99e-26         1   3.2e+03
         P6  3.01e-15  5.76e-07  1.06e-06  2.57e-10  7.02e-12   2.5e-29  0.000313         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  9.29e+04   1.7e+05      41.4      1.13  4.03e-18  5.04e+07  1.61e+11
          R  1.08e-05         1      1.84  0.000446  1.22e-05  4.34e-23       543  1.74e+06
         P1  5.87e-06     0.545         1  0.000243  6.64e-06  2.36e-23       296  9.45e+05
         P2    0.0241  2.24e+03  4.12e+03         1    0.0273  9.73e-20  1.22e+06  3.89e+09
         P3     0.884  8.21e+04  1.51e+05      36.6         1  3.56e-18  4.45e+07  1.42e+11
         P4  2.48e+17  2.31e+22  4.23e+22  1.03e+19  2.81e+17         1  1.25e+25     4e+28
         P5  1.98e-08   0.00184   0.00338  8.22e-07  2.25e-08  7.99e-26         1   3.2e+03
         P6   6.2e-12  5.76e-07  1.06e-06  2.57e-10  7.02e-12   2.5e-29  0.000313         1
   MasterEquation::set:  done, cpu time[sec] = 3.49916, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 640 K
            Well    Collision, 1/sec
              W1         4.19474e+08
      global relaxation matrix dimension = 506
      setting global matrices ... done, cpu time[sec] = 0.519269, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.48506, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            4558.78      561.645      123.607      166.525      16.4051      2170.35      145.825
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.049189, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004453, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.053815, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -6.6019e-11  2.18903e-23  4.74049e-24
      low eigenvalue method done, cpu time[sec] = 0.054073, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.19e-23         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.07e-25         0         1
         *Z       ---       ---  2.07e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  3.22394e-24  1.19449e-24  3.56092e-26  2.97016e-25  8.05521e-27  3.98125e-27  5.78586e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.0264, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 640 K
            Well    Collision, 1/sec
              W1         1.25842e+09
      global relaxation matrix dimension = 506
      setting global matrices ... done, cpu time[sec] = 0.518485, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.41335, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1519.59      187.215      41.2024      55.5083      5.46835      723.449      48.6084
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.049196, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.004432, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.053717, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -2.0761e-11  1.20669e-23  2.36528e-24
      low eigenvalue method done, cpu time[sec] = 0.053971, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.21e-23         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.79e-25         0         1
         *Z       ---       ---  2.07e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.73728e-24  5.18026e-25  1.45283e-26   1.0016e-25  2.94454e-27  3.86329e-27  5.57772e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.96305, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 640 K
            Well    Collision, 1/sec
              W1         2.09737e+09
      global relaxation matrix dimension = 506
      setting global matrices ... done, cpu time[sec] = 0.520203, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.40894, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            911.756      112.329      24.7214       33.305      3.28101      434.069       29.165
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.049119, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004421, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.05363, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   2.5801e-11  8.90588e-24  1.62007e-24
      low eigenvalue method done, cpu time[sec] = 0.053895, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.91e-24         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.06e-25         0         1
         *Z       ---       ---  2.07e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.22519e-24  3.29158e-25  9.27292e-27   5.8929e-26  1.79904e-27  3.58492e-27  5.56004e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.94638, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 640 K
            Well    Collision, 1/sec
              W1         2.93632e+09
      global relaxation matrix dimension = 506
      setting global matrices ... done, cpu time[sec] = 0.519275, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.40613, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            651.255      80.2351      17.6582      23.7893      2.34358       310.05      20.8322
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.04922, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004443, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.053754, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.62873e-11  7.21125e-24  1.23639e-24
      low eigenvalue method done, cpu time[sec] = 0.054011, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.21e-24         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.67e-25         0         1
         *Z       ---       ---  2.07e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  9.51194e-25  2.38683e-25  6.80077e-27  4.10543e-26  1.28482e-27  3.31766e-27  5.55924e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.94193, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 640 K
            Well    Collision, 1/sec
              W1         3.77527e+09
      global relaxation matrix dimension = 506
      setting global matrices ... done, cpu time[sec] = 0.517572, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.4136, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            506.531       62.405      13.7341      18.5028      1.82278       241.15      16.2028
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.049113, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004445, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.053649, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -8.83306e-13  6.12276e-24  9.98999e-25
      low eigenvalue method done, cpu time[sec] = 0.053905, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.12e-24         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.42e-25         0         1
         *Z       ---       ---  2.07e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  7.77643e-25  1.85564e-25   5.3519e-27  3.11329e-26  9.92378e-28  3.08133e-27  5.68595e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.9463, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 640 K
            Well    Collision, 1/sec
              W1         4.19474e+09
      global relaxation matrix dimension = 506
      setting global matrices ... done, cpu time[sec] = 0.516996, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.41198, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            455.878      56.1645      12.3607      16.6525      1.64051      217.035      14.5825
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.049075, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00443, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.053594, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.57183e-11  5.70797e-24  9.10893e-25
      low eigenvalue method done, cpu time[sec] = 0.053849, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.71e-24         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.32e-25         0         1
         *Z       ---       ---  2.07e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  7.12401e-25  1.66484e-25     4.83e-27  2.76718e-26  8.88847e-28  2.97454e-27  5.69526e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.94385, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 640 K
            Well    Collision, 1/sec
              W1         6.29211e+09
      global relaxation matrix dimension = 506
      setting global matrices ... done, cpu time[sec] = 0.518989, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.41475, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            303.919       37.443      8.24047      11.1017      1.09367       144.69      9.72168
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.049085, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.004428, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.053602, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.73372e-12     4.32e-24  6.27976e-25
      low eigenvalue method done, cpu time[sec] = 0.053862, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.32e-24         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0     1e-25         0         1
         *Z       ---       ---  2.07e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  4.99368e-25  1.07861e-25  3.21363e-27  1.73934e-26  5.75258e-28   2.5344e-27  5.67026e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.95373, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 640 K
            Well    Collision, 1/sec
              W1         8.38948e+09
      global relaxation matrix dimension = 506
      setting global matrices ... done, cpu time[sec] = 0.519068, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.43694, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            227.939      28.0823      6.18036      8.32624     0.820253      108.517      7.29126
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.049178, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004424, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.05369, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -7.70739e-12  3.51567e-24   4.7451e-25
      low eigenvalue method done, cpu time[sec] = 0.053947, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.52e-24         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.14e-26         0         1
         *Z       ---       ---  2.07e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0   3.8128e-25   7.8009e-26  2.37613e-27   1.2371e-26  4.17614e-28  2.20878e-27  5.80766e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.97832, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 640 K
            Well    Collision, 1/sec
              W1         1.04869e+10
      global relaxation matrix dimension = 506
      setting global matrices ... done, cpu time[sec] = 0.518247, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.421, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            182.351      22.4658      4.94428      6.66099     0.656202      86.8139      5.83301
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.049136, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004427, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.053654, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.41359e-12  2.98225e-24  3.78184e-25
      low eigenvalue method done, cpu time[sec] = 0.05391, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.98e-24         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   6.9e-26         0         1
         *Z       ---       ---  2.07e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  3.06187e-25  6.01426e-26  1.86623e-27  9.43769e-27  3.23612e-28  1.95733e-27  5.76815e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.84472, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 640 K
            Well    Collision, 1/sec
              W1         1.25842e+10
      global relaxation matrix dimension = 506
      setting global matrices ... done, cpu time[sec] = 0.51959, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.44116, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            151.959      18.7215      4.12024      5.55083     0.546835      72.3449      4.86084
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.049075, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004432, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.053599, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.20413e-12  2.59916e-24  3.12218e-25
      low eigenvalue method done, cpu time[sec] = 0.05392, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   2.6e-24         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.02e-26         0         1
         *Z       ---       ---  2.07e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.54287e-25  4.83503e-26  1.52449e-27   7.5332e-27  2.61586e-28  1.75777e-27  5.86855e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.8165, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 640 K
            Well    Collision, 1/sec
              W1         1.46816e+10
      global relaxation matrix dimension = 506
      setting global matrices ... done, cpu time[sec] = 0.519797, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.43704, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            130.251       16.047      3.53163      4.75785     0.468716      62.0099      4.16643
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.049181, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004438, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.053711, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.83854e-12  2.30904e-24  2.64325e-25
      low eigenvalue method done, cpu time[sec] = 0.05397, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.31e-24         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.35e-26         0         1
         *Z       ---       ---  2.07e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.16201e-25  4.00236e-26  1.27965e-27  6.20378e-27  2.17702e-28  1.59391e-27   5.9769e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.97068, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 640 K
            Well    Collision, 1/sec
              W1          1.6779e+10
      global relaxation matrix dimension = 506
      setting global matrices ... done, cpu time[sec] = 0.517165, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.42876, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             113.97      14.0411      3.09018      4.16312     0.410126      54.2587      3.64563
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.049127, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004436, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.053656, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -7.92994e-12  2.08083e-24  2.28058e-25
      low eigenvalue method done, cpu time[sec] = 0.053929, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.08e-24         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.82e-26         0         1
         *Z       ---       ---  2.07e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.87231e-25  3.38777e-26  1.09667e-27  5.23056e-27  1.85225e-28  1.45721e-27   6.0314e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.96576, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 650 K
      Energy reference = 22789 1/cm
      Energy step      = 108 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -86 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.007941
         W1 Well: collisional kernel bandwidth = 35
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.394743
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.355435
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.313471
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 2.02188
         W1 Well: minimal relaxation eigenvalue = 0.0229333
         W1 Well: maximal relaxation eigenvalue = 1.94346
         W1 Well:       grid size = 504
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31643 1/cm
         B1 Barrier:        grid size = 212
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -107 1/cm
         B2 Barrier:        grid size = 210
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 108 1/cm
         B3 Barrier:        grid size = 254
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4643 1/cm
         B4 Barrier:        grid size = 269
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6263 1/cm
         B5 Barrier: nonpositive number of states at -23111 1/cm => truncating
         B5 Barrier:        grid size = 425
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23111 1/cm
         B6 Barrier:        grid size = 198
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1404 1/cm
         B7 Barrier:        grid size = 168
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4644 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 3.39121, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31643 -23111 4.41e+05 2.03e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -107 1.35e+14
         B2    109 1.68e+13
         B3  -4643 3.73e+12
         B4  -6263 5.01e+12
         B5 -23111 4.95e+11
         B6   1405 6.53e+13
         B7   4645 4.47e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  6.17e+07  1.13e+08  3.23e+04       934  6.26e-15  3.18e+10  9.17e+13
          R  1.62e-08         1      1.83  0.000524  1.52e-05  1.02e-22       516  1.49e+06
         P1  8.88e-09     0.547         1  0.000287  8.29e-06  5.56e-23       282  8.14e+05
         P2   3.1e-05  1.91e+03  3.49e+03         1    0.0289  1.94e-19  9.85e+05  2.84e+09
         P3   0.00107   6.6e+04  1.21e+05      34.6         1   6.7e-18   3.4e+07  9.81e+10
         P4   1.6e+14  9.85e+21   1.8e+22  5.16e+18  1.49e+17         1  5.08e+24  1.46e+28
         P5  3.15e-11   0.00194   0.00354  1.02e-06  2.94e-08  1.97e-25         1  2.88e+03
         P6  1.09e-14  6.73e-07  1.23e-06  3.52e-10  1.02e-11  6.83e-29  0.000347         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  3.04e+04  5.55e+04      15.9      0.46  3.08e-18  1.57e+07  4.51e+10
          R  3.29e-05         1      1.83  0.000524  1.52e-05  1.02e-22       516  1.49e+06
         P1   1.8e-05     0.547         1  0.000287  8.29e-06  5.56e-23       282  8.14e+05
         P2    0.0629  1.91e+03  3.49e+03         1    0.0289  1.94e-19  9.85e+05  2.84e+09
         P3      2.17   6.6e+04  1.21e+05      34.6         1   6.7e-18   3.4e+07  9.81e+10
         P4  3.24e+17  9.85e+21   1.8e+22  5.16e+18  1.49e+17         1  5.08e+24  1.46e+28
         P5  6.39e-08   0.00194   0.00354  1.02e-06  2.94e-08  1.97e-25         1  2.88e+03
         P6  2.22e-11  6.73e-07  1.23e-06  3.52e-10  1.02e-11  6.83e-29  0.000347         1
   MasterEquation::set:  done, cpu time[sec] = 3.40167, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 650 K
            Well    Collision, 1/sec
              W1         4.14383e+08
      global relaxation matrix dimension = 504
      setting global matrices ... done, cpu time[sec] = 0.514027, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.39828, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            4810.35      599.288      132.803       178.27      17.6433       2325.8      159.028
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.048466, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004379, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.053264, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.33505e-11  6.48784e-23  1.42431e-23
      low eigenvalue method done, cpu time[sec] = 0.053529, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.49e-23         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.49e-24         0         1
         *Z       ---       ---  1.12e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  9.65853e-24  3.55487e-24  1.05765e-25  8.77782e-25   2.3853e-26  1.24217e-26  1.90359e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.91816, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 650 K
            Well    Collision, 1/sec
              W1         1.24315e+09
      global relaxation matrix dimension = 504
      setting global matrices ... done, cpu time[sec] = 0.514479, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.31696, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1603.45      199.763      44.2677      59.4235       5.8811      775.266      53.0093
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.048515, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004366, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.053308, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.56405e-11  3.60972e-23  7.18284e-24
      low eigenvalue method done, cpu time[sec] = 0.053577, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.61e-23         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.28e-25         0         1
         *Z       ---       ---  1.12e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  5.25794e-24  1.55606e-24  4.36576e-26  2.99359e-25  8.82227e-27  1.20759e-26  1.95681e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.84144, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 650 K
            Well    Collision, 1/sec
              W1         2.07192e+09
      global relaxation matrix dimension = 504
      setting global matrices ... done, cpu time[sec] = 0.514036, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.32058, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            962.069      119.858      26.5606      35.6541      3.52866      465.159      31.8056
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.04845, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004343, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.053207, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.27633e-11  2.67525e-23  4.94789e-24
      low eigenvalue method done, cpu time[sec] = 0.053467, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.68e-23         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.14e-25         0         1
         *Z       ---       ---  1.12e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  3.72916e-24  9.93931e-25  2.80396e-26  1.77173e-25  5.42372e-27  1.12382e-26  1.93824e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.13189, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 650 K
            Well    Collision, 1/sec
              W1         2.90068e+09
      global relaxation matrix dimension = 504
      setting global matrices ... done, cpu time[sec] = 0.513532, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.28395, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            687.192      85.6126      18.9719      25.4672      2.52047      332.257      22.7183
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.048431, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004344, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.053194, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.61108e-11  2.17208e-23  3.79126e-24
      low eigenvalue method done, cpu time[sec] = 0.053459, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.17e-23         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.98e-25         0         1
         *Z       ---       ---  1.12e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.90689e-24  7.23525e-25  2.06576e-26   1.2398e-25  3.89116e-27  1.04243e-26   1.9612e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.80817, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 650 K
            Well    Collision, 1/sec
              W1         3.72945e+09
      global relaxation matrix dimension = 504
      setting global matrices ... done, cpu time[sec] = 0.514222, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.28886, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            534.483      66.5876      14.7559      19.8078      1.96037      258.422      17.6698
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.048393, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004374, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.053175, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.32139e-11  1.84792e-23  3.07293e-24
      low eigenvalue method done, cpu time[sec] = 0.053437, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.85e-23         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.24e-25         0         1
         *Z       ---       ---  1.12e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.38338e-24   5.6399e-25  1.63072e-26  9.42942e-26  3.01475e-27  9.70011e-27  1.98446e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.8142, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 650 K
            Well    Collision, 1/sec
              W1         4.14383e+09
      global relaxation matrix dimension = 504
      setting global matrices ... done, cpu time[sec] = 0.516092, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.29438, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            481.035      59.9288      13.2803       17.827      1.76433       232.58      15.9028
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.048416, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004357, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.053197, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.56666e-11  1.72417e-23  2.80569e-24
      low eigenvalue method done, cpu time[sec] = 0.053455, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.72e-23         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.95e-25         0         1
         *Z       ---       ---  1.12e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.18654e-24  5.06701e-25    1.474e-26  8.39389e-26  2.70447e-27  9.37216e-27   1.9856e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.81888, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 650 K
            Well    Collision, 1/sec
              W1         6.21575e+09
      global relaxation matrix dimension = 504
      setting global matrices ... done, cpu time[sec] = 0.513833, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.28429, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             320.69      39.9525      8.85355      11.8847      1.17622      155.053      10.6019
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.048463, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004344, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.053214, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.59268e-11  1.30907e-23  1.94465e-24
      low eigenvalue method done, cpu time[sec] = 0.053476, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.31e-23         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0     3e-25         0         1
         *Z       ---       ---  1.12e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.54086e-24  3.29907e-25  9.86313e-27  5.30428e-26  1.76018e-27  8.01869e-27  1.99859e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.80659, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 650 K
            Well    Collision, 1/sec
              W1         8.28766e+09
      global relaxation matrix dimension = 504
      setting global matrices ... done, cpu time[sec] = 0.516208, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.32724, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            240.517      29.9644      6.64016      8.91352     0.882166       116.29      7.95139
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.048437, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004343, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.053191, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.83015e-11  1.06769e-23  1.47526e-24
      low eigenvalue method done, cpu time[sec] = 0.053456, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.07e-23         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.45e-25         0         1
         *Z       ---       ---  1.12e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.18131e-24  2.39537e-25  7.32513e-27  3.78894e-26  1.28351e-27  7.01173e-27  2.03332e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.85513, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 650 K
            Well    Collision, 1/sec
              W1         1.03596e+10
      global relaxation matrix dimension = 504
      setting global matrices ... done, cpu time[sec] = 0.515616, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.32476, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            192.414      23.9715      5.31213      7.13081     0.705732      93.0319      6.36111
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.048371, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004346, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.053133, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.63017e-12  9.07223e-24  1.17951e-24
      low eigenvalue method done, cpu time[sec] = 0.053388, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.07e-24         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.08e-25         0         1
         *Z       ---       ---  1.12e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  9.51428e-25  1.85191e-25  5.77158e-27  2.89946e-26  9.97788e-28  6.22918e-27  2.04958e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.8494, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 650 K
            Well    Collision, 1/sec
              W1         1.24315e+10
      global relaxation matrix dimension = 504
      setting global matrices ... done, cpu time[sec] = 0.513002, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.27883, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            160.345      19.9763      4.42677      5.94235      0.58811      77.5266      5.30093
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.048445, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004408, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.053267, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.26442e-12  7.91752e-24  9.76353e-25
      low eigenvalue method done, cpu time[sec] = 0.053539, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.92e-24         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.82e-25         0         1
         *Z       ---       ---  1.12e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  7.92237e-25  1.49245e-25  4.72791e-27   2.3204e-26  8.08768e-28  5.60777e-27  2.07648e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.80452, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 650 K
            Well    Collision, 1/sec
              W1         1.45034e+10
      global relaxation matrix dimension = 504
      setting global matrices ... done, cpu time[sec] = 0.515991, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.26482, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            137.438      17.1225      3.79438      5.09344     0.504095      66.4513      4.54365
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.048484, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004343, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.05324, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.39411e-12  7.04167e-24  8.28464e-25
      low eigenvalue method done, cpu time[sec] = 0.053497, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.04e-24         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.61e-25         0         1
         *Z       ---       ---  1.12e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  6.75314e-25  1.23833e-25  3.97929e-27   1.9158e-26  6.74888e-28  5.09754e-27  2.10935e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.79225, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 650 K
            Well    Collision, 1/sec
              W1         1.65753e+10
      global relaxation matrix dimension = 504
      setting global matrices ... done, cpu time[sec] = 0.513881, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.28893, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            120.259      14.9822      3.32008      4.45676     0.441083      58.1449       3.9757
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.048423, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004363, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.053198, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.47005e-11  6.35181e-24   7.1622e-25
      low eigenvalue method done, cpu time[sec] = 0.053456, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.35e-24         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.46e-25         0         1
         *Z       ---       ---  1.12e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  5.85753e-25  1.04983e-25  3.41638e-27  1.61806e-26  5.75242e-28  4.66802e-27  2.11232e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.81268, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 660 K
      Energy reference = 23067 1/cm
      Energy step      = 110 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -85.9 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.007894
         W1 Well: collisional kernel bandwidth = 35
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.387895
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.347428
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.293425
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 1.92561
         W1 Well: minimal relaxation eigenvalue = 0.0226836
         W1 Well: maximal relaxation eigenvalue = 1.32053
         W1 Well:       grid size = 497
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31603 1/cm
         B1 Barrier:        grid size = 210
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -33 1/cm
         B2 Barrier:        grid size = 208
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 186 1/cm
         B3 Barrier:        grid size = 252
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4653 1/cm
         B4 Barrier:        grid size = 266
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6193 1/cm
         B5 Barrier: nonpositive number of states at -23133 1/cm => truncating
         B5 Barrier:        grid size = 420
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23133 1/cm
         B6 Barrier:        grid size = 197
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1396 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4697 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 3.2552, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31603 -23133 4.34e+05 2.14e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -33 1.48e+14
         B2    187 1.87e+13
         B3  -4653 4.16e+12
         B4  -6193 5.57e+12
         B5 -23133 5.54e+11
         B6   1397 7.27e+13
         B7   4697 5.06e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.05e+07  3.73e+07  1.25e+04       383  4.74e-15     1e+10  2.62e+13
          R  4.88e-08         1      1.82  0.000612  1.87e-05  2.32e-22       491  1.28e+06
         P1  2.68e-08      0.55         1  0.000336  1.03e-05  1.27e-22       270  7.03e+05
         P2  7.98e-05  1.63e+03  2.97e+03         1    0.0306  3.78e-19  8.02e+05  2.09e+09
         P3   0.00261  5.34e+04  9.72e+04      32.7         1  1.24e-17  2.62e+07  6.84e+10
         P4  2.11e+14  4.32e+21  7.86e+21  2.64e+18  8.08e+16         1  2.12e+24  5.53e+27
         P5  9.95e-11   0.00204   0.00371  1.25e-06  3.81e-08  4.72e-25         1  2.61e+03
         P6  3.82e-14  7.81e-07  1.42e-06  4.78e-10  1.46e-11  1.81e-28  0.000383         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.03e+04  1.87e+04      6.28     0.192  2.38e-18  5.04e+06  1.31e+10
          R  9.74e-05         1      1.82  0.000612  1.87e-05  2.32e-22       491  1.28e+06
         P1  5.35e-05      0.55         1  0.000336  1.03e-05  1.27e-22       270  7.03e+05
         P2     0.159  1.63e+03  2.97e+03         1    0.0306  3.78e-19  8.02e+05  2.09e+09
         P3       5.2  5.34e+04  9.72e+04      32.7         1  1.24e-17  2.62e+07  6.84e+10
         P4  4.21e+17  4.32e+21  7.86e+21  2.64e+18  8.08e+16         1  2.12e+24  5.53e+27
         P5  1.98e-07   0.00204   0.00371  1.25e-06  3.81e-08  4.72e-25         1  2.61e+03
         P6  7.61e-11  7.81e-07  1.42e-06  4.78e-10  1.46e-11  1.81e-28  0.000383         1
   MasterEquation::set:  done, cpu time[sec] = 3.26564, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 660 K
            Well    Collision, 1/sec
              W1         4.09448e+08
      global relaxation matrix dimension = 497
      setting global matrices ... done, cpu time[sec] = 0.501341, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.26331, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            5071.46      638.879      142.538      190.662      18.9554      2489.58      173.172
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.056943, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004289, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.104388, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.01601e-10  1.85043e-22   4.1112e-23
      low eigenvalue method done, cpu time[sec] = 0.105633, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.85e-22         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   4.2e-24         0         1
         *Z       ---       ---  6.22e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.79644e-23  1.02157e-23  3.03684e-25  2.50797e-24   6.8286e-26  3.73609e-26  6.65068e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.8036, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 660 K
            Well    Collision, 1/sec
              W1         1.22834e+09
      global relaxation matrix dimension = 497
      setting global matrices ... done, cpu time[sec] = 0.499326, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.3239, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1690.49       212.96      47.5126       63.554      6.31846       829.86      57.7239
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.046689, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004241, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.051027, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.17299e-11  1.03907e-22  2.09553e-23
      low eigenvalue method done, cpu time[sec] = 0.051283, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.04e-22         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.36e-24         0         1
         *Z       ---       ---  6.22e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.53782e-23  4.51563e-24  1.26823e-25   8.6501e-25  2.55541e-26   3.6406e-26  6.58571e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.80386, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 660 K
            Well    Collision, 1/sec
              W1         2.04724e+09
      global relaxation matrix dimension = 497
      setting global matrices ... done, cpu time[sec] = 0.501511, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.31224, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1014.29      127.776      28.5076      38.1324      3.79108      497.916      34.6344
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.046717, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004255, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.051061, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.07596e-10  7.73284e-23  1.45167e-23
      low eigenvalue method done, cpu time[sec] = 0.051314, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.73e-23         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.75e-24         0         1
         *Z       ---       ---  6.22e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.09662e-23  2.89934e-24  8.19449e-26  5.14911e-25  1.58047e-26  3.39714e-26  6.60537e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.79174, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 660 K
            Well    Collision, 1/sec
              W1         2.86613e+09
      global relaxation matrix dimension = 497
      setting global matrices ... done, cpu time[sec] = 0.499759, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.31736, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            724.494      91.2685      20.3625      27.2374      2.70791      355.654      24.7388
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.046645, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004241, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.05098, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.19873e-12  6.29538e-23  1.11675e-23
      low eigenvalue method done, cpu time[sec] = 0.051228, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   6.3e-23         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.43e-24         0         1
         *Z       ---       ---  6.22e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  8.57998e-24    2.118e-24  6.06186e-26  3.61744e-25  1.13855e-26  3.15862e-26  6.69307e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.79423, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 660 K
            Well    Collision, 1/sec
              W1         3.68503e+09
      global relaxation matrix dimension = 497
      setting global matrices ... done, cpu time[sec] = 0.50087, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.31474, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            563.495      70.9866      15.8375      21.1847      2.10615       276.62      19.2413
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.04677, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004241, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.051095, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.26056e-11  5.36658e-23  9.07958e-24
      low eigenvalue method done, cpu time[sec] = 0.051349, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.37e-23         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.22e-24         0         1
         *Z       ---       ---  6.22e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  7.05731e-24  1.65612e-24  4.80196e-26  2.76054e-25  8.85191e-27  2.94512e-26  6.68528e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.79387, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 660 K
            Well    Collision, 1/sec
              W1         4.09448e+09
      global relaxation matrix dimension = 497
      setting global matrices ... done, cpu time[sec] = 0.50141, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.32535, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            507.146      63.8879      14.2538      19.0662      1.89554      248.958      17.3172
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.0467, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004255, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.051045, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.95937e-11  5.01136e-23  8.30098e-24
      low eigenvalue method done, cpu time[sec] = 0.051296, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.01e-23         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.14e-24         0         1
         *Z       ---       ---  6.22e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0   6.4821e-24  1.48947e-24  4.34593e-26  2.46026e-25  7.95073e-27  2.84876e-26  6.73135e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.80701, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 660 K
            Well    Collision, 1/sec
              W1         6.14171e+09
      global relaxation matrix dimension = 497
      setting global matrices ... done, cpu time[sec] = 0.500994, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.31983, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            338.097       42.592      9.50252      12.7108      1.26369      165.972      11.5448
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.046732, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004255, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.051076, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -7.07534e-12  3.81694e-23  5.78402e-24
      low eigenvalue method done, cpu time[sec] = 0.051327, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.82e-23         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.66e-25         0         1
         *Z       ---       ---  6.22e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  4.59191e-24  9.74658e-25  2.92467e-26  1.56329e-25  5.20429e-27  2.44749e-26  6.76084e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.80044, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 660 K
            Well    Collision, 1/sec
              W1         8.18895e+09
      global relaxation matrix dimension = 497
      setting global matrices ... done, cpu time[sec] = 0.500818, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.32395, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            253.573       31.944      7.12689       9.5331      0.94777      124.479      8.65859
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.046883, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004247, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.051215, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.42419e-12  3.12004e-23  4.40512e-24
      low eigenvalue method done, cpu time[sec] = 0.05147, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.12e-23         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.08e-25         0         1
         *Z       ---       ---  6.22e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  3.53418e-24  7.10352e-25  2.18124e-26  1.12122e-25  3.81092e-27  2.14661e-26  6.84462e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.80239, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 660 K
            Well    Collision, 1/sec
              W1         1.02362e+10
      global relaxation matrix dimension = 497
      setting global matrices ... done, cpu time[sec] = 0.500795, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.33193, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            202.858      25.5552      5.70151      7.62648     0.758216      99.5832      6.92687
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.046718, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004274, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.051079, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.16205e-11  2.65558e-23  3.53304e-24
      low eigenvalue method done, cpu time[sec] = 0.051343, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.66e-23         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.02e-25         0         1
         *Z       ---       ---  6.22e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.85525e-24   5.5077e-25   1.7243e-26  8.60668e-26  2.97223e-27  1.91288e-26  6.94164e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.81257, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 660 K
            Well    Collision, 1/sec
              W1         1.22834e+10
      global relaxation matrix dimension = 497
      setting global matrices ... done, cpu time[sec] = 0.499415, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.32381, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            169.049       21.296      4.75126       6.3554     0.631846       82.986      5.77239
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.04674, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004273, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.051099, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.11982e-12  2.32072e-23  2.93214e-24
      low eigenvalue method done, cpu time[sec] = 0.051355, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.32e-23         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.26e-25         0         1
         *Z       ---       ---  6.22e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.38333e-24  4.44908e-25  1.41623e-26   6.9053e-26  2.41553e-27  1.72568e-26   6.9977e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.80316, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 660 K
            Well    Collision, 1/sec
              W1         1.43307e+10
      global relaxation matrix dimension = 497
      setting global matrices ... done, cpu time[sec] = 0.501012, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.32517, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            144.899      18.2537      4.07251      5.44748     0.541583      71.1309      4.94777
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.046686, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004252, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.051021, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -9.16122e-12  2.06633e-23  2.49359e-24
      low eigenvalue method done, cpu time[sec] = 0.05127, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.07e-23         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.69e-25         0         1
         *Z       ---       ---  6.22e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.03607e-24  3.69947e-25  1.19479e-26  5.71407e-26   2.0204e-27  1.57145e-26  7.08499e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.80228, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 660 K
            Well    Collision, 1/sec
              W1         1.63779e+10
      global relaxation matrix dimension = 497
      setting global matrices ... done, cpu time[sec] = 0.500836, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.3368, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            126.786       15.972      3.56344      4.76655     0.473885      62.2395      4.32929
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.0467, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004253, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.051036, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.99671e-12  1.86569e-23  2.15999e-24
      low eigenvalue method done, cpu time[sec] = 0.051282, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.87e-23         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.23e-25         0         1
         *Z       ---       ---  6.22e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.76993e-24  3.14271e-25  1.02817e-26  4.83686e-26  1.72611e-27  1.44254e-26  7.15369e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.81122, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 670 K
      Energy reference = 23345 1/cm
      Energy step      = 112 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -85.7 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.007675
         W1 Well: collisional kernel bandwidth = 34
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.371467
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.339185
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.29736
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 1.89147
         W1 Well: minimal relaxation eigenvalue = 0.0224527
         W1 Well: maximal relaxation eigenvalue = 1.9764
         W1 Well:       grid size = 491
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31647 1/cm
         B1 Barrier:        grid size = 209
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -63 1/cm
         B2 Barrier:        grid size = 207
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 160 1/cm
         B3 Barrier:        grid size = 250
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4655 1/cm
         B4 Barrier:        grid size = 264
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6223 1/cm
         B5 Barrier: nonpositive number of states at -23135 1/cm => truncating
         B5 Barrier:        grid size = 415
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23135 1/cm
         B6 Barrier:        grid size = 196
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1392 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4640 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 3.19787, elapsed time[sec] = 1
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31647 -23135 4.33e+05 2.25e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -63 1.62e+14
         B2    161 2.07e+13
         B3  -4655 4.64e+12
         B4  -6223 6.19e+12
         B5 -23135 6.18e+11
         B6   1393 8.09e+13
         B7   4641 5.72e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  7.03e+06  1.27e+07     5e+03       161  3.62e-15  3.29e+09  7.77e+12
          R  1.42e-07         1      1.81  0.000712   2.3e-05  5.15e-22       468  1.11e+06
         P1  7.85e-08     0.552         1  0.000393  1.27e-05  2.84e-22       258  6.11e+05
         P2    0.0002   1.4e+03  2.54e+03         1    0.0323  7.24e-19  6.57e+05  1.55e+09
         P3    0.0062  4.35e+04  7.89e+04        31         1  2.24e-17  2.04e+07  4.82e+10
         P4  2.76e+14  1.94e+21  3.52e+21  1.38e+18  4.46e+16         1  9.07e+23  2.15e+27
         P5  3.04e-10   0.00214   0.00388  1.52e-06  4.91e-08   1.1e-24         1  2.37e+03
         P6  1.29e-13  9.04e-07  1.64e-06  6.44e-10  2.08e-11  4.66e-28  0.000423         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  3.59e+03   6.5e+03      2.55    0.0824  1.85e-18  1.68e+06  3.97e+09
          R  0.000279         1      1.81  0.000712   2.3e-05  5.15e-22       468  1.11e+06
         P1  0.000154     0.552         1  0.000393  1.27e-05  2.84e-22       258  6.11e+05
         P2     0.392   1.4e+03  2.54e+03         1    0.0323  7.24e-19  6.57e+05  1.55e+09
         P3      12.1  4.35e+04  7.89e+04        31         1  2.24e-17  2.04e+07  4.82e+10
         P4  5.41e+17  1.94e+21  3.52e+21  1.38e+18  4.46e+16         1  9.07e+23  2.15e+27
         P5  5.96e-07   0.00214   0.00388  1.52e-06  4.91e-08   1.1e-24         1  2.37e+03
         P6  2.52e-10  9.04e-07  1.64e-06  6.44e-10  2.08e-11  4.66e-28  0.000423         1
   MasterEquation::set:  done, cpu time[sec] = 3.2089, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 670 K
            Well    Collision, 1/sec
              W1          4.0466e+08
      global relaxation matrix dimension = 491
      setting global matrices ... done, cpu time[sec] = 0.486437, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.94221, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             5342.3      680.483      152.833      203.725      20.3445      2661.98      188.305
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.296547, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004086, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.349229, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.25141e-10  5.11132e-22  1.14897e-22
      low eigenvalue method done, cpu time[sec] = 0.350425, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.11e-22         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.15e-23         0         1
         *Z       ---       ---   3.5e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  7.83675e-23  2.84373e-23  8.44207e-25   6.9386e-24  1.89283e-25  1.08644e-25  2.14444e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.6848, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 670 K
            Well    Collision, 1/sec
              W1         1.21398e+09
      global relaxation matrix dimension = 491
      setting global matrices ... done, cpu time[sec] = 0.48872, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.15319, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1780.77      226.828      50.9445      67.9082       6.7815      887.327      62.7682
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.045084, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004076, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.049562, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -9.95504e-12   2.8956e-22   5.9168e-23
      low eigenvalue method done, cpu time[sec] = 0.049808, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   2.9e-22         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   6.5e-24         0         1
         *Z       ---       ---   3.5e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  4.35205e-23   1.2686e-23   3.5655e-25  2.41933e-24  7.16409e-26  1.06143e-25  2.15237e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.59453, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 670 K
            Well    Collision, 1/sec
              W1          2.0233e+09
      global relaxation matrix dimension = 491
      setting global matrices ... done, cpu time[sec] = 0.489274, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.17137, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1068.46      136.097      30.5667      40.7449       4.0689      532.396      37.6609
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.045089, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004068, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.049556, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.08033e-12  2.16356e-22  4.12128e-23
      low eigenvalue method done, cpu time[sec] = 0.049805, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.16e-22         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.86e-24         0         1
         *Z       ---       ---   3.5e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  3.11988e-23   8.1861e-24  2.31741e-25  1.44834e-24   4.4571e-26  9.93033e-26  2.16085e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.61145, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 670 K
            Well    Collision, 1/sec
              W1         2.83262e+09
      global relaxation matrix dimension = 491
      setting global matrices ... done, cpu time[sec] = 0.488753, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.17316, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            763.186      97.2118      21.8333      29.1035      2.90636      380.283      26.9007
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.045522, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004064, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.04998, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.64014e-12  1.76598e-22  3.18265e-23
      low eigenvalue method done, cpu time[sec] = 0.05025, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.77e-22         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.97e-24         0         1
         *Z       ---       ---   3.5e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0   2.4502e-23  6.00122e-24  1.72136e-25  1.02151e-24  3.22399e-26  9.25429e-26  2.16569e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.6133, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 670 K
            Well    Collision, 1/sec
              W1         3.64194e+09
      global relaxation matrix dimension = 491
      setting global matrices ... done, cpu time[sec] = 0.488002, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.16808, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            593.589      75.6092      16.9815      22.6361       2.2605      295.776      20.9227
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.045119, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00408, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.049607, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.83941e-11  1.50836e-22   2.5954e-23
      low eigenvalue method done, cpu time[sec] = 0.049862, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.51e-22         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.39e-24         0         1
         *Z       ---       ---   3.5e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.02144e-23  4.70596e-24  1.36807e-25  7.81996e-25   2.5148e-26  8.64764e-26  2.17637e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.60823, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 670 K
            Well    Collision, 1/sec
              W1          4.0466e+09
      global relaxation matrix dimension = 491
      setting global matrices ... done, cpu time[sec] = 0.487805, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.18572, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             534.23      68.0483      15.2833      20.3725      2.03445      266.198      18.8305
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.045158, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004087, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.049645, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.30259e-11  1.40966e-22  2.37591e-23
      low eigenvalue method done, cpu time[sec] = 0.049892, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.41e-22         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.17e-24         0         1
         *Z       ---       ---   3.5e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.85902e-23  4.23756e-24  1.23988e-25  6.97882e-25  2.26194e-26   8.3715e-26  2.18148e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.62492, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 670 K
            Well    Collision, 1/sec
              W1          6.0699e+09
      global relaxation matrix dimension = 491
      setting global matrices ... done, cpu time[sec] = 0.487449, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.17777, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            356.153      45.3655      10.1889      13.5816       1.3563      177.465      12.5536
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.045571, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004075, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.050049, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.21133e-11    1.077e-22  1.66405e-23
      low eigenvalue method done, cpu time[sec] = 0.050293, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.08e-22         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.42e-24         0         1
         *Z       ---       ---   3.5e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.32366e-23  2.78643e-24  8.39015e-26  4.45807e-25  1.48878e-26  7.22015e-26  2.20185e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.61906, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 670 K
            Well    Collision, 1/sec
              W1         8.09321e+09
      global relaxation matrix dimension = 491
      setting global matrices ... done, cpu time[sec] = 0.488956, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.18101, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            267.115      34.0241      7.64167      10.1862      1.01722      133.099      9.41524
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.045344, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004081, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.049821, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.96897e-11   8.8227e-23  1.27219e-23
      low eigenvalue method done, cpu time[sec] = 0.050068, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.82e-23         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.98e-24         0         1
         *Z       ---       ---   3.5e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.02251e-23  2.03792e-24  6.28247e-26  3.20968e-25  1.09454e-26  6.35306e-26   2.2324e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.62303, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 670 K
            Well    Collision, 1/sec
              W1         1.01165e+10
      global relaxation matrix dimension = 491
      setting global matrices ... done, cpu time[sec] = 0.496821, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.19592, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            213.692      27.2193      6.11334      8.14899      0.81378      106.479      7.53219
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.045139, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004079, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.049617, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.23702e-12  7.52175e-23  1.02345e-23
      low eigenvalue method done, cpu time[sec] = 0.049863, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.52e-23         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.69e-24         0         1
         *Z       ---       ---   3.5e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  8.28612e-24  1.58468e-24  4.98258e-26  2.47144e-25  8.56421e-27  5.67607e-26  2.25635e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.64597, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 670 K
            Well    Collision, 1/sec
              W1         1.21398e+10
      global relaxation matrix dimension = 491
      setting global matrices ... done, cpu time[sec] = 0.488027, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.16328, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            178.077      22.6828      5.09445      6.79082      0.67815      88.7327      6.27682
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.045131, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004068, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.049602, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.45421e-11  6.58204e-23  8.51553e-24
      low eigenvalue method done, cpu time[sec] = 0.049844, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.58e-23         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.48e-24         0         1
         *Z       ---       ---   3.5e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  6.93329e-24  1.28308e-24   4.1031e-26  1.98795e-25   6.9785e-27  5.13116e-26  2.27579e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.60427, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 670 K
            Well    Collision, 1/sec
              W1         1.41631e+10
      global relaxation matrix dimension = 491
      setting global matrices ... done, cpu time[sec] = 0.488234, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.18666, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            152.637      19.4424      4.36667       5.8207     0.581271      76.0566      5.38014
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.045085, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004083, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.049569, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   4.7325e-12  5.86705e-23  7.25777e-24
      low eigenvalue method done, cpu time[sec] = 0.049815, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.87e-23         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.32e-24         0         1
         *Z       ---       ---   3.5e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  5.93603e-24  1.06904e-24  3.46963e-26  1.64862e-25  5.85042e-27  4.68342e-26  2.30122e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.62691, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 670 K
            Well    Collision, 1/sec
              W1         1.61864e+10
      global relaxation matrix dimension = 491
      setting global matrices ... done, cpu time[sec] = 0.487271, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.18645, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            133.557      17.0121      3.82083      5.09312     0.508612      66.5495      4.70762
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.045108, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004075, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.049582, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.99111e-12  5.30239e-23  6.29892e-24
      low eigenvalue method done, cpu time[sec] = 0.049831, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   5.3e-23         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.19e-24         0         1
         *Z       ---       ---   3.5e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  5.17061e-24  9.09952e-25  2.99228e-26  1.39848e-25  5.00914e-27   4.3064e-26  2.32082e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.6256, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 680 K
      Energy reference = 23623 1/cm
      Energy step      = 113 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -85.6 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.008514
         W1 Well: collisional kernel bandwidth = 34
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.371087
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.33695
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.298062
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 1.8351
         W1 Well: minimal relaxation eigenvalue = 0.0222258
         W1 Well: maximal relaxation eigenvalue = 1.55496
         W1 Well:       grid size = 489
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31634 1/cm
         B1 Barrier:        grid size = 210
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -106 1/cm
         B2 Barrier:        grid size = 208
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 118 1/cm
         B3 Barrier:        grid size = 250
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4627 1/cm
         B4 Barrier:        grid size = 264
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6208 1/cm
         B5 Barrier: nonpositive number of states at -23159 1/cm => truncating
         B5 Barrier:        grid size = 414
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23159 1/cm
         B6 Barrier:        grid size = 196
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1474 1/cm
         B7 Barrier:        grid size = 168
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4638 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 3.14131, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31634 -23159 4.26e+05 2.37e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -106 1.78e+14
         B2    119 2.29e+13
         B3  -4627 5.18e+12
         B4  -6208 6.88e+12
         B5 -23159  6.9e+11
         B6   1475 8.99e+13
         B7   4639 6.46e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.52e+06  4.54e+06  2.07e+03      70.5  2.82e-15  1.12e+09  2.42e+12
          R  3.97e-07         1       1.8  0.000825   2.8e-05  1.12e-21       446   9.6e+05
         P1   2.2e-07     0.554         1  0.000457  1.55e-05  6.21e-22       247  5.32e+05
         P2  0.000482  1.21e+03  2.19e+03         1     0.034  1.36e-18  5.41e+05  1.16e+09
         P3    0.0142  3.57e+04  6.44e+04      29.4         1     4e-17  1.59e+07  3.43e+10
         P4  3.55e+14  8.92e+20  1.61e+21  7.36e+17   2.5e+16         1  3.98e+23  8.57e+26
         P5  8.91e-10   0.00224   0.00405  1.85e-06  6.28e-08  2.51e-24         1  2.15e+03
         P6  4.14e-13  1.04e-06  1.88e-06  8.59e-10  2.92e-11  1.17e-27  0.000464         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.29e+03  2.33e+03      1.07    0.0362  1.45e-18  5.76e+05  1.24e+09
          R  0.000774         1       1.8  0.000825   2.8e-05  1.12e-21       446   9.6e+05
         P1  0.000429     0.554         1  0.000457  1.55e-05  6.21e-22       247  5.32e+05
         P2     0.939  1.21e+03  2.19e+03         1     0.034  1.36e-18  5.41e+05  1.16e+09
         P3      27.6  3.57e+04  6.44e+04      29.4         1     4e-17  1.59e+07  3.43e+10
         P4  6.91e+17  8.92e+20  1.61e+21  7.36e+17   2.5e+16         1  3.98e+23  8.57e+26
         P5  1.74e-06   0.00224   0.00405  1.85e-06  6.28e-08  2.51e-24         1  2.15e+03
         P6  8.06e-10  1.04e-06  1.88e-06  8.59e-10  2.92e-11  1.17e-27  0.000464         1
   MasterEquation::set:  done, cpu time[sec] = 3.15235, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 680 K
            Well    Collision, 1/sec
              W1         4.00014e+08
      global relaxation matrix dimension = 489
      setting global matrices ... done, cpu time[sec] = 0.483139, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.86224, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            5622.98      724.178      163.713      217.484      21.8139      2843.28      204.476
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.327625, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004153, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.380715, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.98377e-10  1.36662e-21  3.10411e-22
      low eigenvalue method done, cpu time[sec] = 0.382328, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.37e-21         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.04e-23         0         1
         *Z       ---       ---  2.02e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.12848e-22  7.67938e-23  2.27477e-24  1.86092e-23  5.08608e-25  3.04922e-25  6.78786e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.62815, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 680 K
            Well    Collision, 1/sec
              W1         1.20004e+09
      global relaxation matrix dimension = 489
      setting global matrices ... done, cpu time[sec] = 0.484375, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.11862, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1874.33      241.393      54.5711      72.4947       7.2713      947.761      68.1587
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.044695, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004149, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.04923, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.82592e-11  7.80725e-22   1.6142e-22
      low eigenvalue method done, cpu time[sec] = 0.049475, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.81e-22         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.74e-23         0         1
         *Z       ---       ---  2.02e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.19328e-22  3.45523e-23  9.71339e-25  6.55755e-24  1.94633e-25  2.98994e-25  6.73152e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.54796, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 680 K
            Well    Collision, 1/sec
              W1         2.00007e+09
      global relaxation matrix dimension = 489
      setting global matrices ... done, cpu time[sec] = 0.484404, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.11366, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             1124.6      144.836      32.7427      43.4968      4.36278      568.656      40.8952
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.044823, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004111, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.049328, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -9.74011e-12  5.85585e-22  1.13026e-22
      low eigenvalue method done, cpu time[sec] = 0.049579, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.86e-22         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.3e-23         0         1
         *Z       ---       ---  2.02e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  8.59784e-23  2.24007e-23  6.34917e-25  3.94715e-24   1.2178e-25  2.80607e-25  6.77747e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.54471, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 680 K
            Well    Collision, 1/sec
              W1          2.8001e+09
      global relaxation matrix dimension = 489
      setting global matrices ... done, cpu time[sec] = 0.485054, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.15691, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            803.283      103.454      23.3876      31.0692      3.11627      406.183      29.2109
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.044759, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004099, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.049259, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.31946e-11  4.79181e-22  8.76088e-23
      low eigenvalue method done, cpu time[sec] = 0.049503, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.79e-22         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.07e-23         0         1
         *Z       ---       ---  2.02e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  6.77736e-23  1.64788e-23  4.73539e-25  2.79484e-24  8.84477e-26   2.6219e-25  6.79795e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.43844, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 680 K
            Well    Collision, 1/sec
              W1         3.60013e+09
      global relaxation matrix dimension = 489
      setting global matrices ... done, cpu time[sec] = 0.482866, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.11953, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            624.776      80.4643      18.1904      24.1649      2.42377       315.92      22.7196
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.044992, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004154, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.049541, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -4.9246e-12  4.10044e-22  7.16511e-23
      low eigenvalue method done, cpu time[sec] = 0.049799, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   4.1e-22         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.11e-24         0         1
         *Z       ---       ---  2.02e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  5.60708e-23  1.29561e-23  3.77512e-25  2.14588e-24  6.92045e-26  2.45512e-25  6.82236e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.54647, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 680 K
            Well    Collision, 1/sec
              W1         4.00014e+09
      global relaxation matrix dimension = 489
      setting global matrices ... done, cpu time[sec] = 0.484528, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.16294, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            562.298      72.4178      16.3713      21.7484      2.18139      284.328      20.4476
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.044742, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004081, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.049212, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.30375e-11  3.83513e-22  6.56735e-23
      low eigenvalue method done, cpu time[sec] = 0.049457, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.84e-22         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.52e-24         0         1
         *Z       ---       ---  2.02e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  5.16303e-23  1.16802e-23  3.42602e-25  1.91755e-24  6.23304e-26  2.37916e-25  6.85272e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.59301, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 680 K
            Well    Collision, 1/sec
              W1         6.00022e+09
      global relaxation matrix dimension = 489
      setting global matrices ... done, cpu time[sec] = 0.483551, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.11862, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            374.865      48.2786      10.9142      14.4989      1.45426      189.552      13.6317
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.044728, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004079, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.049201, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.71549e-11   2.9389e-22  4.62265e-23
      low eigenvalue method done, cpu time[sec] = 0.049454, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.94e-22         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.53e-24         0         1
         *Z       ---       ---  2.02e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  3.69387e-23  7.71518e-24  2.33053e-25  1.23111e-24  4.12404e-26  2.06002e-25  6.92445e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.54885, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 680 K
            Well    Collision, 1/sec
              W1         8.00029e+09
      global relaxation matrix dimension = 489
      setting global matrices ... done, cpu time[sec] = 0.485985, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.12352, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            281.149      36.2089      8.18567      10.8742      1.09069      142.164      10.2238
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.045126, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004074, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.049589, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.17204e-11  2.41259e-22  3.54719e-23
      low eigenvalue method done, cpu time[sec] = 0.049838, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.41e-22         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.36e-24         0         1
         *Z       ---       ---  2.02e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.86387e-23  5.66195e-24  1.75193e-25  8.89687e-25   3.0438e-26  1.81843e-25  7.00668e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.55654, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 680 K
            Well    Collision, 1/sec
              W1         1.00004e+10
      global relaxation matrix dimension = 489
      setting global matrices ... done, cpu time[sec] = 0.487254, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.12266, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            224.919      28.9671      6.54853      8.69937     0.872556      113.731      8.17905
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.04469, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004076, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.049157, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.72147e-12  2.06016e-22  2.86212e-23
      low eigenvalue method done, cpu time[sec] = 0.049406, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.06e-22         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.58e-24         0         1
         *Z       ---       ---  2.02e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.32788e-23  4.41555e-24  1.39403e-25  6.87251e-25  2.38951e-26  1.62904e-25  7.07999e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.55747, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 680 K
            Well    Collision, 1/sec
              W1         1.20004e+10
      global relaxation matrix dimension = 489
      setting global matrices ... done, cpu time[sec] = 0.485987, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.11744, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            187.433      24.1393      5.45711      7.24947      0.72713      94.7761      6.81587
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.044736, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004059, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.049195, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.80439e-12  1.80513e-22  2.38729e-23
      low eigenvalue method done, cpu time[sec] = 0.049445, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.81e-22         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.01e-24         0         1
         *Z       ---       ---  2.02e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.95251e-23  3.58322e-24  1.15093e-25  5.54155e-25  1.95207e-26  1.47605e-25  7.14551e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.54494, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 680 K
            Well    Collision, 1/sec
              W1         1.40005e+10
      global relaxation matrix dimension = 489
      setting global matrices ... done, cpu time[sec] = 0.484343, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.13575, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            160.657      20.6908      4.67752      6.21383     0.623254      81.2366      5.84218
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.044714, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004072, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.049185, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.44011e-12  1.61079e-22  2.03903e-23
      low eigenvalue method done, cpu time[sec] = 0.049435, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.61e-22         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.58e-24         0         1
         *Z       ---       ---  2.02e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.67507e-23  2.99127e-24  9.75378e-26  4.60533e-25   1.6401e-26  1.34972e-25   7.2146e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.56291, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 680 K
            Well    Collision, 1/sec
              W1         1.60006e+10
      global relaxation matrix dimension = 489
      setting global matrices ... done, cpu time[sec] = 0.486785, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.13474, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            140.575      18.1045      4.09283       5.4371     0.545347      71.0821       5.1119
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.04497, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004065, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.04943, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.22607e-12  1.45712e-22  1.77296e-23
      low eigenvalue method done, cpu time[sec] = 0.049686, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.46e-22         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.24e-24         0         1
         *Z       ---       ---  2.02e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.46174e-23  2.55053e-24  8.42837e-26  3.91395e-25  1.40701e-26  1.24325e-25  7.27485e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.56622, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 690 K
      Energy reference = 23901 1/cm
      Energy step      = 115 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -85.5 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.009136
         W1 Well: collisional kernel bandwidth = 34
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.365205
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.329014
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.290743
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 1.77584
         W1 Well: minimal relaxation eigenvalue = 0.022013
         W1 Well: maximal relaxation eigenvalue = 1.72772
         W1 Well:       grid size = 483
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31644 1/cm
         B1 Barrier:        grid size = 208
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -18 1/cm
         B2 Barrier:        grid size = 206
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 211 1/cm
         B3 Barrier:        grid size = 248
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4618 1/cm
         B4 Barrier:        grid size = 262
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6228 1/cm
         B5 Barrier: nonpositive number of states at -23249 1/cm => truncating
         B5 Barrier:        grid size = 410
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23248 1/cm
         B6 Barrier:        grid size = 195
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1476 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4696 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 3.06174, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31644 -23248 3.99e+05 2.49e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -18 1.95e+14
         B2    212 2.53e+13
         B3  -4618 5.76e+12
         B4  -6228 7.63e+12
         B5 -23248 7.69e+11
         B6   1477 9.98e+13
         B7   4697 7.29e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  9.18e+05  1.65e+06       873      31.2  2.19e-15  3.91e+08  7.68e+11
          R  1.09e-06         1       1.8  0.000951   3.4e-05  2.38e-21       426  8.37e+05
         P1  6.06e-07     0.556         1  0.000529  1.89e-05  1.32e-21       237  4.65e+05
         P2   0.00115  1.05e+03  1.89e+03         1    0.0357  2.51e-18  4.48e+05   8.8e+08
         P3    0.0321  2.94e+04  5.29e+04        28         1  7.01e-17  1.25e+07  2.46e+10
         P4  4.57e+14   4.2e+20  7.55e+20  3.99e+17  1.43e+16         1  1.79e+23  3.51e+26
         P5  2.56e-09   0.00235   0.00422  2.23e-06  7.98e-08  5.59e-24         1  1.96e+03
         P6   1.3e-12  1.19e-06  2.15e-06  1.14e-09  4.06e-11  2.85e-27  0.000509         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1       479       862     0.456    0.0163  1.14e-18  2.04e+05  4.01e+08
          R   0.00209         1       1.8  0.000951   3.4e-05  2.38e-21       426  8.37e+05
         P1   0.00116     0.556         1  0.000529  1.89e-05  1.32e-21       237  4.65e+05
         P2      2.19  1.05e+03  1.89e+03         1    0.0357  2.51e-18  4.48e+05   8.8e+08
         P3      61.4  2.94e+04  5.29e+04        28         1  7.01e-17  1.25e+07  2.46e+10
         P4  8.76e+17   4.2e+20  7.55e+20  3.99e+17  1.43e+16         1  1.79e+23  3.51e+26
         P5   4.9e-06   0.00235   0.00422  2.23e-06  7.98e-08  5.59e-24         1  1.96e+03
         P6  2.49e-09  1.19e-06  2.15e-06  1.14e-09  4.06e-11  2.85e-27  0.000509         1
   MasterEquation::set:  done, cpu time[sec] = 3.07283, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 690 K
            Well    Collision, 1/sec
              W1         3.95503e+08
      global relaxation matrix dimension = 483
      setting global matrices ... done, cpu time[sec] = 0.473354, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.5649, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            5913.79      770.033      175.201      231.967      23.3669      3033.78      221.737
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.545345, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003924, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.596908, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.25342e-10  3.55378e-21  8.15981e-22
      low eigenvalue method done, cpu time[sec] = 0.598075, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.55e-21  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.82e-23  4.44e-16         1
         *Z       ---       ---  1.18e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  5.61089e-22  2.01147e-22  5.95097e-24  4.84613e-23  1.32693e-24  8.33028e-25  2.03049e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.71305, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 690 K
            Well    Collision, 1/sec
              W1         1.18651e+09
      global relaxation matrix dimension = 483
      setting global matrices ... done, cpu time[sec] = 0.473949, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.06657, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1971.26      256.678      58.4005      77.3222      7.78898      1011.26      73.9123
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.043495, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.003914, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.053731, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.19739e-11  2.04715e-21  4.28474e-22
      low eigenvalue method done, cpu time[sec] = 0.054915, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.05e-21  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.51e-23  4.44e-16         1
         *Z       ---       ---  1.18e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  3.17508e-22  9.12975e-23  2.56858e-24  1.72549e-23  5.13307e-25  8.18694e-25  2.05007e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.47067, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 690 K
            Well    Collision, 1/sec
              W1         1.97752e+09
      global relaxation matrix dimension = 483
      setting global matrices ... done, cpu time[sec] = 0.473643, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.08506, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1182.76      154.007      35.0403      46.3933      4.67339      606.756      44.3474
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.043265, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003911, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.04756, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -9.81754e-11  1.54132e-21  3.01578e-22
      low eigenvalue method done, cpu time[sec] = 0.047797, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.54e-21  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.39e-23  4.44e-16         1
         *Z       ---       ---  1.18e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  2.29927e-22  5.94721e-23  1.68843e-24  1.04426e-23  3.22987e-25  7.70171e-25  2.05979e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.47836, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 690 K
            Well    Collision, 1/sec
              W1         2.76852e+09
      global relaxation matrix dimension = 483
      setting global matrices ... done, cpu time[sec] = 0.474324, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.0751, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            844.827      110.005      25.0288      33.1381      3.33813      433.397      31.6767
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.04322, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003919, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.047523, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -7.51195e-13  1.26441e-21  2.34616e-22
      low eigenvalue method done, cpu time[sec] = 0.047769, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.26e-21  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.78e-23  4.44e-16         1
         *Z       ---       ---  1.18e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  1.81889e-22  4.38983e-23  1.26425e-24  7.42219e-24   2.3551e-25  7.21158e-25  2.06473e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.4702, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 690 K
            Well    Collision, 1/sec
              W1         3.55953e+09
      global relaxation matrix dimension = 483
      setting global matrices ... done, cpu time[sec] = 0.473831, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.07986, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            657.087      85.5592      19.4668      25.7741      2.59633      337.086      24.6374
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.043603, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003917, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.047905, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.39723e-11  1.08399e-21  1.92431e-22
      low eigenvalue method done, cpu time[sec] = 0.048143, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.08e-21  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.39e-23  4.44e-16         1
         *Z       ---       ---  1.18e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  1.50904e-22  3.46059e-23  1.01097e-24  5.71558e-24  1.84837e-25  6.76598e-25  2.07668e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.4741, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 690 K
            Well    Collision, 1/sec
              W1         3.95503e+09
      global relaxation matrix dimension = 483
      setting global matrices ... done, cpu time[sec] = 0.471391, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.07087, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            591.379      77.0033      17.5201      23.1967      2.33669      303.378      22.1737
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.043522, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003903, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.047807, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.85186e-11  1.01465e-21  1.76595e-22
      low eigenvalue method done, cpu time[sec] = 0.048043, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.01e-21  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.23e-23  4.44e-16         1
         *Z       ---       ---  1.18e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  1.39116e-22  3.12334e-23  9.18673e-25  5.11384e-24  1.66694e-25  6.56168e-25  2.07901e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.46207, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 690 K
            Well    Collision, 1/sec
              W1         5.93255e+09
      global relaxation matrix dimension = 483
      setting global matrices ... done, cpu time[sec] = 0.473118, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.06661, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            394.252      51.3355      11.6801      15.4644       1.5578      202.252      14.7825
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.043228, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003913, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.047523, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.74722e-12  7.79858e-22  1.24915e-22
      low eigenvalue method done, cpu time[sec] = 0.047759, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   7.8e-22  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.72e-23  4.44e-16         1
         *Z       ---       ---  1.18e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  1.00011e-22  2.07257e-23  6.28204e-25   3.2998e-24  1.10871e-25  5.70262e-25  2.10348e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.45706, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 690 K
            Well    Collision, 1/sec
              W1         7.91007e+09
      global relaxation matrix dimension = 483
      setting global matrices ... done, cpu time[sec] = 0.470615, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.07181, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            295.689      38.5016      8.76007      11.5983      1.16835      151.689      11.0868
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.043291, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003924, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.047607, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.60653e-11  6.41542e-22  9.62038e-23
      low eigenvalue method done, cpu time[sec] = 0.047851, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.42e-22  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.41e-23  4.44e-16         1
         *Z       ---       ---  1.18e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  7.78209e-23  1.52626e-23  4.74092e-25  2.39364e-24  8.21497e-26  5.04899e-25  2.12703e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.46015, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 690 K
            Well    Collision, 1/sec
              W1         9.88758e+09
      global relaxation matrix dimension = 483
      setting global matrices ... done, cpu time[sec] = 0.471975, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.06743, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            236.551      30.8013      7.00806      9.27867     0.934678      121.351      8.86947
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.043257, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003938, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.047584, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.12821e-11   5.4871e-22  7.78509e-23
      low eigenvalue method done, cpu time[sec] = 0.04782, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.49e-22  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.21e-23  4.44e-16         1
         *Z       ---       ---  1.18e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  6.34352e-23  1.19348e-23  3.78393e-25  1.85443e-24  6.46877e-26  4.53431e-25  2.15149e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.29517, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 690 K
            Well    Collision, 1/sec
              W1         1.18651e+10
      global relaxation matrix dimension = 483
      setting global matrices ... done, cpu time[sec] = 0.4734, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.94306, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            197.126      25.6678      5.84005      7.73222     0.778898      101.126      7.39123
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.043296, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003918, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.047602, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -2.4712e-11   4.8141e-22  6.50942e-23
      low eigenvalue method done, cpu time[sec] = 0.047847, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.81e-22  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.06e-23  4.44e-16         1
         *Z       ---       ---  1.18e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  5.33364e-23  9.70778e-24  3.13228e-25  1.49906e-24  5.29838e-26  4.11753e-25  2.17135e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.33454, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 690 K
            Well    Collision, 1/sec
              W1         1.38426e+10
      global relaxation matrix dimension = 483
      setting global matrices ... done, cpu time[sec] = 0.473272, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.08191, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            168.965      22.0009      5.00575      6.62762     0.667627      86.6794      6.33534
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.043246, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003926, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.047554, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.48164e-12  4.30051e-22  5.57151e-23
      low eigenvalue method done, cpu time[sec] = 0.047802, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   4.3e-22  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.47e-24  4.44e-16         1
         *Z       ---       ---  1.18e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  4.58527e-23  8.12018e-24  2.66043e-25  1.24848e-24  4.46159e-26  3.77208e-25  2.19066e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.47649, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 690 K
            Well    Collision, 1/sec
              W1         1.58201e+10
      global relaxation matrix dimension = 483
      setting global matrices ... done, cpu time[sec] = 0.473868, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.08911, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            147.845      19.2508      4.38003      5.79917     0.584173      75.8445      5.54342
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.043232, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003921, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.047541, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.96482e-12  3.89386e-22  4.85345e-23
      low eigenvalue method done, cpu time[sec] = 0.047852, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.89e-22  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.57e-24  4.44e-16         1
         *Z       ---       ---  1.18e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  4.00875e-23  6.93598e-24  2.30348e-25  1.06307e-24  3.83507e-26  3.48048e-25  2.20889e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.3188, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 700 K
      Energy reference = 24179 1/cm
      Energy step      = 117 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -85.4 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.00866
         W1 Well: collisional kernel bandwidth = 34
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.359658
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.31849
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.286303
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 1.78599
         W1 Well: minimal relaxation eigenvalue = 0.0217984
         W1 Well: maximal relaxation eigenvalue = 1.46889
         W1 Well:       grid size = 477
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31630 1/cm
         B1 Barrier:        grid size = 207
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -39 1/cm
         B2 Barrier:        grid size = 205
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 194 1/cm
         B3 Barrier:        grid size = 246
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4602 1/cm
         B4 Barrier:        grid size = 260
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6241 1/cm
         B5 Barrier: nonpositive number of states at -23323 1/cm => truncating
         B5 Barrier:        grid size = 406
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23323 1/cm
         B6 Barrier:        grid size = 194
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1481 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4640 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 3.05044, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31630 -23323 3.78e+05 2.62e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -39 2.13e+14
         B2    195  2.8e+13
         B3  -4602 6.41e+12
         B4  -6241 8.46e+12
         B5 -23323 8.56e+11
         B6   1482 1.11e+14
         B7   4641 8.22e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  3.44e+05  6.17e+05       376      14.1  1.71e-15   1.4e+08  2.52e+11
          R   2.9e-06         1      1.79   0.00109   4.1e-05  4.95e-21       407  7.32e+05
         P1  1.62e-06     0.558         1  0.000609  2.29e-05  2.76e-21       227  4.08e+05
         P2   0.00266       916  1.64e+03         1    0.0375  4.54e-18  3.73e+05  6.71e+08
         P3    0.0709  2.44e+04  4.37e+04      26.6         1  1.21e-16  9.94e+06  1.79e+10
         P4  5.86e+14  2.02e+20  3.62e+20   2.2e+17  8.27e+15         1  8.22e+22  1.48e+26
         P5  7.13e-09   0.00246    0.0044  2.68e-06  1.01e-07  1.22e-23         1   1.8e+03
         P6  3.97e-12  1.37e-06  2.45e-06  1.49e-09   5.6e-11  6.77e-27  0.000556         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1       183       328       0.2    0.0075  9.06e-19  7.45e+04  1.34e+08
          R   0.00547         1      1.79   0.00109   4.1e-05  4.95e-21       407  7.32e+05
         P1   0.00305     0.558         1  0.000609  2.29e-05  2.76e-21       227  4.08e+05
         P2      5.01       916  1.64e+03         1    0.0375  4.54e-18  3.73e+05  6.71e+08
         P3       133  2.44e+04  4.37e+04      26.6         1  1.21e-16  9.94e+06  1.79e+10
         P4   1.1e+18  2.02e+20  3.62e+20   2.2e+17  8.27e+15         1  8.22e+22  1.48e+26
         P5  1.34e-05   0.00246    0.0044  2.68e-06  1.01e-07  1.22e-23         1   1.8e+03
         P6  7.47e-09  1.37e-06  2.45e-06  1.49e-09   5.6e-11  6.77e-27  0.000556         1
   MasterEquation::set:  done, cpu time[sec] = 3.06166, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 700 K
            Well    Collision, 1/sec
              W1         3.91121e+08
      global relaxation matrix dimension = 477
      setting global matrices ... done, cpu time[sec] = 0.460042, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.42797, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            6214.78      818.119      187.322      247.199      25.0071      3233.76      240.139
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.656764, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003879, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.707527, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.58427e-10  8.99428e-21    2.086e-21
      low eigenvalue method done, cpu time[sec] = 0.708711, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.99e-21         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.96e-22         0         1
         *Z       ---       ---  6.96e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.43729e-21  5.11834e-22  1.51308e-23  1.22663e-22   3.3648e-24   2.2119e-24  6.00137e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.44843, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 700 K
            Well    Collision, 1/sec
              W1         1.17336e+09
      global relaxation matrix dimension = 477
      setting global matrices ... done, cpu time[sec] = 0.462975, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.8135, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2071.59      272.706      62.4406      82.3996      8.33569      1077.92      80.0465
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.197975, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003819, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.248559, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -2.4988e-11  5.22341e-21  1.10586e-21
      low eigenvalue method done, cpu time[sec] = 0.24973, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.22e-21         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.14e-22         0         1
         *Z       ---       ---  6.96e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  8.20754e-22  2.34339e-22  6.59988e-24  4.41207e-23  1.31548e-24  2.17763e-24  6.01665e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.37874, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 700 K
            Well    Collision, 1/sec
              W1         1.95561e+09
      global relaxation matrix dimension = 477
      setting global matrices ... done, cpu time[sec] = 0.461843, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.00981, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1242.96      163.624      37.4644      49.4398      5.00141      646.752      48.0279
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.041945, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003833, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.055225, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.54997e-10  3.94745e-21  7.82318e-22
      low eigenvalue method done, cpu time[sec] = 0.056404, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.95e-21         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   8.6e-23         0         1
         *Z       ---       ---  6.96e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  5.97293e-22  1.53373e-22  4.36237e-24  2.68444e-23  8.32328e-25  2.05306e-24    6.051e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.24134, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 700 K
            Well    Collision, 1/sec
              W1         2.73785e+09
      global relaxation matrix dimension = 477
      setting global matrices ... done, cpu time[sec] = 0.461721, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.02462, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            887.826      116.874      26.7603      35.3141      3.57244      461.966      34.3056
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.041885, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003816, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.046078, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.82779e-11   3.2462e-21  6.10799e-22
      low eigenvalue method done, cpu time[sec] = 0.046316, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.25e-21         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.08e-23         0         1
         *Z       ---       ---  6.96e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  4.74147e-22  1.13587e-22  3.27899e-24  1.91507e-23  6.09245e-25  1.92629e-24  6.07347e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.38083, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 700 K
            Well    Collision, 1/sec
              W1         3.52009e+09
      global relaxation matrix dimension = 477
      setting global matrices ... done, cpu time[sec] = 0.460452, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.03562, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            690.531      90.9021      20.8135      27.4665      2.77856      359.307      26.6822
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.041955, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003839, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.04617, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.14262e-11  2.78812e-21   5.0238e-22
      low eigenvalue method done, cpu time[sec] = 0.046412, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.79e-21         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.08e-23         0         1
         *Z       ---       ---  6.96e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  3.94457e-22  8.97791e-23     2.63e-24  1.47902e-23  4.79601e-25  1.81051e-24  6.10025e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.38776, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 700 K
            Well    Collision, 1/sec
              W1         3.91121e+09
      global relaxation matrix dimension = 477
      setting global matrices ... done, cpu time[sec] = 0.460384, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.00198, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            621.478      81.8119      18.7322      24.7199      2.50071      323.376      24.0139
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.041954, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.0038, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.04613, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -6.9577e-13  2.61176e-21  4.61592e-22
      low eigenvalue method done, cpu time[sec] = 0.046365, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.61e-21         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.69e-23         0         1
         *Z       ---       ---  6.96e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  3.64078e-22  8.11223e-23  2.39301e-24  1.32497e-23   4.3309e-25  1.75732e-24  6.11263e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.35602, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 700 K
            Well    Collision, 1/sec
              W1         5.86682e+09
      global relaxation matrix dimension = 477
      setting global matrices ... done, cpu time[sec] = 0.463192, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.03097, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            414.319      54.5412      12.4881      16.4799      1.66714      215.584      16.0093
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.041857, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003814, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.046052, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.77281e-12  2.01332e-21  3.28083e-22
      low eigenvalue method done, cpu time[sec] = 0.046285, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.01e-21         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.39e-23         0         1
         *Z       ---       ---  6.96e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.62972e-22  5.40742e-23  1.64478e-24  8.59193e-24  2.89534e-25  1.53264e-24  6.17756e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.23298, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 700 K
            Well    Collision, 1/sec
              W1         7.82242e+09
      global relaxation matrix dimension = 477
      setting global matrices ... done, cpu time[sec] = 0.463075, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.04525, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            310.739      40.9059      9.36609      12.3599      1.25035      161.688       12.007
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.042361, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003797, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.046538, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   2.5173e-12  1.65967e-21   2.5358e-22
      low eigenvalue method done, cpu time[sec] = 0.046768, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.66e-21         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.62e-23         0         1
         *Z       ---       ---  6.96e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0   2.0534e-22   3.9955e-23    1.246e-24  6.25534e-24  2.15346e-25  1.36081e-24  6.24843e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.40413, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 700 K
            Well    Collision, 1/sec
              W1         9.77803e+09
      global relaxation matrix dimension = 477
      setting global matrices ... done, cpu time[sec] = 0.463148, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.03081, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            248.591      32.7247      7.49288      9.88795      1.00028       129.35      9.60558
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.041933, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003817, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.046131, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.39555e-11  1.42178e-21  2.05792e-22
      low eigenvalue method done, cpu time[sec] = 0.046363, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.42e-21         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   3.1e-23         0         1
         *Z       ---       ---  6.96e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.67852e-22  3.13276e-23    9.975e-25  4.86035e-24  1.70086e-25  1.22503e-24  6.31043e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.42019, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 700 K
            Well    Collision, 1/sec
              W1         1.17336e+10
      global relaxation matrix dimension = 477
      setting global matrices ... done, cpu time[sec] = 0.462257, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.02485, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            207.159      27.2706      6.24406      8.23996     0.833569      107.792      8.00465
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.042369, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003789, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.046532, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   1.3748e-11  1.24901e-21  1.72483e-22
      low eigenvalue method done, cpu time[sec] = 0.04677, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.25e-21         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.72e-23         0         1
         *Z       ---       ---  6.96e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.41462e-22  2.55396e-23  8.27814e-25  3.93858e-24  1.39666e-25  1.11473e-24  6.37569e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.3847, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 700 K
            Well    Collision, 1/sec
              W1         1.36892e+10
      global relaxation matrix dimension = 477
      setting global matrices ... done, cpu time[sec] = 0.462672, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.0434, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            177.565      23.3748      5.35205      7.06282     0.714487      92.3932      6.86113
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.041867, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003804, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.046045, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -1.0938e-11  1.11696e-21  1.47935e-22
      low eigenvalue method done, cpu time[sec] = 0.046276, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.12e-21         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.43e-23         0         1
         *Z       ---       ---  6.96e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.21859e-22  2.14039e-23  7.04633e-25    3.287e-24  1.17861e-25  1.02309e-24  6.43446e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.40225, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 700 K
            Well    Collision, 1/sec
              W1         1.56448e+10
      global relaxation matrix dimension = 477
      setting global matrices ... done, cpu time[sec] = 0.461105, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.03907, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             155.37       20.453      4.68305      6.17997     0.625176      80.8441      6.00348
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.042019, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003811, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.046207, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.33155e-12  1.01228e-21  1.29103e-22
      low eigenvalue method done, cpu time[sec] = 0.046438, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.01e-21         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.21e-23         0         1
         *Z       ---       ---  6.96e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.06729e-22  1.83142e-23  6.11274e-25  2.80407e-24  1.01507e-25  9.45574e-25  6.48602e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.23007, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 800 K
      Energy reference = 26959 1/cm
      Energy step      = 133 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -84.1 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.009303
         W1 Well: collisional kernel bandwidth = 33
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.307333
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.272417
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.224694
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 1.43342
         W1 Well: minimal relaxation eigenvalue = 0.0199642
         W1 Well: maximal relaxation eigenvalue = 4.03054
         W1 Well:       grid size = 441
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31694 1/cm
         B1 Barrier:        grid size = 203
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -40 1/cm
         B2 Barrier:        grid size = 202
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 92 1/cm
         B3 Barrier:        grid size = 238
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4695 1/cm
         B4 Barrier:        grid size = 250
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6291 1/cm
         B5 Barrier: nonpositive number of states at -23315 1/cm => truncating
         B5 Barrier:        grid size = 378
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23315 1/cm
         B6 Barrier:        grid size = 192
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1422 1/cm
         B7 Barrier:        grid size = 168
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4614 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 2.53577, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31694 -23315  3.8e+05  4.3e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -40 4.98e+14
         B2     93 7.29e+13
         B3  -4695 1.77e+13
         B4  -6291 2.27e+13
         B5 -23315 2.38e+12
         B6   1423 2.95e+14
         B7   4615 2.53e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1      74.4       130     0.267    0.0153  2.04e-16  2.03e+04   1.7e+07
          R    0.0134         1      1.75   0.00358  0.000206  2.74e-18       273  2.29e+05
         P1   0.00769     0.572         1   0.00205  0.000118  1.57e-18       156  1.31e+05
         P2      3.75       279       488         1    0.0574  7.66e-16  7.63e+04  6.38e+07
         P3      65.4  4.86e+03   8.5e+03      17.4         1  1.33e-14  1.33e+06  1.11e+09
         P4   4.9e+15  3.64e+17  6.37e+17  1.31e+15  7.49e+13         1  9.96e+19  8.33e+22
         P5  4.92e-05   0.00366    0.0064  1.31e-05  7.52e-07     1e-20         1       837
         P6  5.88e-08  4.37e-06  7.64e-06  1.57e-08  8.99e-10   1.2e-23    0.0012         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1    0.0453    0.0791  0.000162   9.3e-06  1.24e-19      12.4  1.03e+04
          R      22.1         1      1.75   0.00358  0.000206  2.74e-18       273  2.29e+05
         P1      12.6     0.572         1   0.00205  0.000118  1.57e-18       156  1.31e+05
         P2  6.17e+03       279       488         1    0.0574  7.66e-16  7.63e+04  6.38e+07
         P3  1.07e+05  4.86e+03   8.5e+03      17.4         1  1.33e-14  1.33e+06  1.11e+09
         P4  8.05e+18  3.64e+17  6.37e+17  1.31e+15  7.49e+13         1  9.96e+19  8.33e+22
         P5    0.0809   0.00366    0.0064  1.31e-05  7.52e-07     1e-20         1       837
         P6  9.66e-05  4.37e-06  7.64e-06  1.57e-08  8.99e-10   1.2e-23    0.0012         1
   MasterEquation::set:  done, cpu time[sec] = 2.54605, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 800 K
            Well    Collision, 1/sec
              W1         3.53278e+08
      global relaxation matrix dimension = 441
      setting global matrices ... done, cpu time[sec] = 0.394475, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.07126, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
               9824      1438.84      349.044      446.993       47.009      5821.46      499.452
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.60455, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003146, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.61621, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -8.22133e-11  2.61417e-17   6.5674e-18
      low eigenvalue method done, cpu time[sec] = 1.61736, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.61e-17  1.11e-15         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.22e-19  1.11e-15         1
         *Z       ---       ---  7.86e+26
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.11022e-15
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.11022e-15  4.58712e-18  1.53949e-18  4.52155e-20  3.51927e-19  9.81736e-21  9.64711e-21  6.47353e-25

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.80185, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 800 K
            Well    Collision, 1/sec
              W1         1.05984e+09
      global relaxation matrix dimension = 441
      setting global matrices ... done, cpu time[sec] = 0.394332, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.4469, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            3274.67      479.612      116.348      148.998      15.6697      1940.49      166.484
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.23671, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003133, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.24813, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.58426e-11  1.62756e-17  3.78197e-18
      low eigenvalue method done, cpu time[sec] = 1.24923, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.63e-17  1.11e-15         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.25e-19  1.11e-15         1
         *Z       ---       ---  7.86e+26
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.11022e-15
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.11022e-15  2.83438e-18  7.59722e-19  2.16356e-20  1.38417e-19    4.213e-21   9.6729e-21  6.49527e-25

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.80556, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 800 K
            Well    Collision, 1/sec
              W1         1.76639e+09
      global relaxation matrix dimension = 441
      setting global matrices ... done, cpu time[sec] = 0.395388, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.75817, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             1964.8      287.767      69.8087      89.3985      9.40181      1164.29      99.8904
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.0607, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003142, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.07202, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -6.58818e-11   1.2708e-17  2.79696e-18
      low eigenvalue method done, cpu time[sec] = 1.07315, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.27e-17  8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.54e-19  8.88e-16         1
         *Z       ---       ---  7.86e+26
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  8.88178e-16  2.15314e-18  5.18135e-19  1.50129e-20  8.82699e-20   2.7991e-21   9.3045e-21  6.51803e-25

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.94225, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 800 K
            Well    Collision, 1/sec
              W1         2.47295e+09
      global relaxation matrix dimension = 441
      setting global matrices ... done, cpu time[sec] = 0.394034, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.74277, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1403.43      205.548      49.8634      63.8561      6.71558      831.637      71.3503
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.935149, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003142, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.946387, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.10121e-11  1.06804e-17  2.25351e-18
      low eigenvalue method done, cpu time[sec] = 0.947502, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.07e-17  8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.13e-19  8.88e-16         1
         *Z       ---       ---  7.86e+26
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  8.88178e-16  1.76225e-18  3.95187e-19  1.16764e-20  6.50872e-20  2.12035e-21  8.88716e-21   6.5421e-25

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.79695, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 800 K
            Well    Collision, 1/sec
              W1         3.17951e+09
      global relaxation matrix dimension = 441
      setting global matrices ... done, cpu time[sec] = 0.395432, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.76056, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1091.56      159.871      38.7826      49.6658      5.22323      646.828      55.4947
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.917908, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003159, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.929189, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.11839e-10  9.32485e-18  1.89975e-18
      low eigenvalue method done, cpu time[sec] = 0.930338, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.32e-18  8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.86e-19  8.88e-16         1
         *Z       ---       ---  7.86e+26
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  8.88178e-16  1.50168e-18  3.19673e-19  9.61789e-21  5.15794e-20  1.71435e-21   8.4856e-21  6.56667e-25

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.66513, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 800 K
            Well    Collision, 1/sec
              W1         3.53278e+09
      global relaxation matrix dimension = 441
      setting global matrices ... done, cpu time[sec] = 0.398405, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.79791, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
              982.4      143.884      34.9044      44.6993       4.7009      582.146      49.9452
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.886025, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.003149, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.897142, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.06381e-12  8.79552e-18  1.76416e-18
      low eigenvalue method done, cpu time[sec] = 0.898281, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0   8.8e-18  1.11e-15         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.76e-19  1.11e-15         1
         *Z       ---       ---  7.86e+26
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.11022e-15
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.11022e-15  1.40047e-18  2.91755e-19  8.85188e-21  4.67219e-20  1.56597e-21  8.29585e-21  6.57913e-25

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.81682, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 800 K
            Well    Collision, 1/sec
              W1         5.29918e+09
      global relaxation matrix dimension = 441
      setting global matrices ... done, cpu time[sec] = 0.397113, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.84012, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            654.933      95.9225      23.2696      29.7995      3.13394      388.097      33.2968
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.842225, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003158, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.853644, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -6.91782e-13  6.96363e-18  1.30834e-18
      low eigenvalue method done, cpu time[sec] = 0.854735, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.96e-18  1.11e-15         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.39e-19  1.11e-15         1
         *Z       ---       ---  7.86e+26
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.11022e-15
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.11022e-15  1.05447e-18  2.02456e-19  6.36822e-21   3.1667e-20  1.09595e-21   7.4632e-21  6.64279e-25

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.80483, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 800 K
            Well    Collision, 1/sec
              W1         7.06557e+09
      global relaxation matrix dimension = 441
      setting global matrices ... done, cpu time[sec] = 0.395038, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.00586, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
              491.2      71.9418      17.4522      22.3496      2.35045      291.073      24.9726
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.679145, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003151, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.6904, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.68095e-11  5.85066e-18  1.04379e-18
      low eigenvalue method done, cpu time[sec] = 0.691538, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.85e-18  1.11e-15         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.17e-19  1.11e-15         1
         *Z       ---       ---  7.86e+26
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.11022e-15
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.11022e-15  8.49335e-19  1.54161e-19  4.99043e-21  2.38246e-20   8.4331e-22  6.79444e-21  6.70675e-25

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.8077, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 800 K
            Well    Collision, 1/sec
              W1         8.83196e+09
      global relaxation matrix dimension = 441
      setting global matrices ... done, cpu time[sec] = 0.395861, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.06639, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             392.96      57.5535      13.9617      17.8797      1.88036      232.858      19.9781
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.609601, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003153, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.620797, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.36296e-11  5.08651e-18  8.68912e-19
      low eigenvalue method done, cpu time[sec] = 0.621905, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.09e-18  1.11e-15         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.02e-19  1.11e-15         1
         *Z       ---       ---  7.86e+26
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.11022e-15
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.11022e-15  7.11834e-19  1.23836e-19   4.1051e-21  1.90048e-20  6.84443e-22   6.2469e-21  6.76903e-25

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.76091, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 800 K
            Well    Collision, 1/sec
              W1         1.05984e+10
      global relaxation matrix dimension = 441
      setting global matrices ... done, cpu time[sec] = 0.396289, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.93163, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            327.467      47.9612      11.6348      14.8998      1.56697      194.049      16.6484
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.759611, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003135, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.771079, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.94667e-12  4.52243e-18   7.4397e-19
      low eigenvalue method done, cpu time[sec] = 0.772385, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.52e-18  1.11e-15         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.03e-20  1.11e-15         1
         *Z       ---       ---  7.86e+26
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.11022e-15
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.11022e-15  6.12611e-19  1.03028e-19  3.48499e-21  1.57428e-20  5.74966e-22  5.78918e-21  6.82841e-25

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.8197, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 800 K
            Well    Collision, 1/sec
              W1         1.23647e+10
      global relaxation matrix dimension = 441
      setting global matrices ... done, cpu time[sec] = 0.396022, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.25103, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            280.686      41.1096      9.97267      12.7712      1.34312      166.327      14.2701
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.450345, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00315, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.461736, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.52981e-11  4.08546e-18  6.49939e-19
      low eigenvalue method done, cpu time[sec] = 0.462874, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.09e-18  8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.16e-20  8.88e-16         1
         *Z       ---       ---  7.86e+26
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  8.88178e-16   5.3736e-19  8.78759e-20  3.02512e-21  1.33901e-20  4.94825e-22  5.39968e-21  6.88401e-25

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.82571, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 800 K
            Well    Collision, 1/sec
              W1         1.41311e+10
      global relaxation matrix dimension = 441
      setting global matrices ... done, cpu time[sec] = 0.398964, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.26088, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
              245.6      35.9709      8.72609      11.1748      1.17523      145.536      12.4863
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.439376, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003183, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.450675, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.28031e-11  3.73504e-18   5.7647e-19
      low eigenvalue method done, cpu time[sec] = 0.451793, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.74e-18  8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.46e-20  8.88e-16         1
         *Z       ---       ---  7.86e+26
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  8.88178e-16  4.78202e-19   7.6363e-20  2.66989e-21  1.16148e-20  4.33579e-22  5.06329e-21  6.93536e-25

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.83488, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 900 K
      Energy reference = 29740 1/cm
      Energy step      = 150 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -82.6 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.008996
         W1 Well: collisional kernel bandwidth = 33
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.287568
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.235355
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.23815
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 1.13291
         W1 Well: minimal relaxation eigenvalue = 0.0184968
         W1 Well: maximal relaxation eigenvalue = 1.34157
         W1 Well:       grid size = 409
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31610 1/cm
         B1 Barrier:        grid size = 199
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -110 1/cm
         B2 Barrier:        grid size = 197
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 189 1/cm
         B3 Barrier:        grid size = 229
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4611 1/cm
         B4 Barrier:        grid size = 240
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6260 1/cm
         B5 Barrier: nonpositive number of states at -23211 1/cm => truncating
         B5 Barrier:        grid size = 353
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23211 1/cm
         B6 Barrier:        grid size = 189
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1389 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4688 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 2.189, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31610 -23211  4.1e+05 6.92e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -110 1.09e+15
         B2    190 1.77e+14
         B3  -4611 4.52e+13
         B4  -6260 5.64e+13
         B5 -23211 6.13e+12
         B6   1390 7.24e+14
         B7   4689 7.02e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1     0.104     0.179  0.000932  7.45e-05  3.87e-17      20.4  9.46e+03
          R      9.63         1      1.73   0.00898  0.000718  3.73e-16       197  9.11e+04
         P1      5.58     0.579         1    0.0052  0.000416  2.16e-16       114  5.28e+04
         P2  1.07e+03       111       192         1    0.0799  4.15e-14  2.19e+04  1.01e+07
         P3  1.34e+04  1.39e+03  2.41e+03      12.5         1  5.19e-13  2.74e+05  1.27e+08
         P4  2.59e+16  2.68e+15  4.63e+15  2.41e+13  1.93e+12         1  5.29e+17  2.45e+20
         P5    0.0489   0.00508   0.00877  4.56e-05  3.64e-06  1.89e-18         1       463
         P6  0.000106   1.1e-05  1.89e-05  9.86e-08  7.87e-09  4.09e-21   0.00216         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  7.13e-05  0.000123   6.4e-07  5.11e-08  2.66e-20     0.014      6.49
          R   1.4e+04         1      1.73   0.00898  0.000718  3.73e-16       197  9.11e+04
         P1  8.13e+03     0.579         1    0.0052  0.000416  2.16e-16       114  5.28e+04
         P2  1.56e+06       111       192         1    0.0799  4.15e-14  2.19e+04  1.01e+07
         P3  1.96e+07  1.39e+03  2.41e+03      12.5         1  5.19e-13  2.74e+05  1.27e+08
         P4  3.77e+19  2.68e+15  4.63e+15  2.41e+13  1.93e+12         1  5.29e+17  2.45e+20
         P5      71.2   0.00508   0.00877  4.56e-05  3.64e-06  1.89e-18         1       463
         P6     0.154   1.1e-05  1.89e-05  9.86e-08  7.87e-09  4.09e-21   0.00216         1
   MasterEquation::set:  done, cpu time[sec] = 2.19907, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 900 K
            Well    Collision, 1/sec
              W1         3.23704e+08
      global relaxation matrix dimension = 409
      setting global matrices ... done, cpu time[sec] = 0.343382, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.15557, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            14626.7      2372.16      604.673      754.805      82.0753      9693.31      940.355
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.19883, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002849, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.23604, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.77065e-10  1.19967e-14  3.19522e-15
      low eigenvalue method done, cpu time[sec] = 2.23717, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.2e-14  2.89e-15         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.22e-16  2.89e-15         1
         *Z       ---       ---   2.5e+25
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.88658e-15
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.88658e-15   2.2676e-15  7.22131e-16  2.12043e-17  1.59399e-16  4.51289e-18  6.22939e-18  8.56658e-22

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.34431, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 900 K
            Well    Collision, 1/sec
              W1         9.71112e+08
      global relaxation matrix dimension = 409
      setting global matrices ... done, cpu time[sec] = 0.333551, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.43435, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            4875.55      790.721      201.558      251.602      27.3584       3231.1      313.452
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.86444, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002658, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.9014, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.45626e-10  7.88923e-15   1.9655e-15
      low eigenvalue method done, cpu time[sec] = 1.90255, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.89e-15  1.55e-15         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.46e-16  1.55e-15         1
         *Z       ---       ---   2.5e+25
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.55431e-15
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.55431e-15  1.49143e-15  3.78619e-16  1.09357e-17  6.74019e-17  2.08878e-18  6.31761e-18  8.59264e-22

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.27656, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 900 K
            Well    Collision, 1/sec
              W1         1.61852e+09
      global relaxation matrix dimension = 409
      setting global matrices ... done, cpu time[sec] = 0.332025, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.57115, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2925.33      474.433      120.935      150.961      16.4151      1938.66      188.071
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.75359, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002652, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.79094, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.01291e-10  6.32551e-15  1.50629e-15
      low eigenvalue method done, cpu time[sec] = 1.79205, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.33e-15  1.11e-15         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.17e-16  1.11e-15         1
         *Z       ---       ---   2.5e+25
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.11022e-15
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.11022e-15  1.17244e-15   2.6702e-16  7.89381e-18  4.46639e-17  1.44418e-18  6.16325e-18  8.61994e-22

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.30245, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 900 K
            Well    Collision, 1/sec
              W1         2.26593e+09
      global relaxation matrix dimension = 409
      setting global matrices ... done, cpu time[sec] = 0.332312, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.60606, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2089.52      338.881      86.3819      107.829       11.725      1384.76      134.336
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.69243, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002635, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.72962, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.50656e-11  5.41274e-15  1.24474e-15
      low eigenvalue method done, cpu time[sec] = 1.73069, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.41e-15  1.33e-15         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0     1e-16  1.33e-15         1
         *Z       ---       ---   2.5e+25
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.33227e-15
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.33227e-15  9.83375e-16  2.08614e-16  6.31236e-18  3.38372e-17  1.12508e-18  5.96381e-18  8.64824e-22

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.271, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 900 K
            Well    Collision, 1/sec
              W1         2.91334e+09
      global relaxation matrix dimension = 409
      setting global matrices ... done, cpu time[sec] = 0.32924, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.65381, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1625.18      263.574      67.1859      83.8672      9.11948      1077.03      104.484
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.6477, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002666, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.68465, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.28248e-11  4.79097e-15  1.07043e-15
      low eigenvalue method done, cpu time[sec] = 1.68574, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.79e-15  6.66e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.86e-17  6.66e-16         1
         *Z       ---       ---   2.5e+25
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 6.66134e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  6.66134e-16  8.54304e-16  1.71988e-16  5.31356e-18  2.73888e-17  9.29781e-19  5.76129e-18  8.67728e-22

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.28253, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 900 K
            Well    Collision, 1/sec
              W1         3.23704e+09
      global relaxation matrix dimension = 409
      setting global matrices ... done, cpu time[sec] = 0.330304, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.69266, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1462.67      237.216      60.4673      75.4805      8.20753      969.331      94.0355
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.60958, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002657, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.64642, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -8.15444e-11  4.54536e-15   1.0026e-15
      low eigenvalue method done, cpu time[sec] = 1.6475, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.55e-15  6.66e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.41e-17  6.66e-16         1
         *Z       ---       ---   2.5e+25
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 6.66134e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  6.66134e-16  8.03406e-16  1.58266e-16  4.93627e-18  2.50369e-17   8.5735e-19  5.66298e-18  8.69202e-22

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.28449, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 900 K
            Well    Collision, 1/sec
              W1         4.85556e+09
      global relaxation matrix dimension = 409
      setting global matrices ... done, cpu time[sec] = 0.331004, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.67247, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            975.111      158.144      40.3115      50.3203      5.47169      646.221      62.6903
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.62963, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002639, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.66665, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -8.93494e-11  3.68143e-15  7.69645e-16
      low eigenvalue method done, cpu time[sec] = 1.66821, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.68e-15  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.81e-17  4.44e-16         1
         *Z       ---       ---   2.5e+25
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  6.25585e-16  1.13526e-16  3.68632e-18  1.76001e-17  6.23045e-19  5.21596e-18  8.76686e-22

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.27691, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 900 K
            Well    Collision, 1/sec
              W1         6.47408e+09
      global relaxation matrix dimension = 409
      setting global matrices ... done, cpu time[sec] = 0.329316, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.82727, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            731.333      118.608      30.2337      37.7402      4.10377      484.665      47.0178
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.47327, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00264, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.51024, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.51902e-11  3.14431e-15  6.30088e-16
      low eigenvalue method done, cpu time[sec] = 1.51133, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.14e-15  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.82e-17  4.44e-16         1
         *Z       ---       ---   2.5e+25
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  5.16758e-16  8.86282e-17  2.97028e-18  1.36067e-17  4.93055e-19  4.84107e-18  8.84172e-22

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.28223, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 900 K
            Well    Collision, 1/sec
              W1          8.0926e+09
      global relaxation matrix dimension = 409
      setting global matrices ... done, cpu time[sec] = 0.335166, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.89714, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            585.066      94.8866      24.1869      30.1922      3.28301      387.732      37.6142
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.39805, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002666, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.4346, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.48659e-11  2.76912e-15  5.35549e-16
      low eigenvalue method done, cpu time[sec] = 1.43575, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.77e-15  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.12e-17  2.22e-16         1
         *Z       ---       ---   2.5e+25
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  4.42008e-16  7.26435e-17  2.49854e-18   1.1094e-17  4.09285e-19  4.52452e-18  8.91466e-22

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.2754, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 900 K
            Well    Collision, 1/sec
              W1         9.71112e+09
      global relaxation matrix dimension = 409
      setting global matrices ... done, cpu time[sec] = 0.342816, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.97911, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            487.555      79.0721      20.1558      25.1602      2.73584       323.11      31.3452
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.32129, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002641, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.35786, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.38812e-12  2.48831e-15  4.66638e-16
      low eigenvalue method done, cpu time[sec] = 1.35896, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.49e-15  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   4.6e-17  4.44e-16         1
         *Z       ---       ---   2.5e+25
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  3.86975e-16  6.14719e-17  2.16127e-18  9.36001e-18  3.50378e-19  4.25339e-18   8.9844e-22

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.28917, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 900 K
            Well    Collision, 1/sec
              W1         1.13296e+10
      global relaxation matrix dimension = 409
      setting global matrices ... done, cpu time[sec] = 0.346105, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.01866, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            417.905      67.7761      17.2764      21.5658      2.34501      276.952      26.8673
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.28784, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002659, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.32477, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.58323e-13  2.26824e-15  4.13881e-16
      low eigenvalue method done, cpu time[sec] = 1.32631, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.27e-15  6.66e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   4.2e-17  6.66e-16         1
         *Z       ---       ---   2.5e+25
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 6.66134e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  6.66134e-16  3.44519e-16  5.32088e-17  1.90672e-18  8.08846e-18  3.06502e-19  4.01795e-18  9.05015e-22

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.30448, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 900 K
            Well    Collision, 1/sec
              W1         1.29482e+10
      global relaxation matrix dimension = 409
      setting global matrices ... done, cpu time[sec] = 0.343844, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.98407, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            365.667      59.3041      15.1168      18.8701      2.05188      242.333      23.5089
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.30037, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002637, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.3372, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   -1.179e-11  2.08999e-15  3.72039e-16
      low eigenvalue method done, cpu time[sec] = 1.33828, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.09e-15  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.87e-17  2.22e-16         1
         *Z       ---       ---   2.5e+25
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  3.10642e-16  4.68432e-17  1.70704e-18  7.11484e-18  2.72459e-19  3.81105e-18  9.11146e-22

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.28167, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1000 K
      Energy reference = 32520 1/cm
      Energy step      = 167 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -81.1 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.00898
         W1 Well: collisional kernel bandwidth = 32
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.22779
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.21049
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.215074
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.968797
         W1 Well: minimal relaxation eigenvalue = 0.0172776
         W1 Well: maximal relaxation eigenvalue = 1.22198
         W1 Well:       grid size = 384
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31607 1/cm
         B1 Barrier:        grid size = 195
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -44 1/cm
         B2 Barrier:        grid size = 194
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 122 1/cm
         B3 Barrier:        grid size = 223
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4720 1/cm
         B4 Barrier:        grid size = 232
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6223 1/cm
         B5 Barrier: nonpositive number of states at -23425 1/cm => truncating
         B5 Barrier:        grid size = 335
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23424 1/cm
         B6 Barrier:        grid size = 186
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1458 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4631 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.91303, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31607 -23424 3.51e+05 1.09e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -44 2.27e+15
         B2    123 4.05e+14
         B3  -4720 1.08e+14
         B4  -6223 1.32e+14
         B5 -23424 1.47e+13
         B6   1459 1.66e+15
         B7   4631 1.79e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1   0.00054  0.000929  1.01e-05  1.05e-06  1.02e-17    0.0807      23.3
          R  1.85e+03         1      1.72    0.0186   0.00194  1.89e-14       149   4.3e+04
         P1  1.08e+03     0.582         1    0.0108   0.00113   1.1e-14      86.9   2.5e+04
         P2  9.93e+04      53.7      92.3         1     0.104  1.01e-12  8.01e+03  2.31e+06
         P3  9.53e+05       515       885      9.59         1  9.73e-12  7.69e+04  2.22e+07
         P4  9.79e+16  5.29e+13  9.09e+13  9.86e+11  1.03e+11         1   7.9e+15  2.28e+18
         P5      12.4    0.0067    0.0115  0.000125   1.3e-05  1.27e-16         1       288
         P6     0.043  2.32e-05  3.99e-05  4.33e-07  4.51e-08  4.39e-19   0.00347         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  4.11e-07  7.07e-07  7.66e-09  7.99e-10  7.77e-21  6.14e-05    0.0177
          R  2.43e+06         1      1.72    0.0186   0.00194  1.89e-14       149   4.3e+04
         P1  1.41e+06     0.582         1    0.0108   0.00113   1.1e-14      86.9   2.5e+04
         P2   1.3e+08      53.7      92.3         1     0.104  1.01e-12  8.01e+03  2.31e+06
         P3  1.25e+09       515       885      9.59         1  9.73e-12  7.69e+04  2.22e+07
         P4  1.29e+20  5.29e+13  9.09e+13  9.86e+11  1.03e+11         1   7.9e+15  2.28e+18
         P5  1.63e+04    0.0067    0.0115  0.000125   1.3e-05  1.27e-16         1       288
         P6      56.5  2.32e-05  3.99e-05  4.33e-07  4.51e-08  4.39e-19   0.00347         1
   MasterEquation::set:  done, cpu time[sec] = 1.92322, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 1000 K
            Well    Collision, 1/sec
              W1         2.99875e+08
      global relaxation matrix dimension = 384
      setting global matrices ... done, cpu time[sec] = 0.301314, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.48793, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            20749.6      3709.49      987.078      1205.25      134.917      15161.7      1636.17
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.22257, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.224161, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.47897, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.18548e-10  1.50623e-12  4.20648e-13
      low eigenvalue method done, cpu time[sec] = 2.49793, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.51e-12   4.2e-13         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   2.6e-14   4.2e-13         1
         *Z       ---       ---  1.65e+24
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.19886e-13
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.19775e-13  3.04009e-13  9.22938e-14  2.72255e-15  1.98469e-14  5.69494e-16  1.05355e-15   2.6014e-19

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.86938, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 1000 K
            Well    Collision, 1/sec
              W1         8.99625e+08
      global relaxation matrix dimension = 384
      setting global matrices ... done, cpu time[sec] = 0.302951, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.69454, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            6916.53       1236.5      329.026      401.751      44.9722      5053.91      545.391
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.22209, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.208924, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.44085, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.02813e-10   1.0358e-12  2.73094e-13
      low eigenvalue method done, cpu time[sec] = 2.45727, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.04e-12  2.72e-13         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.79e-14  2.72e-13         1
         *Z       ---       ---  1.65e+24
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.72449e-13
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.72338e-13  2.10336e-13  5.08968e-14  1.49393e-15   8.9116e-15   2.8067e-16  1.07629e-15  2.60851e-19

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.00328, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 1000 K
            Well    Collision, 1/sec
              W1         1.49937e+09
      global relaxation matrix dimension = 384
      setting global matrices ... done, cpu time[sec] = 0.302826, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.73901, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            4149.92      741.898      197.416      241.051      26.9833      3032.35      327.234
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.22949, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.172309, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.41029, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -6.65678e-11   8.4909e-13  2.15492e-13
      low eigenvalue method done, cpu time[sec] = 2.41186, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.49e-13  2.15e-13         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.47e-14  2.15e-13         1
         *Z       ---       ---  1.65e+24
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.14939e-13
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.14828e-13   1.7003e-13  3.69109e-14  1.11421e-15  6.09693e-15  2.00593e-16  1.06078e-15  2.61594e-19

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.00127, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 1000 K
            Well    Collision, 1/sec
              W1         2.09912e+09
      global relaxation matrix dimension = 384
      setting global matrices ... done, cpu time[sec] = 0.302675, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.88674, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2964.23      529.927      141.011      172.179      19.2738      2165.96      233.739
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.22729, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.047388, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.28297, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.50525e-11  7.37684e-13  1.81816e-13
      low eigenvalue method done, cpu time[sec] = 2.28414, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.38e-13  1.81e-13         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.27e-14  1.81e-13         1
         *Z       ---       ---  1.65e+24
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.81188e-13
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.81077e-13  1.45496e-13  2.94217e-14  9.11742e-16  4.72448e-15  1.59961e-16   1.0365e-15  2.62362e-19

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.0173, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 1000 K
            Well    Collision, 1/sec
              W1         2.69887e+09
      global relaxation matrix dimension = 384
      setting global matrices ... done, cpu time[sec] = 0.303892, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.86987, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2305.51      412.166      109.675      133.917      14.9907      1684.64      181.797
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.23136, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.046381, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.28576, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.14431e-10  6.60606e-13  1.58936e-13
      low eigenvalue method done, cpu time[sec] = 2.28689, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.61e-13  1.59e-13         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.14e-14  1.59e-13         1
         *Z       ---       ---  1.65e+24
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.5854e-13
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.58429e-13  1.28415e-13  2.46443e-14   7.8142e-16  3.89236e-15  1.34629e-16  1.01027e-15  2.63148e-19

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.00498, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 1000 K
            Well    Collision, 1/sec
              W1         2.99875e+09
      global relaxation matrix dimension = 384
      setting global matrices ... done, cpu time[sec] = 0.302165, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.91164, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2074.96      370.949      98.7078      120.525      13.4917      1516.17      163.617
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.2299, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002298, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.2387, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.16354e-11  6.29865e-13  1.49924e-13
      low eigenvalue method done, cpu time[sec] = 2.23981, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   6.3e-13  1.49e-13         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.09e-14  1.49e-13         1
         *Z       ---       ---  1.65e+24
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.49214e-13
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.49214e-13  1.21596e-13  2.28346e-14  7.31588e-16  3.58537e-15  1.25121e-16  9.97165e-16  2.63546e-19

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.99123, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 1000 K
            Well    Collision, 1/sec
              W1         4.49812e+09
      global relaxation matrix dimension = 384
      setting global matrices ... done, cpu time[sec] = 0.302356, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.00339, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1383.31      247.299      65.8052      80.3503      8.99444      1010.78      109.078
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.14959, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002255, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.15876, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.77028e-11  5.20233e-13  1.18412e-13
      low eigenvalue method done, cpu time[sec] = 2.15988, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   5.2e-13  1.17e-13         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.99e-15  1.17e-13         1
         *Z       ---       ---  1.65e+24
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.17462e-13
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.17462e-13  9.73366e-14  1.68411e-14  5.63559e-16   2.5986e-15  9.38306e-17  9.35414e-16  2.65564e-19

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.00648, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 1000 K
            Well    Collision, 1/sec
              W1          5.9975e+09
      global relaxation matrix dimension = 384
      setting global matrices ... done, cpu time[sec] = 0.294907, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.05855, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1037.48      185.475      49.3539      60.2627      6.74583      758.087      81.8086
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.08792, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002252, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.09668, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.32706e-10   4.5073e-13  9.90362e-14
      low eigenvalue method done, cpu time[sec] = 2.09777, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.51e-13  9.86e-14         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.79e-15  9.86e-14         1
         *Z       ---       ---  1.65e+24
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 9.85878e-14
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  9.85878e-14  8.20963e-14  1.34261e-14  4.64736e-16  2.05542e-15  7.60172e-17  8.81463e-16  2.67579e-19

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.98942, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 1000 K
            Well    Collision, 1/sec
              W1         7.49687e+09
      global relaxation matrix dimension = 384
      setting global matrices ... done, cpu time[sec] = 0.301914, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.15052, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            829.983       148.38      39.4831      48.2102      5.39666       606.47      65.4469
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.00365, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002262, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.01246, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.89653e-11   4.0146e-13  8.56432e-14
      low eigenvalue method done, cpu time[sec] = 2.01358, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.01e-13  8.55e-14         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.94e-15  8.55e-14         1
         *Z       ---       ---  1.65e+24
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 8.54872e-14
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  8.54872e-14  7.14147e-14  1.11931e-14  3.98285e-16  1.70696e-15  6.43042e-17   8.3461e-16  2.69545e-19

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.00712, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 1000 K
            Well    Collision, 1/sec
              W1         8.99625e+09
      global relaxation matrix dimension = 384
      setting global matrices ... done, cpu time[sec] = 0.294252, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.13199, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            691.653       123.65      32.9026      40.1751      4.49722      505.391      54.5391
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.01284, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00226, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.02156, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.55077e-11  3.64143e-13  7.57174e-14
      low eigenvalue method done, cpu time[sec] = 2.02271, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.64e-13  7.51e-14         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.29e-15  7.51e-14         1
         *Z       ---       ---  1.65e+24
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 7.50511e-14
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  7.50511e-14  6.34191e-14  9.60849e-15  3.49963e-16  1.46261e-15  5.59291e-17  7.93597e-16  2.71433e-19

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.98541, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 1000 K
            Well    Collision, 1/sec
              W1         1.04956e+10
      global relaxation matrix dimension = 384
      setting global matrices ... done, cpu time[sec] = 0.291929, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.13363, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            592.845      105.985      28.2022      34.4358      3.85476      433.193      46.7478
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.01011, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002265, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.01933, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   7.9455e-12  3.34604e-13  6.80098e-14
      low eigenvalue method done, cpu time[sec] = 2.02046, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.35e-13  6.73e-14         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.78e-15  6.73e-14         1
         *Z       ---       ---  1.65e+24
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 6.72795e-14
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  6.72795e-14  5.71629e-14  8.42109e-15   3.1296e-16  1.28095e-15  4.96012e-17  7.57343e-16  2.73224e-19

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.98241, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 1000 K
            Well    Collision, 1/sec
              W1          1.1995e+10
      global relaxation matrix dimension = 384
      setting global matrices ... done, cpu time[sec] = 0.292352, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.21024, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            518.739      92.7373       24.677      30.1314      3.37292      379.044      40.9043
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.93636, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002241, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.94504, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.02371e-11  3.10469e-13  6.18206e-14
      low eigenvalue method done, cpu time[sec] = 1.94617, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   3.1e-13  6.13e-14         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.36e-15  6.13e-14         1
         *Z       ---       ---  1.65e+24
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 6.12843e-14
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  6.12843e-14  5.21087e-14  7.49582e-15  2.83561e-16  1.14016e-15  4.46293e-17  7.24994e-16  2.74909e-19

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.9851, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1100 K
      Energy reference = 35300 1/cm
      Energy step      = 183 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -79.4 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.008331
         W1 Well: collisional kernel bandwidth = 31
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.236109
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.184282
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.183279
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.884003
         W1 Well: minimal relaxation eigenvalue = 0.0162864
         W1 Well: maximal relaxation eigenvalue = 1.5862
         W1 Well:       grid size = 366
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31677 1/cm
         B1 Barrier:        grid size = 193
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -19 1/cm
         B2 Barrier:        grid size = 192
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 164 1/cm
         B3 Barrier:        grid size = 219
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4777 1/cm
         B4 Barrier:        grid size = 227
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6241 1/cm
         B5 Barrier: nonpositive number of states at -23443 1/cm => truncating
         B5 Barrier:        grid size = 321
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23442 1/cm
         B6 Barrier:        grid size = 185
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1445 1/cm
         B7 Barrier:        grid size = 168
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4556 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.778, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31677 -23442 3.46e+05  1.7e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -19 4.48e+15
         B2    165 8.79e+14
         B3  -4777 2.43e+14
         B4  -6241 2.91e+14
         B5 -23442 3.34e+13
         B6   1446 3.57e+15
         B7   4557 4.23e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  7.31e-06  1.26e-05  2.47e-07   3.2e-08  3.43e-18   0.00086     0.168
          R  1.37e+05         1      1.72    0.0337   0.00438  4.69e-13       118   2.3e+04
         P1  7.95e+04     0.581         1    0.0196   0.00254  2.72e-13      68.3  1.34e+04
         P2  4.06e+06      29.6        51         1      0.13  1.39e-11  3.49e+03  6.82e+05
         P3  3.13e+07       229       393      7.71         1  1.07e-10  2.69e+04  5.26e+06
         P4  2.92e+17  2.13e+12  3.67e+12   7.2e+10  9.34e+09         1  2.51e+14  4.91e+16
         P5  1.16e+03    0.0085    0.0146  0.000287  3.72e-05  3.98e-15         1       196
         P6      5.94  4.35e-05  7.48e-05  1.47e-06   1.9e-07  2.04e-17   0.00511         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  6.11e-09  1.05e-08  2.06e-10  2.67e-11  2.86e-21  7.19e-07  0.000141
          R  1.64e+08         1      1.72    0.0337   0.00438  4.69e-13       118   2.3e+04
         P1  9.51e+07     0.581         1    0.0196   0.00254  2.72e-13      68.3  1.34e+04
         P2  4.85e+09      29.6        51         1      0.13  1.39e-11  3.49e+03  6.82e+05
         P3  3.74e+10       229       393      7.71         1  1.07e-10  2.69e+04  5.26e+06
         P4  3.49e+20  2.13e+12  3.67e+12   7.2e+10  9.34e+09         1  2.51e+14  4.91e+16
         P5  1.39e+06    0.0085    0.0146  0.000287  3.72e-05  3.98e-15         1       196
         P6  7.11e+03  4.35e-05  7.48e-05  1.47e-06   1.9e-07  2.04e-17   0.00511         1
   MasterEquation::set:  done, cpu time[sec] = 1.79029, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 1100 K
            Well    Collision, 1/sec
              W1         2.80209e+08
      global relaxation matrix dimension = 366
      setting global matrices ... done, cpu time[sec] = 0.275522, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.00088, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            28281.1      5549.22      1533.23      1836.44      210.877      22526.7      2669.62
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.94195, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.188733, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.16139, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.24743e-09  7.42076e-11  2.16583e-11
      low eigenvalue method done, cpu time[sec] = 2.17739, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.42e-11  2.17e-11         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.21e-12  2.17e-11         1
         *Z       ---       ---  1.84e+23
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.16573e-11
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.16062e-11  1.58038e-11  4.60347e-12  1.36525e-13  9.68075e-13  2.81239e-14  6.71573e-14  2.71445e-17

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.96842, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 1100 K
            Well    Collision, 1/sec
              W1         8.40626e+08
      global relaxation matrix dimension = 366
      setting global matrices ... done, cpu time[sec] = 0.275701, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.1662, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            9427.03      1849.74      511.078      612.148      70.2923      7508.91      889.875
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.95257, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.18708, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.17075, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.67974e-10  5.29571e-11  1.47018e-11
      low eigenvalue method done, cpu time[sec] = 2.18646, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   5.3e-11  1.47e-11         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.63e-13  1.47e-11         1
         *Z       ---       ---  1.84e+23
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.47007e-11
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.46659e-11  1.14006e-11   2.6466e-12  7.89283e-14   4.5724e-13  1.46152e-14  6.89872e-14  2.72118e-17

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.14232, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 1100 K
            Well    Collision, 1/sec
              W1         1.40104e+09
      global relaxation matrix dimension = 366
      setting global matrices ... done, cpu time[sec] = 0.274547, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.27131, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            5656.22      1109.84      306.647      367.289      42.1754      4505.35      533.925
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.95458, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.18653, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.1715, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.92038e-10  4.42314e-11  1.18855e-11
      low eigenvalue method done, cpu time[sec] = 2.18737, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.42e-11  1.19e-11         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   7.2e-13  1.19e-11         1
         *Z       ---       ---  1.84e+23
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.18843e-11
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.18562e-11  9.43165e-12  1.96454e-12  6.05074e-14  3.21375e-13  1.07418e-14  6.85297e-14   2.7282e-17

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.24912, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 1100 K
            Well    Collision, 1/sec
              W1         1.96146e+09
      global relaxation matrix dimension = 366
      setting global matrices ... done, cpu time[sec] = 0.27682, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.25053, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            4040.16      792.746      219.033      262.349      30.1253      3218.11      381.375
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.95735, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.187754, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.1757, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.89727e-10  3.89287e-11  1.02032e-11
      low eigenvalue method done, cpu time[sec] = 2.19132, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.89e-11  1.02e-11         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.34e-13  1.02e-11         1
         *Z       ---       ---  1.84e+23
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.02023e-11
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.01782e-11  8.20606e-12  1.59246e-12  5.04806e-14  2.53831e-13  8.73652e-15  6.74697e-14  2.73543e-17

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.23409, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 1100 K
            Well    Collision, 1/sec
              W1         2.52188e+09
      global relaxation matrix dimension = 366
      setting global matrices ... done, cpu time[sec] = 0.27675, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.35087, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            3142.34       616.58      170.359      204.049      23.4308      2502.97      296.625
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.95915, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.187617, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.1774, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.54921e-10  3.52117e-11   9.0418e-12
      low eigenvalue method done, cpu time[sec] = 2.19379, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.52e-11  9.04e-12         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.73e-13  9.04e-12         1
         *Z       ---       ---  1.84e+23
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 9.04099e-12
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  9.01967e-12  7.33872e-12  1.35179e-12  4.39255e-14  2.12278e-13  7.46722e-15  6.62222e-14  2.74282e-17

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.342, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 1100 K
            Well    Collision, 1/sec
              W1         2.80209e+09
      global relaxation matrix dimension = 366
      setting global matrices ... done, cpu time[sec] = 0.27669, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.32971, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2828.11      554.922      153.323      183.644      21.0877      2252.67      266.962
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.957, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.187407, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.17533, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.90635e-10  3.37172e-11  8.57968e-12
      low eigenvalue method done, cpu time[sec] = 2.19171, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.37e-11  8.58e-12         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.49e-13  8.58e-12         1
         *Z       ---       ---  1.84e+23
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 8.57847e-12
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  8.55815e-12  6.98881e-12  1.25981e-12  4.13937e-14  1.96802e-13  6.98613e-15  6.55773e-14  2.74655e-17

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.31744, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 1100 K
            Well    Collision, 1/sec
              W1         4.20313e+09
      global relaxation matrix dimension = 366
      setting global matrices ... done, cpu time[sec] = 0.277407, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.47047, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1885.41      369.948      102.216       122.43      14.0585      1501.78      177.975
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.97369, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.186725, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.19105, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.11691e-11  2.83246e-11  6.93961e-12
      low eigenvalue method done, cpu time[sec] = 2.20825, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.83e-11  6.94e-12         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.61e-13  6.94e-12         1
         *Z       ---       ---  1.84e+23
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 6.93845e-12
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  6.92202e-12   5.7251e-12   9.5117e-13  3.27311e-14  1.46381e-13  5.38023e-15   6.2415e-14  2.76543e-17

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.47538, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 1100 K
            Well    Collision, 1/sec
              W1         5.60417e+09
      global relaxation matrix dimension = 366
      setting global matrices ... done, cpu time[sec] = 0.27723, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.52964, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1414.06      277.461      76.6617      91.8222      10.5438      1126.34      133.481
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.962, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.187919, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.18068, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.60778e-11  2.48484e-11  5.90903e-12
      low eigenvalue method done, cpu time[sec] = 2.19716, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.48e-11  5.91e-12         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.05e-13  5.91e-12         1
         *Z       ---       ---  1.84e+23
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 5.90816e-12
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  5.89417e-12  4.91362e-12  7.71866e-13  2.75243e-14  1.18051e-13   4.4463e-15  5.95334e-14  2.78424e-17

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.52348, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 1100 K
            Well    Collision, 1/sec
              W1         7.00522e+09
      global relaxation matrix dimension = 366
      setting global matrices ... done, cpu time[sec] = 0.278428, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.55631, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1131.24      221.969      61.3294      73.4577      8.43507       901.07      106.785
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.95725, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.188407, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.17637, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   8.0648e-12  2.23529e-11   5.1846e-12
      low eigenvalue method done, cpu time[sec] = 2.19292, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.24e-11  5.18e-12         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.64e-13  5.18e-12         1
         *Z       ---       ---  1.84e+23
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 5.18385e-12
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  5.17164e-12  4.33516e-12  6.52823e-13   2.3963e-14  9.95825e-14  3.82185e-15  5.69619e-14   2.8026e-17

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.54957, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 1100 K
            Well    Collision, 1/sec
              W1         8.40626e+09
      global relaxation matrix dimension = 366
      setting global matrices ... done, cpu time[sec] = 0.27682, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.57794, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            942.703      184.974      51.1078      61.2148      7.02923      750.891      88.9875
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.96246, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.186423, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.17944, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.24163e-10  2.04432e-11   4.6402e-12
      low eigenvalue method done, cpu time[sec] = 2.19587, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.04e-11  4.64e-12         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.33e-13  4.64e-12         1
         *Z       ---       ---  1.84e+23
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.6394e-12
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.62841e-12  3.89609e-12  5.67278e-13  2.13365e-14  8.64583e-14  3.36913e-15  5.46647e-14  2.82028e-17

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.57286, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 1100 K
            Well    Collision, 1/sec
              W1          9.8073e+09
      global relaxation matrix dimension = 366
      setting global matrices ... done, cpu time[sec] = 0.278476, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.61741, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            808.032      158.549      43.8067      52.4698      6.02505      643.621       76.275
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.95611, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.188202, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.17549, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.38525e-11  1.89183e-11  4.21241e-12
      low eigenvalue method done, cpu time[sec] = 2.19139, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.89e-11  4.21e-12         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.08e-13  4.21e-12         1
         *Z       ---       ---  1.84e+23
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.21108e-12
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.20108e-12  3.54844e-12  5.02472e-13  1.93007e-14  7.65882e-14  3.02296e-15  5.26004e-14  2.83713e-17

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.60905, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 1100 K
            Well    Collision, 1/sec
              W1         1.12083e+10
      global relaxation matrix dimension = 366
      setting global matrices ... done, cpu time[sec] = 0.276179, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.63859, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            707.028      138.731      38.3309      45.9111      5.27192      563.169      66.7406
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.96256, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.187415, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.18062, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.63872e-11  1.76631e-11  3.86529e-12
      low eigenvalue method done, cpu time[sec] = 2.19699, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.77e-11  3.86e-12         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.88e-13  3.86e-12         1
         *Z       ---       ---  1.84e+23
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 3.86424e-12
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  3.85514e-12  3.26463e-12  4.51488e-13  1.76659e-14  6.88611e-14   2.7481e-15   5.0733e-14  2.85306e-17

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.63392, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1200 K
      Energy reference = 38080 1/cm
      Energy step      = 200 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -77.7 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.007938
         W1 Well: collisional kernel bandwidth = 31
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.184802
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.174752
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.179873
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.765943
         W1 Well: minimal relaxation eigenvalue = 0.0154382
         W1 Well: maximal relaxation eigenvalue = 1.93464
         W1 Well:       grid size = 349
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31720 1/cm
         B1 Barrier:        grid size = 191
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -120 1/cm
         B2 Barrier:        grid size = 190
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 79 1/cm
         B3 Barrier:        grid size = 214
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4720 1/cm
         B4 Barrier:        grid size = 222
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6320 1/cm
         B5 Barrier: nonpositive number of states at -23720 1/cm => truncating
         B5 Barrier:        grid size = 309
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23720 1/cm
         B6 Barrier:        grid size = 183
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1479 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4679 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.59204, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31720 -23720 2.82e+05 2.59e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -120 8.49e+15
         B2     80 1.82e+15
         B3  -4720  5.2e+14
         B4  -6320 6.13e+14
         B5 -23720  7.2e+13
         B6   1480 7.31e+15
         B7   4680 9.41e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.02e-07   3.5e-07  1.12e-08  1.74e-09  1.37e-18  1.93e-05   0.00273
          R  4.94e+06         1      1.73    0.0551   0.00858  6.79e-12      95.4  1.35e+04
         P1  2.86e+06     0.578         1    0.0319   0.00496  3.92e-12      55.1  7.81e+03
         P2  8.97e+07      18.1      31.4         1     0.156  1.23e-10  1.73e+03  2.45e+05
         P3  5.76e+08       116       202      6.42         1  7.91e-10  1.11e+04  1.57e+06
         P4  7.28e+17  1.47e+11  2.55e+11  8.12e+09  1.26e+09         1  1.41e+13  1.99e+15
         P5  5.18e+04    0.0105    0.0181  0.000578     9e-05  7.12e-14         1       142
         P6       366   7.4e-05  0.000128  4.08e-06  6.35e-07  5.03e-16   0.00706         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.85e-10  3.19e-10  1.02e-11  1.59e-12  1.25e-21  1.76e-08  2.49e-06
          R  5.42e+09         1      1.73    0.0551   0.00858  6.79e-12      95.4  1.35e+04
         P1  3.13e+09     0.578         1    0.0319   0.00496  3.92e-12      55.1  7.81e+03
         P2  9.82e+10      18.1      31.4         1     0.156  1.23e-10  1.73e+03  2.45e+05
         P3  6.31e+11       116       202      6.42         1  7.91e-10  1.11e+04  1.57e+06
         P4  7.98e+20  1.47e+11  2.55e+11  8.12e+09  1.26e+09         1  1.41e+13  1.99e+15
         P5  5.68e+07    0.0105    0.0181  0.000578     9e-05  7.12e-14         1       142
         P6  4.01e+05   7.4e-05  0.000128  4.08e-06  6.35e-07  5.03e-16   0.00706         1
   MasterEquation::set:  done, cpu time[sec] = 1.60402, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 1200 K
            Well    Collision, 1/sec
              W1         2.63656e+08
      global relaxation matrix dimension = 349
      setting global matrices ... done, cpu time[sec] = 0.251119, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.72213, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
              37281      7997.11      2284.26      2690.03      315.939      32074.7      4131.59
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.72769, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.179876, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.92795, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.87265e-09  1.79985e-09  5.48165e-10
      low eigenvalue method done, cpu time[sec] = 1.94261, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.8e-09  5.48e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.78e-11  5.48e-10         1
         *Z       ---       ---  3.05e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 5.48165e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1   5.4718e-10  4.04332e-10  1.13274e-10  3.38936e-12  2.34332e-11  6.88668e-13  2.06054e-12  1.26907e-15

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.41039, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 1200 K
            Well    Collision, 1/sec
              W1         7.90968e+08
      global relaxation matrix dimension = 349
      setting global matrices ... done, cpu time[sec] = 0.252034, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.88385, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
              12427       2665.7       761.42      896.676      105.313      10691.6       1377.2
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.72428, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.166191, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.89862, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.41893e-10  1.32591e-09  3.86447e-10
      low eigenvalue method done, cpu time[sec] = 1.91412, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.33e-09  3.86e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.05e-11  3.86e-10         1
         *Z       ---       ---  3.05e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 3.86448e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  3.85753e-10  3.02118e-10  6.75264e-11  2.04889e-12   1.1558e-11  3.74537e-13  2.12536e-12  1.27193e-15

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.52192, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 1200 K
            Well    Collision, 1/sec
              W1         1.31828e+09
      global relaxation matrix dimension = 349
      setting global matrices ... done, cpu time[sec] = 0.250784, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.91969, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            7456.21      1599.42      456.852      538.006      63.1878      6414.95      826.318
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.73111, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.166776, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.90601, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.24446e-09  1.12555e-09  3.18915e-10
      low eigenvalue method done, cpu time[sec] = 1.92093, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.13e-09  3.19e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.74e-11  3.19e-10         1
         *Z       ---       ---  3.05e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 3.18915e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  3.18342e-10  2.54869e-10  5.11435e-11  1.60805e-12  8.31388e-12  2.81966e-13  2.12422e-12  1.27491e-15

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.56031, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 1200 K
            Well    Collision, 1/sec
              W1         1.84559e+09
      global relaxation matrix dimension = 349
      setting global matrices ... done, cpu time[sec] = 0.251044, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.9757, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            5325.86      1142.44      326.323       384.29      45.1342       4582.1      590.227
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.73047, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.165784, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.90483, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.41246e-09  1.00186e-09   2.7783e-10
      low eigenvalue method done, cpu time[sec] = 1.92032, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0     1e-09  2.78e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.55e-11  2.78e-10         1
         *Z       ---       ---  3.05e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.7783e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.77331e-10   2.2489e-10   4.2063e-11  1.36396e-12  6.67502e-12   2.3324e-13  2.10392e-12  1.27798e-15

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.47566, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 1200 K
            Well    Collision, 1/sec
              W1          2.3729e+09
      global relaxation matrix dimension = 349
      setting global matrices ... done, cpu time[sec] = 0.251223, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.99034, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            4142.34      888.567      253.807      298.892      35.1043      3563.86      459.066
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.73421, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.167639, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.91027, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.04319e-09  9.14161e-10  2.49078e-10
      low eigenvalue method done, cpu time[sec] = 1.92606, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.14e-10  2.49e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.41e-11  2.49e-10         1
         *Z       ---       ---  3.05e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.49079e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.48631e-10  2.03374e-10  3.61193e-11  1.20231e-12  5.65452e-12  2.02007e-13  2.07655e-12   1.2811e-15

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.64097, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 1200 K
            Well    Collision, 1/sec
              W1         2.63656e+09
      global relaxation matrix dimension = 349
      setting global matrices ... done, cpu time[sec] = 0.25258, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.93729, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             3728.1      799.711      228.426      269.003      31.5939      3207.47      413.159
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.73424, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.168553, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.91108, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.62684e-10   8.7865e-10  2.37538e-10
      low eigenvalue method done, cpu time[sec] = 1.92732, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.79e-10  2.38e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.36e-11  2.38e-10         1
         *Z       ---       ---  3.05e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.37539e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.37112e-10  1.94617e-10  3.38303e-11  1.13935e-12  5.27148e-12  1.90073e-13  2.06173e-12  1.28267e-15

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.59171, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 1200 K
            Well    Collision, 1/sec
              W1         3.95484e+09
      global relaxation matrix dimension = 349
      setting global matrices ... done, cpu time[sec] = 0.252683, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.05024, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             2485.4       533.14      152.284      179.335      21.0626      2138.32      275.439
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.73072, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.168217, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.90746, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.55403e-10  7.49203e-10  1.96061e-10
      low eigenvalue method done, cpu time[sec] = 1.92319, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.49e-10  1.96e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.16e-11  1.96e-10         1
         *Z       ---       ---  3.05e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.96061e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.95708e-10  1.62577e-10  2.60642e-11  9.21267e-13  4.00917e-12  1.49759e-13  1.98541e-12  1.29062e-15

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.69986, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 1200 K
            Well    Collision, 1/sec
              W1         5.27312e+09
      global relaxation matrix dimension = 349
      setting global matrices ... done, cpu time[sec] = 0.252757, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.10297, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1864.05      399.855      114.213      134.501       15.797      1603.74       206.58
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.7321, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.168269, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.9086, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.63117e-10  6.64537e-10  1.69512e-10
      low eigenvalue method done, cpu time[sec] = 1.92438, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.65e-10   1.7e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.03e-11   1.7e-10         1
         *Z       ---       ---  3.05e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.69512e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.69208e-10  1.41615e-10  2.14773e-11  7.87767e-13  3.28763e-12  1.25891e-13  1.91255e-12  1.29851e-15

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.75342, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 1200 K
            Well    Collision, 1/sec
              W1          6.5914e+09
      global relaxation matrix dimension = 349
      setting global matrices ... done, cpu time[sec] = 0.252212, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.2388, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1491.24      319.884      91.3704      107.601      12.6376      1282.99      165.264
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.7161, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.167299, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.89158, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.79016e-10  6.03078e-10  1.50581e-10
      low eigenvalue method done, cpu time[sec] = 1.90633, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.03e-10  1.51e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.31e-12  1.51e-10         1
         *Z       ---       ---  3.05e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.50581e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1   1.5031e-10  1.26455e-10  1.83924e-11   6.9514e-13  2.81087e-12  1.09707e-13  1.84568e-12  1.30623e-15

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.8688, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 1200 K
            Well    Collision, 1/sec
              W1         7.90968e+09
      global relaxation matrix dimension = 349
      setting global matrices ... done, cpu time[sec] = 0.250259, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.24658, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             1242.7       266.57       76.142      89.6676      10.5313      1069.16       137.72
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.7355, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.167406, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.91111, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.00806e-10   5.5562e-10  1.36185e-10
      low eigenvalue method done, cpu time[sec] = 1.92716, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.56e-10  1.36e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.58e-12  1.36e-10         1
         *Z       ---       ---  3.05e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.36185e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1   1.3594e-10   1.1481e-10  1.61515e-11  6.26006e-13  2.46824e-12   9.7836e-14  1.78472e-12  1.31368e-15

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.89833, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 1200 K
            Well    Collision, 1/sec
              W1         9.22796e+09
      global relaxation matrix dimension = 349
      setting global matrices ... done, cpu time[sec] = 0.252242, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.25498, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1065.17      228.489      65.2646       76.858      9.02683      916.421      118.045
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.7336, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.1673, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.90913, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.76271e-10  5.17435e-10  1.24757e-10
      low eigenvalue method done, cpu time[sec] = 1.92491, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.17e-10  1.25e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.99e-12  1.25e-10         1
         *Z       ---       ---  3.05e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.24758e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.24533e-10  1.05496e-10  1.44381e-11  5.71867e-13  2.20806e-12   8.8667e-14  1.72907e-12   1.3208e-15

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.90706, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 1200 K
            Well    Collision, 1/sec
              W1         1.05462e+10
      global relaxation matrix dimension = 349
      setting global matrices ... done, cpu time[sec] = 0.252507, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.29372, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            932.026      199.928      57.1065      67.2507      7.89848      801.868       103.29
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.72738, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.16767, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.90353, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.50854e-10  4.85791e-10  1.15402e-10
      low eigenvalue method done, cpu time[sec] = 1.91933, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.86e-10  1.15e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   7.5e-12  1.15e-10         1
         *Z       ---       ---  3.05e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.15403e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.15195e-10  9.78245e-11  1.30791e-11     5.28e-13  2.00262e-12  8.13216e-14  1.67806e-12  1.32757e-15

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.93904, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1300 K
      Energy reference = 40860 1/cm
      Energy step      = 217 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -75.8 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.007506
         W1 Well: collisional kernel bandwidth = 30
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.195803
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.159601
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.145897
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.70211
         W1 Well: minimal relaxation eigenvalue = 0.0147175
         W1 Well: maximal relaxation eigenvalue = 1.22709
         W1 Well:       grid size = 334
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31618 1/cm
         B1 Barrier:        grid size = 189
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -153 1/cm
         B2 Barrier:        grid size = 188
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 63 1/cm
         B3 Barrier:        grid size = 210
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4710 1/cm
         B4 Barrier:        grid size = 217
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6229 1/cm
         B5 Barrier: nonpositive number of states at -23155 1/cm => truncating
         B5 Barrier:        grid size = 295
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23155 1/cm
         B6 Barrier:        grid size = 182
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1365 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4620 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.49117, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31618 -23155 4.27e+05  3.9e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -153 1.55e+16
         B2     64 3.62e+15
         B3  -4710 1.07e+15
         B4  -6229 1.24e+15
         B5 -23155 1.48e+14
         B6   1366 1.43e+16
         B7   4621 1.99e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  9.72e-09   1.7e-08   8.1e-10  1.47e-10  6.33e-19   7.7e-07  8.29e-05
          R  1.03e+08         1      1.74    0.0833    0.0152  6.51e-11      79.2  8.53e+03
         P1   5.9e+07     0.574         1    0.0478   0.00869  3.73e-11      45.4  4.89e+03
         P2  1.23e+09        12      20.9         1     0.182  7.81e-10       951  1.02e+05
         P3  6.79e+09        66       115       5.5         1  4.29e-09  5.23e+03  5.63e+05
         P4  1.58e+18  1.54e+10  2.68e+10  1.28e+09  2.33e+08         1  1.22e+12  1.31e+14
         P5   1.3e+06    0.0126     0.022   0.00105  0.000191  8.21e-13         1       108
         P6  1.21e+04  0.000117  0.000204  9.77e-06  1.78e-06  7.63e-15   0.00929         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  9.64e-12  1.68e-11  8.03e-13  1.46e-13  6.27e-22  7.64e-10  8.22e-08
          R  1.04e+11         1      1.74    0.0833    0.0152  6.51e-11      79.2  8.53e+03
         P1  5.95e+10     0.574         1    0.0478   0.00869  3.73e-11      45.4  4.89e+03
         P2  1.25e+12        12      20.9         1     0.182  7.81e-10       951  1.02e+05
         P3  6.85e+12        66       115       5.5         1  4.29e-09  5.23e+03  5.63e+05
         P4  1.59e+21  1.54e+10  2.68e+10  1.28e+09  2.33e+08         1  1.22e+12  1.31e+14
         P5  1.31e+09    0.0126     0.022   0.00105  0.000191  8.21e-13         1       108
         P6  1.22e+07  0.000117  0.000204  9.77e-06  1.78e-06  7.63e-15   0.00929         1
   MasterEquation::set:  done, cpu time[sec] = 1.50268, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 1300 K
            Well    Collision, 1/sec
              W1         2.49494e+08
      global relaxation matrix dimension = 334
      setting global matrices ... done, cpu time[sec] = 0.231225, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.40105, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            47758.8      11159.7       3284.3         3810      456.569        44065      6117.69
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.5244, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.156735, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.70702, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.49605e-08  2.54009e-08  8.08091e-09
      low eigenvalue method done, cpu time[sec] = 1.72099, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.54e-08  8.08e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.74e-10  8.08e-09         1
         *Z       ---       ---  6.81e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 8.08091e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  8.06122e-09  6.00844e-09  1.62607e-09  4.91032e-11  3.31659e-10  9.85342e-12  3.60569e-11  3.20142e-14

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 4.79896, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 1300 K
            Well    Collision, 1/sec
              W1         7.48481e+08
      global relaxation matrix dimension = 334
      setting global matrices ... done, cpu time[sec] = 0.230037, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.45264, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            15919.6      3719.91      1094.77         1270       152.19      14688.3      2039.23
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.52178, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.152028, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.69977, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.90276e-08  1.92313e-08  5.88331e-09
      low eigenvalue method done, cpu time[sec] = 1.71368, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.92e-08  5.88e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.83e-10  5.88e-09         1
         *Z       ---       ---  6.81e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 5.88331e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  5.86897e-09  4.62555e-09  9.99805e-10  3.08517e-11   1.6984e-10  5.57469e-12  3.73108e-11  3.20803e-14

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 4.82532, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 1300 K
            Well    Collision, 1/sec
              W1         1.24747e+09
      global relaxation matrix dimension = 334
      setting global matrices ... done, cpu time[sec] = 0.230798, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.53581, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            9551.75      2231.94       656.86          762      91.3139      8812.99      1223.54
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.5284, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.152875, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.70791, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   1.6804e-08  1.65575e-08  4.94122e-09
      low eigenvalue method done, cpu time[sec] = 1.72215, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.66e-08  4.94e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.44e-10  4.94e-09         1
         *Z       ---       ---  6.81e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.94122e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.92918e-09   3.9676e-09  7.70433e-10  2.47096e-11  1.24642e-10  4.28505e-12  3.74742e-11  3.21488e-14

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 4.9207, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 1300 K
            Well    Collision, 1/sec
              W1         1.74645e+09
      global relaxation matrix dimension = 334
      setting global matrices ... done, cpu time[sec] = 0.232201, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.56713, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            6822.68      1594.25      469.186      544.286      65.2242         6295      873.955
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.53089, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.152725, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.70973, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.46938e-08   1.4884e-08   4.3591e-09
      low eigenvalue method done, cpu time[sec] = 1.72415, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.49e-08  4.36e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.19e-10  4.36e-09         1
         *Z       ---       ---  6.81e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.3591e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.34847e-09  3.54318e-09  6.41602e-10  2.12601e-11  1.01502e-10  3.59684e-12  3.72955e-11  3.22191e-14

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 4.95469, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 1300 K
            Well    Collision, 1/sec
              W1         2.24544e+09
      global relaxation matrix dimension = 334
      setting global matrices ... done, cpu time[sec] = 0.232031, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.64749, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            5306.53      1239.97      364.922      423.334      50.7299      4896.11      679.743
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.52739, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.152752, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.70638, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.30481e-08  1.36859e-08  3.94698e-09
      low eigenvalue method done, cpu time[sec] = 1.72064, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.37e-08  3.95e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.02e-10  3.95e-09         1
         *Z       ---       ---  6.81e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 3.94698e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  3.93736e-09  3.23487e-09  5.56433e-10  1.89508e-11  8.69469e-11  3.15106e-12  3.69767e-11  3.22905e-14

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.0303, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 1300 K
            Well    Collision, 1/sec
              W1         2.49494e+09
      global relaxation matrix dimension = 334
      setting global matrices ... done, cpu time[sec] = 0.231662, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.58005, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            4775.88      1115.97       328.43          381      45.6569       4406.5      611.769
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.52635, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.153762, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.70629, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   1.3441e-08  1.31978e-08  3.78035e-09
      low eigenvalue method done, cpu time[sec] = 1.72137, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.32e-08  3.78e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.94e-10  3.78e-09         1
         *Z       ---       ---  6.81e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 3.78035e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  3.77114e-09  3.10842e-09  5.23422e-10  1.80451e-11  8.14477e-11  2.97956e-12  3.67911e-11  3.23265e-14

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 4.96594, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 1300 K
            Well    Collision, 1/sec
              W1          3.7424e+09
      global relaxation matrix dimension = 334
      setting global matrices ... done, cpu time[sec] = 0.231391, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.68238, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            3183.92      743.981      218.953          254       30.438      2937.66      407.846
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.53091, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.152897, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.70988, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.15693e-08  1.14024e-08  3.17489e-09
      low eigenvalue method done, cpu time[sec] = 1.7242, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.14e-08  3.17e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.68e-10  3.17e-09         1
         *Z       ---       ---  6.81e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 3.17489e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  3.16715e-09  2.64055e-09  4.10374e-10  1.48749e-11  6.31509e-11  2.39442e-12  3.57698e-11  3.25076e-14

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.07066, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 1300 K
            Well    Collision, 1/sec
              W1         4.98987e+09
      global relaxation matrix dimension = 334
      setting global matrices ... done, cpu time[sec] = 0.231397, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.69062, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2387.94      557.986      164.215        190.5      22.8285      2203.25      305.884
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.53041, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.154301, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.71092, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.00776e-08  1.02131e-08   2.7812e-09
      low eigenvalue method done, cpu time[sec] = 1.72522, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.02e-08  2.78e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.5e-10  2.78e-09         1
         *Z       ---       ---  6.81e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.7812e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.77442e-09  2.32949e-09  3.42667e-10  1.29041e-11  5.25401e-11  2.04275e-12  3.47383e-11  3.26874e-14

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.08051, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 1300 K
            Well    Collision, 1/sec
              W1         6.23734e+09
      global relaxation matrix dimension = 334
      setting global matrices ... done, cpu time[sec] = 0.231368, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.76781, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1910.35      446.389      131.372        152.4      18.2628       1762.6      244.707
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.52851, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.152223, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.70678, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.27744e-09  9.34135e-09    2.497e-09
      low eigenvalue method done, cpu time[sec] = 1.72151, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.34e-09   2.5e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.38e-10   2.5e-09         1
         *Z       ---       ---  6.81e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.49699e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.49091e-09  2.10172e-09  2.96629e-10    1.152e-11  4.54485e-11  1.80144e-12  3.37619e-11  3.28632e-14

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.15387, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 1300 K
            Well    Collision, 1/sec
              W1         7.48481e+09
      global relaxation matrix dimension = 334
      setting global matrices ... done, cpu time[sec] = 0.231681, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.76296, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1591.96      371.991      109.477          127       15.219      1468.83      203.923
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.51101, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.152456, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.69111, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.72427e-09   8.6628e-09  2.27868e-09
      low eigenvalue method done, cpu time[sec] = 1.70534, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.66e-09  2.28e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.28e-10  2.28e-09         1
         *Z       ---       ---  6.81e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.27868e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.27313e-09  1.92496e-09   2.6288e-10  1.04764e-11  4.03034e-11  1.62268e-12  3.28528e-11  3.30332e-14

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.13159, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 1300 K
            Well    Collision, 1/sec
              W1         8.73227e+09
      global relaxation matrix dimension = 334
      setting global matrices ... done, cpu time[sec] = 0.231712, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.8003, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1364.54      318.849      93.8372      108.857      13.0448         1259      174.791
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.53117, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.152869, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.71015, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.10107e-09  8.11312e-09  2.10387e-09
      low eigenvalue method done, cpu time[sec] = 1.72448, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.11e-09   2.1e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.19e-10   2.1e-09         1
         *Z       ---       ---  6.81e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.10387e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.09874e-09  1.78233e-09  2.36873e-10  9.65197e-12   3.6364e-11  1.48342e-12  3.20094e-11  3.31964e-14

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.18818, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 1300 K
            Well    Collision, 1/sec
              W1         9.97974e+09
      global relaxation matrix dimension = 334
      setting global matrices ... done, cpu time[sec] = 0.231415, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.80038, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1193.97      278.993      82.1075        95.25      11.4142      1101.62      152.942
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.53041, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.153108, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.70944, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.79914e-09   7.6549e-09  1.95967e-09
      low eigenvalue method done, cpu time[sec] = 1.72377, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.65e-09  1.96e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.13e-10  1.96e-09         1
         *Z       ---       ---  6.81e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.95967e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.95489e-09  1.66395e-09    2.161e-10  8.97879e-12  3.32308e-11  1.37102e-12  3.12263e-11  3.33521e-14

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.18888, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1400 K
      Energy reference = 43640 1/cm
      Energy step      = 233 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -73.9 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.007397
         W1 Well: collisional kernel bandwidth = 30
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.164056
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.1485
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.145951
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.644238
         W1 Well: minimal relaxation eigenvalue = 0.0140948
         W1 Well: maximal relaxation eigenvalue = 1.24282
         W1 Well:       grid size = 323
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31618 1/cm
         B1 Barrier:        grid size = 188
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -163 1/cm
         B2 Barrier:        grid size = 187
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 69 1/cm
         B3 Barrier:        grid size = 208
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4823 1/cm
         B4 Barrier:        grid size = 214
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6222 1/cm
         B5 Barrier: nonpositive number of states at -23231 1/cm => truncating
         B5 Barrier:        grid size = 287
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23230 1/cm
         B6 Barrier:        grid size = 181
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1466 1/cm
         B7 Barrier:        grid size = 168
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4496 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.38897, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31618 -23230 4.04e+05  5.8e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -163 2.73e+16
         B2     70  6.9e+15
         B3  -4823  2.1e+15
         B4  -6222  2.4e+15
         B5 -23230 2.93e+14
         B6   1467 2.69e+16
         B7   4497    4e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  7.27e-10  1.28e-09  8.61e-11  1.79e-11  3.28e-19  4.87e-08  4.14e-06
          R  1.38e+09         1      1.76     0.119    0.0246  4.51e-10      67.1   5.7e+03
         P1  7.82e+08     0.568         1    0.0673     0.014  2.56e-10      38.1  3.24e+03
         P2  1.16e+10      8.44      14.8         1     0.208  3.81e-09       566  4.81e+04
         P3  5.59e+10      40.6      71.4      4.81         1  1.83e-08  2.72e+03  2.31e+05
         P4  3.05e+18  2.22e+09   3.9e+09  2.63e+08  5.46e+07         1  1.49e+11  1.26e+13
         P5  2.05e+07    0.0149    0.0262   0.00177  0.000367  6.72e-12         1        85
         P6  2.41e+05  0.000175  0.000309  2.08e-05  4.32e-06  7.91e-14    0.0118         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  7.73e-13  1.36e-12  9.16e-14   1.9e-14  3.48e-22  5.18e-11  4.41e-09
          R  1.29e+12         1      1.76     0.119    0.0246  4.51e-10      67.1   5.7e+03
         P1  7.35e+11     0.568         1    0.0673     0.014  2.56e-10      38.1  3.24e+03
         P2  1.09e+13      8.44      14.8         1     0.208  3.81e-09       566  4.81e+04
         P3  5.25e+13      40.6      71.4      4.81         1  1.83e-08  2.72e+03  2.31e+05
         P4  2.87e+21  2.22e+09   3.9e+09  2.63e+08  5.46e+07         1  1.49e+11  1.26e+13
         P5  1.93e+10    0.0149    0.0262   0.00177  0.000367  6.72e-12         1        85
         P6  2.27e+08  0.000175  0.000309  2.08e-05  4.32e-06  7.91e-14    0.0118         1
   MasterEquation::set:  done, cpu time[sec] = 1.40029, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 1400 K
            Well    Collision, 1/sec
              W1         2.37206e+08
      global relaxation matrix dimension = 323
      setting global matrices ... done, cpu time[sec] = 0.216689, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.1953, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            59427.6      15055.7       4579.9      5242.08      639.624      58616.2      8725.91
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.26e-07  7.78e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.19e-09  7.78e-08         1
         *Z       ---       ---  1.94e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 7.78402e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  7.77157e-08  5.83538e-08   1.5309e-08  4.66782e-10  3.08511e-09   9.2606e-11  4.07882e-10  4.97532e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.82955, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 1400 K
            Well    Collision, 1/sec
              W1         7.11617e+08
      global relaxation matrix dimension = 323
      setting global matrices ... done, cpu time[sec] = 0.217582, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.29671, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            19809.2      5018.56      1526.63      1747.36      213.208      19538.7      2908.64
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.81e-07  5.83e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.56e-09  5.83e-08         1
         *Z       ---       ---  1.94e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 5.82718e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  5.81786e-08  4.60953e-08  9.67002e-09  3.03352e-10  1.63259e-09  5.42396e-11  4.22574e-10  4.98474e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.91486, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 1400 K
            Well    Collision, 1/sec
              W1         1.18603e+09
      global relaxation matrix dimension = 323
      setting global matrices ... done, cpu time[sec] = 0.215978, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.32973, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            11885.5      3011.14       915.98      1048.42      127.925      11723.2      1745.18
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.59e-07  4.97e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.24e-09  4.97e-08         1
         *Z       ---       ---  1.94e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.96904e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.96109e-08  4.01109e-08  7.56455e-09    2.473e-10  1.21933e-09  4.24588e-11  4.25811e-10  4.99448e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.94833, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 1400 K
            Well    Collision, 1/sec
              W1         1.66044e+09
      global relaxation matrix dimension = 323
      setting global matrices ... done, cpu time[sec] = 0.21656, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.37996, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            8489.66      2150.81      654.271      748.868      91.3749      8373.75      1246.56
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.43e-07  4.43e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.02e-09  4.43e-08         1
         *Z       ---       ---  1.94e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.43158e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.42449e-08  3.61937e-08  6.36854e-09  2.15442e-10  1.00538e-09  3.60994e-11  4.25276e-10  5.00443e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.00174, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 1400 K
            Well    Collision, 1/sec
              W1         2.13485e+09
      global relaxation matrix dimension = 323
      setting global matrices ... done, cpu time[sec] = 0.216904, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.40571, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            6603.07      1672.85      508.878      582.453      71.0694      6512.92      969.546
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.32e-07  4.05e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.87e-09  4.05e-08         1
         *Z       ---       ---  1.94e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.04726e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.04078e-08  3.33176e-08  5.57115e-09  1.93918e-10  8.69645e-10  3.19439e-11  4.23089e-10  5.01453e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.02748, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 1400 K
            Well    Collision, 1/sec
              W1         2.37206e+09
      global relaxation matrix dimension = 323
      setting global matrices ... done, cpu time[sec] = 0.216758, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.37655, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            5942.76      1505.57       457.99      524.208      63.9624      5861.62      872.591
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.28e-07  3.89e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.81e-09  3.89e-08         1
         *Z       ---       ---  1.94e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 3.89087e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  3.88465e-08  3.21301e-08   5.2604e-09  1.85426e-10  8.18078e-10  3.03359e-11   4.2166e-10  5.01961e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.99859, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 1400 K
            Well    Collision, 1/sec
              W1         3.55809e+09
      global relaxation matrix dimension = 323
      setting global matrices ... done, cpu time[sec] = 0.21604, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.5025, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            3961.84      1003.71      305.327      349.472      42.6416      3907.75      581.727
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.12e-07  3.32e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.58e-09  3.32e-08        -1
         *Z       ---       ---  1.94e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 3.31724e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  3.31193e-08  2.76927e-08  4.18766e-09  1.55439e-10  6.45106e-10   2.4803e-11   4.1307e-10  5.04515e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.12402, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 1400 K
            Well    Collision, 1/sec
              W1         4.74412e+09
      global relaxation matrix dimension = 323
      setting global matrices ... done, cpu time[sec] = 0.216871, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.5182, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2971.38      752.785      228.995      262.104      31.9812      2930.81      436.296
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.02e-07  2.94e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.43e-09  2.94e-08        -1
         *Z       ---       ---  1.94e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.93912e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.93442e-08  2.47008e-08  3.53749e-09  1.36549e-10  5.43554e-10   2.1435e-11  4.03802e-10  5.07049e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.1394, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 1400 K
            Well    Collision, 1/sec
              W1         5.93015e+09
      global relaxation matrix dimension = 323
      setting global matrices ... done, cpu time[sec] = 0.216992, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.52959, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             2377.1      602.228      183.196      209.683       25.585      2344.65      349.036
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.4122, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.140937, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.56078, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.30186e-08  9.33554e-08  2.66324e-08
      low eigenvalue method done, cpu time[sec] = 1.57486, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.34e-08  2.66e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.32e-09  2.66e-08         1
         *Z       ---       ---  1.94e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.66324e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.65898e-08   2.2486e-08  3.09123e-09  1.23144e-10   4.7502e-10  1.91005e-11   3.9473e-10  5.09527e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 4.72685, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 1400 K
            Well    Collision, 1/sec
              W1         7.11617e+09
      global relaxation matrix dimension = 323
      setting global matrices ... done, cpu time[sec] = 0.216677, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.59896, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1980.92      501.856      152.663      174.736      21.3208      1953.87      290.864
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.40841, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.142429, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.55865, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.69125e-08  8.70855e-08  2.44945e-08
      low eigenvalue method done, cpu time[sec] = 1.57273, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.71e-08  2.45e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.23e-09  2.45e-08         1
         *Z       ---       ---  1.94e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.44945e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.44553e-08  2.07519e-08  2.76153e-09  1.12948e-10  4.24891e-10  1.73563e-11  3.86099e-10  5.11928e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 4.79526, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 1400 K
            Well    Collision, 1/sec
              W1          8.3022e+09
      global relaxation matrix dimension = 323
      setting global matrices ... done, cpu time[sec] = 0.216329, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.61309, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1697.93      430.163      130.854      149.774       18.275      1674.75      249.312
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.4099, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.141514, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.55903, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.17337e-08  8.19756e-08  2.27696e-08
      low eigenvalue method done, cpu time[sec] = 1.5731, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   8.2e-08  2.28e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.16e-09  2.28e-08         1
         *Z       ---       ---  1.94e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.27696e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.27332e-08   1.9342e-08  2.50573e-09  1.04833e-10  3.86238e-10  1.59877e-11   3.7796e-10   5.1424e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 4.80558, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 1400 K
            Well    Collision, 1/sec
              W1         9.48823e+09
      global relaxation matrix dimension = 323
      setting global matrices ... done, cpu time[sec] = 0.216189, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.61881, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1485.69      376.392      114.497      131.052      15.9906      1465.41      218.148
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.40935, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.141234, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.55844, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.76432e-08  7.76933e-08  2.13373e-08
      low eigenvalue method done, cpu time[sec] = 1.5725, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.77e-08  2.13e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.1e-09  2.13e-08         1
         *Z       ---       ---  1.94e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.13373e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.13032e-08  1.81639e-08  2.30019e-09  9.81624e-11  3.55303e-10  1.48757e-11  3.70306e-10  5.16456e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 4.81243, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1500 K
      Energy reference = 46420 1/cm
      Energy step      = 250 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -72 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.006826
         W1 Well: collisional kernel bandwidth = 29
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.187369
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.138305
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.128936
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.612572
         W1 Well: minimal relaxation eigenvalue = 0.0135538
         W1 Well: maximal relaxation eigenvalue = 1.23193
         W1 Well:       grid size = 312
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31579 1/cm
         B1 Barrier:        grid size = 186
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -79 1/cm
         B2 Barrier:        grid size = 185
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 170 1/cm
         B3 Barrier:        grid size = 205
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4829 1/cm
         B4 Barrier:        grid size = 211
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6329 1/cm
         B5 Barrier: nonpositive number of states at -23580 1/cm => truncating
         B5 Barrier:        grid size = 280
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23579 1/cm
         B6 Barrier:        grid size = 180
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1420 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4670 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.34566, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31579 -23579 3.13e+05  8.5e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -79 4.63e+16
         B2    171 1.26e+16
         B3  -4829 3.99e+15
         B4  -6329 4.52e+15
         B5 -23579  5.6e+14
         B6   1421 4.85e+16
         B7   4671 7.73e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  7.65e-11  1.36e-10  1.23e-11  2.87e-12  1.84e-19  4.41e-09  3.06e-07
          R  1.31e+10         1      1.78     0.161    0.0375  2.41e-09      57.7     4e+03
         P1  7.35e+09     0.562         1    0.0903    0.0211  1.36e-09      32.4  2.25e+03
         P2  8.14e+10      6.23      11.1         1     0.233   1.5e-08       359  2.49e+04
         P3  3.49e+11      26.7      47.5      4.28         1  6.43e-08  1.54e+03  1.07e+05
         P4  5.42e+18  4.15e+08  7.38e+08  6.66e+07  1.55e+07         1  2.39e+10  1.66e+12
         P5  2.27e+08    0.0173    0.0308   0.00278   0.00065  4.18e-11         1      69.3
         P6  3.27e+06   0.00025  0.000445  4.02e-05  9.38e-06  6.04e-13    0.0144         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  8.73e-14  1.55e-13   1.4e-14  3.27e-15  2.11e-22  5.04e-12  3.49e-10
          R  1.15e+13         1      1.78     0.161    0.0375  2.41e-09      57.7     4e+03
         P1  6.44e+12     0.562         1    0.0903    0.0211  1.36e-09      32.4  2.25e+03
         P2  7.13e+13      6.23      11.1         1     0.233   1.5e-08       359  2.49e+04
         P3  3.05e+14      26.7      47.5      4.28         1  6.43e-08  1.54e+03  1.07e+05
         P4  4.75e+21  4.15e+08  7.38e+08  6.66e+07  1.55e+07         1  2.39e+10  1.66e+12
         P5  1.98e+11    0.0173    0.0308   0.00278   0.00065  4.18e-11         1      69.3
         P6  2.87e+09   0.00025  0.000445  4.02e-05  9.38e-06  6.04e-13    0.0144         1
   MasterEquation::set:  done, cpu time[sec] = 1.35722, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 1500 K
            Well    Collision, 1/sec
              W1         2.26417e+08
      global relaxation matrix dimension = 312
      setting global matrices ... done, cpu time[sec] = 0.201385, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.00358, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            72044.8      19686.8      6219.29      7033.02      872.249      75563.5      12038.2
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.53e-06  5.36e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.09e-08  5.36e-07         1
         *Z       ---       ---  6.63e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 5.35821e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999999  5.34616e-07  4.04145e-07  1.02848e-07  3.17619e-09  2.05728e-08  6.23592e-10  3.24553e-09  5.25332e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.58379, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 1500 K
            Well    Collision, 1/sec
              W1         6.79251e+08
      global relaxation matrix dimension = 312
      setting global matrices ... done, cpu time[sec] = 0.201646, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.03348, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            24014.9      6562.28       2073.1      2344.34       290.75      25187.8      4012.72
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.21e-06  4.11e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.65e-08  4.11e-07         1
         *Z       ---       ---  6.63e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.10989e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.10065e-07  3.26424e-07   6.6563e-08  2.12598e-09  1.12037e-08  3.76505e-10   3.3664e-09  5.26251e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.60834, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 1500 K
            Well    Collision, 1/sec
              W1         1.13208e+09
      global relaxation matrix dimension = 312
      setting global matrices ... done, cpu time[sec] = 0.201449, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.13462, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
              14409      3937.37      1243.86       1406.6       174.45      15112.7      2407.63
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.07e-06  3.55e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.45e-08  3.55e-07        -1
         *Z       ---       ---  6.63e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 3.55154e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  3.54356e-07  2.87614e-07   5.2778e-08  1.76023e-09  8.49755e-09  2.99488e-10  3.40157e-09  5.27197e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.70975, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 1500 K
            Well    Collision, 1/sec
              W1         1.58492e+09
      global relaxation matrix dimension = 312
      setting global matrices ... done, cpu time[sec] = 0.201404, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.21375, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            10292.1       2812.4       888.47      1004.72      124.607      10794.8      1719.74
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.77e-07   3.2e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.33e-08   3.2e-07         1
         *Z       ---       ---  6.63e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 3.19771e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  3.19052e-07   2.6188e-07  4.48681e-08   1.5503e-09  7.08345e-09  2.57518e-10  3.40729e-09  5.28162e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.78778, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 1500 K
            Well    Collision, 1/sec
              W1         2.03775e+09
      global relaxation matrix dimension = 312
      setting global matrices ... done, cpu time[sec] = 0.201922, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.19353, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            8004.98      2187.43      691.032      781.447      96.9165      8395.94      1337.57
      eigenvector populations normalized:
          L        *R        *P        W1
          0   9.1e-07  2.94e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.24e-08  2.94e-07        -1
         *Z       ---       ---  6.63e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.94245e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.93584e-07  2.42807e-07  3.95547e-08  1.40737e-09  6.17991e-09   2.2989e-10  3.39946e-09  5.29138e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.77187, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 1500 K
            Well    Collision, 1/sec
              W1         2.26417e+09
      global relaxation matrix dimension = 312
      setting global matrices ... done, cpu time[sec] = 0.202702, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.21027, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            7204.48      1968.68      621.929      703.302      87.2249      7556.35      1203.82
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.83e-07  2.84e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.2e-08  2.84e-07        -1
         *Z       ---       ---  6.63e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.83801e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.83163e-07  2.34886e-07   3.7474e-08   1.3507e-09  5.83504e-09  2.19149e-10  3.39264e-09  5.29629e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.78893, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 1500 K
            Well    Collision, 1/sec
              W1         3.39625e+09
      global relaxation matrix dimension = 312
      setting global matrices ... done, cpu time[sec] = 0.203301, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.2566, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            4802.99      1312.46      414.619      468.868      58.1499      5037.56      802.544
      eigenvector populations normalized:
          L        *R        *P        W1
          0   7.8e-07  2.45e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.06e-08  2.45e-07         1
         *Z       ---       ---  6.63e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.45171e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.44619e-07  2.05028e-07  3.02405e-08  1.14905e-09  4.67022e-09   1.8192e-10  3.34458e-09  5.32091e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.8337, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 1500 K
            Well    Collision, 1/sec
              W1         4.52834e+09
      global relaxation matrix dimension = 312
      setting global matrices ... done, cpu time[sec] = 0.202955, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.28495, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            3602.24      984.342      310.965      351.651      43.6124      3778.17      601.908
      eigenvector populations normalized:
          L        *R        *P        W1
          0   7.1e-07  2.19e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.66e-09  2.19e-07        -1
         *Z       ---       ---  6.63e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.194e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.18907e-07  1.84645e-07  2.58102e-08  1.02061e-09  3.97918e-09  1.59012e-10  3.28757e-09   5.3453e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.86296, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 1500 K
            Well    Collision, 1/sec
              W1         5.66042e+09
      global relaxation matrix dimension = 312
      setting global matrices ... done, cpu time[sec] = 0.201995, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.28794, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2881.79      787.473      248.772      281.321        34.89      3022.54      481.526
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.58e-07     2e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.95e-09     2e-07        -1
         *Z       ---       ---  6.63e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.00422e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.99972e-07  1.69412e-07  2.27443e-08  9.28629e-10  3.50895e-09  1.42997e-10   3.2294e-09  5.36916e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.86624, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 1500 K
            Well    Collision, 1/sec
              W1         6.79251e+09
      global relaxation matrix dimension = 312
      setting global matrices ... done, cpu time[sec] = 0.202349, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.32722, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2401.49      656.228       207.31      234.434       29.075      2518.78      401.272
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.17e-07  1.86e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.39e-09  1.86e-07         1
         *Z       ---       ---  6.63e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.85601e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.85184e-07  1.57391e-07  2.04635e-08   8.5815e-10  3.16259e-09  1.30944e-10  3.17262e-09  5.39232e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.90534, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 1500 K
            Well    Collision, 1/sec
              W1         7.92459e+09
      global relaxation matrix dimension = 312
      setting global matrices ... done, cpu time[sec] = 0.202013, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.33101, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2058.42      562.481      177.694      200.943      24.9214      2158.96      343.947
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.84e-07  1.74e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.94e-09  1.74e-07        -1
         *Z       ---       ---  6.63e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.73565e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.73175e-07  1.47551e-07  1.86834e-08  8.01689e-10  2.89391e-09  1.21427e-10  3.11813e-09  5.41467e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.90931, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 1500 K
            Well    Collision, 1/sec
              W1         9.05668e+09
      global relaxation matrix dimension = 312
      setting global matrices ... done, cpu time[sec] = 0.202248, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.34254, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1801.12      492.171      155.482      175.825      21.8062      1889.09      300.954
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.56e-07  1.64e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.55e-09  1.64e-07        -1
         *Z       ---       ---  6.63e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.63511e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.63144e-07   1.3928e-07  1.72456e-08   7.5501e-10  2.67771e-09  1.13651e-10  3.06617e-09  5.43614e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.91992, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1600 K
      Energy reference = 49201 1/cm
      Energy step      = 267 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -70 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.006646
         W1 Well: collisional kernel bandwidth = 29
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.179568
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.131276
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.134396
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.534586
         W1 Well: minimal relaxation eigenvalue = 0.0130719
         W1 Well: maximal relaxation eigenvalue = 1.45799
         W1 Well:       grid size = 303
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31699 1/cm
         B1 Barrier:        grid size = 185
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -194 1/cm
         B2 Barrier:        grid size = 184
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 72 1/cm
         B3 Barrier:        grid size = 202
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4733 1/cm
         B4 Barrier:        grid size = 208
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6335 1/cm
         B5 Barrier: nonpositive number of states at -23423 1/cm => truncating
         B5 Barrier:        grid size = 272
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23423 1/cm
         B6 Barrier:        grid size = 179
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1408 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4611 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.25736, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31699 -23423 3.51e+05 1.23e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -194 7.62e+16
         B2     73 2.23e+16
         B3  -4733 7.36e+15
         B4  -6335 8.23e+15
         B5 -23423 1.04e+15
         B6   1409 8.46e+16
         B7   4612 1.43e+16
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.07e-11  1.93e-11  2.24e-12  5.79e-13  1.12e-19  5.38e-10  3.11e-08
          R  9.34e+10         1       1.8     0.209    0.0541  1.04e-08      50.3  2.91e+03
         P1  5.19e+10     0.555         1     0.116      0.03   5.8e-09      27.9  1.62e+03
         P2  4.47e+11      4.78       8.6         1     0.259  4.99e-08       240  1.39e+04
         P3  1.73e+12      18.5      33.3      3.87         1  1.93e-07       930  5.38e+04
         P4  8.94e+18  9.57e+07  1.72e+08     2e+07  5.18e+06         1  4.81e+09  2.78e+11
         P5  1.86e+09    0.0199    0.0358   0.00416   0.00108  2.08e-10         1      57.8
         P6  3.21e+07  0.000344  0.000619  7.19e-05  1.86e-05  3.59e-12    0.0173         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1   1.3e-14  2.35e-14  2.73e-15  7.06e-16  1.36e-22  6.56e-13  3.79e-11
          R  7.67e+13         1       1.8     0.209    0.0541  1.04e-08      50.3  2.91e+03
         P1  4.26e+13     0.555         1     0.116      0.03   5.8e-09      27.9  1.62e+03
         P2  3.66e+14      4.78       8.6         1     0.259  4.99e-08       240  1.39e+04
         P3  1.42e+15      18.5      33.3      3.87         1  1.93e-07       930  5.38e+04
         P4  7.34e+21  9.57e+07  1.72e+08     2e+07  5.18e+06         1  4.81e+09  2.78e+11
         P5  1.52e+12    0.0199    0.0358   0.00416   0.00108  2.08e-10         1      57.8
         P6  2.64e+10  0.000344  0.000619  7.19e-05  1.86e-05  3.59e-12    0.0173         1
   MasterEquation::set:  done, cpu time[sec] = 1.26843, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 1600 K
            Well    Collision, 1/sec
              W1         2.16846e+08
      global relaxation matrix dimension = 303
      setting global matrices ... done, cpu time[sec] = 0.190695, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.92463, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            85425.4      25064.1      8252.42      9230.74      1161.87      94830.3      16063.2
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.57e-06  2.81e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0     1e-07  2.81e-06        -1
         *Z       ---       ---  2.65e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.8064e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999997  2.80169e-06  2.12956e-06  5.28111e-07  1.64942e-08  1.04841e-07  3.20753e-09  1.94341e-08  4.05187e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.46629, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 1600 K
            Well    Collision, 1/sec
              W1         6.50539e+08
      global relaxation matrix dimension = 303
      setting global matrices ... done, cpu time[sec] = 0.190255, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.96172, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            28475.1      8354.69      2750.81      3076.91      387.291      31610.1      5354.39
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.12e-06   2.2e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.08e-08   2.2e-06        -1
         *Z       ---       ---  2.65e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.19911e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999998  2.19542e-06   1.7542e-06  3.49101e-07  1.13349e-08   5.8575e-08  1.98993e-09   2.0175e-08  4.05843e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.70579, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 1600 K
            Well    Collision, 1/sec
              W1         1.08423e+09
      global relaxation matrix dimension = 303
      setting global matrices ... done, cpu time[sec] = 0.19019, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.03629, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            17085.1      5012.81      1650.48      1846.15      232.375      18966.1      3212.63
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.45e-06  1.92e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   7.2e-08  1.92e-06         1
         *Z       ---       ---  2.65e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.92266e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999998  1.91944e-06  1.56272e-06  2.80083e-07  9.51483e-09  4.50389e-08  1.60559e-09  2.04312e-08  4.06516e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.5794, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 1600 K
            Well    Collision, 1/sec
              W1         1.51792e+09
      global relaxation matrix dimension = 303
      setting global matrices ... done, cpu time[sec] = 0.190539, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.05565, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            12203.6      3580.58      1178.92      1318.68      165.982      13547.2      2294.74
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.02e-06  1.75e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.63e-08  1.75e-06         1
         *Z       ---       ---  2.65e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.74565e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999998  1.74272e-06  1.43426e-06  2.40143e-07  8.46135e-09  3.79095e-08  1.39447e-09   2.0515e-08    4.072e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.60287, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 1600 K
            Well    Collision, 1/sec
              W1         1.95162e+09
      global relaxation matrix dimension = 303
      setting global matrices ... done, cpu time[sec] = 0.190738, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.05616, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            9491.71       2784.9      916.936      1025.64      129.097      10536.7       1784.8
      eigenvector populations normalized:
          L        *R        *P        W1
          0   4.7e-06  1.62e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   6.2e-08  1.62e-06        -1
         *Z       ---       ---  2.65e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.61697e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999998  1.61425e-06  1.33823e-06  2.13143e-07  7.73943e-09  3.33264e-08  1.25462e-09  2.05163e-08  4.07891e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.60278, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 1600 K
            Well    Collision, 1/sec
              W1         2.16846e+09
      global relaxation matrix dimension = 303
      setting global matrices ... done, cpu time[sec] = 0.190884, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.08481, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            8542.54      2506.41      825.242      923.074      116.187      9483.03      1606.32
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.57e-06  1.56e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.03e-08  1.56e-06         1
         *Z       ---       ---  2.65e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.56405e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999998  1.56143e-06  1.29814e-06  2.02527e-07  7.45195e-09  3.15701e-08  1.20003e-09  2.04986e-08  4.08238e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.63186, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 1600 K
            Well    Collision, 1/sec
              W1         3.25269e+09
      global relaxation matrix dimension = 303
      setting global matrices ... done, cpu time[sec] = 0.190966, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.11692, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            5695.03      1670.94      550.161      615.383      77.4582      6322.02      1070.88
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.08e-06  1.37e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.37e-08  1.37e-06        -1
         *Z       ---       ---  2.65e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.36691e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999999  1.36462e-06  1.14583e-06  1.65399e-07   6.4225e-09  2.56032e-08  1.00967e-09  2.03154e-08  4.09976e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.66405, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 1600 K
            Well    Collision, 1/sec
              W1         4.33693e+09
      global relaxation matrix dimension = 303
      setting global matrices ... done, cpu time[sec] = 0.191182, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.15035, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            4271.27       1253.2      412.621      461.537      58.0937      4741.51      803.159
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.74e-06  1.23e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.93e-08  1.23e-06         1
         *Z       ---       ---  2.65e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.23401e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999999  1.23194e-06   1.0407e-06  1.42455e-07  5.76035e-09  2.20316e-08  8.91451e-10  2.00622e-08  4.11697e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.69606, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 1600 K
            Well    Collision, 1/sec
              W1         5.42116e+09
      global relaxation matrix dimension = 303
      setting global matrices ... done, cpu time[sec] = 0.191763, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.13765, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            3417.02      1002.56      330.097       369.23      46.4749      3793.21      642.527
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.49e-06  1.14e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   4.6e-08  1.14e-06        -1
         *Z       ---       ---  2.65e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.13534e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999999  1.13343e-06  9.61461e-07  1.26465e-07  5.28256e-09  1.95839e-08  8.08187e-10  1.97888e-08  4.13381e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.68442, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 1600 K
            Well    Collision, 1/sec
              W1         6.50539e+09
      global relaxation matrix dimension = 303
      setting global matrices ... done, cpu time[sec] = 0.190696, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.18127, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2847.51      835.469      275.081      307.691      38.7291      3161.01      535.439
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.29e-06  1.06e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.33e-08  1.06e-06         1
         *Z       ---       ---  2.65e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.05775e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999999  1.05597e-06  8.98491e-07  1.14499e-07  4.91406e-09  1.77701e-08  7.45135e-10  1.95134e-08  4.15018e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.72801, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 1600 K
            Well    Collision, 1/sec
              W1         7.58962e+09
      global relaxation matrix dimension = 303
      setting global matrices ... done, cpu time[sec] = 0.190729, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.20411, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2440.73      716.116      235.783      263.735      33.1964      2709.44      458.948
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.12e-06  9.94e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.11e-08  9.94e-07        -1
         *Z       ---       ---  2.65e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 9.94372e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999999  9.92703e-07  8.46637e-07  1.05113e-07  4.61718e-09  1.63558e-08  6.95073e-10  1.92435e-08  4.16601e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.75083, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 1600 K
            Well    Collision, 1/sec
              W1         8.67385e+09
      global relaxation matrix dimension = 303
      setting global matrices ... done, cpu time[sec] = 0.191449, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.22265, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2135.64      626.602      206.311      230.769      29.0468      2370.76      401.579
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.98e-06  9.41e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.93e-08  9.41e-07         1
         *Z       ---       ---  2.65e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 9.41165e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999999  9.39585e-07  8.02827e-07  9.74972e-08  4.37051e-09  1.52125e-08  6.53976e-10   1.8982e-08  4.18127e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.77025, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1700 K
      Energy reference = 51981 1/cm
      Energy step      = 283 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -67.9 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.006534
         W1 Well: collisional kernel bandwidth = 29
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.173862
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.124501
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.132403
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.522706
         W1 Well: minimal relaxation eigenvalue = 0.0126476
         W1 Well: maximal relaxation eigenvalue = 2.20657
         W1 Well:       grid size = 296
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31786 1/cm
         B1 Barrier:        grid size = 184
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -90 1/cm
         B2 Barrier:        grid size = 183
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 192 1/cm
         B3 Barrier:        grid size = 200
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4619 1/cm
         B4 Barrier:        grid size = 206
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6316 1/cm
         B5 Barrier: nonpositive number of states at -23297 1/cm => truncating
         B5 Barrier:        grid size = 266
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23297 1/cm
         B6 Barrier:        grid size = 179
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1324 1/cm
         B7 Barrier:        grid size = 168
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4437 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.22971, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31786 -23297 3.85e+05 1.77e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -90 1.22e+17
         B2    193 3.83e+16
         B3  -4619 1.32e+16
         B4  -6316 1.46e+16
         B5 -23297 1.86e+15
         B6   1325 1.43e+17
         B7   4438 2.56e+16
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1   1.9e-12  3.46e-12  5.01e-13  1.42e-13  7.22e-20  8.42e-11  4.15e-09
          R  5.27e+11         1      1.82     0.264    0.0747  3.81e-08      44.4  2.19e+03
         P1  2.89e+11     0.549         1     0.145     0.041  2.09e-08      24.3   1.2e+03
         P2     2e+12      3.79      6.91         1     0.283  1.44e-07       168  8.28e+03
         P3  7.05e+12      13.4      24.4      3.53         1   5.1e-07       594  2.93e+04
         P4  1.38e+19  2.63e+07  4.79e+07  6.94e+06  1.96e+06         1  1.17e+09  5.74e+10
         P5  1.19e+10    0.0225    0.0411   0.00595   0.00168  8.58e-10         1      49.3
         P6  2.41e+08  0.000457  0.000834  0.000121  3.42e-05  1.74e-11    0.0203         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.45e-15  4.47e-15  6.47e-16  1.83e-16  9.33e-23  1.09e-13  5.36e-12
          R  4.08e+14         1      1.82     0.264    0.0747  3.81e-08      44.4  2.19e+03
         P1  2.24e+14     0.549         1     0.145     0.041  2.09e-08      24.3   1.2e+03
         P2  1.55e+15      3.79      6.91         1     0.283  1.44e-07       168  8.28e+03
         P3  5.46e+15      13.4      24.4      3.53         1   5.1e-07       594  2.93e+04
         P4  1.07e+22  2.63e+07  4.79e+07  6.94e+06  1.96e+06         1  1.17e+09  5.74e+10
         P5   9.2e+12    0.0225    0.0411   0.00595   0.00168  8.58e-10         1      49.3
         P6  1.87e+11  0.000457  0.000834  0.000121  3.42e-05  1.74e-11    0.0203         1
   MasterEquation::set:  done, cpu time[sec] = 1.24081, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 1700 K
            Well    Collision, 1/sec
              W1         2.08281e+08
      global relaxation matrix dimension = 296
      setting global matrices ... done, cpu time[sec] = 0.182503, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.77488, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
              99372      31178.3      10727.7        11881      1515.75       116280      20818.1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.98e-05  1.18e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.86e-07  1.18e-05         1
         *Z       ---       ---   1.2e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.17762e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999988  1.17579e-05  8.97657e-06  2.17782e-06  6.87093e-08  4.29084e-07  1.32442e-08  9.22129e-08  2.41515e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.3113, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 1700 K
            Well    Collision, 1/sec
              W1         6.24842e+08
      global relaxation matrix dimension = 296
      setting global matrices ... done, cpu time[sec] = 0.182234, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.80688, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
              33124      10392.8      3575.91      3960.33       505.25      38759.9      6939.37
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.45e-05   9.4e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.16e-07   9.4e-06        -1
         *Z       ---       ---   1.2e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 9.40166e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999991  9.38701e-06  7.52313e-06  1.46585e-06  4.83353e-08  2.45239e-07  8.41797e-09  9.57918e-08  2.41879e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.34344, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 1700 K
            Well    Collision, 1/sec
              W1          1.0414e+09
      global relaxation matrix dimension = 296
      setting global matrices ... done, cpu time[sec] = 0.182397, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.85045, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            19874.4      6235.67      2145.55       2376.2       303.15      23255.9      4163.62
      eigenvector populations normalized:
          L        *R        *P        W1
          0   2.2e-05   8.3e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.84e-07   8.3e-06         1
         *Z       ---       ---   1.2e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 8.3047e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999992  8.29176e-06  6.76728e-06  1.18823e-06  4.10724e-08  1.90876e-07  6.87887e-09  9.71825e-08  2.42251e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.38758, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 1700 K
            Well    Collision, 1/sec
              W1         1.45797e+09
      global relaxation matrix dimension = 296
      setting global matrices ... done, cpu time[sec] = 0.18297, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.8727, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
              14196      4454.05      1532.53      1697.28      216.536      16611.4      2974.01
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.04e-05   7.6e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.63e-07   7.6e-06         1
         *Z       ---       ---   1.2e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 7.59595e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999992  7.58411e-06  6.25473e-06  1.02644e-06  3.68394e-08  1.62053e-07  6.02782e-09  9.77738e-08  2.42628e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.40936, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 1700 K
            Well    Collision, 1/sec
              W1         1.87453e+09
      global relaxation matrix dimension = 296
      setting global matrices ... done, cpu time[sec] = 0.182095, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.90428, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            11041.3      3464.26      1191.97      1320.11      168.417        12920      2313.12
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.92e-05  7.08e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.48e-07  7.08e-06        -1
         *Z       ---       ---   1.2e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 7.07722e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999993  7.06619e-06  5.86867e-06  9.16494e-07  3.39226e-08  1.43429e-07  5.46119e-09   9.7971e-08  2.43008e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.44027, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 1700 K
            Well    Collision, 1/sec
              W1         2.08281e+09
      global relaxation matrix dimension = 296
      setting global matrices ... done, cpu time[sec] = 0.182777, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.89031, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             9937.2      3117.83      1072.77       1188.1      151.575        11628      2081.81
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.87e-05  6.86e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.41e-07  6.86e-06        -1
         *Z       ---       ---   1.2e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 6.86301e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999993  6.85232e-06  5.70671e-06  8.73116e-07  3.27569e-08  1.36268e-07  5.23923e-09  9.79795e-08  2.43199e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.42687, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 1700 K
            Well    Collision, 1/sec
              W1         3.12421e+09
      global relaxation matrix dimension = 296
      setting global matrices ... done, cpu time[sec] = 0.182484, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.95098, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             6624.8      2078.56      715.182      792.065       101.05      7751.98      1387.87
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.69e-05  6.06e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.17e-07  6.06e-06         1
         *Z       ---       ---   1.2e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 6.0598e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999994  6.05036e-06  5.08711e-06  7.20628e-07  2.85597e-08  1.11818e-07  4.46125e-09  9.75341e-08  2.44152e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.48682, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 1700 K
            Well    Collision, 1/sec
              W1         4.16562e+09
      global relaxation matrix dimension = 296
      setting global matrices ... done, cpu time[sec] = 0.182584, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.90773, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             4968.6      1558.92      536.387      594.049      75.7876      5813.98      1040.91
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.56e-05  5.51e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0     2e-07  5.51e-06        -1
         *Z       ---       ---   1.2e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 5.51329e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999994   5.5047e-06  4.65519e-06   6.2568e-07  2.58376e-08  9.70706e-08  3.97429e-09  9.66958e-08  2.45096e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.44386, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 1700 K
            Well    Collision, 1/sec
              W1         5.20702e+09
      global relaxation matrix dimension = 296
      setting global matrices ... done, cpu time[sec] = 0.182484, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.96676, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            3974.88      1247.13      429.109      475.239        60.63      4651.19      832.724
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.46e-05   5.1e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.88e-07   5.1e-06        -1
         *Z       ---       ---   1.2e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 5.10457e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999995  5.09661e-06  4.32715e-06  5.59108e-07  2.38603e-08  8.69021e-08  3.62916e-09  9.57126e-08  2.46019e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.50189, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 1700 K
            Well    Collision, 1/sec
              W1         6.24842e+09
      global relaxation matrix dimension = 296
      setting global matrices ... done, cpu time[sec] = 0.183063, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.98727, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             3312.4      1039.28      357.591      396.033       50.525      3875.99      693.937
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.38e-05  4.78e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.78e-07  4.78e-06        -1
         *Z       ---       ---   1.2e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.78127e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999995  4.77382e-06  4.06483e-06  5.09041e-07  2.23267e-08  7.93285e-08   3.3664e-09  9.46803e-08  2.46918e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.52245, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 1700 K
            Well    Collision, 1/sec
              W1         7.28983e+09
      global relaxation matrix dimension = 296
      setting global matrices ... done, cpu time[sec] = 0.183135, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.00058, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             2839.2       890.81      306.507      339.457      43.3072      3322.28      594.803
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.32e-05  4.52e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.69e-07  4.52e-06        -1
         *Z       ---       ---   1.2e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.51582e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999995  4.50879e-06  3.84767e-06  4.69592e-07  2.10851e-08  7.33964e-08   3.1568e-09  9.36417e-08  2.47789e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.53796, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 1700 K
            Well    Collision, 1/sec
              W1         8.33123e+09
      global relaxation matrix dimension = 296
      setting global matrices ... done, cpu time[sec] = 0.182656, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.98948, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             2484.3      779.458      268.193      297.024      37.8938      2906.99      520.453
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.26e-05  4.29e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.62e-07  4.29e-06         1
         *Z       ---       ---   1.2e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.29196e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999996  4.28527e-06  3.66333e-06  4.37458e-07   2.0049e-08  6.85818e-08  2.98402e-09  9.26171e-08  2.48631e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.52574, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1800 K
      Energy reference = 54761 1/cm
      Energy step      = 300 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -65.8 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.006235
         W1 Well: collisional kernel bandwidth = 28
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.163839
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.119374
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.126217
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.480027
         W1 Well: minimal relaxation eigenvalue = 0.012268
         W1 Well: maximal relaxation eigenvalue = 1.37452
         W1 Well:       grid size = 288
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31639 1/cm
         B1 Barrier:        grid size = 183
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -139 1/cm
         B2 Barrier:        grid size = 182
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 160 1/cm
         B3 Barrier:        grid size = 198
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4639 1/cm
         B4 Barrier:        grid size = 204
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6439 1/cm
         B5 Barrier: nonpositive number of states at -23239 1/cm => truncating
         B5 Barrier:        grid size = 260
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23239 1/cm
         B6 Barrier:        grid size = 178
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1360 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4660 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.16498, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31639 -23239 4.02e+05 2.51e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -139 1.91e+17
         B2    161 6.37e+16
         B3  -4639  2.3e+16
         B4  -6439 2.52e+16
         B5 -23239 3.25e+15
         B6   1361 2.34e+17
         B7   4661 4.41e+16
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  4.07e-13  7.52e-13  1.32e-13  4.05e-14  4.89e-20  1.61e-11  6.87e-10
          R  2.46e+12         1      1.85     0.324    0.0995   1.2e-07      39.5  1.69e+03
         P1  1.33e+12     0.542         1     0.176    0.0539   6.5e-08      21.4       915
         P2  7.57e+12      3.08      5.69         1     0.307   3.7e-07       122  5.21e+03
         P3  2.47e+13      10.1      18.6      3.26         1  1.21e-06       397   1.7e+04
         P4  2.05e+19  8.33e+06  1.54e+07   2.7e+06  8.29e+05         1  3.29e+08  1.41e+10
         P5  6.22e+10    0.0253    0.0468   0.00821   0.00252  3.04e-09         1      42.8
         P6  1.45e+09  0.000592   0.00109  0.000192  5.89e-05  7.11e-11    0.0234         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  5.57e-16  1.03e-15  1.81e-16  5.54e-17  6.69e-23   2.2e-14  9.42e-13
          R  1.79e+15         1      1.85     0.324    0.0995   1.2e-07      39.5  1.69e+03
         P1  9.71e+14     0.542         1     0.176    0.0539   6.5e-08      21.4       915
         P2  5.53e+15      3.08      5.69         1     0.307   3.7e-07       122  5.21e+03
         P3   1.8e+16      10.1      18.6      3.26         1  1.21e-06       397   1.7e+04
         P4  1.49e+22  8.33e+06  1.54e+07   2.7e+06  8.29e+05         1  3.29e+08  1.41e+10
         P5  4.54e+13    0.0253    0.0468   0.00821   0.00252  3.04e-09         1      42.8
         P6  1.06e+12  0.000592   0.00109  0.000192  5.89e-05  7.11e-11    0.0234         1
   MasterEquation::set:  done, cpu time[sec] = 1.17613, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 1800 K
            Well    Collision, 1/sec
              W1         2.00556e+08
      global relaxation matrix dimension = 288
      setting global matrices ... done, cpu time[sec] = 0.1725, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.65839, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             113703        38012      13695.3      15030.8       1941.4       139752      26312.7
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.65e-05  4.11e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.23e-06  4.11e-05         1
         *Z       ---       ---  6.02e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.11006e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999959  4.10202e-05  3.14513e-05  7.45814e-06  2.38489e-07  1.46476e-06  4.55965e-08  3.60723e-07   1.1621e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.15216, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 1800 K
            Well    Collision, 1/sec
              W1         6.01667e+08
      global relaxation matrix dimension = 288
      setting global matrices ... done, cpu time[sec] = 0.171452, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.73877, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            37901.1      12670.7      4565.11      5010.25      647.133      46583.9      8770.91
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.07e-05  3.34e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.03e-06  3.34e-05         1
         *Z       ---       ---  6.02e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 3.33745e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999967  3.33093e-05  2.67691e-05  5.10882e-06  1.71324e-07  8.54379e-07  2.96185e-08  3.74848e-07  1.16375e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.22767, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 1800 K
            Well    Collision, 1/sec
              W1         1.00278e+09
      global relaxation matrix dimension = 288
      setting global matrices ... done, cpu time[sec] = 0.172481, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.76882, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            22740.7       7602.4      2739.06      3006.15       388.28      27950.3      5262.55
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.32e-05  2.98e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.31e-07  2.98e-05        -1
         *Z       ---       ---  6.02e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.97551e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1      0.99997  2.96969e-05  2.42895e-05  4.18148e-06  1.47185e-07  6.72305e-07  2.44814e-08  3.80839e-07  1.16542e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.26122, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 1800 K
            Well    Collision, 1/sec
              W1         1.40389e+09
      global relaxation matrix dimension = 288
      setting global matrices ... done, cpu time[sec] = 0.172192, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.77637, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            16243.3      5430.28      1956.47      2147.25      277.343      19964.5      3758.96
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.82e-05  2.74e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.67e-07  2.74e-05         1
         *Z       ---       ---  6.02e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.73971e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999973  2.73435e-05  2.25913e-05  3.63736e-06  1.33035e-07   5.7523e-07  2.16253e-08  3.83786e-07  1.16711e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.26886, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 1800 K
            Well    Collision, 1/sec
              W1           1.805e+09
      global relaxation matrix dimension = 288
      setting global matrices ... done, cpu time[sec] = 0.173217, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.81324, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            12633.7      4223.55       1521.7      1670.08      215.711        15528      2923.64
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.46e-05  2.57e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   8.2e-07  2.57e-05         1
         *Z       ---       ---  6.02e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.56605e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999974  2.56104e-05  2.13031e-05   3.2657e-06  1.23241e-07  5.12233e-07  1.97155e-08  3.85194e-07  1.16881e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.30735, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 1800 K
            Well    Collision, 1/sec
              W1         2.00556e+09
      global relaxation matrix dimension = 288
      setting global matrices ... done, cpu time[sec] = 0.172931, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.80869, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            11370.3       3801.2      1369.53      1503.08       194.14      13975.2      2631.27
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.31e-05  2.49e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0     8e-07  2.49e-05        -1
         *Z       ---       ---  6.02e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.49406e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999975  2.48918e-05  2.07603e-05   3.1186e-06  1.19314e-07  4.87941e-07  1.89652e-08  3.85537e-07  1.16966e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.30223, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 1800 K
            Well    Collision, 1/sec
              W1         3.00833e+09
      global relaxation matrix dimension = 288
      setting global matrices ... done, cpu time[sec] = 0.173004, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.84975, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            7580.23      2534.13      913.021      1002.05      129.427      9316.78      1754.18
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.73e-05  2.22e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.25e-07  2.22e-05         1
         *Z       ---       ---  6.02e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22254e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999978  2.21819e-05  1.86704e-05  2.59902e-06  1.05108e-07  4.04639e-07  1.63238e-08  3.85235e-07  1.17391e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.34237, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 1800 K
            Well    Collision, 1/sec
              W1         4.01111e+09
      global relaxation matrix dimension = 288
      setting global matrices ... done, cpu time[sec] = 0.173235, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.79239, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            5685.17       1900.6      684.766      751.538        97.07      6987.59      1315.64
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.32e-05  2.04e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.73e-07  2.04e-05        -1
         *Z       ---       ---  6.02e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.03623e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1      0.99998  2.03225e-05  1.72003e-05  2.27323e-06  9.58296e-08  3.54067e-07  1.46594e-08   3.8321e-07   1.1781e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.28485, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 1800 K
            Well    Collision, 1/sec
              W1         5.01389e+09
      global relaxation matrix dimension = 288
      setting global matrices ... done, cpu time[sec] = 0.172689, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.87026, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            4548.14      1520.48      547.813       601.23       77.656      5590.07      1052.51
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.02e-05   1.9e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.34e-07   1.9e-05         1
         *Z       ---       ---  6.02e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.89599e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999981  1.89228e-05   1.6076e-05  2.04355e-06  8.90504e-08  3.19012e-07  1.34733e-08   3.8046e-07  1.18221e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.36183, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 1800 K
            Well    Collision, 1/sec
              W1         6.01667e+09
      global relaxation matrix dimension = 288
      setting global matrices ... done, cpu time[sec] = 0.172227, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.89291, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            3790.11      1267.07      456.511      501.025      64.7133      4658.39      877.091
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.77e-05  1.78e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.02e-07  1.78e-05         1
         *Z       ---       ---  6.02e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.78445e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999982  1.78096e-05  1.51719e-05  1.87002e-06  8.37667e-08  2.92786e-07  1.25661e-08  3.77389e-07  1.18622e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.38487, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 1800 K
            Well    Collision, 1/sec
              W1         7.01944e+09
      global relaxation matrix dimension = 288
      setting global matrices ... done, cpu time[sec] = 0.172846, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.90912, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            3248.67      1086.06      391.295       429.45      55.4686      3992.91      751.793
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.56e-05  1.69e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.76e-07  1.69e-05        -1
         *Z       ---       ---  6.02e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.69245e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999983  1.68914e-05  1.44198e-05  1.73274e-06  7.94707e-08  2.72163e-07  1.18395e-08  3.74188e-07   1.1901e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.40222, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 1800 K
            Well    Collision, 1/sec
              W1         8.02222e+09
      global relaxation matrix dimension = 288
      setting global matrices ... done, cpu time[sec] = 0.173174, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.91567, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2842.59        950.3      342.383      375.769       48.535      3493.79      657.818
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.39e-05  1.61e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.54e-07  1.61e-05        -1
         *Z       ---       ---  6.02e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.61454e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999984  1.61138e-05  1.37787e-05  1.62053e-06  7.58719e-08  2.55368e-07  1.12383e-08  3.70954e-07  1.19386e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.40859, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1900 K
      Energy reference = 57541 1/cm
      Energy step      = 317 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -63.6 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.006458
         W1 Well: collisional kernel bandwidth = 28
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.15883
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.112951
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.118101
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.475259
         W1 Well: minimal relaxation eigenvalue = 0.0119231
         W1 Well: maximal relaxation eigenvalue = 3.78525
         W1 Well:       grid size = 282
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31853 1/cm
         B1 Barrier:        grid size = 182
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -152 1/cm
         B2 Barrier:        grid size = 181
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 163 1/cm
         B3 Barrier:        grid size = 197
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4907 1/cm
         B4 Barrier: nonpositive number of states at -6176 1/cm => truncating
         B4 Barrier:        grid size = 201
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6176 1/cm
         B5 Barrier: nonpositive number of states at -23611 1/cm => truncating
         B5 Barrier:        grid size = 256
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23611 1/cm
         B6 Barrier:        grid size = 177
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1432 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4602 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.13701, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31853 -23611 3.06e+05 3.52e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -152 2.91e+17
         B2    164 1.03e+17
         B3  -4907 3.91e+16
         B4  -6176 4.25e+16
         B5 -23611 5.56e+15
         B6   1433 3.75e+17
         B7   4603 7.39e+16
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.03e-13  1.93e-13  4.01e-14  1.32e-14  3.45e-20  3.65e-12  1.37e-10
          R  9.72e+12         1      1.87      0.39     0.128  3.35e-07      35.5  1.33e+03
         P1  5.19e+12     0.534         1     0.208    0.0687  1.79e-07        19       713
         P2  2.49e+13      2.57       4.8         1      0.33   8.6e-07        91  3.42e+03
         P3  7.56e+13      7.79      14.6      3.03         1  2.61e-06       276  1.04e+04
         P4   2.9e+19  2.98e+06  5.58e+06  1.16e+06  3.83e+05         1  1.06e+08  3.98e+09
         P5  2.74e+11    0.0282    0.0527     0.011   0.00362  9.45e-09         1      37.6
         P6  7.28e+09  0.000749    0.0014  0.000292  9.62e-05  2.51e-10    0.0266         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.49e-16  2.79e-16   5.8e-17  1.91e-17  4.99e-23  5.28e-15  1.99e-13
          R  6.71e+15         1      1.87      0.39     0.128  3.35e-07      35.5  1.33e+03
         P1  3.59e+15     0.534         1     0.208    0.0687  1.79e-07        19       713
         P2  1.72e+16      2.57       4.8         1      0.33   8.6e-07        91  3.42e+03
         P3  5.23e+16      7.79      14.6      3.03         1  2.61e-06       276  1.04e+04
         P4     2e+22  2.98e+06  5.58e+06  1.16e+06  3.83e+05         1  1.06e+08  3.98e+09
         P5  1.89e+14    0.0282    0.0527     0.011   0.00362  9.45e-09         1      37.6
         P6  5.03e+12  0.000749    0.0014  0.000292  9.62e-05  2.51e-10    0.0266         1
   MasterEquation::set:  done, cpu time[sec] = 1.14851, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 1900 K
            Well    Collision, 1/sec
              W1         1.93541e+08
      global relaxation matrix dimension = 282
      setting global matrices ... done, cpu time[sec] = 0.167032, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.56822, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             128246      45534.8      17204.1      18725.5      2446.19       165052      32541.3
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000265  0.000123         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.38e-06  0.000123         1
         *Z       ---       ---  3.29e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000122892
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999877   0.00012268   9.4374e-05  2.19622e-05  7.10306e-07  4.29306e-06  1.34754e-07  1.20063e-06  4.67052e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.04562, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 1900 K
            Well    Collision, 1/sec
              W1         5.80624e+08
      global relaxation matrix dimension = 282
      setting global matrices ... done, cpu time[sec] = 0.165859, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.61029, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            42748.8      15178.3      5734.69      6241.83      815.398      55017.5      10847.1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000225  0.000101         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.85e-06  0.000101         1
         *Z       ---       ---  3.29e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000101313
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999899  0.000101138  8.14532e-05  1.52714e-05  5.20132e-07  2.55135e-06  8.93014e-08  1.24787e-06  4.67674e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.08057, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 1900 K
            Well    Collision, 1/sec
              W1         9.67706e+08
      global relaxation matrix dimension = 282
      setting global matrices ... done, cpu time[sec] = 0.164866, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.6501, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            25649.3      9106.96      3440.81       3745.1      489.239      33010.5      6508.25
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000206  9.11e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   2.6e-06  9.11e-05        -1
         *Z       ---       ---  3.29e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 9.10803e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999909  9.09227e-05  7.44889e-05  1.26063e-05  4.51308e-07  2.02776e-06   7.4585e-08  1.26923e-06  4.68303e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.12131, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 1900 K
            Well    Collision, 1/sec
              W1         1.35479e+09
      global relaxation matrix dimension = 282
      setting global matrices ... done, cpu time[sec] = 0.164787, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.65895, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            18320.9      6504.97      2457.72      2675.07      349.456      23578.9      4648.75
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000193  8.44e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.44e-06  8.44e-05        -1
         *Z       ---       ---  3.29e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 8.43643e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999916  8.42183e-05  6.96747e-05  1.10338e-05  4.10771e-07  1.74725e-06  6.63655e-08  1.28074e-06  4.68936e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.13195, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 1900 K
            Well    Collision, 1/sec
              W1         1.74187e+09
      global relaxation matrix dimension = 282
      setting global matrices ... done, cpu time[sec] = 0.163713, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.15619, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            14249.6      5059.42      1911.56      2080.61      271.799      18339.2       3615.7
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000184  7.94e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.31e-06  7.94e-05         1
         *Z       ---       ---  3.29e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 7.93912e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999921  7.92538e-05  6.59987e-05  9.95525e-06  3.82599e-07  1.56453e-06   6.0849e-08  1.28716e-06  4.69572e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.62698, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 1900 K
            Well    Collision, 1/sec
              W1         1.93541e+09
      global relaxation matrix dimension = 282
      setting global matrices ... done, cpu time[sec] = 0.16656, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.68535, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            12824.6      4553.48      1720.41      1872.55      244.619      16505.2      3254.13
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00018  7.73e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.26e-06  7.73e-05        -1
         *Z       ---       ---  3.29e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 7.73222e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999923  7.71884e-05  6.44435e-05   9.5272e-06  3.71275e-07   1.4939e-06  5.86766e-08  1.28917e-06   4.6989e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.15915, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 1900 K
            Well    Collision, 1/sec
              W1         2.90312e+09
      global relaxation matrix dimension = 282
      setting global matrices ... done, cpu time[sec] = 0.166149, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.6984, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            8549.76      3035.65      1146.94      1248.37       163.08      11003.5      2169.42
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000164  6.95e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.07e-06  6.95e-05        -1
         *Z       ---       ---  3.29e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 6.94777e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999931  6.93575e-05  5.84194e-05  8.00922e-06  3.30143e-07  1.25079e-06  5.09995e-08  1.29223e-06  4.71476e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.17168, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 1900 K
            Well    Collision, 1/sec
              W1         3.87082e+09
      global relaxation matrix dimension = 282
      setting global matrices ... done, cpu time[sec] = 0.166801, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.72193, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            6412.32      2276.74      860.204      936.274       122.31      8252.62      1627.06
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000154  6.41e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.93e-06  6.41e-05         1
         *Z       ---       ---  3.29e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 6.40546e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999936  6.39438e-05  5.41466e-05  7.05171e-06   3.0311e-07  1.10236e-06   4.6134e-08  1.28911e-06  4.73041e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.19579, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 1900 K
            Well    Collision, 1/sec
              W1         4.83853e+09
      global relaxation matrix dimension = 282
      setting global matrices ... done, cpu time[sec] = 0.166845, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.73878, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            5129.86      1821.39      688.163      749.019      97.8478       6602.1      1301.65
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000146  5.99e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.82e-06  5.99e-05        -1
         *Z       ---       ---  3.29e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 5.99481e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1      0.99994  5.98444e-05  5.08581e-05  6.37346e-06  2.83259e-07  9.98994e-07  4.26503e-08  1.28317e-06  4.74574e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.21339, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 1900 K
            Well    Collision, 1/sec
              W1         5.80624e+09
      global relaxation matrix dimension = 282
      setting global matrices ... done, cpu time[sec] = 0.166388, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.74893, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            4274.88      1517.83      573.469      624.183      81.5398      5501.75      1084.71
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000139  5.67e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.74e-06  5.67e-05         1
         *Z       ---       ---  3.29e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 5.66664e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999943  5.65683e-05  4.81997e-05  5.85897e-06  2.67721e-07  9.21363e-07  3.99751e-08  1.27582e-06  4.76069e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.22275, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 1900 K
            Well    Collision, 1/sec
              W1         6.77394e+09
      global relaxation matrix dimension = 282
      setting global matrices ... done, cpu time[sec] = 0.166537, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.76518, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            3664.18      1300.99      491.545      535.014      69.8913      4715.78       929.75
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000133  5.39e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.67e-06  5.39e-05         1
         *Z       ---       ---  3.29e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 5.39479e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999946  5.38546e-05  4.59785e-05  5.45057e-06   2.5504e-07   8.6011e-07  3.78248e-08  1.26774e-06  4.77521e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.23913, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 1900 K
            Well    Collision, 1/sec
              W1         7.74165e+09
      global relaxation matrix dimension = 282
      setting global matrices ... done, cpu time[sec] = 0.166267, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.79796, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            3206.16      1138.37      430.102      468.137      61.1549      4126.31      813.531
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000129  5.16e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.61e-06  5.16e-05        -1
         *Z       ---       ---  3.29e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 5.16374e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999948  5.15481e-05  4.40778e-05  5.11571e-06   2.4438e-07  8.10072e-07  3.60401e-08  1.25932e-06   4.7893e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.27218, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2000 K
      Energy reference = 60322 1/cm
      Energy step      = 333 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -61.4 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.006155
         W1 Well: collisional kernel bandwidth = 28
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.154891
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.108734
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.108571
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.434448
         W1 Well: minimal relaxation eigenvalue = 0.011614
         W1 Well: maximal relaxation eigenvalue = 1.32929
         W1 Well:       grid size = 276
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31586 1/cm
         B1 Barrier:        grid size = 182
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -284 1/cm
         B2 Barrier:        grid size = 181
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 48 1/cm
         B3 Barrier:        grid size = 195
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4613 1/cm
         B4 Barrier:        grid size = 200
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6278 1/cm
         B5 Barrier: nonpositive number of states at -23595 1/cm => truncating
         B5 Barrier:        grid size = 252
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23594 1/cm
         B6 Barrier:        grid size = 177
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1380 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4710 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.07876, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31586 -23594  3.1e+05  4.9e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -284 4.37e+17
         B2     49 1.64e+17
         B3  -4613 6.51e+16
         B4  -6278 7.03e+16
         B5 -23594 9.28e+15
         B6   1381 5.87e+17
         B7   4711 1.21e+17
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1     3e-14  5.69e-14  1.38e-14  4.85e-15  2.53e-20  9.63e-13  3.23e-11
          R  3.33e+13         1       1.9      0.46     0.162  8.45e-07      32.1  1.08e+03
         P1  1.76e+13     0.527         1     0.242    0.0853  4.45e-07      16.9       568
         P2  7.25e+13      2.18      4.13         1     0.352  1.84e-06      69.8  2.34e+03
         P3  2.06e+14      6.19      11.7      2.84         1  5.22e-06       199  6.66e+03
         P4  3.95e+19  1.18e+06  2.24e+06  5.44e+05  1.91e+05         1   3.8e+07  1.27e+09
         P5  1.04e+12    0.0312    0.0591    0.0143   0.00504  2.63e-08         1      33.5
         P6   3.1e+10  0.000929   0.00176  0.000427   0.00015  7.85e-10    0.0298         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  4.56e-17  8.65e-17   2.1e-17  7.37e-18  3.85e-23  1.46e-15  4.91e-14
          R  2.19e+16         1       1.9      0.46     0.162  8.45e-07      32.1  1.08e+03
         P1  1.16e+16     0.527         1     0.242    0.0853  4.45e-07      16.9       568
         P2  4.77e+16      2.18      4.13         1     0.352  1.84e-06      69.8  2.34e+03
         P3  1.36e+17      6.19      11.7      2.84         1  5.22e-06       199  6.66e+03
         P4   2.6e+22  1.18e+06  2.24e+06  5.44e+05  1.91e+05         1   3.8e+07  1.27e+09
         P5  6.83e+14    0.0312    0.0591    0.0143   0.00504  2.63e-08         1      33.5
         P6  2.04e+13  0.000929   0.00176  0.000427   0.00015  7.85e-10    0.0298         1
   MasterEquation::set:  done, cpu time[sec] = 1.09021, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 2000 K
            Well    Collision, 1/sec
              W1         1.87135e+08
      global relaxation matrix dimension = 276
      setting global matrices ... done, cpu time[sec] = 0.159599, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.49558, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             142842      53707.6      21298.1      23009.1      3037.38       191968      39485.1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000631  0.000322         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   8.1e-06  0.000322         1
         *Z       ---       ---  1.94e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000321962
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999679  0.000321446  0.000248283  5.64088e-05   1.8572e-06  1.10475e-05   3.4968e-07  3.48388e-06  1.61188e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.96322, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 2000 K
            Well    Collision, 1/sec
              W1         5.61404e+08
      global relaxation matrix dimension = 276
      setting global matrices ... done, cpu time[sec] = 0.159409, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.5331, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            47614.1      17902.5      7099.37      7669.72      1012.46      63989.5      13161.7
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000544  0.000269         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.94e-06  0.000269         1
         *Z       ---       ---  1.94e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000269289
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999731  0.000268857  0.000217012  3.99088e-05   1.3841e-06  6.67956e-06  2.36055e-07  3.62115e-06  1.61391e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.99806, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 2000 K
            Well    Collision, 1/sec
              W1         9.35673e+08
      global relaxation matrix dimension = 276
      setting global matrices ... done, cpu time[sec] = 0.159127, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.55043, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            28568.4      10741.5      4259.62      4601.83      607.476      38393.7      7897.01
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000502  0.000244         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.38e-06  0.000244        -1
         *Z       ---       ---  1.94e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000243972
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999756  0.000243582  0.000199878  3.32318e-05  1.21202e-06   5.3583e-06  1.99071e-07  3.68656e-06  1.61594e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.01486, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 2000 K
            Well    Collision, 1/sec
              W1         1.30994e+09
      global relaxation matrix dimension = 276
      setting global matrices ... done, cpu time[sec] = 0.158379, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.57503, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
              20406      7672.51      3042.59      3287.02      433.911      27424.1      5640.72
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000474  0.000227         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0     6e-06  0.000227         1
         *Z       ---       ---  1.94e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000227233
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999773  0.000226869  0.000187928  2.92645e-05  1.11025e-06  4.64746e-06  1.78333e-07  3.72416e-06  1.61799e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.04098, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 2000 K
            Well    Collision, 1/sec
              W1         1.68421e+09
      global relaxation matrix dimension = 276
      setting global matrices ... done, cpu time[sec] = 0.158996, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.58255, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            15871.4      5967.51      2366.46      2556.57      337.487      21329.8      4387.23
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000452  0.000215         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.72e-06  0.000215        -1
         *Z       ---       ---  1.94e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000214771
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999786  0.000214427  0.000178746  2.65304e-05  1.03928e-06  4.18287e-06   1.6437e-07  3.74718e-06  1.62004e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.04751, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 2000 K
            Well    Collision, 1/sec
              W1         1.87135e+09
      global relaxation matrix dimension = 276
      setting global matrices ... done, cpu time[sec] = 0.157915, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.58037, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            14284.2      5370.76      2129.81      2300.91      303.738      19196.8      3948.51
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000443   0.00021         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   5.6e-06   0.00021         1
         *Z       ---       ---  1.94e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000209569
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999791  0.000209233  0.000174847   2.5442e-05  1.01069e-06  4.00289e-06   1.5886e-07  3.75517e-06  1.62106e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.04383, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 2000 K
            Well    Collision, 1/sec
              W1         2.80702e+09
      global relaxation matrix dimension = 276
      setting global matrices ... done, cpu time[sec] = 0.158524, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.62485, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            9522.81      3580.51      1419.87      1533.94      202.492      12797.9      2632.34
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000409   0.00019         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.15e-06   0.00019        -1
         *Z       ---       ---  1.94e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000189745
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999811  0.000189441  0.000159657  2.15663e-05  9.06458e-07  3.38131e-06  1.39322e-07  3.77437e-06  1.62617e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.09098, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 2000 K
            Well    Collision, 1/sec
              W1         3.74269e+09
      global relaxation matrix dimension = 276
      setting global matrices ... done, cpu time[sec] = 0.159395, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.6411, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            7142.11      2685.38      1064.91      1150.46      151.869      9598.42      1974.25
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000384  0.000176         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.83e-06  0.000176         1
         *Z       ---       ---  1.94e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000175943
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999824  0.000175661  0.000148799  1.91068e-05  8.37575e-07  2.99986e-06  1.26876e-07  3.77459e-06   1.6312e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.10807, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 2000 K
            Well    Collision, 1/sec
              W1         4.67837e+09
      global relaxation matrix dimension = 276
      setting global matrices ... done, cpu time[sec] = 0.159839, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.6464, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            5713.69       2148.3      851.924      920.366      121.495      7678.74       1579.4
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000366  0.000165         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.58e-06  0.000165         1
         *Z       ---       ---  1.94e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000165434
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999835  0.000165169  0.000140393  1.73565e-05  7.86766e-07  2.73315e-06  1.17928e-07  3.76564e-06  1.63613e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.11364, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 2000 K
            Well    Collision, 1/sec
              W1         5.61404e+09
      global relaxation matrix dimension = 276
      setting global matrices ... done, cpu time[sec] = 0.159359, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.66157, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            4761.41      1790.25      709.937      766.972      101.246      6398.95      1316.17
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000351  0.000157         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.39e-06  0.000157         1
         *Z       ---       ---  1.94e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000156998
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999843  0.000156746  0.000133564  1.60237e-05   7.4684e-07  2.53214e-06  1.11031e-07  3.75178e-06  1.64094e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.12797, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 2000 K
            Well    Collision, 1/sec
              W1         6.54971e+09
      global relaxation matrix dimension = 276
      setting global matrices ... done, cpu time[sec] = 0.159543, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.67791, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            4081.21       1534.5      608.517      657.404      86.7823      5484.81      1128.14
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000338   0.00015         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.22e-06   0.00015         1
         *Z       ---       ---  1.94e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000149982
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1      0.99985  0.000149742  0.000127835  1.49623e-05  7.14144e-07  2.37304e-06   1.0547e-07  3.73513e-06  1.64562e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.14393, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 2000 K
            Well    Collision, 1/sec
              W1         7.48539e+09
      global relaxation matrix dimension = 276
      setting global matrices ... done, cpu time[sec] = 0.159708, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.67726, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            3571.06      1342.69      532.453      575.229      75.9345      4799.21      987.126
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000327  0.000144         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.08e-06  0.000144         1
         *Z       ---       ---  1.94e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000143999
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999856  0.000143768  0.000122915  1.40895e-05  6.86579e-07  2.24272e-06  1.00842e-07  3.71687e-06  1.65017e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.1442, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2100 K
      Energy reference = 63101 1/cm
      Energy step      = 350 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -59.2 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.006261
         W1 Well: collisional kernel bandwidth = 28
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.150511
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.10504
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.111951
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.416975
         W1 Well: minimal relaxation eigenvalue = 0.0113288
         W1 Well: maximal relaxation eigenvalue = 1.66569
         W1 Well:       grid size = 271
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31749 1/cm
         B1 Barrier:        grid size = 181
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -248 1/cm
         B2 Barrier:        grid size = 180
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 100 1/cm
         B3 Barrier:        grid size = 194
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4799 1/cm
         B4 Barrier:        grid size = 198
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6198 1/cm
         B5 Barrier: nonpositive number of states at -23349 1/cm => truncating
         B5 Barrier:        grid size = 247
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23349 1/cm
         B6 Barrier:        grid size = 176
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1501 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4650 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.05459, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31749 -23349 3.71e+05 6.75e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -248 6.42e+17
         B2    101 2.55e+17
         B3  -4799 1.06e+17
         B4  -6198 1.14e+17
         B5 -23349 1.52e+16
         B6   1502 8.99e+17
         B7   4651 1.92e+17
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  9.83e-15  1.89e-14  5.24e-15  1.96e-15  1.91e-20  2.87e-13  8.67e-12
          R  1.02e+14         1      1.92     0.533     0.199  1.95e-06      29.2       882
         P1   5.3e+13     0.521         1     0.278     0.104  1.01e-06      15.2       459
         P2  1.91e+14      1.88       3.6         1     0.373  3.65e-06      54.8  1.65e+03
         P3  5.11e+14      5.03      9.66      2.68         1  9.79e-06       147  4.43e+03
         P4  5.22e+19  5.13e+05  9.87e+05  2.74e+05  1.02e+05         1   1.5e+07  4.53e+08
         P5  3.48e+12    0.0342    0.0657    0.0182   0.00681  6.66e-08         1      30.2
         P6  1.15e+11   0.00113   0.00218  0.000604  0.000225  2.21e-09    0.0331         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.57e-17  3.02e-17  8.37e-18  3.12e-18  3.06e-23  4.59e-16  1.38e-14
          R  6.37e+16         1      1.92     0.533     0.199  1.95e-06      29.2       882
         P1  3.32e+16     0.521         1     0.278     0.104  1.01e-06      15.2       459
         P2   1.2e+17      1.88       3.6         1     0.373  3.65e-06      54.8  1.65e+03
         P3   3.2e+17      5.03      9.66      2.68         1  9.79e-06       147  4.43e+03
         P4  3.27e+22  5.13e+05  9.87e+05  2.74e+05  1.02e+05         1   1.5e+07  4.53e+08
         P5  2.18e+15    0.0342    0.0657    0.0182   0.00681  6.66e-08         1      30.2
         P6  7.22e+13   0.00113   0.00218  0.000604  0.000225  2.21e-09    0.0331         1
   MasterEquation::set:  done, cpu time[sec] = 1.06636, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 2100 K
            Well    Collision, 1/sec
              W1         1.81253e+08
      global relaxation matrix dimension = 271
      setting global matrices ... done, cpu time[sec] = 0.152997, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.44235, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             157349      62484.3      25981.7      27924.1      3722.02       220276      47114.7
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00133  0.000754         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.74e-05  0.000754         1
         *Z       ---       ---  1.22e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000754342
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999247  0.000753265  0.000583277  0.000130392  4.34132e-06  2.54023e-05  8.11104e-07   8.9916e-06  4.88499e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.89165, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 2100 K
            Well    Collision, 1/sec
              W1         5.43759e+08
      global relaxation matrix dimension = 271
      setting global matrices ... done, cpu time[sec] = 0.154234, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.4866, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            52449.6      20828.1      8660.56      9308.03      1240.67      73425.3      15704.9
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00117  0.000639         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.51e-05  0.000639        -1
         *Z       ---       ---  1.22e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000638939
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999362  0.000638027   0.00051579  9.33782e-05  3.28966e-06   1.5616e-05  5.57331e-07  9.34685e-06  4.89085e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.92538, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 2100 K
            Well    Collision, 1/sec
              W1         9.06265e+08
      global relaxation matrix dimension = 271
      setting global matrices ... done, cpu time[sec] = 0.15387, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.48809, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            31469.7      12496.9      5196.33      5584.82      744.403      44055.2      9422.94
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00108  0.000583         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.4e-05  0.000583        -1
         *Z       ---       ---  1.22e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000582932
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999418    0.0005821  0.000478193  7.83182e-05  2.90531e-06   1.2637e-05  4.74293e-07  9.52294e-06  4.89669e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.92631, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 2100 K
            Well    Collision, 1/sec
              W1         1.26877e+09
      global relaxation matrix dimension = 271
      setting global matrices ... done, cpu time[sec] = 0.153937, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.52067, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            22478.4      8926.33      3711.67      3989.16      531.716        31468      6730.67
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00103  0.000546         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.32e-05  0.000546         1
         *Z       ---       ---  1.22e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000545671
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999455  0.000544892  0.000451748  6.93331e-05  2.67719e-06  1.10282e-05  4.27573e-07  9.62898e-06  4.90253e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.9592, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 2100 K
            Well    Collision, 1/sec
              W1         1.63128e+09
      global relaxation matrix dimension = 271
      setting global matrices ... done, cpu time[sec] = 0.153959, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.52506, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            17483.2       6942.7      2886.85      3102.68      413.557      24475.1      5234.97
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000985  0.000518         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.26e-05  0.000518        -1
         *Z       ---       ---  1.22e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0005178
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999483  0.000517061  0.000431306  6.31204e-05  2.51766e-06  9.97362e-06  3.96028e-07  9.69781e-06  4.90837e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.97566, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 2100 K
            Well    Collision, 1/sec
              W1         1.81253e+09
      global relaxation matrix dimension = 271
      setting global matrices ... done, cpu time[sec] = 0.153152, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.53513, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            15734.9      6248.43      2598.17      2792.41      372.202      22027.6      4711.47
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000967  0.000506         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.24e-05  0.000506         1
         *Z       ---       ---  1.22e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000506131
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999495  0.000505408  0.000422593  6.06422e-05  2.45326e-06  9.56425e-06  3.83556e-07  9.72313e-06  4.91129e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.96992, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 2100 K
            Well    Collision, 1/sec
              W1         2.71879e+09
      global relaxation matrix dimension = 271
      setting global matrices ... done, cpu time[sec] = 0.153584, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.57114, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            10489.9      4165.62      1732.11      1861.61      248.134      14685.1      3140.98
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000898  0.000461         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.14e-05  0.000461         1
         *Z       ---       ---  1.22e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000461466
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999539  0.000460807  0.000388471  5.17884e-05  2.21775e-06  8.14625e-06  3.39205e-07  9.79543e-06  4.92578e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.0059, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 2100 K
            Well    Collision, 1/sec
              W1         3.62506e+09
      global relaxation matrix dimension = 271
      setting global matrices ... done, cpu time[sec] = 0.153361, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.5947, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            7867.43      3124.21      1299.08       1396.2      186.101      11013.8      2355.73
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000849   0.00043         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.08e-05   0.00043         1
         *Z       ---       ---  1.22e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000430166
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1      0.99957  0.000429552  0.000363898  4.61426e-05  2.06135e-06  7.27211e-06  3.10827e-07  9.81678e-06  4.94006e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.03228, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 2100 K
            Well    Collision, 1/sec
              W1         4.53132e+09
      global relaxation matrix dimension = 271
      setting global matrices ... done, cpu time[sec] = 0.154028, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.59581, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            6293.95      2499.37      1039.27      1116.96      148.881      8811.04      1884.59
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000811  0.000406         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.03e-05  0.000406        -1
         *Z       ---       ---  1.22e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000406214
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999594  0.000405634  0.000344768  4.21093e-05  1.94552e-06  6.65863e-06  2.90347e-07  9.81256e-06  4.95404e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.03392, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 2100 K
            Well    Collision, 1/sec
              W1         5.43759e+09
      global relaxation matrix dimension = 271
      setting global matrices ... done, cpu time[sec] = 0.153971, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.61268, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            5244.96      2082.81      866.056      930.803      124.067      7342.53      1570.49
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000781  0.000387         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.86e-06  0.000387         1
         *Z       ---       ---  1.22e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000386905
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999614  0.000386353  0.000329157  3.90281e-05  1.85419e-06  6.19481e-06  2.74513e-07  9.79393e-06  4.96769e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.05082, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 2100 K
            Well    Collision, 1/sec
              W1         6.34385e+09
      global relaxation matrix dimension = 271
      setting global matrices ... done, cpu time[sec] = 0.15425, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.63095, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            4495.68      1785.27      742.333      797.831      106.343       6293.6      1346.13
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000755  0.000371         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.52e-06  0.000371         1
         *Z       ---       ---  1.22e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00037079
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1      0.99963  0.000370261   0.00031601  3.65672e-05  1.77917e-06  5.82671e-06   2.6171e-07  9.76663e-06  4.98098e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.06921, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 2100 K
            Well    Collision, 1/sec
              W1         7.25012e+09
      global relaxation matrix dimension = 271
      setting global matrices ... done, cpu time[sec] = 0.1542, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.6127, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            3933.72      1562.11      649.542      698.102      93.0504       5506.9      1177.87
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000732  0.000357         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.22e-06  0.000357        -1
         *Z       ---       ---  1.22e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000357004
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999644  0.000356494  0.000304681  3.45385e-05  1.71574e-06  5.52443e-06  2.51027e-07  9.73392e-06   4.9939e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.05096, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2200 K
      Energy reference = 65881 1/cm
      Energy step      = 367 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -57 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.006144
         W1 Well: collisional kernel bandwidth = 27
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.143633
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.105093
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.109685
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.403331
         W1 Well: minimal relaxation eigenvalue = 0.0110689
         W1 Well: maximal relaxation eigenvalue = 1.6596
         W1 Well:       grid size = 266
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31741 1/cm
         B1 Barrier:        grid size = 180
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -179 1/cm
         B2 Barrier:        grid size = 179
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 187 1/cm
         B3 Barrier:        grid size = 193
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4950 1/cm
         B4 Barrier:        grid size = 197
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6418 1/cm
         B5 Barrier: nonpositive number of states at -23667 1/cm => truncating
         B5 Barrier:        grid size = 244
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23667 1/cm
         B6 Barrier:        grid size = 176
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1288 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4591 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.03605, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31741 -23667 2.94e+05 9.23e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -179 9.29e+17
         B2    188 3.89e+17
         B3  -4950  1.7e+17
         B4  -6418 1.81e+17
         B5 -23667 2.44e+16
         B6   1289 1.35e+18
         B7   4592    3e+17
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  3.57e-15  6.94e-15  2.18e-15  8.57e-16  1.48e-20  9.56e-14  2.62e-12
          R   2.8e+14         1      1.95      0.61      0.24  4.16e-06      26.8       735
         P1  1.44e+14     0.514         1     0.313     0.123  2.14e-06      13.8       377
         P2  4.59e+14      1.64      3.19         1     0.394  6.82e-06      43.9   1.2e+03
         P3  1.17e+15      4.16       8.1      2.54         1  1.73e-05       112  3.06e+03
         P4  6.74e+19   2.4e+05  4.68e+05  1.47e+05  5.77e+04         1  6.44e+06  1.77e+08
         P5  1.05e+13    0.0373    0.0727    0.0228   0.00897  1.55e-07         1      27.4
         P6  3.82e+11   0.00136   0.00265   0.00083  0.000327  5.66e-09    0.0365         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  5.97e-18  1.16e-17  3.65e-18  1.44e-18  2.49e-23   1.6e-16  4.39e-15
          R  1.67e+17         1      1.95      0.61      0.24  4.16e-06      26.8       735
         P1   8.6e+16     0.514         1     0.313     0.123  2.14e-06      13.8       377
         P2  2.74e+17      1.64      3.19         1     0.394  6.82e-06      43.9   1.2e+03
         P3  6.97e+17      4.16       8.1      2.54         1  1.73e-05       112  3.06e+03
         P4  4.02e+22   2.4e+05  4.68e+05  1.47e+05  5.77e+04         1  6.44e+06  1.77e+08
         P5  6.25e+15    0.0373    0.0727    0.0228   0.00897  1.55e-07         1      27.4
         P6  2.28e+14   0.00136   0.00265   0.00083  0.000327  5.66e-09    0.0365         1
   MasterEquation::set:  done, cpu time[sec] = 1.0474, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 2200 K
            Well    Collision, 1/sec
              W1         1.75828e+08
      global relaxation matrix dimension = 266
      setting global matrices ... done, cpu time[sec] = 0.148306, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.37584, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             171641      71813.7      31329.2      33510.7      4506.93       249747      55391.8
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00254    0.0016         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.41e-05    0.0016    -0.999
         *Z       ---       ---  8.04e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00160359
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.998399   0.00160112   0.00124101  0.000275278  9.18973e-06  5.28281e-05  1.70294e-06  2.09858e-05   1.3235e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.81105, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 2200 K
            Well    Collision, 1/sec
              W1         5.27484e+08
      global relaxation matrix dimension = 266
      setting global matrices ... done, cpu time[sec] = 0.147708, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.40498, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            57213.8      23937.9      10443.1      11170.2      1502.31      83249.2      18463.9
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00225   0.00137         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.99e-05   0.00137     0.999
         *Z       ---       ---  8.04e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00137408
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.998628   0.00137197   0.00110988  0.000198836  7.08144e-06  3.30373e-05  1.19152e-06  2.18061e-05  1.32502e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.83736, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 2200 K
            Well    Collision, 1/sec
              W1          8.7914e+08
      global relaxation matrix dimension = 266
      setting global matrices ... done, cpu time[sec] = 0.147034, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.42158, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            34328.3      14362.7      6265.83      6702.15      901.386      49949.5      11078.4
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0021   0.00126         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.78e-05   0.00126     0.999
         *Z       ---       ---  8.04e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0012617
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1      0.99874   0.00125976   0.00103537  0.000167732  6.30591e-06  2.69676e-05  1.02306e-06   2.2228e-05  1.32652e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.85596, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 2200 K
            Well    Collision, 1/sec
              W1          1.2308e+09
      global relaxation matrix dimension = 266
      setting global matrices ... done, cpu time[sec] = 0.148433, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.43718, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            24520.2      10259.1       4475.6      4787.25      643.847      35678.2      7913.12
      eigenvector populations normalized:
          L        *R        *P        W1
          0     0.002   0.00119         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.64e-05   0.00119    -0.999
         *Z       ---       ---  8.04e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00118652
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.998815   0.00118469  0.000982473  0.000149143   5.8439e-06   2.3676e-05  9.27925e-07  2.24918e-05  1.32801e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.87268, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 2200 K
            Well    Collision, 1/sec
              W1         1.58245e+09
      global relaxation matrix dimension = 266
      setting global matrices ... done, cpu time[sec] = 0.148875, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.45793, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            19071.3       7979.3      3481.02      3723.42       500.77      27749.7      6154.65
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00193   0.00113         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.53e-05   0.00113     0.999
         *Z       ---       ---  8.04e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00113005
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.998872    0.0011283  0.000941339  0.000136266  5.51983e-06  2.15118e-05  8.63512e-07  2.26706e-05   1.3295e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.89379, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 2200 K
            Well    Collision, 1/sec
              W1         1.75828e+09
      global relaxation matrix dimension = 266
      setting global matrices ... done, cpu time[sec] = 0.147859, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.452, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            17164.1      7181.37      3132.92      3351.07      450.693      24974.7      5539.18
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0019   0.00111         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.48e-05   0.00111    -0.999
         *Z       ---       ---  8.04e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00110634
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.998895   0.00110463  0.000923741  0.000131123  5.38875e-06    2.067e-05  8.37998e-07  2.27389e-05  1.33024e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.88813, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 2200 K
            Well    Collision, 1/sec
              W1         2.63742e+09
      global relaxation matrix dimension = 266
      setting global matrices ... done, cpu time[sec] = 0.148595, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.4447, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            11442.8      4787.58      2088.61      2234.05      300.462      16649.8      3692.79
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00177   0.00102         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.31e-05   0.00102    -0.999
         *Z       ---       ---  8.04e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00101522
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.998986   0.00101366  0.000854462  0.000112709  4.90796e-06  1.77459e-05  7.47016e-07  2.29532e-05  1.33393e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.87993, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 2200 K
            Well    Collision, 1/sec
              W1         3.51656e+09
      global relaxation matrix dimension = 266
      setting global matrices ... done, cpu time[sec] = 0.147859, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.49058, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            8582.07      3590.69      1566.46      1675.54      225.347      12487.4      2769.59
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00169  0.000951         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.18e-05  0.000951         1
         *Z       ---       ---  8.04e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000950996
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1      0.99905  0.000949531  0.000804214  0.000100927   4.5872e-06  1.59354e-05  6.88552e-07  2.30456e-05  1.33755e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.92488, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 2200 K
            Well    Collision, 1/sec
              W1          4.3957e+09
      global relaxation matrix dimension = 266
      setting global matrices ... done, cpu time[sec] = 0.148491, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.51014, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            6865.65      2872.55      1253.17      1340.43      180.277       9989.9      2215.67
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00162  0.000902         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.09e-05  0.000902        -1
         *Z       ---       ---  8.04e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000901621
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1       0.9991  0.000900231  0.000764882  9.24852e-05  4.34876e-06  1.46603e-05  6.46215e-07  2.30747e-05   1.3411e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.94598, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 2200 K
            Well    Collision, 1/sec
              W1         5.27484e+09
      global relaxation matrix dimension = 266
      setting global matrices ... done, cpu time[sec] = 0.147846, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.52672, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            5721.38      2393.79      1044.31      1117.02      150.231      8324.92      1846.39
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00156  0.000862         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.01e-05  0.000862        -1
         *Z       ---       ---  8.04e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000861663
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1      0.99914  0.000860335  0.000732646  8.60201e-05  4.16014e-06  1.36934e-05  6.13385e-07   2.3067e-05  1.34456e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.96144, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 2200 K
            Well    Collision, 1/sec
              W1         6.15398e+09
      global relaxation matrix dimension = 266
      setting global matrices ... done, cpu time[sec] = 0.148097, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.5447, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            4904.04      2051.82      895.119       957.45      128.769      7135.64      1582.62
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00151  0.000828         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.95e-05  0.000828        -1
         *Z       ---       ---  8.04e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000828205
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999173  0.000826928  0.000705397   8.0845e-05  4.00476e-06  1.29241e-05  5.86769e-07  2.30363e-05  1.34794e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.98227, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 2200 K
            Well    Collision, 1/sec
              W1         7.03312e+09
      global relaxation matrix dimension = 266
      setting global matrices ... done, cpu time[sec] = 0.149211, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.5378, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            4291.03      1795.34      783.229      837.769      112.673      6243.69       1384.8
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00147  0.000799         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.89e-05  0.000799         1
         *Z       ---       ---  8.04e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000799497
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999202  0.000798265  0.000681841    7.657e-05  3.87307e-06  1.22909e-05  5.64507e-07  2.29905e-05  1.35123e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.97335, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2300 K
      Energy reference = 68662 1/cm
      Energy step      = 383 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -54.7 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.005984
         W1 Well: collisional kernel bandwidth = 27
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.140424
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.097523
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.104667
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.388843
         W1 Well: minimal relaxation eigenvalue = 0.0108311
         W1 Well: maximal relaxation eigenvalue = 1.52806
         W1 Well:       grid size = 262
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31684 1/cm
         B1 Barrier:        grid size = 180
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -278 1/cm
         B2 Barrier:        grid size = 179
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 104 1/cm
         B3 Barrier:        grid size = 192
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4873 1/cm
         B4 Barrier:        grid size = 196
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6406 1/cm
         B5 Barrier: nonpositive number of states at -23641 1/cm => truncating
         B5 Barrier:        grid size = 241
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23641 1/cm
         B6 Barrier:        grid size = 176
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1254 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4700 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.00062, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31684 -23641    3e+05 1.25e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -278 1.32e+18
         B2    105 5.82e+17
         B3  -4873 2.67e+17
         B4  -6406 2.84e+17
         B5 -23641 3.85e+16
         B6   1255    2e+18
         B7   4701 4.59e+17
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.42e-15   2.8e-15   9.8e-16  4.05e-16  1.18e-20   3.5e-14   8.8e-13
          R  7.04e+14         1      1.97      0.69     0.285  8.32e-06      24.7       620
         P1  3.57e+14     0.507         1      0.35     0.145  4.22e-06      12.5       314
         P2  1.02e+15      1.45      2.86         1     0.414  1.21e-05      35.8       899
         P3  2.47e+15       3.5      6.91      2.42         1  2.92e-05      86.5  2.17e+03
         P4  8.46e+19   1.2e+05  2.37e+05  8.29e+04  3.43e+04         1  2.97e+06  7.45e+07
         P5  2.85e+13    0.0405    0.0799     0.028    0.0116  3.37e-07         1      25.1
         P6  1.14e+12   0.00161   0.00318   0.00111   0.00046  1.34e-08    0.0398         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.48e-18   4.9e-18  1.71e-18  7.08e-19  2.07e-23  6.13e-17  1.54e-15
          R  4.03e+17         1      1.97      0.69     0.285  8.32e-06      24.7       620
         P1  2.04e+17     0.507         1      0.35     0.145  4.22e-06      12.5       314
         P2  5.84e+17      1.45      2.86         1     0.414  1.21e-05      35.8       899
         P3  1.41e+18       3.5      6.91      2.42         1  2.92e-05      86.5  2.17e+03
         P4  4.84e+22   1.2e+05  2.37e+05  8.29e+04  3.43e+04         1  2.97e+06  7.45e+07
         P5  1.63e+16    0.0405    0.0799     0.028    0.0116  3.37e-07         1      25.1
         P6   6.5e+14   0.00161   0.00318   0.00111   0.00046  1.34e-08    0.0398         1
   MasterEquation::set:  done, cpu time[sec] = 1.0116, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 2300 K
            Well    Collision, 1/sec
              W1         1.70804e+08
      global relaxation matrix dimension = 262
      setting global matrices ... done, cpu time[sec] = 0.144606, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.32151, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             185616      81644.3      37383.6      39809.5      5398.97       280166      64273.9
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00441   0.00312         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.16e-05   0.00312     0.998
         *Z       ---       ---  5.58e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00312082
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.996884   0.00311579   0.00242433  0.000524195  1.78806e-05  0.000100857  3.28484e-06  4.49096e-05  3.25435e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.74244, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 2300 K
            Well    Collision, 1/sec
              W1         5.12412e+08
      global relaxation matrix dimension = 262
      setting global matrices ... done, cpu time[sec] = 0.142941, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.37132, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            61872.1      27214.8      12461.2      13269.8      1799.66      93388.6      21424.6
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00395   0.00271         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.44e-05   0.00271    -0.999
         *Z       ---       ---  5.58e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00270519
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.997299   0.00270083   0.00218925  0.000384247  1.39859e-05  6.40526e-05  2.33637e-06  4.66323e-05  3.25789e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.83676, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 2300 K
            Well    Collision, 1/sec
              W1          8.5402e+08
      global relaxation matrix dimension = 262
      setting global matrices ... done, cpu time[sec] = 0.143294, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.39313, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            37123.3      16328.9      7476.72       7961.9      1079.79      56033.2      12854.8
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00372    0.0025         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.08e-05    0.0025    -0.999
         *Z       ---       ---  5.58e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00249955
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.997504   0.00249552   0.00205376  0.000326613  1.25501e-05  5.27135e-05  2.02293e-06  4.75437e-05  3.26136e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.80116, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 2300 K
            Well    Collision, 1/sec
              W1         1.19563e+09
      global relaxation matrix dimension = 262
      setting global matrices ... done, cpu time[sec] = 0.14292, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.40267, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            26516.6      11663.5      5340.52      5687.07      771.282      40023.7      9181.99
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00356   0.00236         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.84e-05   0.00236     0.999
         *Z       ---       ---  5.58e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00236114
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.997643   0.00235733   0.00195683  0.000291964  1.16926e-05  4.65451e-05  1.84546e-06  4.81302e-05  3.26482e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.81085, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 2300 K
            Well    Collision, 1/sec
              W1         1.53724e+09
      global relaxation matrix dimension = 262
      setting global matrices ... done, cpu time[sec] = 0.1438, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.39596, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
              20624      9071.59      4153.74      4423.28      599.886      31129.5      7141.55
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00344   0.00226         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.66e-05   0.00226     0.999
         *Z       ---       ---  5.58e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00225671
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.997747   0.00225307   0.00188104  0.000267866  1.10898e-05  4.24789e-05  1.72503e-06    4.854e-05  3.26826e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.80577, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 2300 K
            Well    Collision, 1/sec
              W1         1.70804e+09
      global relaxation matrix dimension = 262
      setting global matrices ... done, cpu time[sec] = 0.144231, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.422, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            18561.6      8164.43      3738.36      3980.95      539.897      28016.6      6427.39
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00339   0.00221         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.58e-05   0.00221     0.999
         *Z       ---       ---  5.58e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00221274
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.997791   0.00220917   0.00184851  0.000258217  1.08456e-05  4.08948e-05  1.67726e-06  4.87008e-05  3.26997e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.83233, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 2300 K
            Well    Collision, 1/sec
              W1         2.56206e+09
      global relaxation matrix dimension = 262
      setting global matrices ... done, cpu time[sec] = 0.143936, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.43914, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            12374.4      5442.95      2492.24      2653.97      359.931      18677.7      4284.93
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00319   0.00204         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.28e-05   0.00204     0.999
         *Z       ---       ---  5.58e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00204305
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1      0.99796   0.00203975   0.00171981  0.000223549  9.94752e-06  3.53775e-05  1.50649e-06  4.92351e-05  3.27845e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.84873, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 2300 K
            Well    Collision, 1/sec
              W1         3.41608e+09
      global relaxation matrix dimension = 262
      setting global matrices ... done, cpu time[sec] = 0.143862, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.44702, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            9280.82      4082.22      1869.18      1990.47      269.949      14008.3       3213.7
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00305   0.00192         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.07e-05   0.00192    -0.999
         *Z       ---       ---  5.58e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00192272
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1      0.99808   0.00191962   0.00162584  0.000201254    9.346e-06   3.1948e-05  1.39635e-06  4.95068e-05  3.28678e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.85868, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 2300 K
            Well    Collision, 1/sec
              W1          4.2701e+09
      global relaxation matrix dimension = 262
      setting global matrices ... done, cpu time[sec] = 0.143833, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.44775, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            7424.65      3265.77      1495.34      1592.38      215.959      11206.6      2570.96
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00293   0.00183         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   3.9e-05   0.00183    -0.999
         *Z       ---       ---  5.58e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00182978
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.998173   0.00182683    0.0015519  0.000185219  8.89734e-06   2.9525e-05  1.31634e-06  4.96393e-05  3.29494e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.85775, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 2300 K
            Well    Collision, 1/sec
              W1         5.12412e+09
      global relaxation matrix dimension = 262
      setting global matrices ... done, cpu time[sec] = 0.14395, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.46476, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            6187.21      2721.48      1246.12      1326.98      179.966      9338.86      2142.46
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00284   0.00175         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.77e-05   0.00175     0.999
         *Z       ---       ---  5.58e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00175428
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.998249   0.00175146   0.00149106  0.000172899  8.54137e-06  2.76826e-05  1.25413e-06  4.96884e-05  3.30292e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.8745, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 2300 K
            Well    Collision, 1/sec
              W1         5.97814e+09
      global relaxation matrix dimension = 262
      setting global matrices ... done, cpu time[sec] = 0.143967, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.46613, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            5303.32      2332.69       1068.1      1137.41      154.256      8004.74       1836.4
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00276   0.00169         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.65e-05   0.00169     0.999
         *Z       ---       ---  5.58e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00169086
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.998312   0.00168814   0.00143945   0.00016301  8.24737e-06  2.62132e-05  1.20357e-06  4.96839e-05  3.31069e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.87592, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 2300 K
            Well    Collision, 1/sec
              W1         6.83216e+09
      global relaxation matrix dimension = 262
      setting global matrices ... done, cpu time[sec] = 0.143269, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.47203, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            4640.41      2041.11      934.591      995.237      134.974      7004.14      1606.85
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00269   0.00164         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.55e-05   0.00164    -0.999
         *Z       ---       ---  5.58e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00163629
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.998366   0.00163365    0.0013947  0.000154822  7.99761e-06  2.50011e-05   1.1612e-06  4.96432e-05  3.31827e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.88265, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2400 K
      Energy reference = 71442 1/cm
      Energy step      = 400 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -52.4 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.006023
         W1 Well: collisional kernel bandwidth = 27
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.138238
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.094553
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.102701
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.38146
         W1 Well: minimal relaxation eigenvalue = 0.0106089
         W1 Well: maximal relaxation eigenvalue = 1.76191
         W1 Well:       grid size = 258
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31757 1/cm
         B1 Barrier:        grid size = 179
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -158 1/cm
         B2 Barrier:        grid size = 179
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = -158 1/cm
         B3 Barrier:        grid size = 191
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4958 1/cm
         B4 Barrier:        grid size = 195
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6557 1/cm
         B5 Barrier: nonpositive number of states at -23758 1/cm => truncating
         B5 Barrier:        grid size = 238
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23758 1/cm
         B6 Barrier:        grid size = 175
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1441 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4642 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.986793, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31757 -23758 2.74e+05 1.69e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -158 1.86e+18
         B2   -158 8.59e+17
         B3  -4958 4.13e+17
         B4  -6557 4.38e+17
         B5 -23758 5.98e+16
         B6   1442 2.91e+18
         B7   4643 6.88e+17
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1   6.1e-16  1.22e-15  4.71e-16  2.04e-16  9.57e-21  1.39e-14  3.23e-13
          R  1.64e+15         1         2     0.772     0.334  1.57e-05      22.8       529
         P1   8.2e+14       0.5         1     0.386     0.167  7.86e-06      11.4       265
         P2  2.12e+15       1.3      2.59         1     0.433  2.03e-05      29.6       686
         P3  4.91e+15      2.99      5.98      2.31         1   4.7e-05      68.4  1.58e+03
         P4  1.04e+20  6.37e+04  1.27e+05  4.92e+04  2.13e+04         1  1.45e+06  3.37e+07
         P5  7.18e+13    0.0438    0.0875    0.0338    0.0146  6.88e-07         1      23.2
         P6   3.1e+12   0.00189   0.00378   0.00146  0.000631  2.97e-08    0.0432         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.11e-18  2.22e-18  8.59e-19  3.72e-19  1.75e-23  2.54e-17  5.89e-16
          R  8.98e+17         1         2     0.772     0.334  1.57e-05      22.8       529
         P1  4.49e+17       0.5         1     0.386     0.167  7.86e-06      11.4       265
         P2  1.16e+18       1.3      2.59         1     0.433  2.03e-05      29.6       686
         P3  2.69e+18      2.99      5.98      2.31         1   4.7e-05      68.4  1.58e+03
         P4  5.72e+22  6.37e+04  1.27e+05  4.92e+04  2.13e+04         1  1.45e+06  3.37e+07
         P5  3.93e+16    0.0438    0.0875    0.0338    0.0146  6.88e-07         1      23.2
         P6   1.7e+15   0.00189   0.00378   0.00146  0.000631  2.97e-08    0.0432         1
   MasterEquation::set:  done, cpu time[sec] = 0.997815, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 2400 K
            Well    Collision, 1/sec
              W1         1.66134e+08
      global relaxation matrix dimension = 258
      setting global matrices ... done, cpu time[sec] = 0.14023, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.29789, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             199177      91914.2      44180.1      46852.7      6403.86       311296      73705.3
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00711   0.00563         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000104   0.00563     0.997
         *Z       ---       ---  4.02e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00563429
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.994375   0.00562528   0.00438394  0.000935564  3.21978e-05  0.000177836  5.85944e-06   8.9147e-05  7.35618e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.70898, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 2400 K
            Well    Collision, 1/sec
              W1         4.98402e+08
      global relaxation matrix dimension = 258
      setting global matrices ... done, cpu time[sec] = 0.139547, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.31307, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            66392.5      30638.1      14726.7      15617.6      2134.62       103765      24568.4
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00644   0.00494         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.25e-05   0.00494    -0.998
         *Z       ---       ---  4.02e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00493611
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.995072   0.00492822   0.00399789  0.000692468  2.55838e-05  0.000114833  4.24108e-06  9.24706e-05  7.36385e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.72212, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 2400 K
            Well    Collision, 1/sec
              W1          8.3067e+08
      global relaxation matrix dimension = 258
      setting global matrices ... done, cpu time[sec] = 0.139391, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.33938, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            39835.5      18382.8      8836.03      9370.55      1280.77      62259.1      14741.1
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00609   0.00459         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.68e-05   0.00459     0.998
         *Z       ---       ---  4.02e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00458718
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1      0.99542   0.00457984   0.00377075  0.000591954   2.3133e-05  9.52957e-05  3.70328e-06  9.42644e-05  7.37131e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.7492, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 2400 K
            Well    Collision, 1/sec
              W1         1.16294e+09
      global relaxation matrix dimension = 258
      setting global matrices ... done, cpu time[sec] = 0.14011, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.36226, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            28453.9      13130.6      6311.45      6693.25      914.838      44470.8      10529.3
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00586   0.00435         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   8.3e-05   0.00435     0.998
         *Z       ---       ---  4.02e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00435101
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.995656   0.00434405    0.0036068  0.000531384  2.16648e-05  8.46278e-05  3.39779e-06  9.54444e-05  7.37869e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.77299, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 2400 K
            Well    Collision, 1/sec
              W1         1.49521e+09
      global relaxation matrix dimension = 258
      setting global matrices ... done, cpu time[sec] = 0.140003, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.36901, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            22130.8      10212.7       4908.9      5205.86       711.54      34588.4      8189.48
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00568   0.00417         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0     8e-05   0.00417    -0.998
         *Z       ---       ---  4.02e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00417211
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.995835   0.00416544   0.00347783  0.000489179  2.06299e-05   7.7576e-05  3.18998e-06  9.62883e-05  7.38601e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.78071, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 2400 K
            Well    Collision, 1/sec
              W1         1.66134e+09
      global relaxation matrix dimension = 258
      setting global matrices ... done, cpu time[sec] = 0.140555, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.37413, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            19917.7      9191.42      4418.01      4685.27      640.386      31129.6      7370.53
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0056    0.0041         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.88e-05    0.0041     0.998
         *Z       ---       ---  4.02e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0040966
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1      0.99591   0.00409005   0.00342228  0.000472259    2.021e-05  7.48238e-05  3.10741e-06   9.6626e-05  7.38965e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.78586, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 2400 K
            Well    Collision, 1/sec
              W1         2.49201e+09
      global relaxation matrix dimension = 258
      setting global matrices ... done, cpu time[sec] = 0.139839, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.39157, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            13278.5      6127.61      2945.34      3123.52      426.924        20753      4913.69
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0053    0.0038         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   7.4e-05    0.0038     0.998
         *Z       ---       ---  4.02e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00380405
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.996202   0.00379796   0.00320141  0.000411337  1.86617e-05   6.5213e-05  2.81152e-06  9.77924e-05  7.40767e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.802, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 2400 K
            Well    Collision, 1/sec
              W1         3.32268e+09
      global relaxation matrix dimension = 258
      setting global matrices ... done, cpu time[sec] = 0.139575, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.4066, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            9958.87      4595.71      2209.01      2342.64      320.193      15564.8      3685.27
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00508    0.0036         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.05e-05    0.0036     0.998
         *Z       ---       ---  4.02e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00359547
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1      0.99641   0.00358972   0.00303904  0.000372036  1.76204e-05  5.92152e-05  2.61997e-06  9.84449e-05  7.42532e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.8171, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 2400 K
            Well    Collision, 1/sec
              W1         4.15335e+09
      global relaxation matrix dimension = 258
      setting global matrices ... done, cpu time[sec] = 0.13964, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.40041, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             7967.1      3676.57      1767.21      1874.11      256.155      12451.8      2948.21
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00491   0.00343         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.79e-05   0.00343     0.998
         *Z       ---       ---  4.02e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0034337
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.996572   0.00342821   0.00291066  0.000343696  1.68412e-05  5.49644e-05   2.4804e-06  9.88191e-05   7.4426e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.8094, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 2400 K
            Well    Collision, 1/sec
              W1         4.98402e+09
      global relaxation matrix dimension = 258
      setting global matrices ... done, cpu time[sec] = 0.140034, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.42403, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            6639.25      3063.81      1472.67      1561.76      213.462      10376.5      2456.84
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00477    0.0033         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.56e-05    0.0033    -0.998
         *Z       ---       ---  4.02e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00330182
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.996703   0.00329654   0.00280459  0.000321872  1.62213e-05  5.17237e-05   2.3716e-06  9.90236e-05  7.45947e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.83462, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 2400 K
            Well    Collision, 1/sec
              W1         5.81469e+09
      global relaxation matrix dimension = 258
      setting global matrices ... done, cpu time[sec] = 0.139926, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.41663, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            5690.78      2626.12      1262.29      1338.65      182.968      8894.16      2105.87
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00465   0.00319         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.38e-05   0.00319    -0.998
         *Z       ---       ---  4.02e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00319071
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.996814   0.00318561    0.0027143   0.00030432   1.5708e-05  4.91329e-05  2.28298e-06  9.91166e-05  7.47594e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.82648, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 2400 K
            Well    Collision, 1/sec
              W1         6.64536e+09
      global relaxation matrix dimension = 258
      setting global matrices ... done, cpu time[sec] = 0.140124, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.43993, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            4979.43      2297.85       1104.5      1171.32      160.097      7782.39      1842.63
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00455   0.00309         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.22e-05   0.00309    -0.998
         *Z       ---       ---  4.02e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00309485
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1      0.99691    0.0030899   0.00263579   0.00028976  1.52709e-05  4.69916e-05  2.20854e-06  9.91325e-05  7.49199e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.85183, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2500 K
      Energy reference = 74222 1/cm
      Energy step      = 417 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -50.1 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.005594
         W1 Well: collisional kernel bandwidth = 27
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.13566
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.091655
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.09659
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.368031
         W1 Well: minimal relaxation eigenvalue = 0.0104029
         W1 Well: maximal relaxation eigenvalue = 1.6145
         W1 Well:       grid size = 254
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31695 1/cm
         B1 Barrier:        grid size = 178
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -4 1/cm
         B2 Barrier:        grid size = 178
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = -4 1/cm
         B3 Barrier:        grid size = 190
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -5008 1/cm
         B4 Barrier:        grid size = 193
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6259 1/cm
         B5 Barrier: nonpositive number of states at -23773 1/cm => truncating
         B5 Barrier:        grid size = 235
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23773 1/cm
         B6 Barrier:        grid size = 175
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1247 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4583 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.966426, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31695 -23773 2.71e+05 2.25e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -4 2.58e+18
         B2     -4 1.25e+18
         B3  -5008 6.29e+17
         B4  -6259 6.65e+17
         B5 -23773 9.15e+16
         B6   1248 4.17e+18
         B7   4583 1.02e+18
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.81e-16  5.68e-16   2.4e-16  1.08e-16   7.9e-21  5.96e-15  1.28e-13
          R  3.56e+15         1      2.02     0.856     0.386  2.82e-05      21.2       457
         P1  1.76e+15     0.494         1     0.423     0.191  1.39e-05      10.5       225
         P2  4.17e+15      1.17      2.37         1     0.451  3.29e-05      24.8       534
         P3  9.23e+15      2.59      5.24      2.22         1  7.29e-05        55  1.18e+03
         P4  1.27e+20  3.55e+04  7.19e+04  3.04e+04  1.37e+04         1  7.54e+05  1.62e+07
         P5  1.68e+14    0.0471    0.0954    0.0403    0.0182  1.33e-06         1      21.5
         P6  7.81e+12   0.00219   0.00443   0.00187  0.000846  6.17e-08    0.0465         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  5.34e-19  1.08e-18  4.57e-19  2.06e-19   1.5e-23  1.13e-17  2.44e-16
          R  1.87e+18         1      2.02     0.856     0.386  2.82e-05      21.2       457
         P1  9.25e+17     0.494         1     0.423     0.191  1.39e-05      10.5       225
         P2  2.19e+18      1.17      2.37         1     0.451  3.29e-05      24.8       534
         P3  4.85e+18      2.59      5.24      2.22         1  7.29e-05        55  1.18e+03
         P4  6.65e+22  3.55e+04  7.19e+04  3.04e+04  1.37e+04         1  7.54e+05  1.62e+07
         P5  8.82e+16    0.0471    0.0954    0.0403    0.0182  1.33e-06         1      21.5
         P6   4.1e+15   0.00219   0.00443   0.00187  0.000846  6.17e-08    0.0465         1
   MasterEquation::set:  done, cpu time[sec] = 0.977697, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 2500 K
            Well    Collision, 1/sec
              W1         1.61779e+08
      global relaxation matrix dimension = 254
      setting global matrices ... done, cpu time[sec] = 0.136889, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.24802, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             212254       102569      51756.9      54676.2       7527.8       342937      83634.8
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0107    0.0095         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000164    0.0095     0.995
         *Z       ---       ---     3e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00949593
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.990519   0.00948056   0.00743054   0.00152501  5.44101e-05  0.000293831  9.80369e-06  0.000165422  1.54427e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.64725, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 2500 K
            Well    Collision, 1/sec
              W1         4.85337e+08
      global relaxation matrix dimension = 254
      setting global matrices ... done, cpu time[sec] = 0.134788, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.27763, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            70751.3      34189.7      17252.3      18225.4      2509.27       114312      27878.3
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00978   0.00841         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000148   0.00841     0.996
         *Z       ---       ---     3e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0084063
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.991607   0.00839269   0.00682682   0.00114952  4.38113e-05  0.000192439  7.20409e-06  0.000171357  1.54581e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.66239, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 2500 K
            Well    Collision, 1/sec
              W1         8.08894e+08
      global relaxation matrix dimension = 254
      setting global matrices ... done, cpu time[sec] = 0.135117, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.29015, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            42450.8      20513.8      10351.4      10935.2      1505.56      68587.4        16727
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00931   0.00786         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000139   0.00786    -0.996
         *Z       ---       ---     3e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00785596
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.992157   0.00784324   0.00646894  0.000990966  3.98887e-05  0.000160928  6.33972e-06   0.00017464  1.54729e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.67762, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 2500 K
            Well    Collision, 1/sec
              W1         1.13245e+09
      global relaxation matrix dimension = 254
      setting global matrices ... done, cpu time[sec] = 0.135331, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.29213, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
              30322      14652.7      7393.85      7810.88       1075.4        48991      11947.8
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00899   0.00748         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000134   0.00748     0.996
         *Z       ---       ---     3e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00748125
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.992531   0.00746914   0.00620907  0.000894608  3.75358e-05  0.000143683  5.84793e-06  0.000176844  1.54875e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.67793, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 2500 K
            Well    Collision, 1/sec
              W1         1.45601e+09
      global relaxation matrix dimension = 254
      setting global matrices ... done, cpu time[sec] = 0.135634, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.30556, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            23583.8      11396.6      5750.77      6075.13      836.422      38104.1      9292.75
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00874    0.0072         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000129    0.0072     0.996
         *Z       ---       ---     3e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00719616
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.992815   0.00718451   0.00600376  0.000827104   3.5875e-05   0.00013226  5.51286e-06  0.000178451  1.55019e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.69292, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 2500 K
            Well    Collision, 1/sec
              W1         1.61779e+09
      global relaxation matrix dimension = 254
      setting global matrices ... done, cpu time[sec] = 0.135461, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.31408, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            21225.4      10256.9      5175.69      5467.62       752.78      34293.7      8363.48
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00863   0.00708         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000127   0.00708    -0.996
         *Z       ---       ---     3e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00707551
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.992936   0.00706406   0.00591507  0.000799955  3.52004e-05  0.000127796  5.37957e-06  0.000179104  1.55091e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.7008, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 2500 K
            Well    Collision, 1/sec
              W1         2.42668e+09
      global relaxation matrix dimension = 254
      setting global matrices ... done, cpu time[sec] = 0.135324, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.35242, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            14150.3      6837.94      3450.46      3645.08      501.853      22862.5      5575.65
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00821   0.00661         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   0.00012   0.00661    -0.997
         *Z       ---       ---     3e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00660623
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.993404   0.00659554   0.00556098  0.000701793   3.2708e-05  0.000112174  4.90105e-06  0.000181426  1.55445e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.73839, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 2500 K
            Well    Collision, 1/sec
              W1         3.23558e+09
      global relaxation matrix dimension = 254
      setting global matrices ... done, cpu time[sec] = 0.135921, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.36335, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            10612.7      5128.46      2587.85      2733.81       376.39      17146.8      4181.74
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00791   0.00627         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000115   0.00627    -0.997
         *Z       ---       ---     3e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0062698
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1      0.99374   0.00625965   0.00529917    0.0006381  3.10267e-05  0.000102392  4.59033e-06   0.00018281  1.55792e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.95781, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 2500 K
            Well    Collision, 1/sec
              W1         4.04447e+09
      global relaxation matrix dimension = 254
      setting global matrices ... done, cpu time[sec] = 0.135877, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.34673, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            8490.16      4102.77      2070.28      2187.05      301.112      13717.5      3345.39
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00767   0.00601         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000111   0.00601    -0.997
         *Z       ---       ---     3e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00600775
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.994002   0.00599803   0.00509124  0.000591975   2.9765e-05  9.54401e-05  4.36336e-06  0.000183678  1.56131e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.73362, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 2500 K
            Well    Collision, 1/sec
              W1         4.85337e+09
      global relaxation matrix dimension = 254
      setting global matrices ... done, cpu time[sec] = 0.135556, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.37388, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            7075.13      3418.97      1725.23      1822.54      250.927      11431.2      2787.83
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00747   0.00579         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000107   0.00579    -0.997
         *Z       ---       ---     3e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00579339
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.994216   0.00578401   0.00491881  0.000556337  2.87587e-05  9.01277e-05  4.18602e-06  0.000184226  1.56461e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.75989, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 2500 K
            Well    Collision, 1/sec
              W1         5.66226e+09
      global relaxation matrix dimension = 254
      setting global matrices ... done, cpu time[sec] = 0.134883, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.37033, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             6064.4      2930.55      1478.77      1562.18       215.08      9798.19      2389.56
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0073   0.00561         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000105   0.00561     0.997
         *Z       ---       ---     3e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00561223
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.994397   0.00560315   0.00477159  0.000527594  2.79236e-05  8.58721e-05  4.04129e-06  0.000184561  1.56784e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.75515, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 2500 K
            Well    Collision, 1/sec
              W1         6.47115e+09
      global relaxation matrix dimension = 254
      setting global matrices ... done, cpu time[sec] = 0.135549, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.39331, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            5306.35      2564.23      1293.92       1366.9      188.195      8573.42      2090.87
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00715   0.00546         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000102   0.00546    -0.997
         *Z       ---       ---     3e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00545554
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.994553   0.00544671   0.00464322  0.000503692  2.72112e-05   8.2348e-05   3.9195e-06  0.000184745  1.57099e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.7793, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2600 K
      Energy reference = 77002 1/cm
      Energy step      = 433 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -47.8 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.005549
         W1 Well: collisional kernel bandwidth = 26
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.129413
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.090174
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.093283
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.352103
         W1 Well: minimal relaxation eigenvalue = 0.0102121
         W1 Well: maximal relaxation eigenvalue = 1.64646
         W1 Well:       grid size = 251
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31680 1/cm
         B1 Barrier:        grid size = 178
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -71 1/cm
         B2 Barrier:        grid size = 178
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = -71 1/cm
         B3 Barrier:        grid size = 189
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4834 1/cm
         B4 Barrier:        grid size = 193
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6566 1/cm
         B5 Barrier: nonpositive number of states at -23887 1/cm => truncating
         B5 Barrier:        grid size = 233
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23886 1/cm
         B6 Barrier:        grid size = 175
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1227 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4691 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.93227, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31680 -23886 2.49e+05 2.99e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -71 3.54e+18
         B2    -71 1.79e+18
         B3  -4834 9.46e+17
         B4  -6566 9.96e+17
         B5 -23886 1.38e+17
         B6   1228  5.9e+18
         B7   4692 1.48e+18
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.38e-16  2.82e-16  1.29e-16  6.07e-17  6.64e-21  2.72e-15  5.47e-14
          R  7.27e+15         1      2.05     0.941     0.441  4.83e-05      19.8       398
         P1  3.55e+15     0.488         1     0.459     0.215  2.35e-05      9.66       194
         P2  7.73e+15      1.06      2.18         1     0.469  5.13e-05        21       423
         P3  1.65e+16      2.27      4.65      2.13         1  0.000109      44.9       901
         P4  1.51e+20  2.07e+04  4.25e+04  1.95e+04  9.15e+03         1   4.1e+05  8.24e+06
         P5  3.67e+14    0.0505     0.104    0.0475    0.0223  2.44e-06         1      20.1
         P6  1.83e+13   0.00252   0.00516   0.00237   0.00111  1.21e-07    0.0498         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.72e-19  5.57e-19  2.56e-19   1.2e-19  1.31e-23  5.38e-18  1.08e-16
          R  3.68e+18         1      2.05     0.941     0.441  4.83e-05      19.8       398
         P1  1.79e+18     0.488         1     0.459     0.215  2.35e-05      9.66       194
         P2  3.91e+18      1.06      2.18         1     0.469  5.13e-05        21       423
         P3  8.34e+18      2.27      4.65      2.13         1  0.000109      44.9       901
         P4  7.62e+22  2.07e+04  4.25e+04  1.95e+04  9.15e+03         1   4.1e+05  8.24e+06
         P5  1.86e+17    0.0505     0.104    0.0475    0.0223  2.44e-06         1      20.1
         P6  9.25e+15   0.00252   0.00516   0.00237   0.00111  1.21e-07    0.0498         1
   MasterEquation::set:  done, cpu time[sec] = 0.943657, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 2600 K
            Well    Collision, 1/sec
              W1         1.57705e+08
      global relaxation matrix dimension = 251
      setting global matrices ... done, cpu time[sec] = 0.1334, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.23391, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             224787       113553      60148.4      63311.5       8776.4       374893      94006.2
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0152    0.0151         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000248    0.0151    -0.992
         *Z       ---       ---  2.31e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0151048
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.984919    0.0150806    0.0118522   0.00237763  8.65672e-05  0.000455939  1.54299e-05  0.000289768  3.03777e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.62347, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 2600 K
            Well    Collision, 1/sec
              W1         4.73115e+08
      global relaxation matrix dimension = 251
      setting global matrices ... done, cpu time[sec] = 0.131661, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.24118, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            74928.9      37850.9      20049.5      21103.8      2925.47       124964      31335.4
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0141    0.0135         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000225    0.0135     0.993
         *Z       ---       ---  2.31e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0134973
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.986524    0.0134757    0.0109749   0.00181255  7.07003e-05  0.000303301  1.15256e-05  0.000299688  3.04064e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.62809, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 2600 K
            Well    Collision, 1/sec
              W1         7.88525e+08
      global relaxation matrix dimension = 251
      setting global matrices ... done, cpu time[sec] = 0.13189, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.25224, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            44957.3      22710.5      12029.7      12662.3      1755.28      74978.5      18801.2
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0135    0.0127         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000213    0.0127     0.994
         *Z       ---       ---  2.31e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0126776
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.987343    0.0126573    0.0104464   0.00157196  6.48136e-05  0.000255642  1.02229e-05  0.000305268  3.04339e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.63792, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 2600 K
            Well    Collision, 1/sec
              W1         1.10394e+09
      global relaxation matrix dimension = 251
      setting global matrices ... done, cpu time[sec] = 0.132424, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.26636, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            32112.4      16221.8      8592.62       9044.5      1253.77      53556.1      13429.5
      eigenvector populations normalized:
          L        *R        *P        W1
          0     0.013    0.0121         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000205    0.0121     0.994
         *Z       ---       ---  2.31e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0121166
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.987903    0.0120972    0.0100597   0.00142522  6.12749e-05   0.00022948  9.47987e-06  0.000309072  3.04609e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.65553, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 2600 K
            Well    Collision, 1/sec
              W1         1.41935e+09
      global relaxation matrix dimension = 251
      setting global matrices ... done, cpu time[sec] = 0.132731, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.28557, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            24976.3        12617      6683.15      7034.61      975.155      41654.7      10445.1
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0127    0.0117         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000198    0.0117    -0.994
         *Z       ---       ---  2.31e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0116883
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1      0.98833    0.0116695   0.00975258   0.00132215  5.87727e-05  0.000212112  8.97268e-06  0.000311889  3.04875e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.67479, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 2600 K
            Well    Collision, 1/sec
              W1         1.57705e+09
      global relaxation matrix dimension = 251
      setting global matrices ... done, cpu time[sec] = 0.132006, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.27655, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            22478.7      11355.3      6014.84      6331.15       877.64      37489.3      9400.62
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0126    0.0115         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000196    0.0115    -0.994
         *Z       ---       ---  2.31e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0115065
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.988512    0.0114881   0.00961953   0.00128063   5.7755e-05  0.000205314  8.77065e-06  0.000313046  3.05007e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.66418, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 2600 K
            Well    Collision, 1/sec
              W1         2.36558e+09
      global relaxation matrix dimension = 251
      setting global matrices ... done, cpu time[sec] = 0.132559, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.31482, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            14985.8      7570.18      4009.89      4220.77      585.093      24992.8      6267.08
      eigenvector populations normalized:
          L        *R        *P        W1
          0     0.012    0.0108         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000185    0.0108    -0.995
         *Z       ---       ---  2.31e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0107973
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1      0.98922      0.01078   0.00908598   0.00113017  5.39873e-05  0.000181469  8.04396e-06  0.000317252  3.05658e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.70472, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 2600 K
            Well    Collision, 1/sec
              W1          3.1541e+09
      global relaxation matrix dimension = 251
      setting global matrices ... done, cpu time[sec] = 0.132499, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.31388, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            11239.3      5677.63      3007.42      3165.57       438.82      18744.6      4700.31
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0116    0.0103         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000178    0.0103     0.995
         *Z       ---       ---  2.31e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0102863
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1      0.98973    0.0102698   0.00868917   0.00103221  5.14375e-05  0.000166489  7.57066e-06  0.000319871  3.06293e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.70339, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 2600 K
            Well    Collision, 1/sec
              W1         3.94263e+09
      global relaxation matrix dimension = 251
      setting global matrices ... done, cpu time[sec] = 0.132621, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.33747, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            8991.47      4542.11      2405.93      2532.46      351.056      14995.7      3760.25
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0113   0.00989         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000172   0.00989     0.995
         *Z       ---       ---  2.31e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00988678
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.990129   0.00987094   0.00837263  0.000961079   4.9519e-05  0.000155814  7.22407e-06  0.000321606  3.06914e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.72659, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 2600 K
            Well    Collision, 1/sec
              W1         4.73115e+09
      global relaxation matrix dimension = 251
      setting global matrices ... done, cpu time[sec] = 0.132847, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.33107, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            7492.89      3785.09      2004.95      2110.38      292.547      12496.4      3133.54
      eigenvector populations normalized:
          L        *R        *P        W1
          0     0.011   0.00956         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000167   0.00956    -0.995
         *Z       ---       ---  2.31e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00955894
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.990456   0.00954363    0.0081092  0.000905994  4.79852e-05  0.000147638  6.95268e-06  0.000322785   3.0752e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.72091, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 2600 K
            Well    Collision, 1/sec
              W1         5.51968e+09
      global relaxation matrix dimension = 251
      setting global matrices ... done, cpu time[sec] = 0.132547, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.33972, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            6422.48      3244.36      1718.52       1808.9      250.754      10711.2      2685.89
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0108   0.00928         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000163   0.00928     0.995
         *Z       ---       ---  2.31e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00928115
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.990734   0.00926628   0.00788362   0.00086148  4.67099e-05  0.000141075  6.73076e-06   0.00032359  3.08111e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.72819, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 2600 K
            Well    Collision, 1/sec
              W1          6.3082e+09
      global relaxation matrix dimension = 251
      setting global matrices ... done, cpu time[sec] = 0.13236, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.34143, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            5619.67      2838.82      1503.71      1582.79       219.41      9372.32      2350.16
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0106   0.00904         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000159   0.00904    -0.995
         *Z       ---       ---  2.31e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0090403
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.990974   0.00902582   0.00768641  0.000824398  4.56198e-05  0.000135631   6.5437e-06  0.000324127  3.08688e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.72942, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2700 K
      Energy reference = 79782 1/cm
      Energy step      = 450 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -45.5 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.005752
         W1 Well: collisional kernel bandwidth = 26
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.127518
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.087406
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.093446
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.34406
         W1 Well: minimal relaxation eigenvalue = 0.0100325
         W1 Well: maximal relaxation eigenvalue = 2.02767
         W1 Well:       grid size = 248
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31818 1/cm
         B1 Barrier:        grid size = 178
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -317 1/cm
         B2 Barrier:        grid size = 177
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 131 1/cm
         B3 Barrier:        grid size = 188
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4818 1/cm
         B4 Barrier:        grid size = 192
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6618 1/cm
         B5 Barrier: nonpositive number of states at -23718 1/cm => truncating
         B5 Barrier:        grid size = 230
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23718 1/cm
         B6 Barrier:        grid size = 174
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1481 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4632 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.921795, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31818 -23718 2.83e+05 3.94e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -317 4.79e+18
         B2    132 2.53e+18
         B3  -4818  1.4e+18
         B4  -6618 1.47e+18
         B5 -23718 2.06e+17
         B6   1482 8.24e+18
         B7   4633 2.12e+18
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1   7.1e-17  1.47e-16  7.29e-17  3.55e-17  5.64e-21  1.32e-15  2.48e-14
          R  1.41e+16         1      2.08      1.03     0.499  7.95e-05      18.5       349
         P1  6.78e+15     0.482         1     0.495      0.24  3.83e-05      8.93       168
         P2  1.37e+16     0.973      2.02         1     0.486  7.74e-05        18       340
         P3  2.82e+16         2      4.16      2.06         1  0.000159      37.1       699
         P4  1.77e+20  1.26e+04  2.61e+04  1.29e+04  6.28e+03         1  2.33e+05  4.39e+06
         P5   7.6e+14    0.0539     0.112    0.0554    0.0269  4.29e-06         1      18.8
         P6  4.03e+13   0.00286   0.00595   0.00294   0.00143  2.28e-07    0.0531         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.46e-19  3.03e-19   1.5e-19  7.28e-20  1.16e-23   2.7e-18  5.09e-17
          R  6.86e+18         1      2.08      1.03     0.499  7.95e-05      18.5       349
         P1   3.3e+18     0.482         1     0.495      0.24  3.83e-05      8.93       168
         P2  6.68e+18     0.973      2.02         1     0.486  7.74e-05        18       340
         P3  1.37e+19         2      4.16      2.06         1  0.000159      37.1       699
         P4  8.63e+22  1.26e+04  2.61e+04  1.29e+04  6.28e+03         1  2.33e+05  4.39e+06
         P5   3.7e+17    0.0539     0.112    0.0554    0.0269  4.29e-06         1      18.8
         P6  1.96e+16   0.00286   0.00595   0.00294   0.00143  2.28e-07    0.0531         1
   MasterEquation::set:  done, cpu time[sec] = 0.932972, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 2700 K
            Well    Collision, 1/sec
              W1         1.53884e+08
      global relaxation matrix dimension = 248
      setting global matrices ... done, cpu time[sec] = 0.129136, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.1928, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             236730       124809      69386.3      72787.9      10154.9       406982       104763
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0207    0.0229         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   0.00036    0.0229    -0.988
         *Z       ---       ---  1.83e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.022873
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.977165    0.0228352    0.0179314    0.0035935  0.000130593  0.000668818  2.30027e-05  0.000482177  5.64183e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.57355, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 2700 K
            Well    Collision, 1/sec
              W1         4.61652e+08
      global relaxation matrix dimension = 248
      setting global matrices ... done, cpu time[sec] = 0.130053, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.22522, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            78910.1      41603.1      23128.8      24262.6      3384.97       135661        34921
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0193    0.0206         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000328    0.0206      0.99
         *Z       ---       ---  1.83e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0205899
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.979444    0.0205559     0.016735   0.00273866  0.000108308  0.000452885  1.74958e-05  0.000497887  5.64691e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.59468, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 2700 K
            Well    Collision, 1/sec
              W1          7.6942e+08
      global relaxation matrix dimension = 248
      setting global matrices ... done, cpu time[sec] = 0.129322, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.23969, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            47346.1      24961.9      13877.3      14557.6      2030.98      81396.3      20952.6
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0185    0.0194         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000311    0.0194      0.99
         *Z       ---       ---  1.83e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0194235
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.980609    0.0193914    0.0159966   0.00238185  9.99687e-05  0.000384822  1.56421e-05   0.00050681  5.65173e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.608, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 2700 K
            Well    Collision, 1/sec
              W1         1.07719e+09
      global relaxation matrix dimension = 248
      setting global matrices ... done, cpu time[sec] = 0.129166, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.26113, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            33818.6      17829.9      9912.34      10398.3       1450.7      58140.2      14966.1
      eigenvector populations normalized:
          L        *R        *P        W1
          0     0.018    0.0186         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0    0.0003    0.0186    -0.991
         *Z       ---       ---  1.83e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.018623
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.981408    0.0185922    0.0154516   0.00216518  9.49388e-05   0.00034731  1.45812e-05  0.000512962  5.65643e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.62948, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 2700 K
            Well    Collision, 1/sec
              W1         1.38496e+09
      global relaxation matrix dimension = 248
      setting global matrices ... done, cpu time[sec] = 0.12973, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.25835, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            26303.4      13867.7      7709.59      8087.54      1128.32      45220.2      11640.3
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0176     0.018         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000291     0.018     0.991
         *Z       ---       ---  1.83e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0180103
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.982019    0.0179805    0.0150165   0.00201327   9.1374e-05   0.00032234  1.38553e-05  0.000517568  5.66106e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.6292, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 2700 K
            Well    Collision, 1/sec
              W1         1.53884e+09
      global relaxation matrix dimension = 248
      setting global matrices ... done, cpu time[sec] = 0.129367, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.26477, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
              23673      12480.9      6938.63      7278.79      1015.49      40698.2      10476.3
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0174    0.0177         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000287    0.0177     0.991
         *Z       ---       ---  1.83e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.01775
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.982279    0.0177206    0.0148273   0.00195212   8.9922e-05   0.00031255  1.35658e-05  0.000519477  5.66335e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.63383, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 2700 K
            Well    Collision, 1/sec
              W1         2.30826e+09
      global relaxation matrix dimension = 248
      setting global matrices ... done, cpu time[sec] = 0.130232, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.27204, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
              15782      8320.63      4625.76      4852.53      676.994      27132.1      6984.19
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0167    0.0167         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000273    0.0167     0.992
         *Z       ---       ---  1.83e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0167312
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.983296    0.0167035    0.0140656   0.00173056  8.45349e-05  0.000278132   1.2522e-05  0.000526534  5.67462e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.10671, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 2700 K
            Well    Collision, 1/sec
              W1         3.07768e+09
      global relaxation matrix dimension = 248
      setting global matrices ... done, cpu time[sec] = 0.127635, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.26879, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            11836.5      6240.47      3469.32      3639.39      507.746      20349.1      5238.15
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0162     0.016         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000262     0.016    -0.992
         *Z       ---       ---  1.83e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0159943
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.984032    0.0159679    0.0134957   0.00158627  8.08773e-05  0.000256434  1.18401e-05  0.000531072  5.68559e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.63103, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 2700 K
            Well    Collision, 1/sec
              W1          3.8471e+09
      global relaxation matrix dimension = 248
      setting global matrices ... done, cpu time[sec] = 0.127407, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.28565, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            9469.21      4992.38      2775.45      2911.52      406.197      16279.3      4190.52
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0158    0.0154         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000254    0.0154    -0.992
         *Z       ---       ---  1.83e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0154164
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.984609    0.0153909    0.0130392   0.00148143  7.81181e-05  0.000240931  1.13395e-05  0.000534192  5.69629e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.64849, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 2700 K
            Well    Collision, 1/sec
              W1         4.61652e+09
      global relaxation matrix dimension = 248
      setting global matrices ... done, cpu time[sec] = 0.127773, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.30096, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            7891.01      4160.31      2312.88      2426.26      338.497      13566.1       3492.1
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0154    0.0149         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000247    0.0149    -0.993
         *Z       ---       ---  1.83e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0149409
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.985084    0.0149162     0.012658   0.00140016  7.59072e-05   0.00022903  1.09468e-05  0.000536413  5.70673e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.669, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 2700 K
            Well    Collision, 1/sec
              W1         5.38594e+09
      global relaxation matrix dimension = 248
      setting global matrices ... done, cpu time[sec] = 0.129832, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.32307, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            6763.72      3565.98      1982.47      2079.65       290.14        11628      2993.23
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0152    0.0145         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000241    0.0145     0.993
         *Z       ---       ---  1.83e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.014537
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.985487     0.014513    0.0123307   0.00133443  7.40651e-05  0.000219459   1.0625e-05   0.00053802  5.71692e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.69306, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 2700 K
            Well    Collision, 1/sec
              W1         6.15536e+09
      global relaxation matrix dimension = 248
      setting global matrices ... done, cpu time[sec] = 0.129289, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.32127, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            5918.26      3120.24      1734.66       1819.7      253.873      10174.5      2619.07
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0149    0.0142         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000236    0.0142     0.993
         *Z       ---       ---  1.83e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0141862
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.985837    0.0141627    0.0120438   0.00127962  7.24877e-05  0.000211506  1.03533e-05  0.000539186  5.72687e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.69125, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2800 K
      Energy reference = 82562 1/cm
      Energy step      = 467 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -43.1 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.005588
         W1 Well: collisional kernel bandwidth = 26
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.12585
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.085987
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.078599
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.336649
         W1 Well: minimal relaxation eigenvalue = 0.00986391
         W1 Well: maximal relaxation eigenvalue = 2.18155
         W1 Well:       grid size = 245
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31853 1/cm
         B1 Barrier:        grid size = 177
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -97 1/cm
         B2 Barrier:        grid size = 177
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = -97 1/cm
         B3 Barrier:        grid size = 187
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4767 1/cm
         B4 Barrier:        grid size = 191
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6635 1/cm
         B5 Barrier: nonpositive number of states at -23447 1/cm => truncating
         B5 Barrier:        grid size = 227
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23447 1/cm
         B6 Barrier:        grid size = 174
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1303 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4572 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.89493, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31853 -23447 3.45e+05 5.17e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -97 6.43e+18
         B2    -97 3.53e+18
         B3  -4767 2.06e+18
         B4  -6635 2.15e+18
         B5 -23447 3.02e+17
         B6   1304 1.14e+19
         B7   4573    3e+18
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  3.85e-17  8.09e-17  4.29e-17  2.15e-17  4.86e-21   6.7e-16  1.19e-14
          R   2.6e+16         1       2.1      1.11      0.56  0.000126      17.4       309
         P1  1.24e+16     0.476         1      0.53     0.266  6.01e-05      8.28       147
         P2  2.33e+16     0.897      1.89         1     0.503  0.000113      15.6       277
         P3  4.64e+16      1.79      3.75      1.99         1  0.000225      31.1       552
         P4  2.06e+20  7.92e+03  1.66e+04  8.83e+03  4.44e+03         1  1.38e+05  2.45e+06
         P5  1.49e+15    0.0574     0.121     0.064    0.0322  7.25e-06         1      17.7
         P6  8.41e+13   0.00324    0.0068   0.00361   0.00181  4.09e-07    0.0564         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1   8.2e-20  1.72e-19  9.14e-20  4.59e-20  1.04e-23  1.43e-18  2.53e-17
          R  1.22e+19         1       2.1      1.11      0.56  0.000126      17.4       309
         P1   5.8e+18     0.476         1      0.53     0.266  6.01e-05      8.28       147
         P2  1.09e+19     0.897      1.89         1     0.503  0.000113      15.6       277
         P3  2.18e+19      1.79      3.75      1.99         1  0.000225      31.1       552
         P4  9.66e+22  7.92e+03  1.66e+04  8.83e+03  4.44e+03         1  1.38e+05  2.45e+06
         P5     7e+17    0.0574     0.121     0.064    0.0322  7.25e-06         1      17.7
         P6  3.95e+16   0.00324    0.0068   0.00361   0.00181  4.09e-07    0.0564         1
   MasterEquation::set:  done, cpu time[sec] = 0.905917, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 2800 K
            Well    Collision, 1/sec
              W1         1.50291e+08
      global relaxation matrix dimension = 245
      setting global matrices ... done, cpu time[sec] = 0.126384, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.18231, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             248051       136286      79500.6      83132.5      11668.3       439037       115848
      eigenvector populations normalized:
          L        *R        *P        W1
          0     0.027    0.0329         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0    0.0005    0.0329     0.983
         *Z       ---       ---  1.48e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0329315
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.967123    0.0328775    0.0259844   0.00495029   0.00018939  0.000942942  3.29731e-05  0.000767552  9.95666e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.55384, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 2800 K
            Well    Collision, 1/sec
              W1         4.50873e+08
      global relaxation matrix dimension = 245
      setting global matrices ... done, cpu time[sec] = 0.125421, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.20769, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            82683.6      45428.7      26500.2      27710.8      3889.42       146346      38616.1
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0253    0.0299         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000458    0.0299     0.985
         *Z       ---       ---  1.48e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0299128
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.970136    0.0298637    0.0243769   0.00385516  0.000158843  0.000646601  2.54216e-05  0.000790733  9.96514e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.57671, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 2800 K
            Well    Collision, 1/sec
              W1         7.51455e+08
      global relaxation matrix dimension = 245
      setting global matrices ... done, cpu time[sec] = 0.125973, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.20897, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            49610.2      27257.2      15900.1      16626.5      2333.65      87807.3      23169.7
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0244    0.0283         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000437    0.0283    -0.986
         *Z       ---       ---  1.48e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0283493
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.971697    0.0283027    0.0233828   0.00338222  0.000147476   0.00055332  2.28876e-05  0.000804081  9.97312e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.57847, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 2800 K
            Well    Collision, 1/sec
              W1         1.05204e+09
      global relaxation matrix dimension = 245
      setting global matrices ... done, cpu time[sec] = 0.126332, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.22486, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            35435.8      19469.5      11357.2      11876.1      1666.89      62719.5      16549.8
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0238    0.0273         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000422    0.0273     0.986
         *Z       ---       ---  1.48e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0272696
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.972775    0.0272248    0.0226458    0.0030918  0.000140621  0.000501843  2.14367e-05  0.000813397  9.98089e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.59569, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 2800 K
            Well    Collision, 1/sec
              W1         1.35262e+09
      global relaxation matrix dimension = 245
      setting global matrices ... done, cpu time[sec] = 0.125733, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.24479, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            27561.2      15142.9       8833.4      9236.94      1296.47      48781.9        12872
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0233    0.0264         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   0.00041    0.0264     0.987
         *Z       ---       ---  1.48e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0264397
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.973604    0.0263963    0.0220553   0.00288685   0.00013576  0.000467529   2.0443e-05   0.00082045   9.9885e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.61461, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 2800 K
            Well    Collision, 1/sec
              W1         1.50291e+09
      global relaxation matrix dimension = 245
      setting global matrices ... done, cpu time[sec] = 0.126455, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.24141, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            24805.1      13628.6      7950.06      8313.25      1166.83      43903.7      11584.8
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0231    0.0261         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000405    0.0261     0.987
         *Z       ---       ---  1.48e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0260862
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.973957    0.0260434     0.021798   0.00280405  0.000133779  0.000454062  2.00464e-05  0.000823397  9.99227e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.61277, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 2800 K
            Well    Collision, 1/sec
              W1         2.25437e+09
      global relaxation matrix dimension = 245
      setting global matrices ... done, cpu time[sec] = 0.126321, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.26508, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            16536.7      9085.74      5300.04      5542.16      777.884      29269.1      7723.22
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0222    0.0247         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000386    0.0247     0.988
         *Z       ---       ---  1.48e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0246979
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.975343    0.0246573    0.0207585   0.00250265  0.000126419  0.000406637  1.86147e-05  0.000834449  1.00107e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.63665, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 2800 K
            Well    Collision, 1/sec
              W1         3.00582e+09
      global relaxation matrix dimension = 245
      setting global matrices ... done, cpu time[sec] = 0.126543, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.24962, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            12402.5      6814.31      3975.03      4156.62      583.413      21951.8      5792.41
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0216    0.0237         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000372    0.0237     0.988
         *Z       ---       ---  1.48e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0236889
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1      0.97635      0.02365    0.0199773   0.00230517  0.000121411  0.000376662  1.76773e-05  0.000841744  1.00287e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.62106, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 2800 K
            Well    Collision, 1/sec
              W1         3.75728e+09
      global relaxation matrix dimension = 245
      setting global matrices ... done, cpu time[sec] = 0.128567, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.27645, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            9922.03      5451.45      3180.02       3325.3      466.731      17561.5      4633.93
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0211    0.0229         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000361    0.0229     0.988
         *Z       ---       ---  1.48e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0228946
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.977143     0.022857    0.0193492   0.00216106  0.000117626  0.000355198  1.69879e-05  0.000846901  1.00461e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.64966, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 2800 K
            Well    Collision, 1/sec
              W1         4.50873e+09
      global relaxation matrix dimension = 245
      setting global matrices ... done, cpu time[sec] = 0.126636, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.26165, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            8268.36      4542.87      2650.02      2771.08      388.942      14634.6      3861.61
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0207    0.0222         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000352    0.0222    -0.989
         *Z       ---       ---  1.48e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0222391
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.977797    0.0222026    0.0188231     0.002049  0.000114587   0.00033869   1.6446e-05   0.00085069  1.00632e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.63274, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 2800 K
            Well    Collision, 1/sec
              W1         5.26019e+09
      global relaxation matrix dimension = 245
      setting global matrices ... done, cpu time[sec] = 0.126925, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.29353, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            7087.17      3893.89      2271.45      2375.21      333.379      12543.9      3309.95
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0204    0.0217         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000344    0.0217     0.989
         *Z       ---       ---  1.48e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.021681
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.978355    0.0216454    0.0183703   0.00195811  0.000112051  0.000325392  1.60014e-05  0.000853536  1.00798e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.66547, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 2800 K
            Well    Collision, 1/sec
              W1         6.01164e+09
      global relaxation matrix dimension = 245
      setting global matrices ... done, cpu time[sec] = 0.126712, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.25768, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            6201.27      3407.15      1987.52      2078.31      291.707      10975.9      2896.21
      eigenvector populations normalized:
          L        *R        *P        W1
          0      0.02    0.0212         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000338    0.0212    -0.989
         *Z       ---       ---  1.48e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0211951
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1      0.97884    0.0211603    0.0179725   0.00188215  0.000109876  0.000314324  1.56254e-05  0.000855699   1.0096e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.62941, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2900 K
      Energy reference = 85343 1/cm
      Energy step      = 483 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -40.7 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.005613
         W1 Well: collisional kernel bandwidth = 26
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.126794
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.084569
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.08898
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.320326
         W1 Well: minimal relaxation eigenvalue = 0.00970545
         W1 Well: maximal relaxation eigenvalue = 7.45437
         W1 Well:       grid size = 243
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -32026 1/cm
         B1 Barrier:        grid size = 177
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -148 1/cm
         B2 Barrier:        grid size = 177
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = -148 1/cm
         B3 Barrier:        grid size = 187
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4978 1/cm
         B4 Barrier:        grid size = 190
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6427 1/cm
         B5 Barrier: nonpositive number of states at -23815 1/cm => truncating
         B5 Barrier:        grid size = 226
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23815 1/cm
         B6 Barrier:        grid size = 174
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1300 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4681 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.887395, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -32026 -23815 2.63e+05 6.73e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -148 8.54e+18
         B2   -148 4.88e+18
         B3  -4978 2.99e+18
         B4  -6427 3.11e+18
         B5 -23815 4.39e+17
         B6   1301 1.55e+19
         B7   4682  4.2e+18
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.18e-17  4.64e-17  2.62e-17  1.36e-17  4.24e-21  3.58e-16     6e-15
          R  4.59e+16         1      2.13       1.2     0.623  0.000194      16.4       275
         P1  2.15e+16      0.47         1     0.565     0.293  9.13e-05      7.71       129
         P2  3.81e+16     0.832      1.77         1     0.518  0.000162      13.6       229
         P3  7.36e+16       1.6      3.42      1.93         1  0.000312      26.3       442
         P4  2.36e+20  5.15e+03   1.1e+04  6.19e+03  3.21e+03         1  8.44e+04  1.42e+06
         P5  2.79e+15     0.061      0.13    0.0733     0.038  1.18e-05         1      16.8
         P6  1.67e+14   0.00363   0.00773   0.00437   0.00226  7.06e-07    0.0596         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  4.81e-20  1.02e-19  5.78e-20     3e-20  9.34e-24  7.89e-19  1.32e-17
          R  2.08e+19         1      2.13       1.2     0.623  0.000194      16.4       275
         P1  9.77e+18      0.47         1     0.565     0.293  9.13e-05      7.71       129
         P2  1.73e+19     0.832      1.77         1     0.518  0.000162      13.6       229
         P3  3.34e+19       1.6      3.42      1.93         1  0.000312      26.3       442
         P4  1.07e+23  5.15e+03   1.1e+04  6.19e+03  3.21e+03         1  8.44e+04  1.42e+06
         P5  1.27e+18     0.061      0.13    0.0733     0.038  1.18e-05         1      16.8
         P6  7.56e+16   0.00363   0.00773   0.00437   0.00226  7.06e-07    0.0596         1
   MasterEquation::set:  done, cpu time[sec] = 0.89847, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 2900 K
            Well    Collision, 1/sec
              W1         1.46905e+08
      global relaxation matrix dimension = 243
      setting global matrices ... done, cpu time[sec] = 0.125964, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.15522, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             258727       147935      90521.9      94373.3      13321.5       470914       127210
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0341    0.0457         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000675    0.0457     0.977
         *Z       ---       ---  1.23e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0456808
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.954395    0.0456054    0.0361062   0.00672935  0.000263517   0.00127156  4.53038e-05   0.00117265  1.67886e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.51903, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 2900 K
            Well    Collision, 1/sec
              W1         4.40715e+08
      global relaxation matrix dimension = 243
      setting global matrices ... done, cpu time[sec] = 0.124856, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.18778, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            86242.3      49311.6        30174      31457.8      4440.51       156971      42403.3
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0321    0.0418         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000622    0.0418     0.979
         *Z       ---       ---  1.23e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0417909
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.958278    0.0417219    0.0340719   0.00528276  0.000223862  0.000885429  3.54822e-05   0.00120566  1.68021e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.5438, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 2900 K
            Well    Collision, 1/sec
              W1         7.34524e+08
      global relaxation matrix dimension = 243
      setting global matrices ... done, cpu time[sec] = 0.124492, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.20766, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            51745.4        29587      18104.4      18874.7      2664.31      94182.8        25442
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0311    0.0398         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000594    0.0398      0.98
         *Z       ---       ---  1.23e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0397618
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.960304    0.0396962    0.0327932   0.00465676  0.000209069  0.000763313  3.21744e-05   0.00122485  1.68147e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.56161, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 2900 K
            Well    Collision, 1/sec
              W1         1.02833e+09
      global relaxation matrix dimension = 243
      setting global matrices ... done, cpu time[sec] = 0.124674, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.20228, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
              36961      21133.6      12931.7      13481.9      1903.08      67273.5      18172.8
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0303    0.0384         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000575    0.0384     0.981
         *Z       ---       ---  1.23e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0383553
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.961708     0.038292    0.0318388   0.00427181  0.000200134  0.000695741  3.02763e-05   0.00123837  1.68268e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.55734, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 2900 K
            Well    Collision, 1/sec
              W1         1.32214e+09
      global relaxation matrix dimension = 243
      setting global matrices ... done, cpu time[sec] = 0.124186, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.21761, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            28747.4      16437.2        10058      10485.9      1480.17      52323.8      14134.4
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0298    0.0373         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   0.00056    0.0373    -0.981
         *Z       ---       ---  1.23e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.037271
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1      0.96279    0.0372095    0.0310708   0.00399983  0.000193788  0.000650606  2.89743e-05   0.00124869  1.68388e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.57205, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 2900 K
            Well    Collision, 1/sec
              W1         1.46905e+09
      global relaxation matrix dimension = 243
      setting global matrices ... done, cpu time[sec] = 0.12508, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.21957, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            25872.7      14793.5      9052.19      9437.33      1332.15      47091.4        12721
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0295    0.0368         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000554    0.0368     0.981
         *Z       ---       ---  1.23e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0368084
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.963252    0.0367476    0.0307354   0.00388986  0.000191199   0.00063287  2.84541e-05   0.00125303  1.68447e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.57567, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 2900 K
            Well    Collision, 1/sec
              W1         2.20357e+09
      global relaxation matrix dimension = 243
      setting global matrices ... done, cpu time[sec] = 0.124861, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.23705, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            17248.5      9862.32      6034.79      6291.56      888.102      31394.3      8480.66
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0286     0.035         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000529     0.035     0.982
         *Z       ---       ---  1.23e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0349865
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.965071    0.0349287    0.0293749   0.00348901  0.000181567  0.000570293  2.65733e-05   0.00126949  1.68735e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.59238, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 2900 K
            Well    Collision, 1/sec
              W1          2.9381e+09
      global relaxation matrix dimension = 243
      setting global matrices ... done, cpu time[sec] = 0.125148, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.23416, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            12936.3      7396.74       4526.1      4718.67      666.076      23545.7       6360.5
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0278    0.0337         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000511    0.0337    -0.983
         *Z       ---       ---  1.23e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0336573
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.966398    0.0336018    0.0283475   0.00322583  0.000174997  0.000530629  2.53389e-05   0.00128057  1.69014e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.58947, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 2900 K
            Well    Collision, 1/sec
              W1         3.67262e+09
      global relaxation matrix dimension = 243
      setting global matrices ... done, cpu time[sec] = 0.125073, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.25289, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            10349.1      5917.39      3620.88      3774.93      532.861      18836.6       5088.4
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0273    0.0326         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000496    0.0326     0.984
         *Z       ---       ---  1.23e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0326079
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.967446    0.0325541    0.0275186   0.00303343  0.000170021  0.000502163  2.44292e-05   0.00128857  1.69285e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.60868, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 2900 K
            Well    Collision, 1/sec
              W1         4.40715e+09
      global relaxation matrix dimension = 243
      setting global matrices ... done, cpu time[sec] = 0.124996, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.24497, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            8624.23      4931.16       3017.4      3145.78      444.051      15697.1      4240.33
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0268    0.0317         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000485    0.0317     0.984
         *Z       ---       ---  1.23e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0317398
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.968313    0.0316874    0.0268223    0.0028836  0.000166019   0.00048023  2.37131e-05   0.00129457   1.6955e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.60028, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 2900 K
            Well    Collision, 1/sec
              W1         5.14167e+09
      global relaxation matrix dimension = 243
      setting global matrices ... done, cpu time[sec] = 0.12437, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.2544, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             7392.2      4226.71      2586.34      2696.38      380.615      13454.7      3634.57
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0264     0.031         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000475     0.031     0.984
         *Z       ---       ---  1.23e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0309991
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.969052    0.0309479    0.0262215   0.00276191  0.000162674  0.000462533  2.31246e-05    0.0012992  1.69808e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.60932, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 2900 K
            Well    Collision, 1/sec
              W1         5.87619e+09
      global relaxation matrix dimension = 243
      setting global matrices ... done, cpu time[sec] = 0.12552, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.26627, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            6468.17      3698.37      2263.05      2359.33      333.038      11772.9      3180.25
      eigenvector populations normalized:
          L        *R        *P        W1
          0     0.026    0.0304         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000466    0.0304     0.985
         *Z       ---       ---  1.23e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.030353
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.969697    0.0303029    0.0256927   0.00266009  0.000159801  0.000447783  2.26263e-05   0.00130283   1.7006e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.62364, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 3000 K
      Energy reference = 88123 1/cm
      Energy step      = 500 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -38.3 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.005457
         W1 Well: collisional kernel bandwidth = 26
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.121997
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.082177
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.081058
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.321687
         W1 Well: minimal relaxation eigenvalue = 0.00955724
         W1 Well: maximal relaxation eigenvalue = 2.36185
         W1 Well:       grid size = 240
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31876 1/cm
         B1 Barrier:        grid size = 177
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -376 1/cm
         B2 Barrier:        grid size = 176
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 123 1/cm
         B3 Barrier:        grid size = 186
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4876 1/cm
         B4 Barrier:        grid size = 189
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6376 1/cm
         B5 Barrier: nonpositive number of states at -23377 1/cm => truncating
         B5 Barrier:        grid size = 223
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23376 1/cm
         B6 Barrier:        grid size = 174
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1123 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4623 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.874027, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31876 -23376 3.63e+05 8.72e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -376 1.12e+19
         B2    124 6.68e+18
         B3  -4876 4.28e+18
         B4  -6376 4.45e+18
         B5 -23376 6.32e+17
         B6   1124  2.1e+19
         B7   4624  5.8e+18
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.28e-17  2.76e-17  1.66e-17  8.83e-18  3.73e-21  1.99e-16  3.17e-15
          R  7.79e+16         1      2.15      1.29     0.689  0.000291      15.5       247
         P1  3.62e+16     0.464         1     0.599      0.32  0.000135      7.19       115
         P2  6.04e+16     0.775      1.67         1     0.534  0.000225        12       191
         P3  1.13e+17      1.45      3.13      1.87         1  0.000422      22.5       359
         P4  2.68e+20  3.44e+03  7.41e+03  4.44e+03  2.37e+03         1  5.33e+04   8.5e+05
         P5  5.03e+15    0.0645     0.139    0.0833    0.0444  1.87e-05         1      15.9
         P6  3.16e+14   0.00405   0.00873   0.00523   0.00279  1.18e-06    0.0628         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.93e-20  6.31e-20  3.78e-20  2.02e-20  8.51e-24  4.54e-19  7.23e-18
          R  3.42e+19         1      2.15      1.29     0.689  0.000291      15.5       247
         P1  1.59e+19     0.464         1     0.599      0.32  0.000135      7.19       115
         P2  2.65e+19     0.775      1.67         1     0.534  0.000225        12       191
         P3  4.96e+19      1.45      3.13      1.87         1  0.000422      22.5       359
         P4  1.18e+23  3.44e+03  7.41e+03  4.44e+03  2.37e+03         1  5.33e+04   8.5e+05
         P5   2.2e+18    0.0645     0.139    0.0833    0.0444  1.87e-05         1      15.9
         P6  1.38e+17   0.00405   0.00873   0.00523   0.00279  1.18e-06    0.0628         1
   MasterEquation::set:  done, cpu time[sec] = 0.885153, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 3000 K
            Well    Collision, 1/sec
              W1         1.43707e+08
      global relaxation matrix dimension = 240
      setting global matrices ... done, cpu time[sec] = 0.120897, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.12559, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             268741       159701       102469       106526      15117.9       502463       138788
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0418    0.0613         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   0.00089    0.0613    -0.969
         *Z       ---       ---  1.03e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0613185
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R       1.1
         P1       1.1
         P2       1.1
         P3       1.1
         P4       1.1
         P5       1.1
         P6       1.1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.938784    0.0612157    0.0483942   0.00900499  0.000353717   0.00164926   6.0013e-05   0.00172633   2.7181e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.48112, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 3000 K
            Well    Collision, 1/sec
              W1          4.3112e+08
      global relaxation matrix dimension = 240
      setting global matrices ... done, cpu time[sec] = 0.120654, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.15306, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            89580.3      53233.7      34156.3      35508.8      5039.31       167488      46262.6
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0395    0.0564         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000822    0.0564    -0.971
         *Z       ---       ---  1.03e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0563962
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R       1.1
         P1       1.1
         P2       1.1
         P3       1.1
         P4       1.1
         P5       1.1
         P6       1.1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.943698    0.0563017    0.0459348   0.00704615  0.000304767    0.0011692  4.78322e-05    0.0017718  2.72016e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.50809, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 3000 K
            Well    Collision, 1/sec
              W1         7.18534e+08
      global relaxation matrix dimension = 240
      setting global matrices ... done, cpu time[sec] = 0.120996, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.17088, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            53748.2      31940.2      20493.8      21305.3      3023.59       100493      27757.6
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0384    0.0538         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000786    0.0538    -0.973
         *Z       ---       ---  1.03e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0538335
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R       1.1
         P1       1.1
         P2       1.1
         P3       1.1
         P4       1.1
         P5       1.1
         P6       1.1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.946257    0.0537433    0.0443492   0.00622278  0.000286293   0.00101566  4.36851e-05   0.00179848  2.72206e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.52724, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 3000 K
            Well    Collision, 1/sec
              W1         1.00595e+09
      global relaxation matrix dimension = 240
      setting global matrices ... done, cpu time[sec] = 0.121357, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.15414, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            38391.6      22814.5      14638.4      15218.1      2159.71      71780.4      19826.8
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0375    0.0521         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000762    0.0521     0.974
         *Z       ---       ---  1.03e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0520551
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R       1.1
         P1       1.1
         P2       1.1
         P3       1.1
         P4       1.1
         P5       1.1
         P6       1.1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.948032    0.0519679    0.0431565   0.00571993  0.000275091  0.000930351  4.12965e-05   0.00181742   2.7239e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.51151, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 3000 K
            Well    Collision, 1/sec
              W1         1.29336e+09
      global relaxation matrix dimension = 240
      setting global matrices ... done, cpu time[sec] = 0.12111, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.16822, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            29860.1      17744.6      11385.4      11836.3      1679.77      55829.2      15420.9
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0369    0.0507         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000743    0.0507    -0.974
         *Z       ---       ---  1.03e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0506823
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R       1.1
         P1       1.1
         P2       1.1
         P3       1.1
         P4       1.1
         P5       1.1
         P6       1.1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.949403    0.0505974    0.0421924   0.00536573  0.000267118  0.000873217  3.96543e-05   0.00183198  2.72569e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.52267, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 3000 K
            Well    Collision, 1/sec
              W1         1.43707e+09
      global relaxation matrix dimension = 240
      setting global matrices ... done, cpu time[sec] = 0.121289, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.18524, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            26874.1      15970.1      10246.9      10652.6      1511.79      50246.3      13878.8
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0366    0.0501         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000735    0.0501     0.975
         *Z       ---       ---  1.03e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0500959
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R       1.1
         P1       1.1
         P2       1.1
         P3       1.1
         P4       1.1
         P5       1.1
         P6       1.1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.949988     0.050012    0.0417703    0.0052227   0.00026386  0.000850731  3.89972e-05   0.00183813  2.72657e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.54076, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 3000 K
            Well    Collision, 1/sec
              W1          2.1556e+09
      global relaxation matrix dimension = 240
      setting global matrices ... done, cpu time[sec] = 0.121624, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.20771, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            17916.1      10646.7      6831.26      7101.76      1007.86      33497.5      9252.53
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0355    0.0478         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000704    0.0478    -0.976
         *Z       ---       ---  1.03e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0477828
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R       1.1
         P1       1.1
         P2       1.1
         P3       1.1
         P4       1.1
         P5       1.1
         P6       1.1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.952297    0.0477027    0.0400522   0.00470202  0.000251719  0.000771226  3.66174e-05   0.00186167  2.73088e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.56343, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 3000 K
            Well    Collision, 1/sec
              W1         2.87414e+09
      global relaxation matrix dimension = 240
      setting global matrices ... done, cpu time[sec] = 0.121413, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.1807, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
              13437      7985.06      5123.45      5326.32      755.897      25123.1      6939.39
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0347    0.0461         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000681    0.0461     0.977
         *Z       ---       ---  1.03e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0460907
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.953987    0.0460135    0.0387487   0.00436048  0.000243416  0.000720683  3.50516e-05   0.00187777  2.73505e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.5372, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 3000 K
            Well    Collision, 1/sec
              W1         3.59267e+09
      global relaxation matrix dimension = 240
      setting global matrices ... done, cpu time[sec] = 0.121448, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.22421, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            10749.6      6388.05      4098.76      4261.06      604.717      20098.5      5551.52
      eigenvector populations normalized:
          L        *R        *P        W1
          0     0.034    0.0448         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000663    0.0448    -0.977
         *Z       ---       ---  1.03e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0447516
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.955323    0.0446767    0.0376935   0.00411082  0.000237114   0.00068433  3.38955e-05   0.00188957   2.7391e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.58034, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 3000 K
            Well    Collision, 1/sec
              W1          4.3112e+09
      global relaxation matrix dimension = 240
      setting global matrices ... done, cpu time[sec] = 0.121752, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.1932, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            8958.03      5323.37      3415.63      3550.88      503.931      16748.8      4626.26
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0335    0.0436         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000648    0.0436     0.978
         *Z       ---       ---  1.03e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0436418
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.956431    0.0435686     0.036805   0.00391635  0.000232038  0.000656268  3.29838e-05    0.0018986  2.74304e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.5497, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 3000 K
            Well    Collision, 1/sec
              W1         5.02974e+09
      global relaxation matrix dimension = 240
      setting global matrices ... done, cpu time[sec] = 0.121389, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.22761, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            7678.31      4562.89      2927.68      3043.61      431.941      14356.1      3965.37
      eigenvector populations normalized:
          L        *R        *P        W1
          0     0.033    0.0427         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000635    0.0427     0.978
         *Z       ---       ---  1.03e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0426931
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.957378    0.0426216    0.0360365   0.00375834  0.000227788  0.000633589  3.22336e-05   0.00190568  2.74687e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.58379, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 3000 K
            Well    Collision, 1/sec
              W1         5.74827e+09
      global relaxation matrix dimension = 240
      setting global matrices ... done, cpu time[sec] = 0.12172, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.21713, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            6718.52      3992.53      2561.72      2663.16      377.948      12561.6       3469.7
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0326    0.0419         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000624    0.0419     0.979
         *Z       ---       ---  1.03e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0418643
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.958206    0.0417942    0.0353588   0.00362608  0.000224133  0.000614662  3.15976e-05   0.00191134  2.75062e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.57362, elapsed time[sec] = 0
rate calculation done, cpu time[sec] = 6719.09, elapsed time[sec] = 197
