Model::init:  starts
   Model::ExponentialKernel::ExponentialKernel:  ... done
   Model::LennardJonesCollision::LennardJonesCollision:  ... done
   WELL: W1
   Model::RRHO::RRHO:  starts
      Model::new_core:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.00108, elapsed time[sec] = 0
      Model::new_core:  done, cpu time[sec] = 0.003119, elapsed time[sec] = 0
      1-th ROTOR:
      Model::HinderedRotor::HinderedRotor:  starts
         Model::HinderedRotor::_read:  starts
         Model::HinderedRotor::_read:  done, cpu time[sec] = 0.001339, elapsed time[sec] = 0
         Model::HinderedRotor::_init: WARNING: potential second derivative at the minimum is negative, assuming zero
         effective rotational constant[1/cm]  = 27.3382
         analytic  frequency at minimum[1/cm] = 0
         numerical frequency at minimum[1/cm] = 0
         minimum energy[kcal/mol]             = 0
         maximum energy[kcal/mol]             = 0
         maximum frequency[1/cm]              = 0
         ground energy [kcal/mol]             = 0
         highest energy level [kcal/mol]      = 19462.6
         number of levels                     = 999
         10 lowest excited states [kcal/mol] relative to the ground: 0.0782 0.0782 0.313 0.313 0.703 0.703 1.25 1.25 1.95
         Statistical Weight (*** - deep tunneling regime):
          T, K        Quantum             PG             PI  ***
           100        2.82615        2.82615        2.82615
           200        3.99678        3.99678        3.99678
           300        4.89503        4.89503        4.89503
           400         5.6523         5.6523         5.6523
           500        6.31946        6.31946        6.31946
           600        6.92262        6.92262        6.92262
           700        7.47729        7.47729        7.47729
           800        7.99355        7.99355        7.99355
           900        8.47844        8.47844        8.47844
          1000        8.93707        8.93707        8.93707
      Model::HinderedRotor::HinderedRotor:  done, cpu time[sec] = 2.26013, elapsed time[sec] = 0
      ground state energy, kcal/mol:   -90.2506
      interpolating states number/density starts
         core state contribution ... done, cpu time[sec] = 0.162492, elapsed time[sec] = 0
         vibrational modes contribution ... done, cpu time[sec] = 0.405675, elapsed time[sec] = 0
         hindered rotors contribution starts
            Model::HinderedRotor::set:  starts
            Model::HinderedRotor::set:  done, cpu time[sec] = 0.000206, elapsed time[sec] = 0
         hindered rotors contribution done, cpu time[sec] = 0.742924, elapsed time[sec] = 0
         effective power exponent at 690.248 kcal/mol = 11.4574
      interpolating states number/density done, cpu time[sec] = 1.81122, elapsed time[sec] = 0
   Model::RRHO::RRHO:  done, cpu time[sec] = 4.08499, elapsed time[sec] = 0
   BIMOLECULAR: R
   Model::Bimolecular::Bimolecular:  starts
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: linear
               rotational constant[1/cm]:         18.6633
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 2.3e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 3.2e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 5.5e-05, elapsed time[sec] = 0
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:         9.55015        9.55009        4.77506
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.7e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 5e-05, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 0.000168, elapsed time[sec] = 0
   BIMOLECULAR: P1
   Model::Bimolecular::Bimolecular:  starts
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:         19.7111        11.2504        7.16236
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.9e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 3.8e-05, elapsed time[sec] = 0
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:         27.4886        14.3446        9.42584
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 9e-06, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.8e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 3.6e-05, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 0.000114, elapsed time[sec] = 0
   BIMOLECULAR: P2
   Model::Bimolecular::Bimolecular:  starts
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: linear
               rotational constant[1/cm]:         60.4042
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 9e-06, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.7e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 3.4e-05, elapsed time[sec] = 0
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:          9.3775        1.21307        1.07412
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.6e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 2.5e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 4.7e-05, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 0.000124, elapsed time[sec] = 0
   BIMOLECULAR: P3
   Model::Bimolecular::Bimolecular:  starts
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: linear
               rotational constant[1/cm]:         60.4042
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 9e-06, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.7e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 3.4e-05, elapsed time[sec] = 0
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:         9.70353        1.21666        1.08111
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 9e-06, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 2e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 4e-05, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 0.000113, elapsed time[sec] = 0
   BIMOLECULAR: P4
   Model::Bimolecular::Bimolecular:  starts
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: linear
               rotational constant[1/cm]:         60.4042
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 8e-06, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.6e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 3.4e-05, elapsed time[sec] = 0
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:         9.46633        1.30142        1.14413
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 9e-06, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.7e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 3.6e-05, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 0.000109, elapsed time[sec] = 0
   BIMOLECULAR: P5
   Model::Bimolecular::Bimolecular:  starts
      Model::AtomicFragment::AtomicFragment:  ... done
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:         6.45642       0.996004        0.86988
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.7e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 2.5e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 4.5e-05, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 8.4e-05, elapsed time[sec] = 0
   BIMOLECULAR: P6
   Model::Bimolecular::Bimolecular:  starts
      Model::AtomicFragment::AtomicFragment:  ... done
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:         5.24335        0.93381       0.927142
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 9e-06, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.8e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 3.8e-05, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 7.4e-05, elapsed time[sec] = 0
   BARRIER: B1
   Model::ReadSpecies::ReadSpecies: ... done, cpu time[sec] = 0.000869, elapsed time[sec] = 0
   BARRIER: B2
   Model::ReadSpecies::ReadSpecies: ... done, cpu time[sec] = 0.000847, elapsed time[sec] = 0
   BARRIER: B3
   Model::VarBarrier::VarBarrier:  starts
      1-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 8e-06, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.8e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -22.6613
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001448, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000514, elapsed time[sec] = 0
            effective power exponent at 622.659 kcal/mol = 11.9685
         interpolating states number/density done, cpu time[sec] = 0.019234, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.019306, elapsed time[sec] = 0
      2-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.3e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 2.4e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -19.4076
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001427, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000513, elapsed time[sec] = 0
            effective power exponent at 619.406 kcal/mol = 11.9694
         interpolating states number/density done, cpu time[sec] = 0.017366, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.017494, elapsed time[sec] = 0
      3-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 2.1e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -16.4142
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001423, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000501, elapsed time[sec] = 0
            effective power exponent at 616.412 kcal/mol = 11.9705
         interpolating states number/density done, cpu time[sec] = 0.017251, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.017347, elapsed time[sec] = 0
      4-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 2e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -13.678
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001411, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.00049, elapsed time[sec] = 0
            effective power exponent at 613.676 kcal/mol = 11.9714
         interpolating states number/density done, cpu time[sec] = 0.017446, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.017544, elapsed time[sec] = 0
      5-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 2.1e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -11.2049
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001413, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000507, elapsed time[sec] = 0
            effective power exponent at 611.203 kcal/mol = 11.9723
         interpolating states number/density done, cpu time[sec] = 0.017194, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.01729, elapsed time[sec] = 0
      6-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 3e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -9.00049
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001398, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000495, elapsed time[sec] = 0
            effective power exponent at 608.998 kcal/mol = 11.9731
         interpolating states number/density done, cpu time[sec] = 0.016881, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.016995, elapsed time[sec] = 0
      7-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 2e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -7.06773
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001397, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000492, elapsed time[sec] = 0
            effective power exponent at 607.066 kcal/mol = 11.9737
         interpolating states number/density done, cpu time[sec] = 0.016986, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.017088, elapsed time[sec] = 0
      8-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 2.1e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -5.40945
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001392, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000465, elapsed time[sec] = 0
            effective power exponent at 605.407 kcal/mol = 11.974
         interpolating states number/density done, cpu time[sec] = 0.016643, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.016739, elapsed time[sec] = 0
      9-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 2e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -4.05137
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001385, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000471, elapsed time[sec] = 0
            effective power exponent at 604.049 kcal/mol = 11.974
         interpolating states number/density done, cpu time[sec] = 0.016611, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.016705, elapsed time[sec] = 0
      10-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 2.1e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -2.98779
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001384, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000483, elapsed time[sec] = 0
            effective power exponent at 602.986 kcal/mol = 11.9739
         interpolating states number/density done, cpu time[sec] = 0.016788, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.016867, elapsed time[sec] = 0
      11-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 2.1e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -2.23584
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001378, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.00048, elapsed time[sec] = 0
            effective power exponent at 602.234 kcal/mol = 11.9738
         interpolating states number/density done, cpu time[sec] = 0.016751, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.01683, elapsed time[sec] = 0
      12-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.2e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 2e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -1.76409
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001376, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000473, elapsed time[sec] = 0
            effective power exponent at 601.762 kcal/mol = 11.9738
         interpolating states number/density done, cpu time[sec] = 0.01659, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.016654, elapsed time[sec] = 0
      13-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 2e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -1.54966
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001375, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000474, elapsed time[sec] = 0
            effective power exponent at 601.548 kcal/mol = 11.974
         interpolating states number/density done, cpu time[sec] = 0.016493, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.016561, elapsed time[sec] = 0
      14-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 2e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -1.6097
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001375, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000513, elapsed time[sec] = 0
            effective power exponent at 601.608 kcal/mol = 11.9746
         interpolating states number/density done, cpu time[sec] = 0.016807, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.016877, elapsed time[sec] = 0
      15-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.9e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -1.85844
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001379, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000491, elapsed time[sec] = 0
            effective power exponent at 601.856 kcal/mol = 11.9754
         interpolating states number/density done, cpu time[sec] = 0.016757, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.016834, elapsed time[sec] = 0
      16-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 2.1e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -2.25586
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001381, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000484, elapsed time[sec] = 0
            effective power exponent at 602.254 kcal/mol = 11.9765
         interpolating states number/density done, cpu time[sec] = 0.016612, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.016705, elapsed time[sec] = 0
      17-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 2.1e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -2.76478
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001372, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000458, elapsed time[sec] = 0
            effective power exponent at 602.763 kcal/mol = 11.978
         interpolating states number/density done, cpu time[sec] = 0.016534, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.01663, elapsed time[sec] = 0
      Model::EckartTunnel::EckartTunnel:  ... done
      interpolating states number/density ... done, cpu time[sec] = 1.34659, elapsed time[sec] = 2
      effective power exponent at 601.548 kcal/mol = 12.1579
      Constituent transition states partition functions
       T, K            1            2            3            4            5            6            7            8            9           10           11           12           13           14           15           16           17          Min
        100  3.90851e+23  3.05117e+16  8.82979e+09      9323.49    0.0370366  5.69093e-07   3.4347e-11  8.25406e-15  8.99826e-18  4.31673e-20  9.95766e-22  9.42125e-23  3.25854e-23  4.49365e-23  1.59917e-22  1.20344e-21  1.58791e-20  3.25853e-23
        200  4.74443e+13  1.32405e+10  7.11895e+06      7303.75      14.5603    0.0571085  0.000444429  6.90781e-06   2.2911e-07  1.59579e-08   2.4425e-09  7.58546e-10  4.51416e-10  5.37634e-10  1.02897e-09  2.86948e-09  1.06195e-08  4.51416e-10
        300  3.42099e+10  1.45681e+08       960377      9718.32      153.373      3.80009     0.148805   0.00925157  0.000956035  0.000162449  4.68096e-05  2.16894e-05   1.5566e-05  1.78004e-05  2.79599e-05  5.66189e-05  0.000138903   1.5566e-05
        400  1.19567e+09  1.99087e+07       459672      14594.6      647.271      40.2374      3.52783     0.437917    0.0798183     0.021197   0.00839753   0.00476942   0.00377863   0.00426111   0.00610409     0.010613    0.0213749   0.00377863
        500  1.97909e+08  7.47751e+06       366526      23109.1      1904.36      205.421      29.1834         5.48      1.40343     0.487441     0.234093     0.150591     0.127051     0.142683     0.194232     0.309627     0.556692      0.12705
        600  7.12397e+07  4.65261e+06       376964      37555.9      4677.31      728.298      142.671      35.2855      11.3336      4.70886      2.57331      1.80142      1.58842      1.78363      2.35302      3.54995       5.9344      1.58826
        700  3.98103e+07  3.84656e+06       446495      61693.5      10320.9      2088.69      514.634      154.919      58.4907       27.623       16.563      12.3266      11.2316      12.6303      16.3181      23.7079      37.6861      11.2266
        800  2.91324e+07   3.7782e+06       574567       101491      21189.1      5220.36       1527.7      532.884      227.126      118.089      75.9278      59.1877      55.3113      62.3214      79.3361      112.156      171.842       55.239
        900  2.53862e+07  4.14125e+06       777326       166256      41247.9      11844.4       3962.9      1550.26      726.116      406.859      276.234      223.279      212.875      240.329      302.589      418.986       624.19      212.262
       1000  2.48831e+07  4.87863e+06  1.08405e+06       270280      77001.1      24998.7      9311.41      3992.88      2016.92      1199.89      850.963      708.129      686.138      776.027      968.725      1319.68      1922.94      682.556
       1100  2.64619e+07  6.03232e+06  1.53927e+06       435181       138864      49855.4      20277.3       9374.7      5037.66      3147.57      2313.41      1971.51      1935.84      2192.89      2718.59      3654.94      5230.94      1919.88
       1200  2.98122e+07   7.7076e+06   2.2076e+06       693199       243163      94955.1      41563.7      20461.6        11578      7535.95      5706.13      4960.29       4924.8      5586.19      6885.95      9156.96      12911.8      4866.74
       1300  3.50062e+07  1.00695e+07  3.18087e+06  1.09177e+06       414995       174026      81070.3      42093.4      24883.1      16766.7      13019.4      11509.1      11534.2      13097.8      16067.6      21170.3      29478.5      11353.6
       1400  4.23545e+07  1.33522e+07  4.58797e+06  1.69982e+06       692254       308624       151675        82438      50597.4      35121.3      27867.1      24990.6      25245.9      28695.1      35055.3      45823.5      63123.6      24749.4
       1500  5.23704e+07  1.78764e+07  6.60797e+06  2.61623e+06  1.13123e+06       531879       273831       154861      98197.4      69940.8      56542.8      51340.1        52223      59403.9      72307.7      93870.2       128107      50986.5
       1600  6.57789e+07  2.40742e+07  9.48734e+06  3.98125e+06  1.81429e+06       893760       479280       280652       183119       133402       109627       100625       102971       117205       142208       183501       248385       100130
       1700  8.35518e+07  3.25215e+07  1.35624e+07  5.99168e+06  2.86022e+06  1.46833e+06       816282       492930       329848       245128       204372       189391       194829       221878       268440       344531       462986       188722
       1800  1.06962e+08  4.39799e+07  1.92885e+07  8.92067e+06  4.43819e+06  2.36363e+06  1.35686e+06       842134       576329       435957       368170       344086       355613       405162       488927       624511       833818       343202
       1900  1.37654e+08  5.94494e+07   2.7277e+07  1.31437e+07  6.78613e+06  3.73501e+06   2.2067e+06  1.40364e+06       980144       753276       643497       605970       628863       716746       862915  1.09746e+06  1.45678e+06       604809
       2000   1.7774e+08  8.02353e+07  3.83428e+07  1.91721e+07  1.02349e+07  5.80288e+06  3.51851e+06  2.28817e+06  1.62706e+06  1.26845e+06  1.09485e+06  1.03803e+06  1.08124e+06  1.23271e+06  1.48096e+06  1.87612e+06  2.47736e+06  1.03647e+06

   Model::VarBarrier::VarBarrier:  done, cpu time[sec] = 1.66457, elapsed time[sec] = 2
   BARRIER: B4
   Model::VarBarrier::VarBarrier:  starts
      1-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.2e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 2e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -21.8779
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001395, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000472, elapsed time[sec] = 0
            effective power exponent at 621.876 kcal/mol = 11.973
         interpolating states number/density done, cpu time[sec] = 0.017942, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.018022, elapsed time[sec] = 0
      2-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.8e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -18.8158
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001378, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000479, elapsed time[sec] = 0
            effective power exponent at 618.814 kcal/mol = 11.973
         interpolating states number/density done, cpu time[sec] = 0.016806, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.016871, elapsed time[sec] = 0
      3-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.6e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -16.0339
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001373, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000468, elapsed time[sec] = 0
            effective power exponent at 616.032 kcal/mol = 11.973
         interpolating states number/density done, cpu time[sec] = 0.016513, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.016577, elapsed time[sec] = 0
      4-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.6e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -13.5322
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001367, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.00049, elapsed time[sec] = 0
            effective power exponent at 613.53 kcal/mol = 11.9729
         interpolating states number/density done, cpu time[sec] = 0.016491, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.016552, elapsed time[sec] = 0
      5-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 9e-06, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.6e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -11.3135
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.00136, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000457, elapsed time[sec] = 0
            effective power exponent at 611.311 kcal/mol = 11.9725
         interpolating states number/density done, cpu time[sec] = 0.016626, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.016688, elapsed time[sec] = 0
      6-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.6e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -9.39794
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001356, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000469, elapsed time[sec] = 0
            effective power exponent at 609.396 kcal/mol = 11.972
         interpolating states number/density done, cpu time[sec] = 0.016575, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.016638, elapsed time[sec] = 0
      7-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.7e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -7.79112
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001349, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000471, elapsed time[sec] = 0
            effective power exponent at 607.789 kcal/mol = 11.9714
         interpolating states number/density done, cpu time[sec] = 0.016364, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.01643, elapsed time[sec] = 0
      8-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.8e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -6.49595
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001347, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.00049, elapsed time[sec] = 0
            effective power exponent at 606.494 kcal/mol = 11.9706
         interpolating states number/density done, cpu time[sec] = 0.01646, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.016524, elapsed time[sec] = 0
      9-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 9e-06, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.5e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -5.53243
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001339, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000467, elapsed time[sec] = 0
            effective power exponent at 605.53 kcal/mol = 11.9698
         interpolating states number/density done, cpu time[sec] = 0.016211, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.016274, elapsed time[sec] = 0
      10-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.7e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -4.86054
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001346, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.00047, elapsed time[sec] = 0
            effective power exponent at 604.858 kcal/mol = 11.9691
         interpolating states number/density done, cpu time[sec] = 0.016524, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.016592, elapsed time[sec] = 0
      11-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.2e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 2.1e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -4.47456
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001417, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000465, elapsed time[sec] = 0
            effective power exponent at 604.472 kcal/mol = 11.9684
         interpolating states number/density done, cpu time[sec] = 0.016396, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.016468, elapsed time[sec] = 0
      12-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 9e-06, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.6e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -4.40594
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001348, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000474, elapsed time[sec] = 0
            effective power exponent at 604.404 kcal/mol = 11.9683
         interpolating states number/density done, cpu time[sec] = 0.016247, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.016307, elapsed time[sec] = 0
      13-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 9e-06, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.6e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -4.57463
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001342, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000447, elapsed time[sec] = 0
            effective power exponent at 604.572 kcal/mol = 11.9685
         interpolating states number/density done, cpu time[sec] = 0.01632, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.016381, elapsed time[sec] = 0
      14-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.7e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -4.93202
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001348, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000469, elapsed time[sec] = 0
            effective power exponent at 604.93 kcal/mol = 11.9692
         interpolating states number/density done, cpu time[sec] = 0.016256, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.016319, elapsed time[sec] = 0
      15-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.7e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -5.43522
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001351, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000441, elapsed time[sec] = 0
            effective power exponent at 605.433 kcal/mol = 11.9702
         interpolating states number/density done, cpu time[sec] = 0.016391, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.016452, elapsed time[sec] = 0
      16-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 2.7e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -6.04421
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001353, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000485, elapsed time[sec] = 0
            effective power exponent at 606.042 kcal/mol = 11.9715
         interpolating states number/density done, cpu time[sec] = 0.016288, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.016362, elapsed time[sec] = 0
      Model::EckartTunnel::EckartTunnel:  ... done
      interpolating states number/density ... done, cpu time[sec] = 1.49768, elapsed time[sec] = 2
      effective power exponent at 604.404 kcal/mol = 12.2165
      Constituent transition states partition functions
       T, K            1            2            3            4            5            6            7            8            9           10           11           12           13           14           15           16          Min
        100  1.11763e+12       223936     0.185945  6.36018e-07  9.07387e-12  5.96093e-16  1.85463e-19  2.77448e-22  2.20277e-24  7.60156e-26  1.10796e-26  7.98346e-27   1.8962e-26  1.16602e-25  1.49342e-24  3.26249e-23  7.98345e-27
        200  9.38289e+07      39693.5      34.8125    0.0627104  0.000232989  1.87016e-06  3.28565e-08  1.27135e-09  1.13643e-10  2.12422e-11  8.18303e-12   7.0253e-12  1.09568e-11  2.75644e-11  1.00242e-10  4.77296e-10  7.02523e-12
        300  6.32003e+06      33876.1      298.673      4.28808     0.100497   0.00396007  0.000264757  3.01283e-05  6.01963e-06  1.97624e-06  1.05568e-06  9.66276e-07  1.31928e-06  2.48671e-06  6.00912e-06  1.74325e-05  9.65923e-07
        400  2.16563e+06      41250.6      1150.14      46.4593      2.72399     0.236928    0.0308063    0.0060002   0.00179162  0.000780535   0.00049258  0.000467839  0.000601019  0.000987244    0.0019595   0.00447307  0.000466779
        500   1.4162e+06      57738.1      3210.72      241.013      24.4602      3.41597     0.661137     0.177638    0.0675118    0.0348961    0.0243981    0.0237742     0.029557    0.0448976    0.0795572     0.158033    0.0236197
        600  1.27589e+06      86435.1      7616.29      863.909      126.318      24.1718      6.09496      2.02863     0.905643     0.525046     0.393651     0.391048      0.47677     0.689237      1.13548      2.06149     0.386115
        700  1.37387e+06       133833      16387.5      2496.35      473.671      113.476      34.5536      13.3988      6.71107      4.22492      3.33259       3.3607      4.04622      5.65489      8.85794      15.1051      3.29464
        800   1.6448e+06       210487      32996.7      6271.64      1446.87      410.222      143.881      62.5602      34.1598      22.8806      18.7569      19.1427      22.8487      31.1607      47.0425      76.6085      18.6302
        900  2.10236e+06       332770      63236.1      14279.8      3835.57      1239.79      485.378      230.694      134.715      94.6987      80.0083      82.4454      97.7846      130.906      192.133      302.035       79.687
       1000  2.80018e+06       525557       116524      30209.5      9165.51      3290.47      1406.72      717.952      442.392      323.236      279.779      290.578      342.963      452.477      649.485      992.852      279.107
       1100  3.82756e+06       826062       207829      60337.4      20227.9      7914.04      3636.15       1967.2      1266.62      955.178      843.287      881.527      1036.38      1351.23       1904.8      2846.42      842.065
       1200  5.31607e+06  1.28922e+06       360457       115019      41910.5      17617.3      8595.88      4882.09      3260.68      2524.49      2265.75      2381.29      2790.51      3602.71      5002.98      7336.45      2263.75
       1300  7.45235e+06  1.99508e+06       610021       210889      82466.4      36839.3      18913.9      11193.7      7711.33      6104.52      5555.43      5865.21      6854.11      8775.81        12033      17366.4       5552.4
       1400  1.04964e+07  3.05894e+06  1.01001e+06       374033       155407      73145.9      39232.3        24053        17016      13729.2      12643.2      13399.5        15621      19858.2      26933.7      38344.1      12638.8
       1500  1.48064e+07  4.64495e+06  1.63947e+06       644514       282268       139018      77446.4      48958.3      35441.2      29070.2      27045.8      28757.7      33454.1      42264.5      56783.4      79886.7      27039.5
       1600  2.08709e+07  6.98426e+06  2.61358e+06  1.08269e+06       496566       254476       146559      95166.5      70292.7      58492.2      54905.7        58546      67977.4      85409.9       113800       158446      54895.8
       1700  2.93513e+07   1.0399e+07  4.09779e+06  1.77794e+06       849385       450846       267391       177789       133674       112652       106575       113919       132044       165098       218363       301245       106556
       1800  4.11358e+07  1.53337e+07   6.3268e+06  2.86053e+06  1.41712e+06       776084       472475       320840       245068       208865       198969       213137       246660       307062       403463       552054       198924
       1900  5.74084e+07   2.2396e+07  9.62961e+06   4.5176e+06  2.31206e+06  1.30218e+06       811539       561582       435059       374536       358996       385281       445242       552092       721140       979485       358875
       2000  7.97366e+07  3.24089e+07  1.44623e+07  7.01437e+06  3.69673e+06  2.13529e+06  1.35912e+06       956627       750585       652033       628440       675575       779687       963344   1.2516e+06   1.6887e+06       628120

   Model::VarBarrier::VarBarrier:  done, cpu time[sec] = 1.79125, elapsed time[sec] = 2
   BARRIER: B5
   Model::RRHO::RRHO:  starts
      Model::new_core:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.1e-05, elapsed time[sec] = 0
      Model::new_core:  done, cpu time[sec] = 2e-05, elapsed time[sec] = 0
      Model::EckartTunnel::EckartTunnel:  ... done
      ground state energy, kcal/mol:   -0.195851
      interpolating states number/density starts
         core state contribution ... done, cpu time[sec] = 0.001491, elapsed time[sec] = 0
         vibrational modes contribution ... done, cpu time[sec] = 0.000522, elapsed time[sec] = 0
         tunneling contribution ... done, cpu time[sec] = 7.18235, elapsed time[sec] = 7
         effective power exponent at 669.903 kcal/mol = 13.426
      interpolating states number/density done, cpu time[sec] = 7.20173, elapsed time[sec] = 7
   Model::RRHO::RRHO:  done, cpu time[sec] = 7.20182, elapsed time[sec] = 7
   BARRIER: B6
   Model::ReadSpecies::ReadSpecies: ... done, cpu time[sec] = 0.000849, elapsed time[sec] = 0
   BARRIER: B7
   Model::ReadSpecies::ReadSpecies: ... done, cpu time[sec] = 0.000814, elapsed time[sec] = 0
   BIMOLECULAR: P7
   Model::Bimolecular::Bimolecular:  starts
      Model::AtomicFragment::AtomicFragment:  ... done
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:         5.47873        5.47873        5.47873
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 2.4e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 3.4e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 6.5e-05, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 0.00011, elapsed time[sec] = 0
   BARRIER: B8
   Model::RRHO::RRHO:  starts
      Model::new_core:  starts
         Model::PhaseSpaceTheory::PhaseSpaceTheory:  starts
            molecular geometry will be used to estimate rotational constants
            rotational configuration: nonlinear
            rotational constants[1/cm]:         5.47873        5.47873        5.47873
            TST level: E
         Model::PhaseSpaceTheory::PhaseSpaceTheory:  done, cpu time[sec] = 3.8e-05, elapsed time[sec] = 0
      Model::new_core:  done, cpu time[sec] = 5.7e-05, elapsed time[sec] = 0
      ground state energy, kcal/mol:   47.9656
      interpolating states number/density starts
         core state contribution ... done, cpu time[sec] = 0.002977, elapsed time[sec] = 0
         vibrational modes contribution ... done, cpu time[sec] = 0.000331, elapsed time[sec] = 0
         effective power exponent at 552.034 kcal/mol = 10.6123
      interpolating states number/density done, cpu time[sec] = 0.015707, elapsed time[sec] = 0
   Model::RRHO::RRHO:  done, cpu time[sec] = 0.015802, elapsed time[sec] = 0
   checking input ... done
   setting connectivity ... done
   checking connectivity ... done
   setting dissociation limit ... done
   setting maximum barrier height ... done
   partition functions (relative to the ground level, units - 1/cm3):
     T\Q           W1           OH          CH3          CH2          H2O           H2     cis-HCOH           H2   trans-HCOH           H2         H2CO            H        CH2OH            H         CH3O            o          CH4           B1           B2           B3           B4           B5           B6           B7           B8
     100  1.97336e+28  1.11806e+26  1.79604e+26   1.2706e+26  1.20995e+26  3.09408e+23  9.07788e+27  3.09408e+23  8.88203e+27  3.09408e+23    4.226e+27  3.80284e+23  1.41451e+28  3.80284e+23  1.04337e+28  1.20275e+25  8.05078e+25  1.02816e+30  3.90845e+30  1.47525e+35  6.97811e+37 5.12326e+128  6.66948e+29  2.86822e+29  6.30386e+29
     200  2.23564e+29  7.62333e+26  1.46726e+27  1.01653e+27  9.67966e+26  1.75028e+24  7.26953e+28  1.75028e+24  7.11008e+28  1.75028e+24  3.38185e+28  1.07561e+24  1.21889e+29  1.07561e+24  8.41759e+28   3.4019e+25  6.44206e+26  2.65947e+31  6.23677e+31  1.08314e+30  2.15615e+30  1.52798e+59  8.88053e+30  3.66779e+30  8.00719e+30
     300  9.41744e+29   2.3228e+27   5.2604e+27  3.43512e+27  3.26835e+27   4.8232e+24  2.48522e+29   4.8232e+24  2.42385e+29   4.8232e+24  1.14827e+29  1.97601e+24  4.86817e+29  1.97601e+24  2.97918e+29   6.2497e+25  2.18681e+27  1.82852e+32  2.59538e+32  1.44208e+30  1.73256e+30  1.89702e+39  4.41749e+31  1.66476e+31  3.56174e+31
     400  2.74251e+30  5.05886e+27  1.36172e+28  8.18855e+27  7.76803e+27  9.90107e+24  6.13453e+29  9.90107e+24  5.94872e+29  9.90107e+24   2.7863e+29  3.04227e+24   1.4458e+30  3.04227e+24  7.82149e+29  9.62204e+25  5.31893e+27  7.43446e+32  6.76087e+32   3.1193e+30  3.38436e+30  5.81364e+32  1.53178e+32  5.25536e+31  1.04946e+32
     500   6.7088e+30   9.1848e+27   2.9582e+28  1.61907e+28  1.52765e+28  1.72965e+25  1.28796e+30  1.72965e+25  1.23988e+30  1.72965e+25    5.706e+29   4.2517e+24  3.66252e+30   4.2517e+24  1.77798e+30  1.34472e+26  1.09838e+28  2.27531e+33  1.40935e+33  6.99392e+30  7.25794e+30    2.174e+31  4.38422e+32  1.38727e+32   2.5148e+32
     600  1.48929e+31  1.48864e+28  5.75744e+28  2.85247e+28  2.67121e+28  2.72848e+25  2.45857e+30  2.72848e+25  2.34862e+30  2.72848e+25  1.05862e+30  5.58901e+24  8.37682e+30  5.58901e+24  3.71377e+30  1.76768e+26  2.06944e+28  5.83137e+33  2.59752e+33  1.53859e+31   1.5531e+31  1.56572e+31  1.10962e+33  3.28769e+32  5.35043e+32
     700  3.10526e+31  2.23336e+28  1.03869e+29  4.64933e+28  4.31306e+28  4.01168e+25  4.40321e+30  4.01168e+25   4.1744e+30  4.01168e+25  1.84194e+30  7.04296e+24  1.77967e+31  7.04296e+24  7.32198e+30  2.22753e+26  3.68096e+28  1.32406e+34  4.44573e+33  3.28489e+31  3.24865e+31  2.00151e+31  2.57036e+33  7.23031e+32   1.0547e+33
     800  6.18672e+31  3.16898e+28  1.77211e+29  7.16682e+28  6.57497e+28  5.60287e+25  7.52441e+30  5.60287e+25  7.08144e+30  5.60287e+25  3.06214e+30  8.60484e+24  3.57037e+31  8.60484e+24  1.38193e+31  2.72152e+26  6.29237e+28  2.75326e+34  7.26034e+33  6.79296e+31  6.61031e+31  3.04639e+31  5.55986e+33  1.50225e+33   1.9708e+33
     900  1.18917e+32  4.31186e+28  2.89608e+29  1.05938e+29  9.59741e+28  7.52507e+25  1.23926e+31  7.52507e+25  1.15823e+31  7.52507e+25  4.91733e+30  1.02677e+25  6.83675e+31  1.02677e+25  2.51777e+31  3.24744e+26   1.0442e+29  5.35429e+34  1.14977e+34  1.36146e+32  1.30791e+32  4.96309e+31  1.13781e+34  2.98133e+33  3.53766e+33
    1000  2.21835e+32  5.67887e+28  4.57314e+29  1.51557e+29  1.35425e+29  9.80136e+25  1.98016e+31  9.80136e+25  1.83853e+31  9.80136e+25  7.67995e+30  1.20256e+25  1.25901e+32  1.20256e+25  4.45239e+31  3.80344e+26  1.69248e+29  9.87598e+34  1.78334e+34  2.64867e+32  2.51886e+32  8.31132e+31  2.22341e+34  5.69316e+33   6.1512e+33
    1100  4.03237e+32  7.28764e+28   7.0205e+29  2.11192e+29  1.85967e+29  1.24554e+26  3.08377e+31  1.24554e+26  2.84544e+31  1.24554e+26  1.17192e+31  1.38738e+25  2.24222e+32  1.38738e+25  7.67157e+31  4.38799e+26  2.68985e+29  1.74488e+35  2.72616e+34  5.01139e+32  4.72857e+32  1.40422e+32  4.17722e+34  1.05163e+34  1.04174e+34
    1200  7.16278e+32  9.15662e+28  1.05248e+30  2.87967e+29  2.49743e+29  1.55119e+26  4.69659e+31  1.55119e+26  4.30822e+31  1.55119e+26  1.75283e+31  1.58081e+25  3.87856e+32  1.58081e+25  1.29162e+32  4.99976e+26  4.20283e+29   2.9743e+35  4.12339e+34  9.23956e+32  8.66602e+32  2.37075e+32  7.58498e+34  1.88656e+34   1.7249e+34
    1300  1.24607e+33  1.13052e+29    1.546e+30  3.85517e+29  3.29195e+29  1.89964e+26  7.01353e+31  1.89964e+26  6.39799e+31  1.89964e+26  2.57585e+31  1.78247e+25  6.53851e+32  1.78247e+25  2.12965e+32  5.63757e+26  6.46803e+29  4.91797e+35  6.18545e+34  1.66316e+33  1.55283e+33  3.97869e+32  1.33665e+35   3.2971e+34  2.80008e+34
    1400  2.12665e+33  1.37535e+29  2.23088e+30  5.08038e+29  4.27102e+29  2.29356e+26  1.02907e+32  2.29356e+26  9.33855e+31  2.29356e+26  3.72593e+31  1.99205e+25   1.0772e+33  1.99205e+25  3.44505e+32  6.30041e+26  9.81784e+29  7.92117e+35  9.21487e+34  2.92799e+33  2.72427e+33  6.61788e+32  2.29366e+35  5.62797e+34   4.4655e+34
    1500  3.56581e+33  1.65225e+29  3.16878e+30  6.60342e+29  5.46603e+29  2.73576e+26  1.48608e+32  2.73576e+26  1.34194e+32  2.73576e+26   5.3127e+31  2.20925e+25  1.73819e+33  2.20925e+25  5.47579e+32  6.98737e+26  1.47141e+30  1.24691e+36  1.36433e+35  5.04957e+33  4.68567e+33   1.0892e+33  3.84301e+35  9.40249e+34  7.00752e+34
    1600  5.88104e+33  1.96339e+29  4.43778e+30  8.47909e+29  6.91231e+29  3.22912e+26  2.11513e+32  3.22912e+26  1.90113e+32  3.22912e+26  7.47631e+31  2.43382e+25  2.75236e+33  2.43382e+25  8.56291e+32  7.69763e+26  2.17922e+30  1.92344e+36  2.00816e+35  8.54299e+33  7.91062e+33  1.77228e+33   6.3014e+35  1.54022e+35  1.08347e+35
    1700  9.55077e+33  2.31102e+29  6.13586e+30  1.07695e+30  8.64943e+29  3.77663e+26  2.97068e+32  3.77663e+26  2.65843e+32  3.77663e+26  1.03942e+32  2.66552e+25  4.28362e+33  2.66552e+25  1.31889e+33  8.43044e+26  3.19172e+30  2.91389e+36  2.93879e+35  1.41969e+34  1.31235e+34  2.84985e+33  1.01312e+36  2.47765e+35  1.65232e+35
    1800  1.52866e+34  2.69743e+29  8.38503e+30  1.35448e+30  1.07215e+30   4.3814e+26  4.12136e+32   4.3814e+26  3.67296e+32   4.3814e+26  1.42893e+32  2.90413e+25  6.56161e+33  2.90413e+25  2.00279e+33  9.18514e+26  4.62568e+30  4.34318e+36  4.27578e+35  2.32007e+34  2.14159e+34  4.52832e+33  1.59976e+36  3.91921e+35  2.48767e+35
    1900  2.41341e+34    3.125e+29   1.1336e+31  1.68836e+30  1.31777e+30  5.04659e+26  5.65308e+32  5.04659e+26  5.01844e+32  5.04659e+26  1.94391e+32  3.14948e+25  9.90424e+33  3.14948e+25  3.00115e+33   9.9611e+26  6.63727e+30   6.3789e+36  6.18455e+35  3.73235e+34  3.44092e+34  7.11085e+33   2.4845e+36  6.10341e+35  3.70051e+35
    2000  3.76117e+34  3.59614e+29  1.51739e+31  2.08737e+30  1.60722e+30  5.77547e+26  7.67243e+32  5.77547e+26  6.78607e+32  5.77547e+26  2.61867e+32  3.40136e+25  1.47468e+34  3.40136e+25  4.44133e+33  1.07578e+27  9.43368e+30  9.24376e+36  8.89218e+35   5.9162e+34  5.44811e+34  1.10376e+34  3.79973e+36  9.36743e+35  5.44256e+35
   partition functions (relative to 0 kcal/mol, units - 1/cm3):
     T\Q           W1           B1           B2           B3           B4           B5           B6           B7           B8
     100 3.42725e+225  1.02816e+30  1.82422e+29  3.59409e+38  2.97017e+47 1.37269e+129  2.66912e+20     0.948966  9.38107e-76
     200 9.31689e+127  2.65947e+31   1.3474e+31   5.3462e+31   1.4067e+35   2.5011e+59  1.77655e+26  6.67151e+15   3.0889e-22
     300  5.25428e+95  1.82852e+32  9.34454e+31  1.94043e+31  2.80781e+33  2.63481e+39  3.25537e+28  2.48065e+21   0.00040664
     400  5.59864e+79  7.43446e+32  3.14247e+32  2.19148e+31  8.64445e+32  7.43797e+32  6.85118e+29  2.24136e+24       651820
     500  1.88188e+70  2.27531e+33   7.6354e+32   3.3271e+31  6.11818e+32  2.64767e+31  5.78559e+30  1.76233e+26   2.7229e+11
     600  1.11242e+64  5.83137e+33  1.55861e+33  5.64385e+31  6.25229e+32  1.84524e+31  3.01222e+31  4.01325e+27  1.80785e+15
     700  4.66878e+59  1.32406e+34  2.86953e+33  1.00078e+32  7.71401e+32  2.30412e+31  1.16805e+32    4.443e+28  1.11633e+18
     800   2.7953e+56  2.75326e+34  4.94984e+33  1.80053e+32  1.05646e+33  3.44579e+31  3.71834e+32   3.1024e+29  1.55319e+20
     900  9.78971e+53  5.35429e+34  8.17953e+33  3.23822e+32  1.53628e+33  5.53746e+31  1.02773e+33  1.58057e+30  7.96585e+21
    1000  1.17491e+52  9.87598e+34  1.31263e+34  5.77697e+32  2.31264e+33  9.17219e+31  2.55416e+33  6.41678e+30  2.02406e+23
    1100  3.43911e+50  1.74488e+35  2.06328e+34  1.01822e+33  3.54893e+33  1.53585e+32  5.84183e+33    2.197e+31  3.07609e+24
    1200  1.95761e+49   2.9743e+35  3.19407e+34  1.76961e+33  5.49845e+33  2.57368e+32  1.24971e+34  6.59133e+31  3.17068e+25
    1300  1.85281e+48  4.91797e+35  4.88644e+34  3.03006e+33  8.54709e+33  4.29205e+32  2.52998e+34  1.77997e+32   2.4184e+26
    1400  2.60764e+47  7.92117e+35  7.40326e+34  5.11068e+33  1.32752e+34  7.10056e+32  4.88948e+34  4.41176e+32  1.45279e+27
    1500  5.02891e+46  1.24691e+36  1.11222e+35  8.49252e+33  2.05451e+34  1.16317e+33  9.08149e+34  1.01832e+33  7.19572e+27
    1600  1.25008e+46  1.92344e+36  1.65812e+35  1.39085e+34  3.16247e+34  1.88489e+33  1.62959e+35   2.2134e+33  3.04163e+28
    1700  3.82275e+45  2.91389e+36  2.45402e+35  2.24601e+34  4.83576e+34  3.01995e+33  2.83696e+35  4.56984e+33  1.12662e+29
    1800  1.38699e+45  4.34318e+36  3.60641e+35  3.57809e+34  7.33977e+34  4.78317e+33  4.80794e+35  9.02403e+33  3.73294e+29
    1900  5.80323e+44   6.3789e+36  5.26331e+35  5.62641e+34  1.10527e+35  7.48943e+33  7.95467e+35  1.71386e+34  1.12469e+30
    2000  2.73722e+44  9.24376e+36   7.6289e+35  8.73733e+34  1.65081e+35  1.15951e+34  1.28785e+36  3.14487e+34  3.12202e+30
   tunneling partition function correction factors & high pressure effective energy shifts (D), kcal/mol:
     T\B           B1            D           B2            D           B3            D           B4            D           B5            D           B6            D           B7            D           B8            D
     100            1           -0            1           -0  5.85098e+06     -3.09647  2.80256e+09      -4.3229 4.82099e+100     -46.0694            1           -0            1           -0            1           -0
     200            1           -0            1           -0      5.22548    -0.657183      10.5281    -0.935588  1.78989e+30     -27.6854            1           -0            1           -0            1           -0
     300            1           -0            1           -0      1.84823    -0.366176      2.24851    -0.483048  6.34587e+09     -13.4559            1           -0            1           -0            1           -0
     400            1           -0            1           -0      1.38767    -0.260424      1.52963    -0.337842      744.397     -5.25618            1           -0            1           -0            1           -0
     500            1           -0            1           -0      1.22677    -0.203078      1.30161    -0.261913      12.1512     -2.48144            1           -0            1           -0            1           -0
     600            1           -0            1           -0      1.14989     -0.16653      1.19686    -0.214262       4.1017     -1.68284            1           -0            1           -0            1           -0
     700            1           -0            1           -0      1.10671    -0.141037       1.1392    -0.181292      2.57296      -1.3146            1           -0            1           -0            1           -0
     800            1           -0            1           -0      1.07989    -0.122182      1.10381    -0.157022      1.98861     -1.09286            1           -0            1           -0            1           -0
     900            1           -0            1           -0      1.06204    -0.107644      1.08044    -0.138367      1.69225    -0.940844            1           -0            1           -0            1           -0
    1000            1           -0            1           -0      1.04954   -0.0960815      1.06415     -0.12356      1.51736    -0.828601            1           -0            1           -0            1           -0
    1100            1           -0            1           -0      1.04044   -0.0866584      1.05234     -0.11151      1.40393     -0.74163            1           -0            1           -0            1           -0
    1200            1           -0            1           -0      1.03361   -0.0788278      1.04349    -0.101508      1.32547    -0.671912            1           -0            1           -0            1           -0
    1300            1           -0            1           -0      1.02835   -0.0722153      1.03668   -0.0930686      1.26859    -0.614589            1           -0            1           -0            1           -0
    1400            1           -0            1           -0      1.02421    -0.066556      1.03134   -0.0858502      1.22585    -0.566517            1           -0            1           -0            1           -0
    1500            1           -0            1           -0       1.0209   -0.0616567      1.02707   -0.0796042      1.19281    -0.525558            1           -0            1           -0            1           -0
    1600            1           -0            1           -0      1.01821   -0.0573734      1.02359   -0.0741457      1.16669      -0.4902            1           -0            1           -0            1           -0
    1700            1           -0            1           -0      1.01599   -0.0535964      1.02074    -0.069334      1.14565    -0.459342            1           -0            1           -0            1           -0
    1800            1           -0            1           -0      1.01414   -0.0502407      1.01836   -0.0650602      1.12842    -0.432157            1           -0            1           -0            1           -0
    1900            1           -0            1           -0      1.01259   -0.0472394      1.01635   -0.0612384      1.11412    -0.408014            1           -0            1           -0            1           -0
    2000            1           -0            1           -0      1.01127    -0.044539      1.01465   -0.0578005      1.10211     -0.38642            1           -0            1           -0            1           -0
Model::init:  done, cpu time[sec] = 14.9043, elapsed time[sec] = 11
rate calculation starts
   MasterEquation::set:  starts
      Temperature      = 290 K
      Energy reference = 24839 1/cm
      Energy step      = 50 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -89 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 4.6e-05
         W1 Well: collisional kernel bandwidth = 59
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.004804
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.004334
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 1.96532
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 2.29507
         W1 Well: minimal relaxation eigenvalue = 0.0976899
         W1 Well: maximal relaxation eigenvalue = 0.981646
         W1 Well:       grid size = 568
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -3561 1/cm
         B1 Barrier:        grid size = 497
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -11 1/cm
         B2 Barrier:        grid size = 493
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 188 1/cm
         B3 Barrier:        grid size = 589
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4611 1/cm
         B4 Barrier:        grid size = 621
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6211 1/cm
         B5 Barrier: nonpositive number of states at -23111 1/cm => truncating
         B5 Barrier:        grid size = 959
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23111 1/cm
         B6 Barrier:        grid size = 467
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1488 1/cm
         B7 Barrier:        grid size = 403
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4688 1/cm
         B8 Barrier:        grid size = 162
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16739 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 4.68594, elapsed time[sec] = 0
      B3 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 568
      MasterEquation::Barrier::truncate: real weight = 3.89834e+58
      MasterEquation::Barrier::truncate: effective weight = 8.88106e+54
      B4 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 568
      MasterEquation::Barrier::truncate: real weight = 6.77879e+60
      MasterEquation::Barrier::truncate: effective weight = 1.54367e+57
      B5 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 568
      MasterEquation::Barrier::truncate: real weight = 7.69851e+67
      MasterEquation::Barrier::truncate: effective weight = 8.43936e+56
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1  -3561  -3561 4.09e+09 3.25e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -11 2.62e+14
         B2    189 3.54e+13
         B3  -3561 8.22e+12
         B4  -3561 1.08e+13
         B5  -3561  1.1e+12
         B6   1489 1.41e+14
         B7   4689 1.08e+13
         B8  16739 7.61e+09
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  2.68e-06  8.41e-06  3.82e-15  1.25e-18  1.38e-57    0.0575  7.81e+05  3.21e+32
          R  3.73e+05         1      3.14  1.43e-09  4.65e-13  5.16e-52  2.15e+04  2.91e+11   1.2e+38
         P1  1.19e+05     0.319         1  4.54e-10  1.48e-13  1.64e-52  6.84e+03  9.29e+10  3.81e+37
         P2  2.62e+14  7.02e+08   2.2e+09         1  0.000326  3.62e-43  1.51e+13  2.05e+20   8.4e+46
         P3  8.03e+17  2.15e+12  6.75e+12  3.06e+03         1  1.11e-39  4.62e+16  6.27e+23  2.57e+50
         P4  7.24e+56  1.94e+51  6.08e+51  2.76e+42  9.02e+38         1  4.16e+55  5.65e+62  2.32e+89
         P5      17.4  4.66e-05  0.000146  6.64e-14  2.17e-17   2.4e-56         1  1.36e+07  5.58e+33
         P6  1.28e-06  3.43e-12  1.08e-11  4.89e-21   1.6e-24  1.77e-63  7.37e-08         1  4.11e+26
         P7  3.12e-33  8.36e-39  2.62e-38  1.19e-47  3.89e-51  4.31e-90  1.79e-34  2.44e-27         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  8.61e+42   2.7e+43  1.23e+34  4.01e+30  4.44e-09  1.85e+47  2.51e+54  1.03e+81
          R  1.16e-43         1      3.14  1.43e-09  4.65e-13  5.16e-52  2.15e+04  2.91e+11   1.2e+38
         P1   3.7e-44     0.319         1  4.54e-10  1.48e-13  1.64e-52  6.84e+03  9.29e+10  3.81e+37
         P2  8.15e-35  7.02e+08   2.2e+09         1  0.000326  3.62e-43  1.51e+13  2.05e+20   8.4e+46
         P3   2.5e-31  2.15e+12  6.75e+12  3.06e+03         1  1.11e-39  4.62e+16  6.27e+23  2.57e+50
         P4  2.25e+08  1.94e+51  6.08e+51  2.76e+42  9.02e+38         1  4.16e+55  5.65e+62  2.32e+89
         P5  5.41e-48  4.66e-05  0.000146  6.64e-14  2.17e-17   2.4e-56         1  1.36e+07  5.58e+33
         P6  3.98e-55  3.43e-12  1.08e-11  4.89e-21   1.6e-24  1.77e-63  7.37e-08         1  4.11e+26
         P7   9.7e-82  8.36e-39  2.62e-38  1.19e-47  3.89e-51  4.31e-90  1.79e-34  2.44e-27         1
   MasterEquation::set:  done, cpu time[sec] = 4.69897, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 290 K
            Well    Collision, 1/sec
              W1         4.87998e+08
      global relaxation matrix dimension = 568
      setting global matrices ... done, cpu time[sec] = 0.557913, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.93936, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            4950.68      668.716      155.361      203.472      20.7859      2661.79      205.031     0.143819
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.077735, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005918, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.084182, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.06199e-07  1.06199e-07  8.55434e-10
      low eigenvalue method done, cpu time[sec] = 0.084502, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.06e-07  8.55e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.12e-08  8.55e-10         1
         *Z       ---       ---  2.29e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 8.55434e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  3.32248e-62  1.69777e-62  6.99769e-64  9.48445e-63  2.26836e-64  3.63865e-66   6.6916e-75  9.06533e-98

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.7864, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 290 K
            Well    Collision, 1/sec
              W1         1.46399e+09
      global relaxation matrix dimension = 568
      setting global matrices ... done, cpu time[sec] = 0.598452, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.48052, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1650.23      222.905      51.7872      67.8239      6.92865      887.264      68.3436    0.0479397
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.077868, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005893, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.084286, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.60484e-08  3.60484e-08  1.98489e-10
      low eigenvalue method done, cpu time[sec] = 0.084601, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   3.6e-08  1.98e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.75e-09  1.98e-10         1
         *Z       ---       ---  2.29e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.98489e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  8.57575e-63  3.84547e-63   1.3092e-64  1.47374e-63  3.68204e-65  2.52858e-66  6.75143e-75  2.82168e-99

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.33213, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 290 K
            Well    Collision, 1/sec
              W1         2.43999e+09
      global relaxation matrix dimension = 568
      setting global matrices ... done, cpu time[sec] = 0.605404, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.60499, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            990.136      133.743      31.0723      40.6944      4.15719      532.359      41.0061    0.0287638
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.077829, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005913, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.084269, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.17882e-08  2.17882e-08  9.32828e-11
      low eigenvalue method done, cpu time[sec] = 0.084582, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.18e-08  9.33e-11         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.26e-09  9.33e-11         1
         *Z       ---       ---  2.29e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 9.32827e-11
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  4.17112e-63  1.76269e-63  5.71221e-65  6.02091e-64  1.53198e-65  1.80666e-66  6.81542e-75  9.02108e-99

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.4855, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 290 K
            Well    Collision, 1/sec
              W1         3.41598e+09
      global relaxation matrix dimension = 568
      setting global matrices ... done, cpu time[sec] = 0.616226, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.74341, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             707.24      95.5308      22.1945      29.0674      2.96942      380.256      29.2901    0.0205456
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.077962, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005915, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.084404, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.56326e-08  1.56326e-08  5.52495e-11
      low eigenvalue method done, cpu time[sec] = 0.084719, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.56e-08  5.52e-11         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.61e-09  5.52e-11         1
         *Z       ---       ---  2.29e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 5.52496e-11
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.51727e-63  1.02553e-63  3.24749e-65  3.29925e-64   8.4866e-66  1.36208e-66   6.8833e-75 -3.21489e-98

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.66399, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 290 K
            Well    Collision, 1/sec
              W1         4.39198e+09
      global relaxation matrix dimension = 568
      setting global matrices ... done, cpu time[sec] = 0.628844, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.99969, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            550.076      74.3018      17.2624       22.608      2.30955      295.755      22.7812    0.0159799
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.077962, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005945, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.084427, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.21972e-08  1.21972e-08  3.68736e-11
      low eigenvalue method done, cpu time[sec] = 0.084741, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.22e-08  3.69e-11         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.26e-09  3.69e-11         1
         *Z       ---       ---  2.29e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.68738e-11
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.70078e-63   6.7533e-64  2.11009e-65  2.09212e-64  5.42191e-66  1.06952e-66  6.95418e-75 -1.91707e-98

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.97195, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 290 K
            Well    Collision, 1/sec
              W1         4.87998e+09
      global relaxation matrix dimension = 568
      setting global matrices ... done, cpu time[sec] = 0.652039, elapsed time[sec] = 1
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.0537, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            495.068      66.8716      15.5361      20.3472      2.07859      266.179      20.5031    0.0143819
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.078071, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005905, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.084506, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.09915e-08  1.09915e-08  3.10236e-11
      low eigenvalue method done, cpu time[sec] = 0.084824, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.1e-08   3.1e-11         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.13e-09   3.1e-11         1
         *Z       ---       ---  2.29e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.10236e-11
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.43774e-63  5.65044e-64  1.75709e-65  1.72574e-64  4.48566e-66  9.59088e-67  6.99035e-75 -1.16406e-98

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.0504, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 290 K
            Well    Collision, 1/sec
              W1         7.31997e+09
      global relaxation matrix dimension = 568
      setting global matrices ... done, cpu time[sec] = 0.651253, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.0854, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            330.045      44.5811      10.3574      13.5648      1.38573      177.453      13.6687   0.00958795
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.078128, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005919, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.084575, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.36227e-09  7.36227e-09  1.56912e-11
      low eigenvalue method done, cpu time[sec] = 0.084891, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.36e-09  1.57e-11         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.55e-10  1.57e-11         1
         *Z       ---       ---  2.29e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.56914e-11
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0   7.3901e-64  2.79968e-64  8.58078e-66  8.15888e-65   2.1429e-66  6.05702e-67  7.17141e-75  3.63048e-98

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.0809, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 290 K
            Well    Collision, 1/sec
              W1         9.75996e+09
      global relaxation matrix dimension = 568
      setting global matrices ... done, cpu time[sec] = 0.652856, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.01982, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            247.534      33.4358      7.76807      10.1736       1.0393       133.09      10.2515   0.00719096
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.078122, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005894, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.084542, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.53913e-09  5.53909e-09  9.52835e-12
      low eigenvalue method done, cpu time[sec] = 0.084861, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.54e-09  9.53e-12         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.66e-10  9.53e-12         1
         *Z       ---       ---  2.29e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 9.5286e-12
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  4.53088e-64  1.67726e-64  5.10365e-66  4.75937e-65   1.2581e-66   4.2144e-67  7.33832e-75  1.99024e-98

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.0119, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 290 K
            Well    Collision, 1/sec
              W1         1.21999e+10
      global relaxation matrix dimension = 568
      setting global matrices ... done, cpu time[sec] = 0.654372, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.0613, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            198.027      26.7486      6.21446      8.13887     0.831438      106.472      8.20123   0.00575277
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.079846, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00591, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.086291, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.44166e-09  4.44163e-09     6.42e-12
      low eigenvalue method done, cpu time[sec] = 0.086606, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.44e-09  6.42e-12         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.53e-10  6.42e-12         1
         *Z       ---       ---  2.29e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 6.41998e-12
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0   3.0727e-64  1.11918e-64   3.3911e-66  3.12092e-65  8.28666e-67  3.11965e-67  7.47711e-75  1.20357e-98

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.0589, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 290 K
            Well    Collision, 1/sec
              W1         1.46399e+10
      global relaxation matrix dimension = 568
      setting global matrices ... done, cpu time[sec] = 0.651062, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.06253, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            165.023      22.2905      5.17872      6.78239     0.692865      88.7264      6.83436   0.00479397
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.078203, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005909, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.084637, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.70822e-09  3.70819e-09  4.62764e-12
      low eigenvalue method done, cpu time[sec] = 0.084951, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.71e-09  4.63e-12         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.78e-10  4.63e-12         1
         *Z       ---       ---  2.29e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 4.62741e-12
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.22537e-64  8.00793e-65  2.41973e-66   2.2056e-65  5.87561e-67  2.41121e-67  7.58101e-75 -3.22662e-99

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.0575, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 290 K
            Well    Collision, 1/sec
              W1         1.70799e+10
      global relaxation matrix dimension = 568
      setting global matrices ... done, cpu time[sec] = 0.653084, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.09285, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            141.448      19.1062       4.4389      5.81348     0.593884      76.0512      5.85802   0.00410912
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.078232, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005912, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.084676, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.18329e-09  3.18328e-09  3.49785e-12
      low eigenvalue method done, cpu time[sec] = 0.085012, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.18e-09   3.5e-12         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.24e-10   3.5e-12         1
         *Z       ---       ---  2.29e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.49765e-12
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.68819e-64  6.01768e-65   1.8149e-66  1.64211e-65  4.38568e-67  1.92418e-67  7.64851e-75 -5.31706e-99

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.0906, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 290 K
            Well    Collision, 1/sec
              W1         1.95199e+10
      global relaxation matrix dimension = 568
      setting global matrices ... done, cpu time[sec] = 0.652777, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.07081, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            123.767      16.7179      3.88404       5.0868     0.519649      66.5448      5.12577   0.00359548
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.078215, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005913, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.084655, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.78896e-09  2.78895e-09  2.73884e-12
      low eigenvalue method done, cpu time[sec] = 0.084976, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.79e-09  2.74e-12         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.83e-10  2.74e-12         1
         *Z       ---       ---  2.29e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.73892e-12
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.32568e-64  4.68957e-65  1.41241e-66  1.27045e-65  3.40001e-67  1.57385e-67   7.6813e-75  7.82019e-99

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.0711, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 300 K
      Energy reference = 25117 1/cm
      Energy step      = 52 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.9 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.007873
         W1 Well: collisional kernel bandwidth = 58
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.647264
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.427592
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 1.66108
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 2.46419
         W1 Well: minimal relaxation eigenvalue = 0.0967616
         W1 Well: maximal relaxation eigenvalue = 0.980132
         W1 Well:       grid size = 553
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -3639 1/cm
         B1 Barrier:        grid size = 484
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -50 1/cm
         B2 Barrier:        grid size = 479
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 209 1/cm
         B3 Barrier:        grid size = 572
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4627 1/cm
         B4 Barrier:        grid size = 602
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6187 1/cm
         B5 Barrier: nonpositive number of states at -23139 1/cm => truncating
         B5 Barrier:        grid size = 928
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23139 1/cm
         B6 Barrier:        grid size = 455
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1457 1/cm
         B7 Barrier:        grid size = 393
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4681 1/cm
         B8 Barrier:        grid size = 161
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16745 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 5.68832, elapsed time[sec] = 1
      B3 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 553
      MasterEquation::Barrier::truncate: real weight = 2.2614e+57
      MasterEquation::Barrier::truncate: effective weight = 5.3579e+53
      B4 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 553
      MasterEquation::Barrier::truncate: real weight = 3.27226e+59
      MasterEquation::Barrier::truncate: effective weight = 7.75141e+55
      B5 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 553
      MasterEquation::Barrier::truncate: real weight = 3.07063e+65
      MasterEquation::Barrier::truncate: effective weight = 3.67478e+55
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1  -3639  -3639 3.99e+09 3.42e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -50 2.86e+14
         B2    210  3.9e+13
         B3  -3639 9.11e+12
         B4  -3639 1.19e+13
         B5  -3639 1.22e+12
         B6   1458 1.56e+14
         B7   4682 1.22e+13
         B8  16745 9.32e+09
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  1.81e-06  5.46e-06  5.56e-15  2.37e-18  5.37e-56    0.0311  2.52e+05  1.42e+31
          R  5.53e+05         1      3.02  3.07e-09  1.31e-12  2.97e-50  1.72e+04  1.39e+11  7.83e+36
         P1  1.83e+05     0.331         1  1.02e-09  4.34e-13  9.82e-51   5.7e+03  4.61e+10  2.59e+36
         P2   1.8e+14  3.25e+08  9.83e+08         1  0.000427  9.66e-42  5.61e+12  4.53e+19  2.55e+45
         P3  4.22e+17  7.62e+11   2.3e+12  2.34e+03         1  2.26e-38  1.31e+16  1.06e+23  5.97e+48
         P4  1.86e+55  3.37e+49  1.02e+50  1.04e+41  4.42e+37         1  5.81e+53  4.69e+60  2.64e+86
         P5      32.1   5.8e-05  0.000175  1.78e-13  7.62e-17  1.72e-54         1  8.08e+06  4.54e+32
         P6  3.97e-06  7.18e-12  2.17e-11  2.21e-20  9.42e-24  2.13e-61  1.24e-07         1  5.62e+25
         P7  7.06e-32  1.28e-37  3.86e-37  3.92e-46  1.68e-49  3.79e-87   2.2e-33  1.78e-26         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1   4.3e+40   1.3e+41  1.32e+32  5.64e+28  1.28e-09  7.41e+44  5.99e+51  3.37e+77
          R  2.33e-41         1      3.02  3.07e-09  1.31e-12  2.97e-50  1.72e+04  1.39e+11  7.83e+36
         P1  7.69e-42     0.331         1  1.02e-09  4.34e-13  9.82e-51   5.7e+03  4.61e+10  2.59e+36
         P2  7.56e-33  3.25e+08  9.83e+08         1  0.000427  9.66e-42  5.61e+12  4.53e+19  2.55e+45
         P3  1.77e-29  7.62e+11   2.3e+12  2.34e+03         1  2.26e-38  1.31e+16  1.06e+23  5.97e+48
         P4  7.83e+08  3.37e+49  1.02e+50  1.04e+41  4.42e+37         1  5.81e+53  4.69e+60  2.64e+86
         P5  1.35e-45   5.8e-05  0.000175  1.78e-13  7.62e-17  1.72e-54         1  8.08e+06  4.54e+32
         P6  1.67e-52  7.18e-12  2.17e-11  2.21e-20  9.42e-24  2.13e-61  1.24e-07         1  5.62e+25
         P7  2.97e-78  1.28e-37  3.86e-37  3.92e-46  1.68e-49  3.79e-87   2.2e-33  1.78e-26         1
   MasterEquation::set:  done, cpu time[sec] = 5.70325, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 300 K
            Well    Collision, 1/sec
              W1         4.76197e+08
      global relaxation matrix dimension = 553
      setting global matrices ... done, cpu time[sec] = 0.62281, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.24676, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            5262.81      718.572      167.945       219.27      22.4899      2867.87      224.232     0.171648
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.072487, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005574, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.078577, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   1.0384e-07   1.0384e-07  1.23746e-09
      low eigenvalue method done, cpu time[sec] = 0.078875, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.04e-07  1.24e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.08e-08  1.24e-09         1
         *Z       ---       ---  5.07e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.23746e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  6.90513e-60  3.47691e-60  1.37577e-61  1.75871e-60  4.24035e-62  8.82512e-64    2.771e-72  3.53819e-96

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.13765, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 300 K
            Well    Collision, 1/sec
              W1         1.42859e+09
      global relaxation matrix dimension = 553
      setting global matrices ... done, cpu time[sec] = 0.621793, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.86916, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1754.27      239.524      55.9817      73.0901      7.49662      955.956      74.7438     0.057216
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.072477, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005523, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.078503, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.54019e-08  3.54019e-08  2.98241e-10
      low eigenvalue method done, cpu time[sec] = 0.078798, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.54e-08  2.98e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.66e-09  2.98e-10         1
         *Z       ---       ---  5.07e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.98242e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.84219e-60  8.08798e-61   2.6687e-62  2.84173e-61  7.18188e-63  6.22282e-64  2.79567e-72  5.31402e-98

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.75392, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 300 K
            Well    Collision, 1/sec
              W1         2.38099e+09
      global relaxation matrix dimension = 553
      setting global matrices ... done, cpu time[sec] = 0.621525, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.86974, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1052.56      143.714       33.589      43.8541      4.49797      573.574      44.8463    0.0343296
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.072331, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005546, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.078382, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.14315e-08  2.14315e-08  1.42439e-10
      low eigenvalue method done, cpu time[sec] = 0.078681, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.14e-08  1.42e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   2.2e-09  1.42e-10         1
         *Z       ---       ---  5.07e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.4244e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0   9.0978e-61  3.75267e-61  1.18251e-62  1.17937e-61  3.03979e-63  4.49607e-64  2.82207e-72 -7.35129e-98

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.5925, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 300 K
            Well    Collision, 1/sec
              W1         3.33338e+09
      global relaxation matrix dimension = 553
      setting global matrices ... done, cpu time[sec] = 0.619582, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.87361, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             751.83      102.653      23.9922      31.3243      3.21284      409.695      32.0331    0.0245212
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.072423, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005527, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.078449, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.53901e-08  1.53902e-08  8.52145e-11
      low eigenvalue method done, cpu time[sec] = 0.078745, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.54e-08  8.52e-11         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.58e-09  8.52e-11         1
         *Z       ---       ---  5.07e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 8.52149e-11
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  5.54428e-61  2.20009e-61  6.78717e-63  6.52324e-62  1.70129e-63  3.41858e-64  2.85005e-72 -7.31579e-96

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.75335, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 300 K
            Well    Collision, 1/sec
              W1         4.28577e+09
      global relaxation matrix dimension = 553
      setting global matrices ... done, cpu time[sec] = 0.620828, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.89451, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            584.757      79.8413      18.6606      24.3634      2.49887      318.652      24.9146     0.019072
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.072467, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005528, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.078506, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.20148e-08  1.20148e-08  5.72801e-11
      low eigenvalue method done, cpu time[sec] = 0.078812, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.2e-08  5.73e-11         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.23e-09  5.73e-11         1
         *Z       ---       ---  5.07e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 5.72804e-11
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0   3.7724e-61  1.45673e-61  4.43983e-63  4.16323e-62  1.09466e-63  2.70255e-64  2.87922e-72  1.99014e-95

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.77963, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 300 K
            Well    Collision, 1/sec
              W1         4.76197e+09
      global relaxation matrix dimension = 553
      setting global matrices ... done, cpu time[sec] = 0.621397, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.872, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            526.281      71.8572      16.7945       21.927      2.24899      286.787      22.4232    0.0171648
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.072398, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005525, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.078424, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.08296e-08  1.08296e-08  4.83324e-11
      low eigenvalue method done, cpu time[sec] = 0.078721, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.08e-08  4.83e-11         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.11e-09  4.83e-11         1
         *Z       ---       ---  5.07e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 4.83329e-11
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  3.19815e-61  1.22154e-61  3.70715e-63  3.44294e-62  9.08204e-64  2.43059e-64  2.89408e-72  2.12889e-95

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.74364, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 300 K
            Well    Collision, 1/sec
              W1         7.14296e+09
      global relaxation matrix dimension = 553
      setting global matrices ... done, cpu time[sec] = 0.622274, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.85527, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            350.854      47.9048      11.1963       14.618      1.49932      191.191      14.9488    0.0114432
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.072441, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005524, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.078462, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.25911e-09  7.25912e-09  2.47049e-11
      low eigenvalue method done, cpu time[sec] = 0.078764, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.26e-09  2.47e-11         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.38e-10  2.47e-11         1
         *Z       ---       ---  5.07e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.47051e-11
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.66132e-61  6.10131e-62  1.82827e-63  1.64252e-62  4.38257e-64  1.55279e-64  2.96831e-72 -6.65212e-96

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.73905, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 300 K
            Well    Collision, 1/sec
              W1         9.52394e+09
      global relaxation matrix dimension = 553
      setting global matrices ... done, cpu time[sec] = 0.622749, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.86438, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            263.141      35.9286      8.39726      10.9635      1.12449      143.393      11.2116    0.0085824
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.072473, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005546, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.078516, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.46385e-09  5.46384e-09  1.51051e-11
      low eigenvalue method done, cpu time[sec] = 0.078813, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.46e-09  1.51e-11         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.54e-10  1.51e-11         1
         *Z       ---       ---  5.07e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.51053e-11
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.02565e-61  3.67421e-62   1.0943e-63  9.63556e-63  2.58934e-64  1.08939e-64  3.03655e-72   -1.133e-96

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.75333, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 300 K
            Well    Collision, 1/sec
              W1         1.19049e+10
      global relaxation matrix dimension = 553
      setting global matrices ... done, cpu time[sec] = 0.62065, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.86113, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            210.512      28.7429      6.71781      8.77081     0.899595      114.715      8.96926   0.00686592
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.072473, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005522, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.078504, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.38254e-09  4.38256e-09  1.02278e-11
      low eigenvalue method done, cpu time[sec] = 0.078808, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.38e-09  1.02e-11         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.44e-10  1.02e-11         1
         *Z       ---       ---  5.07e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.02285e-11
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  6.99065e-62  2.46076e-62  7.30383e-64  6.34333e-63   1.7131e-64  8.11553e-65  3.09327e-72  1.14645e-97

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.74087, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 300 K
            Well    Collision, 1/sec
              W1         1.42859e+10
      global relaxation matrix dimension = 553
      setting global matrices ... done, cpu time[sec] = 0.620962, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.85757, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            175.427      23.9524      5.59817      7.30901     0.749662      95.5956      7.47438    0.0057216
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.072349, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005523, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.078372, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.65965e-09  3.65965e-09  7.40012e-12
      low eigenvalue method done, cpu time[sec] = 0.078671, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.66e-09   7.4e-12         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   3.7e-10   7.4e-12         1
         *Z       ---       ---  5.07e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 7.40052e-12
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  5.08242e-62  1.76564e-62   5.2295e-64  4.49608e-63  1.21872e-64  6.30473e-65  3.13585e-72 -1.91041e-96

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.73959, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 300 K
            Well    Collision, 1/sec
              W1         1.66669e+10
      global relaxation matrix dimension = 553
      setting global matrices ... done, cpu time[sec] = 0.620592, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.85623, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            150.366      20.5306      4.79844      6.26487     0.642568      81.9391      6.40661   0.00490423
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.07242, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005526, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.078448, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.14211e-09  3.14211e-09   5.6102e-12
      low eigenvalue method done, cpu time[sec] = 0.078745, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.14e-09  5.61e-12         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.17e-10  5.61e-12         1
         *Z       ---       ---  5.07e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 5.61062e-12
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  3.86744e-62  1.32975e-62  3.93295e-64  3.35506e-63  9.12058e-65  5.05258e-65  3.16373e-72 -1.90729e-95

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.74096, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 300 K
            Well    Collision, 1/sec
              W1         1.90479e+10
      global relaxation matrix dimension = 553
      setting global matrices ... done, cpu time[sec] = 0.621642, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.87066, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             131.57      17.9643      4.19863      5.48176     0.562247      71.6967      5.60579    0.0042912
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.072464, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005559, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.078522, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.75323e-09  2.75324e-09  4.40357e-12
      low eigenvalue method done, cpu time[sec] = 0.078822, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.75e-09   4.4e-12         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.78e-10   4.4e-12         1
         *Z       ---       ---  5.07e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 4.40381e-12
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  3.04464e-62  1.03814e-62  3.06748e-64  2.60049e-63   7.0857e-65  4.14754e-65  3.17762e-72 -2.27515e-95

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.75907, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 310 K
      Energy reference = 25395 1/cm
      Energy step      = 53 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.9 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.0078
         W1 Well: collisional kernel bandwidth = 59
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.658218
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.420876
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.366894
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 2.41933
         W1 Well: minimal relaxation eigenvalue = 0.0959038
         W1 Well: maximal relaxation eigenvalue = 0.983184
         W1 Well:       grid size = 549
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -3701 1/cm
         B1 Barrier:        grid size = 480
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -45 1/cm
         B2 Barrier:        grid size = 476
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 167 1/cm
         B3 Barrier:        grid size = 566
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4602 1/cm
         B4 Barrier:        grid size = 596
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6193 1/cm
         B5 Barrier: nonpositive number of states at -23153 1/cm => truncating
         B5 Barrier:        grid size = 916
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23153 1/cm
         B6 Barrier:        grid size = 451
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1492 1/cm
         B7 Barrier:        grid size = 391
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4672 1/cm
         B8 Barrier:        grid size = 163
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16756 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 4.34466, elapsed time[sec] = 0
      B3 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 549
      MasterEquation::Barrier::truncate: real weight = 1.58535e+56
      MasterEquation::Barrier::truncate: effective weight = 3.82838e+52
      B4 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 549
      MasterEquation::Barrier::truncate: real weight = 1.93404e+58
      MasterEquation::Barrier::truncate: effective weight = 4.66997e+54
      B5 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 549
      MasterEquation::Barrier::truncate: real weight = 1.93679e+63
      MasterEquation::Barrier::truncate: effective weight = 1.86776e+54
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1  -3701  -3701 3.91e+09 3.59e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -45 3.11e+14
         B2    168  4.3e+13
         B3  -3701 1.01e+13
         B4  -3701 1.31e+13
         B5  -3701 1.35e+12
         B6   1493 1.72e+14
         B7   4672 1.36e+13
         B8  16756 1.13e+10
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  1.19e-06  3.47e-06  7.51e-15  4.12e-18  1.57e-54    0.0167  8.31e+04  7.28e+29
          R  8.41e+05         1      2.92  6.31e-09  3.47e-12  1.32e-48   1.4e+04  6.99e+10  6.12e+35
         P1  2.88e+05     0.343         1  2.16e-09  1.19e-12  4.51e-49  4.81e+03  2.39e+10   2.1e+35
         P2  1.33e+14  1.58e+08  4.62e+08         1  0.000549  2.09e-40  2.22e+12  1.11e+19   9.7e+43
         P3  2.43e+17  2.88e+11  8.42e+11  1.82e+03         1   3.8e-37  4.05e+15  2.02e+22  1.77e+47
         P4  6.39e+53  7.59e+47  2.22e+48  4.79e+39  2.63e+36         1  1.07e+52  5.31e+58  4.65e+83
         P5      59.9  7.12e-05  0.000208   4.5e-13  2.47e-16  9.38e-53         1  4.98e+06  4.36e+31
         P6   1.2e-05  1.43e-11  4.18e-11  9.03e-20  4.96e-23  1.88e-59  2.01e-07         1  8.76e+24
         P7  1.37e-30  1.63e-36  4.77e-36  1.03e-44  5.66e-48  2.15e-84  2.29e-32  1.14e-25         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  3.02e+38   8.8e+38   1.9e+30  1.05e+27  3.97e-10  4.23e+42  2.11e+49  1.85e+74
          R  3.32e-39         1      2.92  6.31e-09  3.47e-12  1.32e-48   1.4e+04  6.99e+10  6.12e+35
         P1  1.14e-39     0.343         1  2.16e-09  1.19e-12  4.51e-49  4.81e+03  2.39e+10   2.1e+35
         P2  5.25e-31  1.58e+08  4.62e+08         1  0.000549  2.09e-40  2.22e+12  1.11e+19   9.7e+43
         P3  9.57e-28  2.88e+11  8.42e+11  1.82e+03         1   3.8e-37  4.05e+15  2.02e+22  1.77e+47
         P4  2.52e+09  7.59e+47  2.22e+48  4.79e+39  2.63e+36         1  1.07e+52  5.31e+58  4.65e+83
         P5  2.36e-43  7.12e-05  0.000208   4.5e-13  2.47e-16  9.38e-53         1  4.98e+06  4.36e+31
         P6  4.75e-50  1.43e-11  4.18e-11  9.03e-20  4.96e-23  1.88e-59  2.01e-07         1  8.76e+24
         P7  5.42e-75  1.63e-36  4.77e-36  1.03e-44  5.66e-48  2.15e-84  2.29e-32  1.14e-25         1
   MasterEquation::set:  done, cpu time[sec] = 4.35934, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 310 K
            Well    Collision, 1/sec
              W1         4.65126e+08
      global relaxation matrix dimension = 549
      setting global matrices ... done, cpu time[sec] = 0.611814, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.25193, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            5586.38      770.973      181.254      235.925      24.2938      3084.67      244.752       0.2035
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.071102, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005504, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.077098, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.08956e-07  1.08956e-07  1.87013e-09
      low eigenvalue method done, cpu time[sec] = 0.077393, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.09e-07  1.87e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.13e-08  1.87e-09         1
         *Z       ---       ---  1.21e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.87013e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.01667e-57  5.04473e-58  1.92669e-59  2.34434e-58  5.69824e-60  1.49846e-61  7.78439e-70  1.25335e-92

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.10915, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 310 K
            Well    Collision, 1/sec
              W1         1.39538e+09
      global relaxation matrix dimension = 549
      setting global matrices ... done, cpu time[sec] = 0.613711, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.82576, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1862.13      256.991      60.4181      78.6416      8.09793      1028.22      81.5841    0.0678332
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.071064, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005492, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.077056, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.73705e-08  3.73705e-08  4.67028e-10
      low eigenvalue method done, cpu time[sec] = 0.077348, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.74e-08  4.67e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.84e-09  4.67e-10         1
         *Z       ---       ---  1.21e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 4.67028e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.79976e-58  1.20409e-58  3.86936e-60  3.93241e-59  1.00478e-60    1.072e-61  7.85349e-70  6.85154e-93

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.68438, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 310 K
            Well    Collision, 1/sec
              W1         2.32563e+09
      global relaxation matrix dimension = 549
      setting global matrices ... done, cpu time[sec] = 0.613656, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.81337, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1117.28      154.195      36.2508       47.185      4.85876      616.934      48.9505    0.0406999
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.071032, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.005488, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.077022, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.26735e-08  2.26734e-08  2.26522e-10
      low eigenvalue method done, cpu time[sec] = 0.077327, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.27e-08  2.27e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.32e-09  2.27e-10         1
         *Z       ---       ---  1.21e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.26522e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.40331e-58  5.65355e-59  1.74053e-60  1.65707e-59   4.3234e-61  7.83046e-62  7.92742e-70  2.28441e-93

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.67035, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 310 K
            Well    Collision, 1/sec
              W1         3.25588e+09
      global relaxation matrix dimension = 549
      setting global matrices ... done, cpu time[sec] = 0.61122, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.81921, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            798.054      110.139      25.8935      33.7036      3.47054      440.667      34.9646    0.0290714
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.07105, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005446, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.076988, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.63022e-08  1.63022e-08  1.36842e-10
      low eigenvalue method done, cpu time[sec] = 0.077281, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.63e-08  1.37e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.66e-09  1.37e-10         1
         *Z       ---       ---  1.21e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.36842e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  8.63379e-59  3.33966e-59  1.00843e-60  9.24986e-60  2.44394e-61  6.00352e-62  8.00571e-70 -3.37318e-93

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.67351, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 310 K
            Well    Collision, 1/sec
              W1         4.18614e+09
      global relaxation matrix dimension = 549
      setting global matrices ... done, cpu time[sec] = 0.605473, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.79182, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            620.709      85.6637      20.1394      26.2139      2.69931      342.741      27.1947    0.0226111
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.071114, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005518, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.077126, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.27371e-08  1.27371e-08  9.26281e-11
      low eigenvalue method done, cpu time[sec] = 0.077421, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.27e-08  9.26e-11         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.29e-09  9.26e-11         1
         *Z       ---       ---  1.21e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 9.26283e-11
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  5.91535e-59  2.22331e-59  6.64089e-61  5.94109e-60  1.58349e-61  4.77762e-62  8.08719e-70 -1.42213e-93

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.64056, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 310 K
            Well    Collision, 1/sec
              W1         4.65126e+09
      global relaxation matrix dimension = 549
      setting global matrices ... done, cpu time[sec] = 0.613672, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.79844, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            558.638      77.0973      18.1254      23.5925      2.42938      308.467      24.4752      0.02035
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.071187, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005509, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.077195, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.14841e-08  1.14841e-08  7.83816e-11
      low eigenvalue method done, cpu time[sec] = 0.077505, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.15e-08  7.84e-11         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.16e-09  7.84e-11         1
         *Z       ---       ---  1.21e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 7.83817e-11
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  5.02915e-59  1.86848e-59  5.56004e-61   4.9257e-60  1.31743e-61  4.30915e-62  8.12866e-70   7.0865e-93

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.65562, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 310 K
            Well    Collision, 1/sec
              W1          6.9769e+09
      global relaxation matrix dimension = 549
      setting global matrices ... done, cpu time[sec] = 0.61217, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.79838, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            372.425      51.3982      12.0836      15.7283      1.61959      205.645      16.3168    0.0135666
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.070991, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005491, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.076983, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.70596e-09  7.70594e-09  4.04851e-11
      low eigenvalue method done, cpu time[sec] = 0.077285, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.71e-09  4.05e-11         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.79e-10  4.05e-11         1
         *Z       ---       ---  1.21e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 4.04852e-11
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.64003e-59  9.40827e-60  2.76927e-61  2.37128e-60  6.42126e-62  2.78424e-62  8.33518e-70 -3.19737e-93

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.65209, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 310 K
            Well    Collision, 1/sec
              W1         9.30253e+09
      global relaxation matrix dimension = 549
      setting global matrices ... done, cpu time[sec] = 0.612354, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.81442, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            279.319      38.5487      9.06271      11.7962      1.21469      154.234      12.2376     0.010175
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.071033, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005501, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.077035, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.80372e-09  5.80372e-09  2.49238e-11
      low eigenvalue method done, cpu time[sec] = 0.077334, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   5.8e-09  2.49e-11         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.85e-10  2.49e-11         1
         *Z       ---       ---  1.21e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.49241e-11
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.64125e-59  5.69552e-60  1.66821e-61  1.39905e-60  3.81812e-62  1.96933e-62   8.5245e-70  3.38457e-93

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.67008, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 310 K
            Well    Collision, 1/sec
              W1         1.16282e+10
      global relaxation matrix dimension = 549
      setting global matrices ... done, cpu time[sec] = 0.61354, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.81745, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            223.455      30.8389      7.25017        9.437     0.971751      123.387       9.7901   0.00813998
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.071035, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005474, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.077006, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   4.6571e-09  4.65709e-09  1.69602e-11
      low eigenvalue method done, cpu time[sec] = 0.077299, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.66e-09   1.7e-11         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.68e-10   1.7e-11         1
         *Z       ---       ---  1.21e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.69604e-11
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.12433e-59  3.82892e-60  1.11858e-61  9.24748e-61  2.53751e-62  1.47635e-62  8.68177e-70 -5.90761e-94

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.67495, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 310 K
            Well    Collision, 1/sec
              W1         1.39538e+10
      global relaxation matrix dimension = 549
      setting global matrices ... done, cpu time[sec] = 0.613061, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.82867, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            186.213      25.6991      6.04181      7.86416     0.809793      102.822      8.15841   0.00678332
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.071134, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005488, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.077117, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.89007e-09  3.89006e-09  1.23181e-11
      low eigenvalue method done, cpu time[sec] = 0.07741, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.89e-09  1.23e-11         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.91e-10  1.23e-11         1
         *Z       ---       ---  1.21e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.23184e-11
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  8.20629e-60  2.75524e-60  8.03722e-62  6.57435e-61  1.81139e-62  1.15277e-62  8.80008e-70 -5.81286e-93

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.68787, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 310 K
            Well    Collision, 1/sec
              W1         1.62794e+10
      global relaxation matrix dimension = 549
      setting global matrices ... done, cpu time[sec] = 0.613194, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.80664, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            159.611      22.0278      5.17869      6.74071     0.694108      88.1335      6.99293   0.00581427
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.071155, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005494, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.077151, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   3.3407e-09   3.3407e-09  9.36719e-12
      low eigenvalue method done, cpu time[sec] = 0.07745, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.34e-09  9.37e-12         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.35e-10  9.37e-12         1
         *Z       ---       ---  1.21e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 9.3674e-12
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  6.26415e-60  2.07979e-60  6.06149e-62  4.91758e-61  1.35925e-62  9.27734e-63  8.87809e-70 -1.93408e-93

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.6669, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 310 K
            Well    Collision, 1/sec
              W1         1.86051e+10
      global relaxation matrix dimension = 549
      setting global matrices ... done, cpu time[sec] = 0.614384, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.80196, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             139.66      19.2743      4.53135      5.89812     0.607344      77.1168      6.11881   0.00508749
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.071078, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005487, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.077067, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.92778e-09  2.92778e-09  7.37098e-12
      low eigenvalue method done, cpu time[sec] = 0.077361, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.93e-09  7.37e-12         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.93e-10  7.37e-12         1
         *Z       ---       ---  1.21e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 7.37144e-12
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  4.94421e-60  1.62672e-60  4.73847e-62  3.81892e-61  1.05831e-62  7.64288e-63  8.91777e-70  3.07894e-93

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.49525, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 320 K
      Energy reference = 25673 1/cm
      Energy step      = 55 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.8 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.007624
         W1 Well: collisional kernel bandwidth = 58
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.630518
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.401204
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.336165
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 2.31539
         W1 Well: minimal relaxation eigenvalue = 0.0950263
         W1 Well: maximal relaxation eigenvalue = 0.981706
         W1 Well:       grid size = 536
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -3807 1/cm
         B1 Barrier:        grid size = 467
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -12 1/cm
         B2 Barrier:        grid size = 463
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 207 1/cm
         B3 Barrier:        grid size = 551
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4632 1/cm
         B4 Barrier:        grid size = 580
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6227 1/cm
         B5 Barrier: nonpositive number of states at -23167 1/cm => truncating
         B5 Barrier:        grid size = 888
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23167 1/cm
         B6 Barrier:        grid size = 440
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1472 1/cm
         B7 Barrier:        grid size = 381
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4717 1/cm
         B8 Barrier:        grid size = 162
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16763 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 4.1518, elapsed time[sec] = 0
      B3 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 536
      MasterEquation::Barrier::truncate: real weight = 1.31915e+55
      MasterEquation::Barrier::truncate: effective weight = 3.30576e+51
      B4 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 536
      MasterEquation::Barrier::truncate: real weight = 1.37264e+57
      MasterEquation::Barrier::truncate: effective weight = 3.43967e+53
      B5 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 536
      MasterEquation::Barrier::truncate: real weight = 1.85215e+61
      MasterEquation::Barrier::truncate: effective weight = 1.22682e+53
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1  -3807  -3807 3.79e+09 3.77e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -12 3.39e+14
         B2    208 4.73e+13
         B3  -3807 1.12e+13
         B4  -3807 1.45e+13
         B5  -3807  1.5e+12
         B6   1473  1.9e+14
         B7   4718 1.53e+13
         B8  16763 1.37e+10
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  9.32e-07  2.63e-06  1.16e-14  8.03e-18   4.3e-53    0.0108  3.41e+04  5.24e+28
          R  1.07e+06         1      2.83  1.24e-08  8.62e-12  4.61e-47  1.16e+04  3.66e+10  5.62e+34
         P1   3.8e+05     0.354         1  4.39e-09  3.05e-12  1.63e-47   4.1e+03   1.3e+10  1.99e+34
         P2  8.65e+13  8.07e+07  2.28e+08         1  0.000695  3.72e-39  9.34e+11  2.95e+18  4.53e+42
         P3  1.24e+17  1.16e+11  3.28e+11  1.44e+03         1  5.35e-36  1.34e+15  4.25e+21  6.52e+45
         P4  2.33e+52  2.17e+46  6.13e+46  2.69e+38  1.87e+35         1  2.51e+50  7.94e+56  1.22e+81
         P5      92.6  8.64e-05  0.000244  1.07e-12  7.44e-16  3.98e-51         1  3.16e+06  4.85e+30
         P6  2.93e-05  2.73e-11  7.72e-11  3.38e-19  2.35e-22  1.26e-57  3.16e-07         1  1.53e+24
         P7  1.91e-29  1.78e-35  5.03e-35  2.21e-43  1.53e-46  8.21e-82  2.06e-31  6.52e-25         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  2.88e+36  8.13e+36  3.57e+28  2.48e+25  1.33e-10  3.33e+40  1.05e+47  1.62e+71
          R  3.48e-37         1      2.83  1.24e-08  8.62e-12  4.61e-47  1.16e+04  3.66e+10  5.62e+34
         P1  1.23e-37     0.354         1  4.39e-09  3.05e-12  1.63e-47   4.1e+03   1.3e+10  1.99e+34
         P2   2.8e-29  8.07e+07  2.28e+08         1  0.000695  3.72e-39  9.34e+11  2.95e+18  4.53e+42
         P3  4.03e-26  1.16e+11  3.28e+11  1.44e+03         1  5.35e-36  1.34e+15  4.25e+21  6.52e+45
         P4  7.54e+09  2.17e+46  6.13e+46  2.69e+38  1.87e+35         1  2.51e+50  7.94e+56  1.22e+81
         P5     3e-41  8.64e-05  0.000244  1.07e-12  7.44e-16  3.98e-51         1  3.16e+06  4.85e+30
         P6  9.49e-48  2.73e-11  7.72e-11  3.38e-19  2.35e-22  1.26e-57  3.16e-07         1  1.53e+24
         P7  6.19e-72  1.78e-35  5.03e-35  2.21e-43  1.53e-46  8.21e-82  2.06e-31  6.52e-25         1
   MasterEquation::set:  done, cpu time[sec] = 4.1663, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 320 K
            Well    Collision, 1/sec
              W1         4.54717e+08
      global relaxation matrix dimension = 536
      setting global matrices ... done, cpu time[sec] = 0.585129, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.23226, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            5921.57      825.998      195.317      253.467      26.2017      3312.55      266.655      0.23994
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.066466, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005147, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.072093, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.88949e-08  9.88949e-08  2.32687e-09
      low eigenvalue method done, cpu time[sec] = 0.072387, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.89e-08  2.33e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.02e-08  2.33e-09         1
         *Z       ---       ---   3.4e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.32687e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0    1.096e-55  5.36043e-56  1.98525e-57  2.31645e-56  5.67639e-58  1.84421e-59  1.53771e-67  6.70809e-90

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.99407, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 320 K
            Well    Collision, 1/sec
              W1         1.36415e+09
      global relaxation matrix dimension = 536
      setting global matrices ... done, cpu time[sec] = 0.582813, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.6203, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1973.86      275.333      65.1056       84.489      8.73391      1104.18       88.885      0.07998
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.066384, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005126, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.071979, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.41621e-08  3.41621e-08  6.00951e-10
      low eigenvalue method done, cpu time[sec] = 0.072268, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.42e-08  6.01e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.48e-09  6.01e-10         1
         *Z       ---       ---   3.4e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 6.0095e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  3.11215e-56  1.31187e-56  4.12243e-58  4.02696e-57  1.03975e-58  1.33839e-59  1.55131e-67 -2.62007e-90

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.38397, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 320 K
            Well    Collision, 1/sec
              W1         2.27358e+09
      global relaxation matrix dimension = 536
      setting global matrices ... done, cpu time[sec] = 0.586907, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.63578, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1184.31        165.2      39.0634      50.6934      5.24034       662.51       53.331     0.047988
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.066389, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005117, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.071981, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.07818e-08  2.07818e-08   2.9586e-10
      low eigenvalue method done, cpu time[sec] = 0.072266, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.08e-08  2.96e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.11e-09  2.96e-10         1
         *Z       ---       ---   3.4e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.95859e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.58259e-56  6.23204e-57  1.88186e-58  1.72214e-57  4.54524e-59  9.88141e-60  1.56587e-67 -6.29546e-91

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.40359, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 320 K
            Well    Collision, 1/sec
              W1         3.18302e+09
      global relaxation matrix dimension = 536
      setting global matrices ... done, cpu time[sec] = 0.584839, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.63507, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            845.938          118      27.9024      36.2096       3.7431      473.221      38.0936    0.0342772
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.066384, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005108, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.071965, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.49641e-08  1.49641e-08  1.80434e-10
      low eigenvalue method done, cpu time[sec] = 0.072244, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.5e-08   1.8e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.51e-09   1.8e-10         1
         *Z       ---       ---   3.4e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.80434e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  9.82844e-57  3.70908e-57  1.10046e-58  9.69975e-58  2.59435e-59  7.63774e-60  1.58126e-67  -1.7055e-91

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.39928, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 320 K
            Well    Collision, 1/sec
              W1         4.09245e+09
      global relaxation matrix dimension = 536
      setting global matrices ... done, cpu time[sec] = 0.585608, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.571, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            657.952      91.7776      21.7019       28.163       2.9113      368.061      29.6283      0.02666
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.066382, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005109, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.071971, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.17028e-08  1.17028e-08  1.22977e-10
      low eigenvalue method done, cpu time[sec] = 0.072255, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.17e-08  1.23e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.18e-09  1.23e-10         1
         *Z       ---       ---   3.4e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.22977e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  6.78008e-57  2.48266e-57  7.29534e-59  6.26933e-58  1.69246e-59  6.11772e-60  1.59725e-67 -6.32999e-92

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.33182, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 320 K
            Well    Collision, 1/sec
              W1         4.54717e+09
      global relaxation matrix dimension = 536
      setting global matrices ... done, cpu time[sec] = 0.584599, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.62891, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            592.157      82.5998      19.5317      25.3467      2.62017      331.255      26.6655     0.023994
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.066391, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00512, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.071985, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.05555e-08  1.05555e-08  1.04356e-10
      low eigenvalue method done, cpu time[sec] = 0.072268, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.06e-08  1.04e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.06e-09  1.04e-10         1
         *Z       ---       ---   3.4e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.04356e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  5.78058e-57  2.09106e-57  6.12454e-59  5.21098e-58  1.41198e-59  5.53335e-60  1.60538e-67  1.36488e-90

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.38739, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 320 K
            Well    Collision, 1/sec
              W1         6.82075e+09
      global relaxation matrix dimension = 536
      setting global matrices ... done, cpu time[sec] = 0.58354, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.61016, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            394.771      55.0666      13.0211      16.8978      1.74678      220.837       17.777     0.015996
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.066347, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005124, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.071945, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.09155e-09  7.09155e-09  5.44639e-11
      low eigenvalue method done, cpu time[sec] = 0.072224, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.09e-09  5.45e-11         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.11e-10  5.45e-11         1
         *Z       ---       ---   3.4e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 5.4464e-11
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  3.06641e-57   1.0615e-57  3.08089e-59  2.53148e-58  6.95092e-60  3.61523e-60  1.64577e-67 -3.11361e-91

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.34569, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 320 K
            Well    Collision, 1/sec
              W1         9.09433e+09
      global relaxation matrix dimension = 536
      setting global matrices ... done, cpu time[sec] = 0.359431, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.15704, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            296.078      41.2999      9.76584      12.6734      1.31009      165.627      13.3328     0.011997
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.066422, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005145, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.072038, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   5.3448e-09  5.34481e-09  3.37612e-11
      low eigenvalue method done, cpu time[sec] = 0.072322, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.34e-09  3.38e-11         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.34e-10  3.38e-11         1
         *Z       ---       ---   3.4e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.3761e-11
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0   1.9197e-57  6.46049e-58  1.86806e-59  1.50225e-58  4.15966e-60  2.57779e-60   1.6827e-67 -1.33215e-90

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.6848, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 320 K
            Well    Collision, 1/sec
              W1         1.13679e+10
      global relaxation matrix dimension = 536
      setting global matrices ... done, cpu time[sec] = 0.585005, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.60975, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            236.863      33.0399      7.81268      10.1387      1.04807      132.502      10.6662   0.00959761
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.066457, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005107, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.072037, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.29087e-09  4.29087e-09  2.30895e-11
      low eigenvalue method done, cpu time[sec] = 0.072324, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.29e-09  2.31e-11         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.28e-10  2.31e-11         1
         *Z       ---       ---   3.4e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.30893e-11
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.32184e-57  4.36002e-58  1.25852e-59  9.97058e-59  2.77722e-60   1.9446e-60  1.71337e-67 -6.58617e-92

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.36896, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 320 K
            Well    Collision, 1/sec
              W1         1.36415e+10
      global relaxation matrix dimension = 536
      setting global matrices ... done, cpu time[sec] = 0.585387, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.61043, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            197.386      27.5333      6.51056       8.4489     0.873391      110.418       8.8885     0.007998
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.066453, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.0051, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.072023, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.58537e-09  3.58537e-09  1.68351e-11
      low eigenvalue method done, cpu time[sec] = 0.072303, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.59e-09  1.68e-11         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.57e-10  1.68e-11         1
         *Z       ---       ---   3.4e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.68348e-11
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0   9.6863e-58  3.14673e-58  9.07559e-60  7.11056e-59  1.98945e-60  1.52609e-60   1.7365e-67 -6.03225e-91

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.37186, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 320 K
            Well    Collision, 1/sec
              W1         1.59151e+10
      global relaxation matrix dimension = 536
      setting global matrices ... done, cpu time[sec] = 0.586125, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.60723, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            169.188         23.6      5.58048      7.24192     0.748621      94.6443      7.61872   0.00685543
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.066441, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005109, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.072025, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.07982e-09  3.07983e-09  1.28421e-11
      low eigenvalue method done, cpu time[sec] = 0.072308, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.08e-09  1.28e-11         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.06e-10  1.28e-11         1
         *Z       ---       ---   3.4e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.28422e-11
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  7.41762e-58  2.38092e-58  6.86451e-60  5.33176e-59  1.49702e-60  1.23336e-60  1.75186e-67  4.87817e-90

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.36641, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 320 K
            Well    Collision, 1/sec
              W1         1.81887e+10
      global relaxation matrix dimension = 536
      setting global matrices ... done, cpu time[sec] = 0.583987, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.61006, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            148.039        20.65      4.88292      6.33668     0.655043      82.8137      6.66638    0.0059985
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.066375, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005156, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.072, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.69971e-09   2.6997e-09  1.01314e-11
      low eigenvalue method done, cpu time[sec] = 0.072286, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   2.7e-09  1.01e-11         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.68e-10  1.01e-11         1
         *Z       ---       ---   3.4e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.01312e-11
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  5.87019e-58  1.86587e-58  5.37905e-60  4.14887e-59  1.16822e-60  1.01973e-60  1.75984e-67  8.13759e-92

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.36867, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 330 K
      Energy reference = 25951 1/cm
      Energy step      = 57 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.8 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.007291
         W1 Well: collisional kernel bandwidth = 58
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.60519
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.381524
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.338274
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 2.13559
         W1 Well: minimal relaxation eigenvalue = 0.0941841
         W1 Well: maximal relaxation eigenvalue = 0.980317
         W1 Well:       grid size = 523
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -3860 1/cm
         B1 Barrier:        grid size = 456
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -41 1/cm
         B2 Barrier:        grid size = 452
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 186 1/cm
         B3 Barrier:        grid size = 536
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4601 1/cm
         B4 Barrier:        grid size = 564
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6196 1/cm
         B5 Barrier: nonpositive number of states at -23183 1/cm => truncating
         B5 Barrier:        grid size = 862
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23183 1/cm
         B6 Barrier:        grid size = 429
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1497 1/cm
         B7 Barrier:        grid size = 373
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4690 1/cm
         B8 Barrier:        grid size = 161
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16774 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 3.92696, elapsed time[sec] = 0
      B3 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 523
      MasterEquation::Barrier::truncate: real weight = 1.2824e+54
      MasterEquation::Barrier::truncate: effective weight = 3.33053e+50
      B4 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 523
      MasterEquation::Barrier::truncate: real weight = 1.15008e+56
      MasterEquation::Barrier::truncate: effective weight = 2.98682e+52
      B5 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 523
      MasterEquation::Barrier::truncate: real weight = 2.58752e+59
      MasterEquation::Barrier::truncate: effective weight = 8.83311e+51
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1  -3860  -3860 3.73e+09 3.96e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -41 3.69e+14
         B2    187  5.2e+13
         B3  -3860 1.24e+13
         B4  -3860  1.6e+13
         B5  -3860 1.66e+12
         B6   1498 2.09e+14
         B7   4690 1.71e+13
         B8  16774 1.66e+10
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  5.97e-07  1.64e-06   1.4e-14  1.21e-17  7.78e-52   0.00577  1.19e+04  3.57e+27
          R  1.67e+06         1      2.74  2.34e-08  2.03e-11   1.3e-45  9.67e+03     2e+10  5.97e+33
         P1  6.11e+05     0.365         1  8.53e-09   7.4e-12  4.75e-46  3.52e+03  7.29e+09  2.18e+33
         P2  7.16e+13  4.28e+07  1.17e+08         1  0.000868  5.57e-38  4.13e+11  8.55e+17  2.55e+41
         P3  8.25e+16  4.93e+10  1.35e+11  1.15e+03         1  6.42e-35  4.76e+14  9.85e+20  2.94e+44
         P4  1.29e+51  7.68e+44  2.11e+45   1.8e+37  1.56e+34         1  7.42e+48  1.53e+55  4.59e+78
         P5       173  0.000103  0.000284  2.42e-12   2.1e-15  1.35e-49         1  2.07e+06  6.18e+29
         P6  8.38e-05     5e-11  1.37e-10  1.17e-18  1.02e-21  6.52e-56  4.84e-07         1  2.99e+23
         P7   2.8e-28  1.67e-34  4.59e-34  3.92e-42   3.4e-45  2.18e-79  1.62e-30  3.35e-24         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  3.63e+34  9.96e+34  8.49e+26  7.37e+23  4.73e-11  3.51e+38  7.26e+44  2.17e+68
          R  2.75e-35         1      2.74  2.34e-08  2.03e-11   1.3e-45  9.67e+03     2e+10  5.97e+33
         P1     1e-35     0.365         1  8.53e-09   7.4e-12  4.75e-46  3.52e+03  7.29e+09  2.18e+33
         P2  1.18e-27  4.28e+07  1.17e+08         1  0.000868  5.57e-38  4.13e+11  8.55e+17  2.55e+41
         P3  1.36e-24  4.93e+10  1.35e+11  1.15e+03         1  6.42e-35  4.76e+14  9.85e+20  2.94e+44
         P4  2.11e+10  7.68e+44  2.11e+45   1.8e+37  1.56e+34         1  7.42e+48  1.53e+55  4.59e+78
         P5  2.85e-39  0.000103  0.000284  2.42e-12   2.1e-15  1.35e-49         1  2.07e+06  6.18e+29
         P6  1.38e-45     5e-11  1.37e-10  1.17e-18  1.02e-21  6.52e-56  4.84e-07         1  2.99e+23
         P7  4.61e-69  1.67e-34  4.59e-34  3.92e-42   3.4e-45  2.18e-79  1.62e-30  3.35e-24         1
   MasterEquation::set:  done, cpu time[sec] = 3.94159, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 330 K
            Well    Collision, 1/sec
              W1         4.44908e+08
      global relaxation matrix dimension = 523
      setting global matrices ... done, cpu time[sec] = 0.556054, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.27774, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            6268.52       883.74      210.163      271.928      28.2178      3551.83      290.004     0.281842
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.06201, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004837, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.067297, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.11048e-07  1.11048e-07  3.54075e-09
      low eigenvalue method done, cpu time[sec] = 0.067582, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.11e-07  3.54e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.14e-08  3.54e-09         1
         *Z       ---       ---  9.31e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.54075e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  8.89465e-54  4.28833e-54  1.54605e-55  1.74002e-54  4.29631e-56  1.70236e-57   2.2031e-65 -1.25197e-87

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.9484, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 330 K
            Well    Collision, 1/sec
              W1         1.33472e+09
      global relaxation matrix dimension = 523
      setting global matrices ... done, cpu time[sec] = 0.554452, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.47505, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2089.51       294.58      70.0542      90.6428      9.40595      1183.94      96.6681    0.0939474
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.062005, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004812, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.067266, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.87343e-08  3.87343e-08  9.44098e-10
      low eigenvalue method done, cpu time[sec] = 0.067539, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.87e-08  9.44e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.92e-09  9.44e-10         1
         *Z       ---       ---  9.31e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 9.44097e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.60133e-54  1.07529e-54  3.31534e-56  3.12974e-55  8.15934e-57  1.25031e-57   2.2225e-65  7.78792e-89

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.14594, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 330 K
            Well    Collision, 1/sec
              W1         2.22454e+09
      global relaxation matrix dimension = 523
      setting global matrices ... done, cpu time[sec] = 0.555259, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.47518, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             1253.7      176.748      42.0325      54.3857      5.64357      710.366      58.0008    0.0563684
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.061962, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004785, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.067205, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.36498e-08  2.36498e-08  4.71545e-10
      low eigenvalue method done, cpu time[sec] = 0.067478, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.36e-08  4.72e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.38e-09  4.72e-10         1
         *Z       ---       ---  9.31e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 4.71545e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.34154e-54  5.16709e-55  1.53532e-56   1.3577e-55  3.62165e-57  9.32052e-58  2.24326e-65  3.73515e-88

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.15114, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 330 K
            Well    Collision, 1/sec
              W1         3.11435e+09
      global relaxation matrix dimension = 523
      setting global matrices ... done, cpu time[sec] = 0.554363, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.48078, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            895.503      126.249      30.0232      38.8469      4.03112      507.404      41.4292    0.0402632
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.062037, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004794, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.067286, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.70644e-08  1.70644e-08  2.90253e-10
      low eigenvalue method done, cpu time[sec] = 0.067558, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.71e-08   2.9e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.71e-09   2.9e-10         1
         *Z       ---       ---  9.31e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.90252e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  8.40817e-55   3.0981e-55  9.06045e-57  7.71446e-56  2.08679e-57  7.25848e-58   2.2652e-65 -4.55537e-89

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.14714, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 330 K
            Well    Collision, 1/sec
              W1         4.00417e+09
      global relaxation matrix dimension = 523
      setting global matrices ... done, cpu time[sec] = 0.554763, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.48477, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            696.502      98.1933      23.3514      30.2143      3.13532      394.648      32.2227    0.0313158
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.061991, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004799, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.067248, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.33636e-08  1.33636e-08  1.99163e-10
      low eigenvalue method done, cpu time[sec] = 0.067523, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.34e-08  1.99e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.34e-09  1.99e-10         1
         *Z       ---       ---  9.31e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.99162e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  5.83946e-55  2.08489e-55  6.04618e-57  5.01715e-56   1.3705e-57  5.84939e-58  2.28796e-65 -2.38552e-88

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.15407, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 330 K
            Well    Collision, 1/sec
              W1         4.44908e+09
      global relaxation matrix dimension = 523
      setting global matrices ... done, cpu time[sec] = 0.554678, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.47379, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            626.852       88.374      21.0163      27.1928      2.82178      355.183      29.0004    0.0281842
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.062053, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00482, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.067323, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.20598e-08  1.20598e-08  1.69474e-10
      low eigenvalue method done, cpu time[sec] = 0.067593, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.21e-08  1.69e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.21e-09  1.69e-10         1
         *Z       ---       ---  9.31e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.69474e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  4.99247e-55  1.75991e-55  5.08955e-57  4.18062e-56  1.14648e-57  5.30467e-58  2.29951e-65 -2.83509e-88

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.14212, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 330 K
            Well    Collision, 1/sec
              W1         6.67361e+09
      global relaxation matrix dimension = 523
      setting global matrices ... done, cpu time[sec] = 0.556241, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.48597, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            417.901       58.916      14.0108      18.1286      1.88119      236.789      19.3336    0.0187895
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.062029, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004837, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.067311, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.11661e-09  8.11661e-09  8.93645e-11
      low eigenvalue method done, cpu time[sec] = 0.067582, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.12e-09  8.94e-11         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.08e-10  8.94e-11         1
         *Z       ---       ---  9.31e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 8.93643e-11
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.67596e-55  9.00716e-56  2.58583e-57  2.04941e-56  5.70007e-58  3.50271e-58  2.35678e-65 -4.10611e-88

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.15447, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 330 K
            Well    Collision, 1/sec
              W1         8.89815e+09
      global relaxation matrix dimension = 523
      setting global matrices ... done, cpu time[sec] = 0.556618, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.49249, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            313.426       44.187      10.5081      13.5964      1.41089      177.591      14.5002    0.0140921
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.062009, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004804, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.067268, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.12378e-09  6.12379e-09   5.5778e-11
      low eigenvalue method done, cpu time[sec] = 0.06754, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.12e-09  5.58e-11         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.08e-10  5.58e-11         1
         *Z       ---       ---  9.31e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 5.57778e-11
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0    1.687e-55  5.51161e-56  1.57826e-57  1.22331e-56  3.43319e-58    2.517e-58  2.40902e-65 -1.32087e-88

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.16343, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 330 K
            Well    Collision, 1/sec
              W1         1.11227e+10
      global relaxation matrix dimension = 523
      setting global matrices ... done, cpu time[sec] = 0.555403, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.48305, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            250.741      35.3496      8.40651      10.8771      1.12871      142.073      11.6002    0.0112737
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.062015, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00483, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.067304, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.91969e-09  4.91971e-09  3.83402e-11
      low eigenvalue method done, cpu time[sec] = 0.067581, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.92e-09  3.83e-11         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.88e-10  3.83e-11         1
         *Z       ---       ---  9.31e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.83396e-11
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.16762e-55   3.7343e-56   1.0684e-57  8.15332e-57  2.30289e-58  1.91027e-58  2.45241e-65 -9.46247e-89

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.13687, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 330 K
            Well    Collision, 1/sec
              W1         1.33472e+10
      global relaxation matrix dimension = 523
      setting global matrices ... done, cpu time[sec] = 0.546319, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.45147, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            208.951       29.458      7.00542      9.06428     0.940595      118.394      9.66681   0.00939474
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.062006, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004804, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.067256, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   4.1129e-09   4.1129e-09  2.80648e-11
      low eigenvalue method done, cpu time[sec] = 0.067526, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.11e-09  2.81e-11         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.07e-10  2.81e-11         1
         *Z       ---       ---  9.31e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.80644e-11
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  8.59063e-56  2.70332e-56  7.73327e-58  5.83317e-57  1.65556e-58  1.50656e-58  2.48523e-65  1.21299e-88

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.11316, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 330 K
            Well    Collision, 1/sec
              W1         1.55718e+10
      global relaxation matrix dimension = 523
      setting global matrices ... done, cpu time[sec] = 0.55994, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.48295, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            179.101      25.2497      6.00465      7.76938     0.806224      101.481      8.28583   0.00805263
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.062005, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.004815, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.067275, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.53436e-09  3.53435e-09  2.14762e-11
      low eigenvalue method done, cpu time[sec] = 0.067547, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.53e-09  2.15e-11         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.49e-10  2.15e-11         1
         *Z       ---       ---  9.31e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.14759e-11
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  6.59999e-56  2.05041e-56  5.86672e-58  4.38504e-57  1.24933e-58  1.22262e-58  2.50719e-65   3.3472e-88

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.16712, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 330 K
            Well    Collision, 1/sec
              W1         1.77963e+10
      global relaxation matrix dimension = 523
      setting global matrices ... done, cpu time[sec] = 0.556557, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.47678, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            156.713      22.0935      5.25407      6.79821     0.705446      88.7957       7.2501   0.00704605
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.061998, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004811, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.067264, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.09907e-09  3.09907e-09  1.69876e-11
      low eigenvalue method done, cpu time[sec] = 0.067548, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   3.1e-09   1.7e-11         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.06e-10   1.7e-11         1
         *Z       ---       ---  9.31e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.69871e-11
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  5.23726e-56  1.61008e-56  4.60854e-58  3.41928e-57  9.77217e-59  1.01442e-58  2.51886e-65 -5.52199e-88

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.14812, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 340 K
      Energy reference = 26229 1/cm
      Energy step      = 59 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.7 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.007308
         W1 Well: collisional kernel bandwidth = 57
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.587381
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.368792
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.282675
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 1.99949
         W1 Well: minimal relaxation eigenvalue = 0.0933649
         W1 Well: maximal relaxation eigenvalue = 0.979024
         W1 Well:       grid size = 511
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -3919 1/cm
         B1 Barrier:        grid size = 445
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -26 1/cm
         B2 Barrier:        grid size = 441
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 209 1/cm
         B3 Barrier:        grid size = 523
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4628 1/cm
         B4 Barrier:        grid size = 550
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6221 1/cm
         B5 Barrier: nonpositive number of states at -23213 1/cm => truncating
         B5 Barrier:        grid size = 838
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23213 1/cm
         B6 Barrier:        grid size = 420
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1448 1/cm
         B7 Barrier:        grid size = 365
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4693 1/cm
         B8 Barrier:        grid size = 161
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16729 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 3.6939, elapsed time[sec] = 0
      B3 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 511
      MasterEquation::Barrier::truncate: real weight = 1.4364e+53
      MasterEquation::Barrier::truncate: effective weight = 3.86139e+49
      B4 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 511
      MasterEquation::Barrier::truncate: real weight = 1.12071e+55
      MasterEquation::Barrier::truncate: effective weight = 3.01271e+51
      B5 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 511
      MasterEquation::Barrier::truncate: real weight = 5.11034e+57
      MasterEquation::Barrier::truncate: effective weight = 7.48097e+50
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1  -3919  -3919 3.66e+09 4.16e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -26 4.01e+14
         B2    210 5.71e+13
         B3  -3919 1.37e+13
         B4  -3919 1.76e+13
         B5  -3919 1.84e+12
         B6   1449  2.3e+14
         B7   4694  1.9e+13
         B8  16730    2e+10
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  4.02e-07  1.07e-06  1.71e-14  1.82e-17  1.21e-50   0.00327  4.54e+03  2.91e+26
          R  2.49e+06         1      2.67  4.25e-08  4.54e-11  3.02e-44  8.15e+03  1.13e+10  7.25e+32
         P1  9.34e+05     0.375         1  1.59e-08   1.7e-11  1.13e-44  3.06e+03  4.24e+09  2.72e+32
         P2  5.86e+13  2.35e+07  6.28e+07         1   0.00107  7.11e-37  1.92e+11  2.66e+17  1.71e+40
         P3  5.48e+16   2.2e+10  5.87e+10       935         1  6.65e-34  1.79e+14  2.49e+20   1.6e+43
         P4  8.24e+49  3.31e+43  8.82e+43  1.41e+36   1.5e+33         1   2.7e+47  3.74e+53   2.4e+76
         P5       305  0.000123  0.000327  5.21e-12  5.57e-15  3.71e-48         1  1.39e+06  8.89e+28
         P6   0.00022  8.85e-11  2.36e-10  3.76e-18  4.02e-21  2.67e-54  7.21e-07         1  6.41e+22
         P7  3.44e-27  1.38e-33  3.68e-33  5.86e-41  6.27e-44  4.17e-77  1.12e-29  1.56e-23         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  5.92e+32  1.58e+33  2.51e+25  2.69e+22  1.79e-11  4.82e+36  6.69e+42  4.29e+65
          R  1.69e-33         1      2.67  4.25e-08  4.54e-11  3.02e-44  8.15e+03  1.13e+10  7.25e+32
         P1  6.34e-34     0.375         1  1.59e-08   1.7e-11  1.13e-44  3.06e+03  4.24e+09  2.72e+32
         P2  3.98e-26  2.35e+07  6.28e+07         1   0.00107  7.11e-37  1.92e+11  2.66e+17  1.71e+40
         P3  3.72e-23   2.2e+10  5.87e+10       935         1  6.65e-34  1.79e+14  2.49e+20   1.6e+43
         P4  5.59e+10  3.31e+43  8.82e+43  1.41e+36   1.5e+33         1   2.7e+47  3.74e+53   2.4e+76
         P5  2.07e-37  0.000123  0.000327  5.21e-12  5.57e-15  3.71e-48         1  1.39e+06  8.89e+28
         P6   1.5e-43  8.85e-11  2.36e-10  3.76e-18  4.02e-21  2.67e-54  7.21e-07         1  6.41e+22
         P7  2.33e-66  1.38e-33  3.68e-33  5.86e-41  6.27e-44  4.17e-77  1.12e-29  1.56e-23         1
   MasterEquation::set:  done, cpu time[sec] = 3.70893, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 340 K
            Well    Collision, 1/sec
              W1         4.35645e+08
      global relaxation matrix dimension = 511
      setting global matrices ... done, cpu time[sec] = 0.534898, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.31674, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            6627.49      944.287      225.821      291.342      30.3464      3802.85      314.864     0.330098
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.058179, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004567, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.063181, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.22791e-07  1.22791e-07  5.13013e-09
      low eigenvalue method done, cpu time[sec] = 0.063442, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.23e-07  5.13e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.25e-08  5.13e-09         1
         *Z       ---       ---  2.78e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 5.13013e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  5.57183e-52  2.64931e-52  9.32577e-54  1.01716e-52  2.52981e-54  1.19923e-55  2.36092e-63  4.26242e-85

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.9231, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 340 K
            Well    Collision, 1/sec
              W1         1.30694e+09
      global relaxation matrix dimension = 511
      setting global matrices ... done, cpu time[sec] = 0.531074, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.8437, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2209.16      314.762      75.2738      97.1139      10.1155      1267.62      104.955     0.110033
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.05814, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004528, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.063105, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.33254e-08  4.33254e-08  1.40999e-09
      low eigenvalue method done, cpu time[sec] = 0.063369, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.33e-08  1.41e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.36e-09  1.41e-09         1
         *Z       ---       ---  2.78e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.40999e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.67648e-52  6.80052e-53  2.06262e-54  1.88991e-53  4.97186e-55  8.92285e-56  2.38164e-63   5.8586e-86

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.444, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 340 K
            Well    Collision, 1/sec
              W1         2.17823e+09
      global relaxation matrix dimension = 511
      setting global matrices ... done, cpu time[sec] = 0.509899, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.16104, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             1325.5      188.857      45.1643      58.2683      6.06928       760.57      62.9728    0.0660196
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.058104, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.004549, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.063086, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.65693e-08  2.65693e-08  7.14114e-10
      low eigenvalue method done, cpu time[sec] = 0.063348, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.66e-08  7.14e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.66e-09  7.14e-10         1
         *Z       ---       ---  2.78e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 7.14114e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  8.76459e-53  3.30461e-53  9.68648e-55  8.31242e-54  2.23947e-55  6.71736e-56  2.40381e-63  1.61706e-86

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.74068, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 340 K
            Well    Collision, 1/sec
              W1         3.04952e+09
      global relaxation matrix dimension = 511
      setting global matrices ... done, cpu time[sec] = 0.531996, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.31999, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            946.785      134.898      32.2602      41.6202       4.3352      543.264      44.9806    0.0471569
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.05805, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004546, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.063029, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.92187e-08  1.92187e-08  4.43544e-10
      low eigenvalue method done, cpu time[sec] = 0.06329, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.92e-08  4.44e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.92e-09  4.44e-10         1
         *Z       ---       ---  2.78e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 4.43543e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  5.54263e-53  1.99586e-53  5.76777e-55  4.76376e-54  1.30227e-55  5.27083e-56  2.42722e-63 -7.56509e-86

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.91944, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 340 K
            Well    Collision, 1/sec
              W1         3.92081e+09
      global relaxation matrix dimension = 511
      setting global matrices ... done, cpu time[sec] = 0.532779, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.31363, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            736.388      104.921      25.0913      32.3713      3.37182      422.539      34.9849    0.0366776
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.058104, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004545, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.063086, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.50754e-08  1.50754e-08  3.06362e-10
      low eigenvalue method done, cpu time[sec] = 0.063351, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.51e-08  3.06e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.5e-09  3.06e-10         1
         *Z       ---       ---  2.78e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.06362e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  3.87484e-53  1.35029e-53  3.87406e-55  3.11707e-54  8.60901e-56  4.27348e-56  2.45145e-63  3.47187e-86

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.91239, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 340 K
            Well    Collision, 1/sec
              W1         4.35645e+09
      global relaxation matrix dimension = 511
      setting global matrices ... done, cpu time[sec] = 0.531773, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.31119, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            662.749      94.4287      22.5821      29.1342      3.03464      380.285      31.4864    0.0330098
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.058029, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004542, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.063004, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.36131e-08  1.36132e-08  2.61405e-10
      low eigenvalue method done, cpu time[sec] = 0.063271, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.36e-08  2.61e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.35e-09  2.61e-10         1
         *Z       ---       ---  2.78e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.61404e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  3.32188e-53  1.14231e-53  3.26983e-55  2.60377e-54   7.2211e-56  3.88575e-56  2.46374e-63 -9.47434e-87

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.91026, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 340 K
            Well    Collision, 1/sec
              W1         6.53468e+09
      global relaxation matrix dimension = 511
      setting global matrices ... done, cpu time[sec] = 0.530536, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.31919, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            441.833      62.9525      15.0548      19.4228      2.02309      253.523      20.9909    0.0220065
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.058029, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004538, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.063001, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.18189e-09  9.18188e-09  1.39249e-10
      low eigenvalue method done, cpu time[sec] = 0.063261, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.18e-09  1.39e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.09e-10  1.39e-10         1
         *Z       ---       ---  2.78e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.39248e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.79889e-53  5.89411e-54  1.67786e-55  1.28797e-54  3.62558e-56  2.59296e-56  2.52451e-63  5.00421e-86

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.91052, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 340 K
            Well    Collision, 1/sec
              W1         8.71291e+09
      global relaxation matrix dimension = 511
      setting global matrices ... done, cpu time[sec] = 0.52234, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.31104, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            331.375      47.2143      11.2911      14.5671      1.51732      190.142      15.7432    0.0165049
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.058082, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004534, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.063051, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.93635e-09  6.93634e-09  8.75122e-11
      low eigenvalue method done, cpu time[sec] = 0.063321, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.94e-09  8.75e-11         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.84e-10  8.75e-11         1
         *Z       ---       ---  2.78e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 8.75118e-11
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.14199e-53  3.62634e-54  1.03089e-55  7.73333e-55  2.19787e-56  1.87769e-56  2.57981e-63 -1.77755e-88

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.90271, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 340 K
            Well    Collision, 1/sec
              W1         1.08911e+10
      global relaxation matrix dimension = 511
      setting global matrices ... done, cpu time[sec] = 0.532156, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.32644, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
              265.1      37.7715      9.03285      11.6537      1.21386      152.114      12.5946    0.0132039
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.058216, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004529, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.063178, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.57724e-09  5.57725e-09  6.04591e-11
      low eigenvalue method done, cpu time[sec] = 0.06344, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.58e-09  6.05e-11         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.49e-10  6.05e-11         1
         *Z       ---       ---  2.78e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 6.04587e-11
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0   7.9449e-54  2.46678e-54  7.01266e-56  5.17618e-55  1.48121e-56  1.43369e-56  2.62572e-63  2.59701e-87

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.92783, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 340 K
            Well    Collision, 1/sec
              W1         1.30694e+10
      global relaxation matrix dimension = 511
      setting global matrices ... done, cpu time[sec] = 0.531929, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.34909, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            220.916      31.4762      7.52738      9.71139      1.01155      126.762      10.4955    0.0110033
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.05803, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004531, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.062998, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.66549e-09   4.6655e-09  4.44312e-11
      low eigenvalue method done, cpu time[sec] = 0.063263, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.67e-09  4.44e-11         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.58e-10  4.44e-11         1
         *Z       ---       ---  2.78e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 4.44307e-11
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  5.86906e-54  1.79126e-54  5.09515e-56  3.71531e-55  1.06872e-56  1.13627e-56  2.66052e-63 -2.73678e-86

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.94684, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 340 K
            Well    Collision, 1/sec
              W1         1.52476e+10
      global relaxation matrix dimension = 511
      setting global matrices ... done, cpu time[sec] = 0.530112, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.31395, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            189.357      26.9796      6.45204      8.32405      0.86704      108.653      8.99612   0.00943137
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.058052, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004539, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.063031, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.01111e-09  4.01111e-09  3.41096e-11
      low eigenvalue method done, cpu time[sec] = 0.063289, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.01e-09  3.41e-11         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.94e-10  3.41e-11         1
         *Z       ---       ---  2.78e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.41092e-11
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  4.52391e-54  1.36201e-54  3.87719e-56  2.80024e-55  8.08836e-57  9.25928e-57  2.68396e-63  7.28191e-87

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.90785, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 340 K
            Well    Collision, 1/sec
              W1         1.74258e+10
      global relaxation matrix dimension = 511
      setting global matrices ... done, cpu time[sec] = 0.530699, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.31201, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            165.687      23.6072      5.64553      7.28354      0.75866      95.0712       7.8716   0.00825245
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.058073, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.00457, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.063077, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.51843e-09  3.51843e-09  2.70529e-11
      low eigenvalue method done, cpu time[sec] = 0.063338, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.52e-09  2.71e-11         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.45e-10  2.71e-11         1
         *Z       ---       ---  2.78e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.70521e-11
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  3.59969e-54  1.07172e-54  3.05343e-56  2.18819e-55   6.3419e-57  7.70973e-57  2.69663e-63 -5.35707e-86

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.90815, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 350 K
      Energy reference = 26507 1/cm
      Energy step      = 60 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.7 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.007304
         W1 Well: collisional kernel bandwidth = 57
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.562624
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.361514
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.31845
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 1.99794
         W1 Well: minimal relaxation eigenvalue = 0.0925913
         W1 Well: maximal relaxation eigenvalue = 0.981769
         W1 Well:       grid size = 509
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -4032 1/cm
         B1 Barrier:        grid size = 442
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -13 1/cm
         B2 Barrier:        grid size = 439
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 167 1/cm
         B3 Barrier:        grid size = 519
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4633 1/cm
         B4 Barrier:        grid size = 545
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6193 1/cm
         B5 Barrier: nonpositive number of states at -23113 1/cm => truncating
         B5 Barrier:        grid size = 827
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23113 1/cm
         B6 Barrier:        grid size = 417
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1487 1/cm
         B7 Barrier:        grid size = 364
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4667 1/cm
         B8 Barrier:        grid size = 163
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16727 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 3.69307, elapsed time[sec] = 0
      B3 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 509
      MasterEquation::Barrier::truncate: real weight = 1.83113e+52
      MasterEquation::Barrier::truncate: effective weight = 5.00594e+48
      B4 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 509
      MasterEquation::Barrier::truncate: real weight = 1.25351e+54
      MasterEquation::Barrier::truncate: effective weight = 3.42684e+50
      B5 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 509
      MasterEquation::Barrier::truncate: real weight = 1.38583e+56
      MasterEquation::Barrier::truncate: effective weight = 7.55239e+49
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1  -4032  -4032 3.53e+09 4.37e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -13 4.36e+14
         B2    168 6.27e+13
         B3  -4032 1.51e+13
         B4  -4032 1.94e+13
         B5  -4032 2.03e+12
         B6   1488 2.53e+14
         B7   4667 2.12e+13
         B8  16727  2.4e+10
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  3.42e-07  8.89e-07  2.55e-14  3.32e-17  2.01e-49   0.00238  2.26e+03   3.4e+25
          R  2.92e+06         1       2.6  7.47e-08  9.72e-11  5.87e-43  6.94e+03  6.61e+09  9.94e+31
         P1  1.13e+06     0.385         1  2.87e-08  3.74e-11  2.26e-43  2.67e+03  2.54e+09  3.83e+31
         P2  3.91e+13  1.34e+07  3.48e+07         1    0.0013  7.86e-36   9.3e+10  8.85e+16  1.33e+39
         P3  3.01e+16  1.03e+10  2.67e+10       768         1  6.04e-33  7.15e+13   6.8e+19  1.02e+42
         P4  4.98e+48   1.7e+42  4.43e+42  1.27e+35  1.66e+32         1  1.18e+46  1.13e+52  1.69e+74
         P5       421  0.000144  0.000374  1.08e-11   1.4e-14  8.45e-47         1  9.52e+05  1.43e+28
         P6  0.000442  1.51e-10  3.93e-10  1.13e-17  1.47e-20  8.88e-53  1.05e-06         1   1.5e+22
         P7  2.94e-26  1.01e-32  2.61e-32  7.51e-40  9.78e-43   5.9e-75  6.99e-29  6.65e-23         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  1.22e+31  3.16e+31  9.09e+23  1.18e+21  7.14e-12  8.46e+34  8.05e+40  1.21e+63
          R  8.21e-32         1       2.6  7.47e-08  9.72e-11  5.87e-43  6.94e+03  6.61e+09  9.94e+31
         P1  3.16e-32     0.385         1  2.87e-08  3.74e-11  2.26e-43  2.67e+03  2.54e+09  3.83e+31
         P2   1.1e-24  1.34e+07  3.48e+07         1    0.0013  7.86e-36   9.3e+10  8.85e+16  1.33e+39
         P3  8.45e-22  1.03e+10  2.67e+10       768         1  6.04e-33  7.15e+13   6.8e+19  1.02e+42
         P4   1.4e+11   1.7e+42  4.43e+42  1.27e+35  1.66e+32         1  1.18e+46  1.13e+52  1.69e+74
         P5  1.18e-35  0.000144  0.000374  1.08e-11   1.4e-14  8.45e-47         1  9.52e+05  1.43e+28
         P6  1.24e-41  1.51e-10  3.93e-10  1.13e-17  1.47e-20  8.88e-53  1.05e-06         1   1.5e+22
         P7  8.26e-64  1.01e-32  2.61e-32  7.51e-40  9.78e-43   5.9e-75  6.99e-29  6.65e-23         1
   MasterEquation::set:  done, cpu time[sec] = 3.70754, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 350 K
            Well    Collision, 1/sec
              W1         4.26883e+08
      global relaxation matrix dimension = 509
      setting global matrices ... done, cpu time[sec] = 0.529737, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.321, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            6998.59      1007.72      242.324       311.74      32.5917      4065.95      341.301     0.385237
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.057588, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004512, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.062537, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.13063e-07  1.13063e-07  5.95375e-09
      low eigenvalue method done, cpu time[sec] = 0.062799, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.13e-07  5.95e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.14e-08  5.95e-09         1
         *Z       ---       ---  9.95e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 5.95375e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.75306e-50   1.2909e-50  4.44939e-52  4.72077e-51  1.18239e-52  6.64102e-54  1.93411e-61  3.51577e-84

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.90138, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 350 K
            Well    Collision, 1/sec
              W1         1.28065e+09
      global relaxation matrix dimension = 509
      setting global matrices ... done, cpu time[sec] = 0.526561, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.28561, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2332.86      335.908      80.7745      103.913      10.8639      1355.32      113.767     0.128412
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.057526, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004537, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.062497, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.03949e-08  4.03949e-08  1.68435e-09
      low eigenvalue method done, cpu time[sec] = 0.062761, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.04e-08  1.68e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.04e-09  1.68e-09         1
         *Z       ---       ---  9.95e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.68435e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  8.51261e-51  3.38966e-51  1.01382e-52  9.04694e-52  2.40049e-53  4.99607e-54  1.95101e-61 -3.00577e-86

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.85706, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 350 K
            Well    Collision, 1/sec
              W1         2.13442e+09
      global relaxation matrix dimension = 509
      setting global matrices ... done, cpu time[sec] = 0.52812, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.285, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1399.72      201.545      48.4647      62.3479      6.51834      813.191      68.2603    0.0770474
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.057483, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004485, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.062399, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.48915e-08  2.48915e-08  8.64625e-10
      low eigenvalue method done, cpu time[sec] = 0.062659, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.49e-08  8.65e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.47e-09  8.65e-10         1
         *Z       ---       ---  9.95e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 8.64625e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  4.50955e-51  1.66526e-51   4.8264e-53  4.03255e-52  1.09664e-53  3.79499e-54   1.9691e-61 -1.32422e-84

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.68816, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 350 K
            Well    Collision, 1/sec
              W1         2.98818e+09
      global relaxation matrix dimension = 509
      setting global matrices ... done, cpu time[sec] = 0.527253, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.28568, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            999.799       143.96      34.6177      44.5342      4.65595       580.85      48.7573    0.0550339
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.057606, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004517, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.062551, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.80542e-08  1.80542e-08  5.41759e-10
      low eigenvalue method done, cpu time[sec] = 0.062819, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.81e-08  5.42e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.79e-09  5.42e-10         1
         *Z       ---       ---  9.95e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 5.41759e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.87676e-51  1.01297e-51  2.89921e-53  2.33039e-52  6.43415e-54  2.99873e-54  1.98816e-61 -1.26653e-83

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.8585, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 350 K
            Well    Collision, 1/sec
              W1         3.84195e+09
      global relaxation matrix dimension = 509
      setting global matrices ... done, cpu time[sec] = 0.527012, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.28905, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            777.622      111.969      26.9248      34.6377       3.6213      451.773      37.9224    0.0428041
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.057459, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004501, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.062389, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.41875e-08  1.41875e-08  3.76624e-10
      low eigenvalue method done, cpu time[sec] = 0.062647, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.42e-08  3.77e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.4e-09  3.77e-10         1
         *Z       ---       ---  9.95e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.76624e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.02415e-51  6.88931e-52  1.95985e-53  1.53399e-52  4.28088e-54  2.44522e-54  2.00788e-61  6.23314e-84

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.86075, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 350 K
            Well    Collision, 1/sec
              W1         4.26883e+09
      global relaxation matrix dimension = 509
      setting global matrices ... done, cpu time[sec] = 0.525839, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.28474, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            699.859      100.772      24.2324       31.174      3.25917      406.595      34.1301    0.0385237
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.05751, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004536, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.062481, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.28203e-08  1.28203e-08  3.22215e-10
      low eigenvalue method done, cpu time[sec] = 0.062741, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.28e-08  3.22e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.26e-09  3.22e-10         1
         *Z       ---       ---  9.95e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.22215e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.73995e-51  5.84084e-52  1.65856e-53  1.28451e-52  3.60019e-54  2.22893e-54  2.01786e-61 -2.07445e-84

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.85412, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 350 K
            Well    Collision, 1/sec
              W1         6.40325e+09
      global relaxation matrix dimension = 509
      setting global matrices ... done, cpu time[sec] = 0.520441, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.27419, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            466.573      67.1815      16.1549      20.7826      2.17278      271.064      22.7534    0.0256825
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.057439, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004492, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.062365, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.66763e-09  8.66762e-09  1.73373e-10
      low eigenvalue method done, cpu time[sec] = 0.062632, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.67e-09  1.73e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.51e-10  1.73e-10         1
         *Z       ---       ---  9.95e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.73373e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  9.51803e-52  3.03827e-52  8.59495e-54  6.41098e-53  1.82522e-54  1.50237e-54  2.06713e-61  -3.3231e-84

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.83369, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 350 K
            Well    Collision, 1/sec
              W1         8.53766e+09
      global relaxation matrix dimension = 509
      setting global matrices ... done, cpu time[sec] = 0.527485, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.28417, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             349.93      50.3861      12.1162       15.587      1.62958      203.298      17.0651    0.0192619
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.057416, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004536, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.062384, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.55697e-09  6.55697e-09  1.09702e-10
      low eigenvalue method done, cpu time[sec] = 0.062644, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.56e-09   1.1e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.42e-10   1.1e-10         1
         *Z       ---       ---  9.95e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.09702e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  6.08412e-52  1.87951e-52  5.31598e-54   3.8721e-53  1.11363e-54  1.09604e-54  2.11188e-61  1.01053e-83

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.85819, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 350 K
            Well    Collision, 1/sec
              W1         1.06721e+10
      global relaxation matrix dimension = 509
      setting global matrices ... done, cpu time[sec] = 0.528172, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.28461, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            279.944      40.3089      9.69294      12.4696      1.30367      162.638      13.6521    0.0154095
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.057499, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004542, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.062476, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.27712e-09  5.27712e-09  7.61738e-11
      low eigenvalue method done, cpu time[sec] = 0.062741, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.28e-09  7.62e-11         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.16e-10  7.62e-11         1
         *Z       ---       ---  9.95e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 7.61737e-11
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  4.25459e-52  1.28366e-52  3.63402e-54  2.60287e-53  7.54067e-55  8.41764e-55  2.14905e-61  3.76987e-84

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.85769, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 350 K
            Well    Collision, 1/sec
              W1         1.28065e+10
      global relaxation matrix dimension = 509
      setting global matrices ... done, cpu time[sec] = 0.526468, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.28467, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            233.286      33.5908      8.07745      10.3913      1.08639      135.532      11.3767    0.0128412
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.057449, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004549, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.062433, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.41738e-09  4.41739e-09  5.62026e-11
      low eigenvalue method done, cpu time[sec] = 0.062693, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.42e-09  5.62e-11         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.31e-10  5.62e-11         1
         *Z       ---       ---  9.95e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 5.62026e-11
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  3.15569e-52  9.35056e-53   2.6505e-54  1.87446e-53  5.46075e-55  6.70336e-55   2.1773e-61  4.38203e-84

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.85971, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 350 K
            Well    Collision, 1/sec
              W1         1.49409e+10
      global relaxation matrix dimension = 509
      setting global matrices ... done, cpu time[sec] = 0.527166, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.28438, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             199.96      28.7921      6.92353      8.90685     0.931191       116.17      9.75147    0.0110068
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.057468, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004531, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.062429, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.79973e-09  3.79973e-09  4.32862e-11
      low eigenvalue method done, cpu time[sec] = 0.062691, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   3.8e-09  4.33e-11         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   3.7e-10  4.33e-11         1
         *Z       ---       ---  9.95e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 4.32863e-11
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.44047e-52  7.12785e-53  2.02321e-54  1.41654e-53  4.14508e-55  5.48448e-55  2.19647e-61 -3.47837e-84

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.85715, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 350 K
            Well    Collision, 1/sec
              W1         1.70753e+10
      global relaxation matrix dimension = 509
      setting global matrices ... done, cpu time[sec] = 0.527953, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.28555, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            174.965      25.1931      6.05809      7.79349     0.814792      101.649      8.53253   0.00963093
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.057484, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00454, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.062471, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.33436e-09  3.33434e-09  3.44238e-11
      low eigenvalue method done, cpu time[sec] = 0.062729, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.33e-09  3.44e-11         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.24e-10  3.44e-11         1
         *Z       ---       ---  9.95e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.44236e-11
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.94726e-52  5.62045e-53  1.59749e-54  1.10936e-53  3.25805e-55  4.58249e-55  2.20704e-61  7.05958e-84

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.86024, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 360 K
      Energy reference = 26785 1/cm
      Energy step      = 62 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.6 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.007057
         W1 Well: collisional kernel bandwidth = 57
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.544254
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.346102
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.302953
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 1.88281
         W1 Well: minimal relaxation eigenvalue = 0.0918156
         W1 Well: maximal relaxation eigenvalue = 0.980496
         W1 Well:       grid size = 498
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -4091 1/cm
         B1 Barrier:        grid size = 433
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -61 1/cm
         B2 Barrier:        grid size = 429
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 187 1/cm
         B3 Barrier:        grid size = 507
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4649 1/cm
         B4 Barrier:        grid size = 532
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6199 1/cm
         B5 Barrier: nonpositive number of states at -23125 1/cm => truncating
         B5 Barrier:        grid size = 805
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23125 1/cm
         B6 Barrier:        grid size = 408
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1488 1/cm
         B7 Barrier:        grid size = 356
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4712 1/cm
         B8 Barrier:        grid size = 162
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16741 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 3.51695, elapsed time[sec] = 0
      B3 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 498
      MasterEquation::Barrier::truncate: real weight = 2.62796e+51
      MasterEquation::Barrier::truncate: effective weight = 7.42378e+47
      B4 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 498
      MasterEquation::Barrier::truncate: real weight = 1.59059e+53
      MasterEquation::Barrier::truncate: effective weight = 4.4933e+49
      B5 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 498
      MasterEquation::Barrier::truncate: real weight = 5.02779e+54
      MasterEquation::Barrier::truncate: effective weight = 8.32539e+48
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1  -4091  -4091 3.47e+09 4.59e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -61 4.73e+14
         B2    188 6.88e+13
         B3  -4091 1.66e+13
         B4  -4091 2.13e+13
         B5  -4091 2.24e+12
         B6   1489 2.78e+14
         B7   4713 2.37e+13
         B8  16741 2.87e+10
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  2.35e-07  5.95e-07  2.98e-14  4.68e-17  2.27e-48    0.0014       935  3.57e+24
          R  4.26e+06         1      2.53  1.27e-07  1.99e-10  9.66e-42  5.97e+03  3.98e+09  1.52e+31
         P1  1.68e+06     0.395         1  5.02e-08  7.86e-11  3.81e-42  2.35e+03  1.57e+09  6.01e+30
         P2  3.35e+13  7.87e+06  1.99e+07         1   0.00157   7.6e-35  4.69e+10  3.13e+16   1.2e+38
         P3  2.14e+16  5.02e+09  1.27e+10       638         1  4.85e-32  2.99e+13     2e+19  7.64e+40
         P4  4.41e+47  1.04e+41  2.62e+41  1.32e+34  2.06e+31         1  6.18e+44  4.12e+50  1.58e+72
         P5       714  0.000168  0.000425  2.13e-11  3.34e-14  1.62e-45         1  6.68e+05  2.55e+27
         P6   0.00107  2.51e-10  6.36e-10  3.19e-17     5e-20  2.42e-51   1.5e-06         1  3.82e+21
         P7   2.8e-25  6.57e-32  1.66e-31  8.35e-39  1.31e-41  6.34e-73  3.92e-28  2.61e-22         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  3.11e+29  7.87e+29  3.95e+22  6.19e+19     3e-12  1.85e+33  1.24e+39  4.73e+60
          R  3.22e-30         1      2.53  1.27e-07  1.99e-10  9.66e-42  5.97e+03  3.98e+09  1.52e+31
         P1  1.27e-30     0.395         1  5.02e-08  7.86e-11  3.81e-42  2.35e+03  1.57e+09  6.01e+30
         P2  2.53e-23  7.87e+06  1.99e+07         1   0.00157   7.6e-35  4.69e+10  3.13e+16   1.2e+38
         P3  1.62e-20  5.02e+09  1.27e+10       638         1  4.85e-32  2.99e+13     2e+19  7.64e+40
         P4  3.33e+11  1.04e+41  2.62e+41  1.32e+34  2.06e+31         1  6.18e+44  4.12e+50  1.58e+72
         P5   5.4e-34  0.000168  0.000425  2.13e-11  3.34e-14  1.62e-45         1  6.68e+05  2.55e+27
         P6  8.08e-40  2.51e-10  6.36e-10  3.19e-17     5e-20  2.42e-51   1.5e-06         1  3.82e+21
         P7  2.11e-61  6.57e-32  1.66e-31  8.35e-39  1.31e-41  6.34e-73  3.92e-28  2.61e-22         1
   MasterEquation::set:  done, cpu time[sec] = 3.53189, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 360 K
            Well    Collision, 1/sec
              W1         4.18578e+08
      global relaxation matrix dimension = 498
      setting global matrices ... done, cpu time[sec] = 0.505122, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.22239, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            7382.07      1074.13      259.701      333.156      34.9582      4341.49      369.384     0.447522
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.054007, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.004298, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.058729, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.28866e-07  1.28866e-07  8.43709e-09
      low eigenvalue method done, cpu time[sec] = 0.058977, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.29e-07  8.44e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.3e-08  8.44e-09         1
         *Z       ---       ---  3.37e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 8.43709e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.09508e-48  5.06602e-49   1.7136e-50  1.77417e-49  4.47266e-51  2.93869e-52   1.2429e-59 -2.54699e-81

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.72331, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 360 K
            Well    Collision, 1/sec
              W1         1.25574e+09
      global relaxation matrix dimension = 498
      setting global matrices ... done, cpu time[sec] = 0.50743, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.13422, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2460.69      358.045      86.5669      111.052      11.6527      1447.16      123.128     0.149174
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.053951, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004264, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.058634, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.67371e-08  4.67371e-08  2.45397e-09
      low eigenvalue method done, cpu time[sec] = 0.058887, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.67e-08  2.45e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.64e-09  2.45e-09         1
         *Z       ---       ---  3.37e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.45397e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  3.47648e-49  1.35983e-49  4.01833e-51   3.5021e-50  9.36636e-52  2.23558e-52  1.25373e-59  1.23834e-81

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.63624, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 360 K
            Well    Collision, 1/sec
              W1         2.09289e+09
      global relaxation matrix dimension = 498
      setting global matrices ... done, cpu time[sec] = 0.506177, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.13355, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1476.41      214.827      51.9401      66.6313      6.99163      868.297      73.8768    0.0895044
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.05396, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004256, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.058631, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.89678e-08  2.89678e-08  1.27625e-09
      low eigenvalue method done, cpu time[sec] = 0.058877, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   2.9e-08  1.28e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.86e-09  1.28e-09         1
         *Z       ---       ---  3.37e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.27625e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0   1.8655e-49  6.75241e-50  1.93855e-51  1.58133e-50  4.33787e-52  1.71319e-52  1.26531e-59   3.3955e-82

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.63598, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 360 K
            Well    Collision, 1/sec
              W1         2.93005e+09
      global relaxation matrix dimension = 498
      setting global matrices ... done, cpu time[sec] = 0.498786, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.13401, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1054.58      153.448      37.1001      47.5938      4.99402      620.212      52.7692    0.0639317
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.05406, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004256, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.058732, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.10809e-08  2.10809e-08  8.06558e-10
      low eigenvalue method done, cpu time[sec] = 0.05898, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.11e-08  8.07e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.08e-09  8.07e-10         1
         *Z       ---       ---  3.37e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 8.06558e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.20024e-49   4.1365e-50  1.17457e-51  9.21333e-51  2.56736e-52  1.36308e-52   1.2775e-59  6.14222e-82

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.62528, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 360 K
            Well    Collision, 1/sec
              W1         3.76721e+09
      global relaxation matrix dimension = 498
      setting global matrices ... done, cpu time[sec] = 0.506356, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.13363, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             820.23      119.348      28.8556      37.0174      3.88424      482.387      41.0427    0.0497246
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.054055, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004254, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.058724, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.66028e-08  1.66028e-08  5.64273e-10
      low eigenvalue method done, cpu time[sec] = 0.058979, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.66e-08  5.64e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.63e-09  5.64e-10         1
         *Z       ---       ---  3.37e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 5.64273e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  8.49887e-50  2.82792e-50  7.99048e-52  6.10053e-51  1.71898e-52  1.11773e-52   1.2901e-59  1.02328e-83

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.63791, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 360 K
            Well    Collision, 1/sec
              W1         4.18578e+09
      global relaxation matrix dimension = 498
      setting global matrices ... done, cpu time[sec] = 0.505879, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.13959, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            738.207      107.413      25.9701      33.3156      3.49582      434.149      36.9384    0.0447522
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.053962, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.004245, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.058623, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.50158e-08  1.50158e-08  4.84028e-10
      low eigenvalue method done, cpu time[sec] = 0.058874, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.5e-08  4.84e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.47e-09  4.84e-10         1
         *Z       ---       ---  3.37e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 4.84028e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  7.32489e-50  2.40271e-50   6.7798e-52  5.12069e-51   1.4494e-52  1.02136e-52  1.29646e-59   4.7199e-82

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.47659, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 360 K
            Well    Collision, 1/sec
              W1         6.27868e+09
      global relaxation matrix dimension = 498
      setting global matrices ... done, cpu time[sec] = 0.505182, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.13607, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            492.138      71.6089      17.3134      22.2104      2.33054      289.432      24.6256    0.0298348
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.053971, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004263, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.058647, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   1.0182e-08   1.0182e-08  2.63036e-10
      low eigenvalue method done, cpu time[sec] = 0.058898, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.02e-08  2.63e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.94e-10  2.63e-10         1
         *Z       ---       ---  3.37e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.63036e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  4.04714e-50  1.25997e-50  3.54809e-52  2.57857e-51   7.4193e-53  6.95253e-53  1.32782e-59 -5.46061e-82

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.63615, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 360 K
            Well    Collision, 1/sec
              W1         8.37157e+09
      global relaxation matrix dimension = 498
      setting global matrices ... done, cpu time[sec] = 0.504669, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.12913, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            369.104      53.7067       12.985      16.6578      1.74791      217.074      18.4692    0.0223761
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.053939, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004245, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.058597, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.71615e-09  7.71615e-09  1.67568e-10
      low eigenvalue method done, cpu time[sec] = 0.058844, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.72e-09  1.68e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.51e-10  1.68e-10         1
         *Z       ---       ---  3.37e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.67568e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.60481e-50   7.8371e-51  2.20916e-52  1.56665e-51  4.55612e-53  5.10934e-53  1.35623e-59 -2.51883e-82

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.62622, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 360 K
            Well    Collision, 1/sec
              W1         1.04645e+10
      global relaxation matrix dimension = 498
      setting global matrices ... done, cpu time[sec] = 0.50399, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.13658, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            295.283      42.9654       10.388      13.3263      1.39833      173.659      14.7754    0.0179009
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.053926, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004259, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.058594, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.21741e-09  6.21742e-09  1.16945e-10
      low eigenvalue method done, cpu time[sec] = 0.058842, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.22e-09  1.17e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.04e-10  1.17e-10         1
         *Z       ---       ---  3.37e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.16945e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.83091e-50  5.37431e-51  1.51768e-52  1.05769e-51   3.0998e-53  3.94669e-53  1.37982e-59  7.62832e-82

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.63304, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 360 K
            Well    Collision, 1/sec
              W1         1.25574e+10
      global relaxation matrix dimension = 498
      setting global matrices ... done, cpu time[sec] = 0.503635, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.14022, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            246.069      35.8045      8.65669      11.1052      1.16527      144.716      12.3128    0.0149174
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.053872, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004264, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.058543, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.20901e-09    5.209e-09  8.66295e-11
      low eigenvalue method done, cpu time[sec] = 0.058796, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.21e-09  8.66e-11         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.05e-10  8.66e-11         1
         *Z       ---       ---  3.37e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 8.66294e-11
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.36354e-50  3.92726e-51  1.11125e-52  7.64265e-52  2.25315e-53  3.15785e-53  1.39778e-59  7.36955e-82

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.63403, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 360 K
            Well    Collision, 1/sec
              W1         1.46502e+10
      global relaxation matrix dimension = 498
      setting global matrices ... done, cpu time[sec] = 0.504946, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.12015, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            210.916      30.6895      7.42002      9.51875     0.998805      124.042      10.5538    0.0127863
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.05399, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004259, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.058659, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.48363e-09  4.48362e-09  6.69385e-11
      low eigenvalue method done, cpu time[sec] = 0.058912, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.48e-09  6.69e-11         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.34e-10  6.69e-11         1
         *Z       ---       ---  3.37e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 6.69389e-11
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.05801e-50  3.00144e-51   8.5094e-53  5.79131e-52  1.71546e-53    2.594e-53  1.41004e-59  3.97986e-82

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.60603, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 360 K
            Well    Collision, 1/sec
              W1         1.67431e+10
      global relaxation matrix dimension = 498
      setting global matrices ... done, cpu time[sec] = 0.496664, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.13784, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            184.552      26.8533      6.49251      8.32891     0.873954      108.537       9.2346     0.011188
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.053963, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004268, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.058649, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.93654e-09  3.93654e-09  5.33793e-11
      low eigenvalue method done, cpu time[sec] = 0.058895, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.94e-09  5.34e-11         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   3.8e-10  5.34e-11         1
         *Z       ---       ---  3.37e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 5.33793e-11
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0   8.4655e-51  2.37178e-51  6.73669e-53  4.54568e-52  1.35175e-53  2.17485e-53  1.41691e-59  4.86291e-82

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.62611, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 370 K
      Energy reference = 27063 1/cm
      Energy step      = 64 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.5 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.010089
         W1 Well: collisional kernel bandwidth = 57
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.531084
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.334155
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.302532
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 1.80059
         W1 Well: minimal relaxation eigenvalue = 0.0910559
         W1 Well: maximal relaxation eigenvalue = 0.97931
         W1 Well:       grid size = 488
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -4169 1/cm
         B1 Barrier:        grid size = 423
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -9 1/cm
         B2 Barrier:        grid size = 420
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 182 1/cm
         B3 Barrier:        grid size = 495
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4616 1/cm
         B4 Barrier:        grid size = 520
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6217 1/cm
         B5 Barrier: nonpositive number of states at -23113 1/cm => truncating
         B5 Barrier:        grid size = 784
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23113 1/cm
         B6 Barrier:        grid size = 400
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1462 1/cm
         B7 Barrier:        grid size = 350
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4662 1/cm
         B8 Barrier:        grid size = 161
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16759 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 3.41241, elapsed time[sec] = 0
      B3 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 488
      MasterEquation::Barrier::truncate: real weight = 4.20494e+50
      MasterEquation::Barrier::truncate: effective weight = 1.22618e+47
      B4 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 488
      MasterEquation::Barrier::truncate: real weight = 2.26607e+52
      MasterEquation::Barrier::truncate: effective weight = 6.60796e+48
      B5 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 488
      MasterEquation::Barrier::truncate: real weight = 2.38408e+53
      MasterEquation::Barrier::truncate: effective weight = 1.05152e+48
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1  -4169  -4169 3.38e+09 4.82e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -9 5.13e+14
         B2    183 7.55e+13
         B3  -4169 1.83e+13
         B4  -4169 2.35e+13
         B5  -4169 2.47e+12
         B6   1463 3.06e+14
         B7   4663 2.63e+13
         B8  16759 3.42e+10
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  1.76e-07  4.35e-07   3.7e-14  6.91e-17   2.4e-47  0.000907       433  4.54e+23
          R  5.69e+06         1      2.48   2.1e-07  3.93e-10  1.37e-40  5.17e+03  2.47e+09  2.59e+30
         P1   2.3e+06     0.404         1   8.5e-08  1.59e-10  5.52e-41  2.09e+03  9.96e+08  1.04e+30
         P2  2.71e+13  4.75e+06  1.18e+07         1   0.00187   6.5e-34  2.46e+10  1.17e+16  1.23e+37
         P3  1.45e+16  2.54e+09   6.3e+09       535         1  3.48e-31  1.31e+13  6.27e+18  6.58e+39
         P4  4.17e+46  7.31e+39  1.81e+40  1.54e+33  2.88e+30         1  3.78e+43  1.81e+49  1.89e+70
         P5   1.1e+03  0.000194  0.000479  4.07e-11  7.61e-14  2.65e-44         1  4.78e+05  5.01e+26
         P6   0.00231  4.05e-10     1e-09  8.53e-17  1.59e-19  5.54e-50  2.09e-06         1  1.05e+21
         P7   2.2e-24  3.87e-31  9.58e-31  8.14e-38  1.52e-40  5.29e-71     2e-27  9.54e-22         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  9.64e+27  2.39e+28  2.03e+21  3.79e+18  1.32e-12  4.98e+31  2.38e+37  2.49e+58
          R  1.04e-28         1      2.48   2.1e-07  3.93e-10  1.37e-40  5.17e+03  2.47e+09  2.59e+30
         P1  4.19e-29     0.404         1   8.5e-08  1.59e-10  5.52e-41  2.09e+03  9.96e+08  1.04e+30
         P2  4.93e-22  4.75e+06  1.18e+07         1   0.00187   6.5e-34  2.46e+10  1.17e+16  1.23e+37
         P3  2.64e-19  2.54e+09   6.3e+09       535         1  3.48e-31  1.31e+13  6.27e+18  6.58e+39
         P4  7.58e+11  7.31e+39  1.81e+40  1.54e+33  2.88e+30         1  3.78e+43  1.81e+49  1.89e+70
         P5  2.01e-32  0.000194  0.000479  4.07e-11  7.61e-14  2.65e-44         1  4.78e+05  5.01e+26
         P6   4.2e-38  4.05e-10     1e-09  8.53e-17  1.59e-19  5.54e-50  2.09e-06         1  1.05e+21
         P7  4.01e-59  3.87e-31  9.58e-31  8.14e-38  1.52e-40  5.29e-71     2e-27  9.54e-22         1
   MasterEquation::set:  done, cpu time[sec] = 3.42658, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 370 K
            Well    Collision, 1/sec
              W1         4.10694e+08
      global relaxation matrix dimension = 488
      setting global matrices ... done, cpu time[sec] = 0.48713, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.05279, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            7778.08      1143.64      277.984      355.626      37.4504       4629.8      399.183     0.517588
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.051302, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004177, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.055878, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.38128e-07  1.38128e-07  1.09485e-08
      low eigenvalue method done, cpu time[sec] = 0.056121, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.38e-07  1.09e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.38e-08  1.09e-08         1
         *Z       ---       ---  1.25e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.09485e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0   3.5673e-47  1.62852e-47   5.4169e-49  5.48685e-48  1.39178e-49  1.05576e-50   6.3646e-58  2.22568e-79

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.53075, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 370 K
            Well    Collision, 1/sec
              W1         1.23208e+09
      global relaxation matrix dimension = 488
      setting global matrices ... done, cpu time[sec] = 0.484075, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.01638, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2592.69      381.214      92.6614      118.542      12.4835      1543.27      133.061     0.172529
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.051103, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004115, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.055611, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.09119e-08  5.09119e-08  3.27018e-09
      low eigenvalue method done, cpu time[sec] = 0.055855, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.09e-08  3.27e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.03e-09  3.27e-09         1
         *Z       ---       ---  1.25e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.27018e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.16162e-47  4.46556e-48  1.30593e-49  1.11414e-48   3.0021e-50  8.12745e-51   6.4198e-58  9.29823e-80

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.45833, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 370 K
            Well    Collision, 1/sec
              W1         2.05347e+09
      global relaxation matrix dimension = 488
      setting global matrices ... done, cpu time[sec] = 0.486213, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.0162, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1555.62      228.728      55.5968      71.1252      7.49007       925.96      79.8366     0.103518
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.051118, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004087, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.055605, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.17545e-08  3.17545e-08   1.7224e-09
      low eigenvalue method done, cpu time[sec] = 0.055844, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.18e-08  1.72e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.12e-09  1.72e-09         1
         *Z       ---       ---  1.25e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.7224e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  6.31157e-48  2.24073e-48  6.38221e-50  5.09414e-49  1.40889e-50  6.28439e-51  6.47881e-58  8.99239e-80

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.4517, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 370 K
            Well    Collision, 1/sec
              W1         2.87486e+09
      global relaxation matrix dimension = 488
      setting global matrices ... done, cpu time[sec] = 0.483881, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.01589, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1111.15      163.377       39.712      50.8037      5.35005        661.4      57.0261    0.0739412
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.051091, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004084, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.055576, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.31926e-08  2.31926e-08  1.09764e-09
      low eigenvalue method done, cpu time[sec] = 0.055827, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.32e-08   1.1e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.27e-09   1.1e-09         1
         *Z       ---       ---  1.25e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.09764e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  4.09467e-48  1.38219e-48  3.89982e-50  2.99178e-49  8.40956e-51  5.03475e-51  6.54088e-58  8.78283e-80

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.45045, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 370 K
            Well    Collision, 1/sec
              W1         3.69625e+09
      global relaxation matrix dimension = 488
      setting global matrices ... done, cpu time[sec] = 0.484935, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.01839, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            864.232      127.071      30.8871       39.514      4.16115      514.422      44.3537    0.0575098
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.051032, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004109, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.05554, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.83101e-08  1.83101e-08  7.72697e-10
      low eigenvalue method done, cpu time[sec] = 0.05578, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.83e-08  7.73e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.79e-09  7.73e-10         1
         *Z       ---       ---  1.25e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 7.72697e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.91746e-48  9.49789e-49   2.6696e-50  1.99247e-49  5.66561e-51  4.15164e-51  6.60485e-58  4.55932e-80

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.45604, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 370 K
            Well    Collision, 1/sec
              W1         4.10694e+09
      global relaxation matrix dimension = 488
      setting global matrices ... done, cpu time[sec] = 0.485725, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.06461, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            777.808      114.364      27.7984      35.5626      3.74504       462.98      39.9183    0.0517588
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.051046, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00409, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.055531, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.65755e-08  1.65755e-08  6.64525e-10
      low eigenvalue method done, cpu time[sec] = 0.055772, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.66e-08  6.65e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.62e-09  6.65e-10         1
         *Z       ---       ---  1.25e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 6.64525e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.52097e-48  8.08698e-49  2.27098e-50  1.67643e-49  4.78931e-51  3.80292e-51  6.63716e-58  5.36724e-80

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.49825, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 370 K
            Well    Collision, 1/sec
              W1         6.16041e+09
      global relaxation matrix dimension = 488
      setting global matrices ... done, cpu time[sec] = 0.483645, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.01713, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            518.539      76.2427      18.5323      23.7084      2.49669      308.653      26.6122    0.0345059
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.051028, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004096, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.05552, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.12759e-08  1.12759e-08  3.64671e-10
      low eigenvalue method done, cpu time[sec] = 0.055761, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.13e-08  3.65e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.09e-09  3.65e-10         1
         *Z       ---       ---  1.25e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.64671e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.40665e-48  4.27495e-49  1.20011e-50  8.51665e-50  2.47507e-51  2.61417e-51  6.79599e-58  8.11088e-80

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.28782, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 370 K
            Well    Collision, 1/sec
              W1         8.21388e+09
      global relaxation matrix dimension = 488
      setting global matrices ... done, cpu time[sec] = 0.483825, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.04633, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            388.904       57.182      13.8992      17.7813      1.87252       231.49      19.9591    0.0258794
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.051231, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004092, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.055719, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.56169e-09   8.5617e-09  2.33881e-10
      low eigenvalue method done, cpu time[sec] = 0.055967, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.56e-09  2.34e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.28e-10  2.34e-10         1
         *Z       ---       ---  1.25e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.33881e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  9.11506e-49  2.67363e-49  7.52211e-51  5.20511e-50  1.52974e-51   1.9351e-51   6.9397e-58  8.39965e-80

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.47505, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 370 K
            Well    Collision, 1/sec
              W1         1.02674e+10
      global relaxation matrix dimension = 488
      setting global matrices ... done, cpu time[sec] = 0.485224, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.05708, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            311.123      45.7456      11.1194       14.225      1.49801      185.192      15.9673    0.0207035
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.051106, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004115, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.055624, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.90775e-09  6.90776e-09  1.64051e-10
      low eigenvalue method done, cpu time[sec] = 0.055866, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.91e-09  1.64e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.66e-10  1.64e-10         1
         *Z       ---       ---  1.25e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.6405e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  6.43975e-49  1.84093e-49  5.19341e-51  3.52949e-50  1.04576e-51  1.50333e-51  7.05908e-58  1.08312e-80

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.48796, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 370 K
            Well    Collision, 1/sec
              W1         1.23208e+10
      global relaxation matrix dimension = 488
      setting global matrices ... done, cpu time[sec] = 0.488769, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.04905, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            259.269      38.1214      9.26614      11.8542      1.24835      154.327      13.3061    0.0172529
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.05102, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004105, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.055515, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.79287e-09  5.79288e-09   1.2201e-10
      low eigenvalue method done, cpu time[sec] = 0.055756, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.79e-09  1.22e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.58e-10  1.22e-10         1
         *Z       ---       ---  1.25e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.2201e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  4.81536e-49  1.34957e-49  3.81755e-51  2.55903e-50  7.62989e-52  1.20852e-51  7.15029e-58  1.43797e-80

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.48551, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 370 K
            Well    Collision, 1/sec
              W1         1.43743e+10
      global relaxation matrix dimension = 488
      setting global matrices ... done, cpu time[sec] = 0.486012, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.03717, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            222.231      32.6754      7.94241      10.1607      1.07001       132.28      11.4052    0.0147882
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.051115, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004092, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.055606, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.98983e-09  4.98983e-09  9.45865e-11
      low eigenvalue method done, cpu time[sec] = 0.055845, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.99e-09  9.46e-11         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   4.8e-10  9.46e-11         1
         *Z       ---       ---  1.25e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 9.45861e-11
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  3.74884e-49  1.03412e-49  2.93268e-51   1.9445e-50  5.82686e-52   9.9668e-52  7.21299e-58  1.31317e-80

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.46598, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 370 K
            Well    Collision, 1/sec
              W1         1.64278e+10
      global relaxation matrix dimension = 488
      setting global matrices ... done, cpu time[sec] = 0.484016, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.04239, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            194.452       28.591       6.9496      8.89065     0.936259      115.745      9.97957    0.0129397
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.051076, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004114, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.055587, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.38351e-09  4.38352e-09   7.5635e-11
      low eigenvalue method done, cpu time[sec] = 0.055838, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.38e-09  7.56e-11         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.21e-10  7.56e-11         1
         *Z       ---       ---  1.25e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 7.56351e-11
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  3.00799e-49  8.18965e-50  2.32799e-51  1.52977e-50   4.6032e-52  8.38503e-52  7.24878e-58  1.23155e-80

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.47174, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 380 K
      Energy reference = 27341 1/cm
      Energy step      = 66 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.5 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.00791
         W1 Well: collisional kernel bandwidth = 56
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.510066
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.318935
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.280965
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 1.68734
         W1 Well: minimal relaxation eigenvalue = 0.0903237
         W1 Well: maximal relaxation eigenvalue = 0.978184
         W1 Well:       grid size = 478
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -4206 1/cm
         B1 Barrier:        grid size = 415
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -48 1/cm
         B2 Barrier:        grid size = 412
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 149 1/cm
         B3 Barrier:        grid size = 484
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4602 1/cm
         B4 Barrier:        grid size = 508
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6186 1/cm
         B5 Barrier: nonpositive number of states at -23149 1/cm => truncating
         B5 Barrier:        grid size = 765
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23148 1/cm
         B6 Barrier:        grid size = 392
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1469 1/cm
         B7 Barrier:        grid size = 343
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4703 1/cm
         B8 Barrier:        grid size = 161
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16715 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 3.2308, elapsed time[sec] = 0
      B3 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 478
      MasterEquation::Barrier::truncate: real weight = 7.43671e+49
      MasterEquation::Barrier::truncate: effective weight = 2.23635e+46
      B4 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 478
      MasterEquation::Barrier::truncate: real weight = 3.59124e+51
      MasterEquation::Barrier::truncate: effective weight = 1.07995e+48
      B5 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 478
      MasterEquation::Barrier::truncate: real weight = 1.44668e+52
      MasterEquation::Barrier::truncate: effective weight = 1.44211e+47
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1  -4206  -4206 3.34e+09 5.06e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -48 5.57e+14
         B2    150 8.27e+13
         B3  -4206 2.02e+13
         B4  -4206 2.58e+13
         B5  -4206 2.72e+12
         B6   1470 3.35e+14
         B7   4703 2.93e+13
         B8  16715 4.06e+10
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  1.16e-07   2.8e-07  3.92e-14  8.66e-17  1.95e-46  0.000521       181  5.58e+22
          R  8.65e+06         1      2.42  3.39e-07  7.49e-10  1.68e-39  4.51e+03  1.57e+09  4.83e+29
         P1  3.57e+06     0.413         1   1.4e-07  3.09e-10  6.95e-40  1.86e+03  6.47e+08  1.99e+29
         P2  2.55e+13  2.95e+06  7.15e+06         1   0.00221  4.96e-33  1.33e+10  4.62e+15  1.42e+36
         P3  1.15e+16  1.34e+09  3.24e+09       453         1  2.25e-30  6.02e+12  2.09e+18  6.44e+38
         P4  5.14e+45  5.94e+38  1.44e+39  2.01e+32  4.45e+29         1  2.68e+42  9.31e+47  2.87e+68
         P5  1.92e+03  0.000222  0.000538  7.52e-11  1.66e-13  3.73e-43         1  3.48e+05  1.07e+26
         P6   0.00551  6.38e-10  1.55e-09  2.16e-16  4.77e-19  1.07e-48  2.87e-06         1  3.08e+20
         P7  1.79e-23  2.07e-30  5.02e-30  7.03e-37  1.55e-39  3.49e-69  9.34e-27  3.25e-21         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  3.59e+26   8.7e+26  1.22e+20  2.69e+17  6.05e-13  1.62e+30  5.63e+35  1.73e+56
          R  2.78e-27         1      2.42  3.39e-07  7.49e-10  1.68e-39  4.51e+03  1.57e+09  4.83e+29
         P1  1.15e-27     0.413         1   1.4e-07  3.09e-10  6.95e-40  1.86e+03  6.47e+08  1.99e+29
         P2  8.21e-21  2.95e+06  7.15e+06         1   0.00221  4.96e-33  1.33e+10  4.62e+15  1.42e+36
         P3  3.72e-18  1.34e+09  3.24e+09       453         1  2.25e-30  6.02e+12  2.09e+18  6.44e+38
         P4  1.65e+12  5.94e+38  1.44e+39  2.01e+32  4.45e+29         1  2.68e+42  9.31e+47  2.87e+68
         P5  6.18e-31  0.000222  0.000538  7.52e-11  1.66e-13  3.73e-43         1  3.48e+05  1.07e+26
         P6  1.78e-36  6.38e-10  1.55e-09  2.16e-16  4.77e-19  1.07e-48  2.87e-06         1  3.08e+20
         P7  5.77e-57  2.07e-30  5.02e-30  7.03e-37  1.55e-39  3.49e-69  9.34e-27  3.25e-21         1
   MasterEquation::set:  done, cpu time[sec] = 3.2459, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 380 K
            Well    Collision, 1/sec
              W1         4.03197e+08
      global relaxation matrix dimension = 478
      setting global matrices ... done, cpu time[sec] = 0.468495, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.00794, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            8186.79      1216.31      297.207      379.184      40.0729      4931.24      430.769     0.596562
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.048234, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003977, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.052594, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.70935e-07  1.70935e-07  1.61349e-08
      low eigenvalue method done, cpu time[sec] = 0.05283, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.71e-07  1.61e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.7e-08  1.61e-08         1
         *Z       ---       ---  4.58e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.61349e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  9.66708e-46  4.35607e-46  1.42729e-47  1.41735e-46  3.61611e-48  3.15489e-49  2.65708e-56  2.21007e-77

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.38259, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 380 K
            Well    Collision, 1/sec
              W1         1.20959e+09
      global relaxation matrix dimension = 478
      setting global matrices ... done, cpu time[sec] = 0.46389, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.92851, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2728.93      405.437       99.069      126.395      13.3576      1643.75       143.59     0.198854
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.048085, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003881, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.052352, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.41362e-08  6.41362e-08  4.94389e-09
      low eigenvalue method done, cpu time[sec] = 0.052594, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.41e-08  4.94e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.31e-09  4.94e-09         1
         *Z       ---       ---  4.58e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 4.94389e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  3.22594e-46  1.21942e-46  3.53428e-48  2.95711e-47  8.02417e-49  2.45182e-49  2.68007e-56  4.40034e-78

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.29612, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 380 K
            Well    Collision, 1/sec
              W1         2.01598e+09
      global relaxation matrix dimension = 478
      setting global matrices ... done, cpu time[sec] = 0.465657, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.93343, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1637.36      243.262      59.4414      75.8368      8.01458      986.248      86.1538     0.119312
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.048118, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003913, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.052417, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.02826e-08  4.02826e-08  2.63609e-09
      low eigenvalue method done, cpu time[sec] = 0.052649, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.03e-08  2.64e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.94e-09  2.64e-09         1
         *Z       ---       ---  4.58e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.63609e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.77414e-46   6.1816e-47  1.74915e-48   1.3686e-47  3.81436e-49  1.91085e-49  2.70464e-56  1.17497e-77

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.17004, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 380 K
            Well    Collision, 1/sec
              W1         2.82238e+09
      global relaxation matrix dimension = 478
      setting global matrices ... done, cpu time[sec] = 0.46458, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.92743, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1169.54      173.759      42.4581      54.1691       5.7247      704.463      61.5384    0.0852232
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.048127, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.0039, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.052411, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.95402e-08  2.95402e-08  1.69366e-09
      low eigenvalue method done, cpu time[sec] = 0.052641, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.95e-08  1.69e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.88e-09  1.69e-09         1
         *Z       ---       ---  4.58e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.69366e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.16035e-46  3.83907e-47   1.0777e-48  8.10063e-48   2.2957e-49  1.54052e-49  2.73044e-56  8.74554e-78

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.2971, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 380 K
            Well    Collision, 1/sec
              W1         3.62877e+09
      global relaxation matrix dimension = 478
      setting global matrices ... done, cpu time[sec] = 0.466112, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.91197, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            909.643      135.146       33.023      42.1315      4.45255      547.915      47.8632    0.0662847
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.048147, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003921, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.052449, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.33846e-08  2.33846e-08  1.19952e-09
      low eigenvalue method done, cpu time[sec] = 0.052681, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.34e-08   1.2e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.27e-09   1.2e-09         1
         *Z       ---       ---  4.58e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.19952e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  8.31774e-47  2.65143e-47   7.4227e-49  5.42564e-48  1.55606e-49  1.27689e-49    2.757e-56  9.80355e-78

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.28512, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 380 K
            Well    Collision, 1/sec
              W1         4.03197e+09
      global relaxation matrix dimension = 478
      setting global matrices ... done, cpu time[sec] = 0.466044, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.93921, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            818.679      121.631      29.7207      37.9184      4.00729      493.124      43.0769    0.0596562
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.048132, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003884, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.052403, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.11918e-08  2.11917e-08  1.03421e-09
      low eigenvalue method done, cpu time[sec] = 0.052641, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.12e-08  1.03e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.05e-09  1.03e-09         1
         *Z       ---       ---  4.58e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.03421e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  7.20561e-47  2.26231e-47  6.33047e-49  4.57573e-48  1.31869e-49   1.1723e-49  2.77039e-56  9.89601e-78

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.31354, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 380 K
            Well    Collision, 1/sec
              W1         6.04795e+09
      global relaxation matrix dimension = 478
      setting global matrices ... done, cpu time[sec] = 0.467012, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.91687, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            545.786      81.0874      19.8138      25.2789      2.67153      328.749      28.7179    0.0397708
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.048196, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003901, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.052478, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.44691e-08  1.44691e-08  5.73034e-10
      low eigenvalue method done, cpu time[sec] = 0.05271, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.45e-08  5.73e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.4e-09  5.73e-10         1
         *Z       ---       ---  4.58e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 5.73034e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  4.05961e-47  1.20546e-47  3.37777e-49    2.345e-48  6.87947e-50  8.13313e-50  2.83608e-56  7.12489e-78

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.29003, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 380 K
            Well    Collision, 1/sec
              W1         8.06394e+09
      global relaxation matrix dimension = 478
      setting global matrices ... done, cpu time[sec] = 0.465439, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.94232, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            409.339      60.8155      14.8604      18.9592      2.00365      246.562      21.5385    0.0298281
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.048116, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00389, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.052384, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.10105e-08  1.10105e-08  3.69968e-10
      low eigenvalue method done, cpu time[sec] = 0.052615, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.1e-08   3.7e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.06e-09   3.7e-10         1
         *Z       ---       ---  4.58e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.69968e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.64832e-47  7.58042e-48  2.13121e-49  1.44168e-48  4.27929e-50   6.0621e-50  2.89537e-56  5.89094e-78

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.31195, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 380 K
            Well    Collision, 1/sec
              W1         1.00799e+10
      global relaxation matrix dimension = 478
      setting global matrices ... done, cpu time[sec] = 0.466129, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.91626, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            327.471      48.6524      11.8883      15.1674      1.60292       197.25      17.2308    0.0238625
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.048268, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003902, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.052559, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.89694e-09  8.89692e-09   2.6081e-10
      low eigenvalue method done, cpu time[sec] = 0.052792, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   8.9e-09  2.61e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.54e-10  2.61e-10         1
         *Z       ---       ---  4.58e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.6081e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.88054e-47   5.2409e-48  1.47877e-49  9.81872e-49  2.93946e-50  4.73541e-50  2.94459e-56  1.01563e-77

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.28879, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 380 K
            Well    Collision, 1/sec
              W1         1.20959e+10
      global relaxation matrix dimension = 478
      setting global matrices ... done, cpu time[sec] = 0.466903, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.94134, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            272.893      40.5437       9.9069      12.6395      1.33576      164.375       14.359    0.0198854
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.048127, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003909, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.052427, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.46926e-09  7.46925e-09  1.94749e-10
      low eigenvalue method done, cpu time[sec] = 0.052669, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.47e-09  1.95e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.15e-10  1.95e-10         1
         *Z       ---       ---  4.58e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.94749e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.41187e-47  3.85448e-48   1.0913e-49   7.1435e-49  2.15275e-50  3.82407e-50  2.98225e-56  7.22709e-78

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.31258, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 380 K
            Well    Collision, 1/sec
              W1         1.41119e+10
      global relaxation matrix dimension = 478
      setting global matrices ... done, cpu time[sec] = 0.465091, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.94179, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            233.908      34.7517      8.49163      10.8338      1.14494      140.893      12.3077    0.0170446
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.048213, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003902, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.052502, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.43928e-09  6.43928e-09  1.51472e-10
      low eigenvalue method done, cpu time[sec] = 0.052737, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.44e-09  1.51e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.16e-10  1.51e-10         1
         *Z       ---       ---  4.58e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.51472e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.10282e-47  2.96133e-48  8.41065e-50  5.44324e-49  1.64911e-50  3.16593e-50  3.00826e-56  9.23245e-78

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.31351, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 380 K
            Well    Collision, 1/sec
              W1         1.61279e+10
      global relaxation matrix dimension = 478
      setting global matrices ... done, cpu time[sec] = 0.465288, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.94005, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             204.67      30.4078      7.43018      9.47959      1.00182      123.281      10.7692    0.0149141
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.048226, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003934, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.052548, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.66067e-09  5.66069e-09  1.21458e-10
      low eigenvalue method done, cpu time[sec] = 0.052779, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.66e-09  1.21e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   5.4e-10  1.21e-10         1
         *Z       ---       ---  4.58e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.21458e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  8.87373e-48   2.3504e-48  6.69466e-50  4.29233e-49  1.30617e-50  2.67237e-50   3.0233e-56  4.97641e-78

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.31295, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 390 K
      Energy reference = 27619 1/cm
      Energy step      = 67 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.4 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.007731
         W1 Well: collisional kernel bandwidth = 56
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.511998
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.3164
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.280894
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 1.68002
         W1 Well: minimal relaxation eigenvalue = 0.0896333
         W1 Well: maximal relaxation eigenvalue = 0.980664
         W1 Well:       grid size = 476
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -4273 1/cm
         B1 Barrier:        grid size = 413
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -52 1/cm
         B2 Barrier:        grid size = 410
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 149 1/cm
         B3 Barrier:        grid size = 481
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4608 1/cm
         B4 Barrier:        grid size = 505
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6216 1/cm
         B5 Barrier: nonpositive number of states at -23167 1/cm => truncating
         B5 Barrier:        grid size = 758
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23167 1/cm
         B6 Barrier:        grid size = 390
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1488 1/cm
         B7 Barrier:        grid size = 342
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4704 1/cm
         B8 Barrier:        grid size = 162
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16764 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 3.22211, elapsed time[sec] = 0
      B3 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 476
      MasterEquation::Barrier::truncate: real weight = 1.44247e+49
      MasterEquation::Barrier::truncate: effective weight = 4.40348e+45
      B4 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 476
      MasterEquation::Barrier::truncate: real weight = 6.27866e+50
      MasterEquation::Barrier::truncate: effective weight = 1.91671e+47
      B5 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 476
      MasterEquation::Barrier::truncate: real weight = 1.10182e+51
      MasterEquation::Barrier::truncate: effective weight = 2.20745e+46
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1  -4273  -4273 3.27e+09 5.31e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -52 6.03e+14
         B2    149 9.06e+13
         B3  -4273 2.22e+13
         B4  -4273 2.83e+13
         B5  -4273    3e+12
         B6   1489 3.68e+14
         B7   4705 3.25e+13
         B8  16765 4.81e+10
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  8.65e-08  2.06e-07  4.62e-14  1.19e-16  1.58e-45  0.000343      88.3   8.5e+21
          R  1.16e+07         1      2.37  5.34e-07  1.38e-09  1.82e-38  3.96e+03  1.02e+09  9.82e+28
         P1  4.87e+06     0.421         1  2.25e-07  5.81e-10  7.68e-39  1.67e+03   4.3e+08  4.14e+28
         P2  2.17e+13  1.87e+06  4.45e+06         1   0.00259  3.42e-32  7.42e+09  1.91e+15  1.84e+35
         P3  8.37e+15  7.25e+08  1.72e+09       387         1  1.32e-29  2.87e+12   7.4e+17  7.12e+37
         P4  6.33e+44  5.48e+37   1.3e+38  2.93e+31  7.57e+28         1  2.17e+41   5.6e+46  5.39e+66
         P5  2.92e+03  0.000252    0.0006  1.35e-10  3.48e-13  4.61e-42         1  2.58e+05  2.48e+25
         P6    0.0113   9.8e-10  2.33e-09  5.23e-16  1.35e-18  1.79e-47  3.88e-06         1  9.63e+19
         P7  1.18e-22  1.02e-29  2.42e-29  5.43e-36   1.4e-38  1.86e-67  4.03e-26  1.04e-20         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  1.58e+25  3.75e+25  8.44e+18  2.18e+16  2.88e-13  6.26e+28  1.61e+34  1.55e+54
          R  6.33e-26         1      2.37  5.34e-07  1.38e-09  1.82e-38  3.96e+03  1.02e+09  9.82e+28
         P1  2.66e-26     0.421         1  2.25e-07  5.81e-10  7.68e-39  1.67e+03   4.3e+08  4.14e+28
         P2  1.19e-19  1.87e+06  4.45e+06         1   0.00259  3.42e-32  7.42e+09  1.91e+15  1.84e+35
         P3  4.58e-17  7.25e+08  1.72e+09       387         1  1.32e-29  2.87e+12   7.4e+17  7.12e+37
         P4  3.47e+12  5.48e+37   1.3e+38  2.93e+31  7.57e+28         1  2.17e+41   5.6e+46  5.39e+66
         P5   1.6e-29  0.000252    0.0006  1.35e-10  3.48e-13  4.61e-42         1  2.58e+05  2.48e+25
         P6   6.2e-35   9.8e-10  2.33e-09  5.23e-16  1.35e-18  1.79e-47  3.88e-06         1  9.63e+19
         P7  6.44e-55  1.02e-29  2.42e-29  5.43e-36   1.4e-38  1.86e-67  4.03e-26  1.04e-20         1
   MasterEquation::set:  done, cpu time[sec] = 3.23631, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 390 K
            Well    Collision, 1/sec
              W1         3.96056e+08
      global relaxation matrix dimension = 476
      setting global matrices ... done, cpu time[sec] = 0.462259, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.98273, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            8608.43      1292.24      317.402      403.865      42.8305      5246.16      464.215     0.685746
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.047808, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003898, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.052087, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.92877e-07  1.92877e-07  2.12003e-08
      low eigenvalue method done, cpu time[sec] = 0.05232, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.93e-07  2.12e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.91e-08  2.12e-08         1
         *Z       ---       ---  1.86e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.12003e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.20965e-44  9.82972e-45  3.17737e-46  3.09869e-45  7.94957e-47  7.90753e-48   9.1427e-55  1.17091e-75

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.34069, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 390 K
            Well    Collision, 1/sec
              W1         1.18817e+09
      global relaxation matrix dimension = 476
      setting global matrices ... done, cpu time[sec] = 0.463627, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.91015, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2869.48      430.746      105.801      134.622      14.2768      1748.72      154.738     0.228582
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.047674, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003862, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.051919, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.37007e-08  7.37007e-08  6.65689e-09
      low eigenvalue method done, cpu time[sec] = 0.052148, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.37e-08  6.66e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.21e-09  6.66e-09         1
         *Z       ---       ---  1.86e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 6.65689e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  7.54929e-45  2.80717e-45  8.07335e-47  6.63499e-46  1.81245e-47  6.20408e-48  9.22151e-55  1.13717e-75

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.2712, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 390 K
            Well    Collision, 1/sec
              W1         1.98028e+09
      global relaxation matrix dimension = 476
      setting global matrices ... done, cpu time[sec] = 0.463277, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.90567, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1721.69      258.447      63.4805      80.7731      8.56611      1049.23      92.8431     0.137149
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.047624, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003848, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.051857, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.66222e-08  4.66222e-08  3.59184e-09
      low eigenvalue method done, cpu time[sec] = 0.052086, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.66e-08  3.59e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.53e-09  3.59e-09         1
         *Z       ---       ---  1.86e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.59184e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  4.20072e-45  1.43723e-45  4.04484e-47  3.10711e-46  8.72315e-48  4.87269e-48  9.30569e-55  9.39068e-76

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.2649, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 390 K
            Well    Collision, 1/sec
              W1          2.7724e+09
      global relaxation matrix dimension = 476
      setting global matrices ... done, cpu time[sec] = 0.463238, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.89091, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1229.78      184.605      45.3432       57.695      6.11865      749.451      66.3165    0.0979637
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.047604, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003865, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.051842, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.43313e-08  3.43313e-08  2.32604e-09
      low eigenvalue method done, cpu time[sec] = 0.052076, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.43e-08  2.33e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.32e-09  2.33e-09         1
         *Z       ---       ---  1.86e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.32604e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.76908e-45  8.98528e-46  2.51236e-47   1.8531e-46  5.29262e-48  3.95241e-48  9.39399e-55  9.90381e-76

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.11077, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 390 K
            Well    Collision, 1/sec
              W1         3.56451e+09
      global relaxation matrix dimension = 476
      setting global matrices ... done, cpu time[sec] = 0.461977, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.88938, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            956.492      143.582      35.2669      44.8739      4.75895      582.906      51.5795     0.076194
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.047641, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003853, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.051875, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.72534e-08  2.72534e-08  1.65718e-09
      low eigenvalue method done, cpu time[sec] = 0.052111, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.73e-08  1.66e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.63e-09  1.66e-09         1
         *Z       ---       ---  1.86e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.65718e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.99672e-45  6.23645e-46  1.74083e-47   1.2481e-46   3.6088e-48   3.2925e-48  9.48471e-55  1.00864e-75

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.24976, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 390 K
            Well    Collision, 1/sec
              W1         3.96056e+09
      global relaxation matrix dimension = 476
      setting global matrices ... done, cpu time[sec] = 0.462611, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.88894, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            860.843      129.224      31.7402      40.3865      4.28305      524.616      46.4215    0.0685746
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.047611, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003853, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.051843, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.47248e-08  2.47248e-08  1.43234e-09
      low eigenvalue method done, cpu time[sec] = 0.05208, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.47e-08  1.43e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.38e-09  1.43e-09         1
         *Z       ---       ---  1.86e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.43234e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.73403e-45  5.33222e-46  1.48839e-47  1.05502e-46  3.06584e-48  3.02949e-48  9.53041e-55  8.73693e-76

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.25214, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 390 K
            Well    Collision, 1/sec
              W1         5.94085e+09
      global relaxation matrix dimension = 476
      setting global matrices ... done, cpu time[sec] = 0.462782, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.89086, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            573.895      86.1492      21.1602      26.9244      2.85537      349.744      30.9477    0.0457164
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.047547, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003855, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.051792, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.69454e-08  1.69454e-08  8.01155e-10
      low eigenvalue method done, cpu time[sec] = 0.052022, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.69e-08  8.01e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.63e-09  8.01e-10         1
         *Z       ---       ---  1.86e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 8.01155e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  9.86237e-46  2.86366e-46  8.01757e-48  5.45374e-47  1.61435e-48  2.12074e-48  9.75418e-55    1.051e-75

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.25279, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 390 K
            Well    Collision, 1/sec
              W1         7.92113e+09
      global relaxation matrix dimension = 476
      setting global matrices ... done, cpu time[sec] = 0.46303, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.88131, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            430.421      64.6119      15.8701      20.1933      2.14153      262.308      23.2108    0.0342873
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.047697, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003849, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.051927, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.29245e-08  1.29246e-08  5.20652e-10
      low eigenvalue method done, cpu time[sec] = 0.052157, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.29e-08  5.21e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.24e-09  5.21e-10         1
         *Z       ---       ---  1.86e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 5.20652e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  6.47638e-46  1.81057e-46  5.09205e-48  3.37266e-47   1.0106e-48  1.59139e-48  9.95577e-55  8.98573e-76

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.24031, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 390 K
            Well    Collision, 1/sec
              W1         9.90141e+09
      global relaxation matrix dimension = 476
      setting global matrices ... done, cpu time[sec] = 0.463495, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.88708, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            344.337      51.6895      12.6961      16.1546      1.71322      209.846      18.5686    0.0274298
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.047628, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003839, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.051851, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.04599e-08  1.04599e-08  3.68863e-10
      low eigenvalue method done, cpu time[sec] = 0.052089, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.05e-08  3.69e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.98e-10  3.69e-10         1
         *Z       ---       ---  1.86e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.68864e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  4.62187e-46  1.25689e-46  3.55075e-48  2.30707e-47   6.9751e-49   1.2498e-48  1.01231e-54   1.0052e-75

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.10903, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 390 K
            Well    Collision, 1/sec
              W1         1.18817e+10
      global relaxation matrix dimension = 476
      setting global matrices ... done, cpu time[sec] = 0.463222, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.90493, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            286.948      43.0746      10.5801      13.4622      1.42768      174.872      15.4738    0.0228582
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.04762, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.003842, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.051847, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.79154e-09  8.79156e-09  2.76526e-10
      low eigenvalue method done, cpu time[sec] = 0.052075, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.79e-09  2.77e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.37e-10  2.77e-10         1
         *Z       ---       ---  1.86e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.76525e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  3.48391e-46  9.27389e-47  2.63073e-48  1.68429e-47  5.12765e-49  1.01376e-48  1.02515e-54  9.11648e-76

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.26799, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 390 K
            Well    Collision, 1/sec
              W1          1.3862e+10
      global relaxation matrix dimension = 476
      setting global matrices ... done, cpu time[sec] = 0.463625, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.90024, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            245.955      36.9211      9.06864       11.539      1.22373       149.89      13.2633    0.0195927
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.047685, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00384, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.051902, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.58599e-09  7.58599e-09   2.1578e-10
      low eigenvalue method done, cpu time[sec] = 0.05213, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.59e-09  2.16e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.21e-10  2.16e-10         1
         *Z       ---       ---  1.86e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.1578e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.73032e-46  7.14387e-47  2.03409e-48  1.28703e-47  3.94024e-49  8.42462e-49  1.03408e-54  9.64963e-76

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.26248, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 390 K
            Well    Collision, 1/sec
              W1         1.58423e+10
      global relaxation matrix dimension = 476
      setting global matrices ... done, cpu time[sec] = 0.463909, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.88045, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            215.211      32.3059      7.93506      10.0966      1.07076      131.154      11.6054    0.0171436
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.047583, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003857, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.051822, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.67346e-09  6.67347e-09  1.73503e-10
      low eigenvalue method done, cpu time[sec] = 0.052054, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.67e-09  1.74e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.33e-10  1.74e-10         1
         *Z       ---       ---  1.86e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.73503e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.20308e-46  5.68276e-47  1.62353e-48   1.0173e-47  3.12901e-49   7.1346e-49  1.03931e-54  1.00197e-75

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.24483, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 400 K
      Energy reference = 27897 1/cm
      Energy step      = 69 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.3 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.007111
         W1 Well: collisional kernel bandwidth = 56
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.498165
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.305985
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.279023
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 1.5675
         W1 Well: minimal relaxation eigenvalue = 0.0889325
         W1 Well: maximal relaxation eigenvalue = 0.97956
         W1 Well:       grid size = 467
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -4325 1/cm
         B1 Barrier:        grid size = 405
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -48 1/cm
         B2 Barrier:        grid size = 402
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 158 1/cm
         B3 Barrier:        grid size = 471
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4602 1/cm
         B4 Barrier:        grid size = 494
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6188 1/cm
         B5 Barrier: nonpositive number of states at -23163 1/cm => truncating
         B5 Barrier:        grid size = 740
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23163 1/cm
         B6 Barrier:        grid size = 383
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1469 1/cm
         B7 Barrier:        grid size = 336
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4712 1/cm
         B8 Barrier:        grid size = 162
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16719 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 3.06731, elapsed time[sec] = 0
      B3 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 467
      MasterEquation::Barrier::truncate: real weight = 3.04721e+48
      MasterEquation::Barrier::truncate: effective weight = 9.58003e+44
      B4 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 467
      MasterEquation::Barrier::truncate: real weight = 1.202e+50
      MasterEquation::Barrier::truncate: effective weight = 3.77891e+46
      B5 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 467
      MasterEquation::Barrier::truncate: real weight = 1.03424e+50
      MasterEquation::Barrier::truncate: effective weight = 3.75332e+45
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1  -4325  -4325 3.22e+09 5.57e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -48 6.53e+14
         B2    159 9.91e+13
         B3  -4325 2.45e+13
         B4  -4325 3.11e+13
         B5  -4325  3.3e+12
         B6   1470 4.03e+14
         B7   4713 3.61e+13
         B8  16719 5.68e+10
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  6.17e-08  1.44e-07  5.07e-14  1.52e-16  1.08e-44  0.000216      41.9  1.34e+21
          R  1.62e+07         1      2.33  8.21e-07  2.47e-09  1.75e-37   3.5e+03  6.79e+08  2.17e+28
         P1  6.95e+06     0.429         1  3.52e-07  1.06e-09  7.53e-38   1.5e+03  2.91e+08   9.3e+27
         P2  1.97e+13  1.22e+06  2.84e+06         1   0.00301  2.14e-31  4.27e+09  8.27e+14  2.64e+34
         P3  6.57e+15  4.05e+08  9.44e+08       333         1  7.11e-29  1.42e+12  2.75e+17  8.78e+36
         P4  9.24e+43   5.7e+36  1.33e+37  4.68e+30  1.41e+28         1     2e+40  3.87e+45  1.24e+65
         P5  4.63e+03  0.000286  0.000665  2.34e-10  7.05e-13  5.01e-41         1  1.94e+05  6.19e+24
         P6    0.0239  1.47e-09  3.43e-09  1.21e-15  3.64e-18  2.58e-46  5.16e-06         1  3.19e+19
         P7  7.48e-22  4.61e-29  1.07e-28  3.79e-35  1.14e-37  8.09e-66  1.62e-25  3.13e-20         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  8.13e+23  1.89e+24  6.67e+17  2.01e+15  1.43e-13  2.85e+27  5.52e+32  1.76e+52
          R  1.23e-24         1      2.33  8.21e-07  2.47e-09  1.75e-37   3.5e+03  6.79e+08  2.17e+28
         P1  5.28e-25     0.429         1  3.52e-07  1.06e-09  7.53e-38   1.5e+03  2.91e+08   9.3e+27
         P2   1.5e-18  1.22e+06  2.84e+06         1   0.00301  2.14e-31  4.27e+09  8.27e+14  2.64e+34
         P3  4.99e-16  4.05e+08  9.44e+08       333         1  7.11e-29  1.42e+12  2.75e+17  8.78e+36
         P4  7.01e+12   5.7e+36  1.33e+37  4.68e+30  1.41e+28         1     2e+40  3.87e+45  1.24e+65
         P5  3.51e-28  0.000286  0.000665  2.34e-10  7.05e-13  5.01e-41         1  1.94e+05  6.19e+24
         P6  1.81e-33  1.47e-09  3.43e-09  1.21e-15  3.64e-18  2.58e-46  5.16e-06         1  3.19e+19
         P7  5.68e-53  4.61e-29  1.07e-28  3.79e-35  1.14e-37  8.09e-66  1.62e-25  3.13e-20         1
   MasterEquation::set:  done, cpu time[sec] = 3.08209, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 400 K
            Well    Collision, 1/sec
              W1         3.89246e+08
      global relaxation matrix dimension = 467
      setting global matrices ... done, cpu time[sec] = 0.446925, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.91316, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            9043.09      1371.54      338.604      429.707      45.7281      5574.91      499.596     0.786194
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.045324, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00374, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.049432, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.28414e-07  2.28414e-07  2.87836e-08
      low eigenvalue method done, cpu time[sec] = 0.049658, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.28e-07  2.88e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.25e-08  2.88e-08         1
         *Z       ---       ---  7.69e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.87836e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  4.31693e-43  1.89629e-43  6.05582e-45  5.80895e-44  1.49806e-45  1.68616e-46  2.63352e-53  9.31345e-74

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.22153, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 400 K
            Well    Collision, 1/sec
              W1         1.16774e+09
      global relaxation matrix dimension = 467
      setting global matrices ... done, cpu time[sec] = 0.447066, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.81501, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            3014.36      457.181      112.868      143.236      15.2427       1858.3      166.532     0.262065
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.04522, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00367, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.049256, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.89471e-08  8.89471e-08  9.25413e-09
      low eigenvalue method done, cpu time[sec] = 0.049479, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.89e-08  9.25e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.66e-09  9.25e-09         1
         *Z       ---       ---  7.69e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 9.25413e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.50886e-43  5.52178e-44  1.57761e-45  1.27527e-44  3.50561e-46  1.33503e-46  2.65611e-53  7.72169e-74

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.9676, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 400 K
            Well    Collision, 1/sec
              W1         1.94623e+09
      global relaxation matrix dimension = 467
      setting global matrices ... done, cpu time[sec] = 0.449715, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.81603, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1808.62      274.308      67.7208      85.9414      9.14561      1114.98      99.9192     0.157239
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.045067, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003681, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.049116, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.66874e-08  5.66874e-08  5.05123e-09
      low eigenvalue method done, cpu time[sec] = 0.04934, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.67e-08  5.05e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.48e-09  5.05e-09         1
         *Z       ---       ---  7.69e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 5.05123e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  8.49211e-44  2.85471e-44  7.99906e-46  6.04072e-45  1.70768e-46  1.05642e-46  2.68023e-53  8.58579e-74

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.13098, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 400 K
            Well    Collision, 1/sec
              W1         2.72472e+09
      global relaxation matrix dimension = 467
      setting global matrices ... done, cpu time[sec] = 0.446003, elapsed time[sec] = 1
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.82754, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1291.87      195.935       48.372      61.3867      6.53258      796.416      71.3709     0.112313
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.045115, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003663, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.04915, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.19244e-08  4.19244e-08  3.29652e-09
      low eigenvalue method done, cpu time[sec] = 0.049375, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.19e-08   3.3e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.04e-09   3.3e-09         1
         *Z       ---       ---  7.69e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.29652e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  5.64108e-44   1.7964e-44  5.00797e-46  3.62963e-45  1.04431e-46  8.62022e-47  2.70549e-53  8.16359e-74

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.13502, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 400 K
            Well    Collision, 1/sec
              W1         3.50322e+09
      global relaxation matrix dimension = 467
      setting global matrices ... done, cpu time[sec] = 0.447045, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.82437, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1004.79      152.394      37.6226      47.7452      5.08089      619.435      55.5107    0.0873549
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.045148, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003678, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.04919, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.33788e-08  3.33788e-08  2.36226e-09
      low eigenvalue method done, cpu time[sec] = 0.049413, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.34e-08  2.36e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.21e-09  2.36e-09         1
         *Z       ---       ---  7.69e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.36226e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  4.09125e-44  1.25295e-44  3.49063e-46  2.45806e-45  7.16236e-47  7.21626e-47  2.73141e-53  8.88373e-74

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.13372, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 400 K
            Well    Collision, 1/sec
              W1         3.89246e+09
      global relaxation matrix dimension = 467
      setting global matrices ... done, cpu time[sec] = 0.446563, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.81938, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            904.309      137.154      33.8604      42.9707      4.57281      557.491      49.9596    0.0786194
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.04515, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00367, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.049194, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.03168e-08  3.03168e-08  2.04673e-09
      low eigenvalue method done, cpu time[sec] = 0.049422, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.03e-08  2.05e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.91e-09  2.05e-09         1
         *Z       ---       ---  7.69e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.04673e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  3.56164e-44  1.07347e-44  2.99184e-46  2.08251e-45  6.09955e-47  6.65416e-47  2.74446e-53  9.61717e-74

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.9739, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 400 K
            Well    Collision, 1/sec
              W1         5.83869e+09
      global relaxation matrix dimension = 467
      setting global matrices ... done, cpu time[sec] = 0.441538, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.82569, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            602.873      91.4361      22.5736      28.6471      3.04854      371.661      33.3064    0.0524129
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.045078, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003677, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.049123, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.08614e-08  2.08614e-08   1.1555e-09
      low eigenvalue method done, cpu time[sec] = 0.049345, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.09e-08  1.16e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.99e-09  1.16e-09         1
         *Z       ---       ---  7.69e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.1555e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.04464e-44  5.81022e-45  1.62686e-46  1.08578e-45  3.24145e-47  4.69924e-47  2.80822e-53  9.39964e-74

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.12415, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 400 K
            Well    Collision, 1/sec
              W1         7.78492e+09
      global relaxation matrix dimension = 467
      setting global matrices ... done, cpu time[sec] = 0.445106, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.82259, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            452.154      68.5771      16.9302      21.4853       2.2864      278.746      24.9798    0.0393097
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.045097, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003679, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.049147, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.59503e-08  1.59503e-08   7.5582e-10
      low eigenvalue method done, cpu time[sec] = 0.049371, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.6e-08  7.56e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.52e-09  7.56e-10         1
         *Z       ---       ---  7.69e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 7.5582e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.35145e-44  3.69347e-45  1.04001e-46  6.75404e-46  2.04209e-47  3.54966e-47  2.86559e-53  8.19472e-74

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.12853, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 400 K
            Well    Collision, 1/sec
              W1         9.73115e+09
      global relaxation matrix dimension = 467
      setting global matrices ... done, cpu time[sec] = 0.445448, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.81145, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            361.724      54.8617      13.5442      17.1883      1.82912      222.996      19.9838    0.0314478
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.045155, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003685, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.049207, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.29304e-08  1.29304e-08   5.3812e-10
      low eigenvalue method done, cpu time[sec] = 0.049429, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.29e-08  5.38e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.23e-09  5.38e-10         1
         *Z       ---       ---  7.69e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 5.3812e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  9.69265e-45  2.57449e-45  7.28811e-47  4.64045e-46  1.41618e-47  2.80247e-47  2.91326e-53  9.20483e-74

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.11851, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 400 K
            Well    Collision, 1/sec
              W1         1.16774e+10
      global relaxation matrix dimension = 467
      setting global matrices ... done, cpu time[sec] = 0.446331, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.83016, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            301.436      45.7181      11.2868      14.3236      1.52427       185.83      16.6532    0.0262065
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.045156, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003677, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.049207, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.08815e-08  1.08815e-08  4.05008e-10
      low eigenvalue method done, cpu time[sec] = 0.049435, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.09e-08  4.05e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.03e-09  4.05e-10         1
         *Z       ---       ---  7.69e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 4.05008e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  7.33533e-45  1.90575e-45  5.42109e-47  3.39958e-46  1.04504e-47  2.28317e-47  2.94994e-53  8.82456e-74

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.13837, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 400 K
            Well    Collision, 1/sec
              W1         1.36236e+10
      global relaxation matrix dimension = 467
      setting global matrices ... done, cpu time[sec] = 0.445815, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.82008, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            258.374      39.1869       9.6744      12.2773      1.30652      159.283      14.2742    0.0224627
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.045072, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00367, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.04911, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.39833e-09  9.39832e-09  3.17072e-10
      low eigenvalue method done, cpu time[sec] = 0.049339, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   9.4e-09  3.17e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.88e-10  3.17e-10         1
         *Z       ---       ---  7.69e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.17072e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  5.76764e-45  1.47197e-45  4.20532e-47  2.60515e-46  8.05556e-48  1.90447e-47   2.9756e-53  8.86367e-74

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.128, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 400 K
            Well    Collision, 1/sec
              W1         1.55698e+10
      global relaxation matrix dimension = 467
      setting global matrices ... done, cpu time[sec] = 0.447731, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.82119, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            226.077      34.2886       8.4651      10.7427       1.1432      139.373      12.4899    0.0196549
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.045121, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003675, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.049162, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.27417e-09  8.27415e-09  2.55656e-10
      low eigenvalue method done, cpu time[sec] = 0.049385, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.27e-09  2.56e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.81e-10  2.56e-10         1
         *Z       ---       ---  7.69e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.55657e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  4.66692e-45  1.17356e-45  3.36581e-47  2.06413e-46  6.41396e-48  1.61808e-47  2.99089e-53  8.36943e-74

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.12832, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 410 K
      Energy reference = 28175 1/cm
      Energy step      = 71 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.3 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.007007
         W1 Well: collisional kernel bandwidth = 56
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.420794
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.295752
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.241145
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 1.54285
         W1 Well: minimal relaxation eigenvalue = 0.08824
         W1 Well: maximal relaxation eigenvalue = 0.978531
         W1 Well:       grid size = 459
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -4413 1/cm
         B1 Barrier:        grid size = 397
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -12 1/cm
         B2 Barrier:        grid size = 394
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 201 1/cm
         B3 Barrier:        grid size = 462
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4626 1/cm
         B4 Barrier:        grid size = 484
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6188 1/cm
         B5 Barrier: nonpositive number of states at -23229 1/cm => truncating
         B5 Barrier:        grid size = 724
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23228 1/cm
         B6 Barrier:        grid size = 376
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1479 1/cm
         B7 Barrier:        grid size = 331
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4674 1/cm
         B8 Barrier:        grid size = 161
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16744 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 3.01462, elapsed time[sec] = 0
      B3 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 459
      MasterEquation::Barrier::truncate: real weight = 6.96686e+47
      MasterEquation::Barrier::truncate: effective weight = 2.25378e+44
      B4 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 459
      MasterEquation::Barrier::truncate: real weight = 2.50284e+49
      MasterEquation::Barrier::truncate: effective weight = 8.09668e+45
      B5 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 459
      MasterEquation::Barrier::truncate: real weight = 1.1757e+49
      MasterEquation::Barrier::truncate: effective weight = 7.10462e+44
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1  -4413  -4413 3.13e+09 5.84e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -12 7.07e+14
         B2    202 1.08e+14
         B3  -4413 2.69e+13
         B4  -4413  3.4e+13
         B5  -4413 3.63e+12
         B6   1480 4.41e+14
         B7   4675    4e+13
         B8  16744  6.7e+10
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  4.98e-08  1.14e-07  6.16e-14  2.14e-16  7.53e-44  0.000155      22.9  2.57e+20
          R  2.01e+07         1      2.29  1.24e-06  4.29e-09  1.51e-36  3.11e+03  4.61e+08  5.15e+27
         P1  8.77e+06     0.437         1   5.4e-07  1.87e-09  6.61e-37  1.36e+03  2.01e+08  2.25e+27
         P2  1.62e+13  8.09e+05  1.85e+06         1   0.00347  1.22e-30  2.52e+09  3.73e+14  4.17e+33
         P3  4.68e+15  2.33e+08  5.34e+08       288         1  3.52e-28  7.26e+11  1.07e+17   1.2e+36
         P4  1.33e+43  6.62e+35  1.51e+36  8.18e+29  2.84e+27         1  2.06e+39  3.05e+44  3.41e+63
         P5  6.45e+03  0.000321  0.000735  3.97e-10  1.38e-12  4.86e-40         1  1.48e+05  1.65e+24
         P6    0.0436  2.17e-09  4.97e-09  2.68e-15  9.31e-18  3.28e-45  6.76e-06         1  1.12e+19
         P7   3.9e-21  1.94e-28  4.44e-28   2.4e-34  8.32e-37  2.93e-64  6.04e-25  8.94e-20         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  4.82e+22   1.1e+23  5.96e+16  2.07e+14  7.29e-14   1.5e+26  2.22e+31  2.49e+50
          R  2.07e-23         1      2.29  1.24e-06  4.29e-09  1.51e-36  3.11e+03  4.61e+08  5.15e+27
         P1  9.06e-24     0.437         1   5.4e-07  1.87e-09  6.61e-37  1.36e+03  2.01e+08  2.25e+27
         P2  1.68e-17  8.09e+05  1.85e+06         1   0.00347  1.22e-30  2.52e+09  3.73e+14  4.17e+33
         P3  4.83e-15  2.33e+08  5.34e+08       288         1  3.52e-28  7.26e+11  1.07e+17   1.2e+36
         P4  1.37e+13  6.62e+35  1.51e+36  8.18e+29  2.84e+27         1  2.06e+39  3.05e+44  3.41e+63
         P5  6.66e-27  0.000321  0.000735  3.97e-10  1.38e-12  4.86e-40         1  1.48e+05  1.65e+24
         P6   4.5e-32  2.17e-09  4.97e-09  2.68e-15  9.31e-18  3.28e-45  6.76e-06         1  1.12e+19
         P7  4.02e-51  1.94e-28  4.44e-28   2.4e-34  8.32e-37  2.93e-64  6.04e-25  8.94e-20         1
   MasterEquation::set:  done, cpu time[sec] = 3.02878, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 410 K
            Well    Collision, 1/sec
              W1         3.82742e+08
      global relaxation matrix dimension = 459
      setting global matrices ... done, cpu time[sec] = 0.432388, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.8172, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            9491.03      1454.29      360.846      456.745      48.7704      5917.86      536.988     0.898466
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.043107, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003524, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.046709, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.42957e-07  2.42957e-07  3.44959e-08
      low eigenvalue method done, cpu time[sec] = 0.046929, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.43e-07  3.45e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.38e-08  3.45e-08         1
         *Z       ---       ---   3.5e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.44959e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  7.29007e-42  3.16398e-42  9.99121e-44  9.43904e-43  2.44636e-44  3.09504e-45  6.45416e-52  4.76849e-72

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.0796, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 410 K
            Well    Collision, 1/sec
              W1         1.14823e+09
      global relaxation matrix dimension = 459
      setting global matrices ... done, cpu time[sec] = 0.432399, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.79615, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            3163.68      484.763      120.282      152.248      16.2568      1972.62      178.996     0.299489
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.042955, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.00352, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.046553, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.64052e-08  9.64052e-08  1.13453e-08
      low eigenvalue method done, cpu time[sec] = 0.046767, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.64e-08  1.13e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.33e-09  1.13e-08         1
         *Z       ---       ---   3.5e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.13453e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.60461e-42  9.38716e-43   2.6663e-44  2.12247e-43  5.86952e-45  2.47249e-45   6.5094e-52  6.60218e-72

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.0564, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 410 K
            Well    Collision, 1/sec
              W1         1.91371e+09
      global relaxation matrix dimension = 459
      setting global matrices ... done, cpu time[sec] = 0.431286, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.80413, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1898.21      290.858      72.1692      91.3491      9.75408      1183.57      107.398     0.179693
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.042935, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003533, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.046545, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   6.1897e-08  6.18969e-08  6.26231e-09
      low eigenvalue method done, cpu time[sec] = 0.046763, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.19e-08  6.26e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.95e-09  6.26e-09         1
         *Z       ---       ---   3.5e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 6.26231e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.48219e-42  4.89914e-43  1.36772e-44  1.01659e-43   2.8928e-45  1.97074e-45  6.56834e-52  5.95831e-72

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.06354, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 410 K
            Well    Collision, 1/sec
              W1         2.67919e+09
      global relaxation matrix dimension = 459
      setting global matrices ... done, cpu time[sec] = 0.43135, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.7903, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1355.86      207.756      51.5495      65.2493       6.9672      845.408      76.7125     0.128352
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.042948, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003506, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.04653, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.59753e-08  4.59753e-08  4.11773e-09
      low eigenvalue method done, cpu time[sec] = 0.046747, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   4.6e-08  4.12e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   4.4e-09  4.12e-09         1
         *Z       ---       ---   3.5e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 4.11773e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  9.91959e-43   3.1026e-43   8.6294e-45  6.15279e-44  1.78271e-45  1.61737e-45     6.63e-52  6.08711e-72

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.04547, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 410 K
            Well    Collision, 1/sec
              W1         3.44468e+09
      global relaxation matrix dimension = 459
      setting global matrices ... done, cpu time[sec] = 0.428989, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.80253, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1054.56      161.588       40.094      50.7495      5.41893       657.54      59.6653    0.0998296
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.042931, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003521, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.046528, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.67114e-08  3.67114e-08  2.96748e-09
      low eigenvalue method done, cpu time[sec] = 0.046747, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.67e-08  2.97e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   3.5e-09  2.97e-09         1
         *Z       ---       ---   3.5e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.96748e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  7.23495e-43  2.17438e-43  6.04976e-45  4.18922e-44  1.22967e-45  1.36039e-45  6.69313e-52  5.97674e-72

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.93226, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 410 K
            Well    Collision, 1/sec
              W1         3.82742e+09
      global relaxation matrix dimension = 459
      setting global matrices ... done, cpu time[sec] = 0.458929, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.80387, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            949.103      145.429      36.0846      45.6745      4.87704      591.786      53.6988    0.0898466
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.043123, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003513, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.046716, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.33821e-08  3.33821e-08  2.57723e-09
      low eigenvalue method done, cpu time[sec] = 0.046929, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.34e-08  2.58e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.18e-09  2.58e-09         1
         *Z       ---       ---   3.5e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.57723e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  6.31335e-43  1.86667e-43  5.19788e-45  3.55712e-44   1.0497e-45  1.25705e-45  6.72486e-52  6.20169e-72

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.09618, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 410 K
            Well    Collision, 1/sec
              W1         5.74113e+09
      global relaxation matrix dimension = 459
      setting global matrices ... done, cpu time[sec] = 0.435072, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.80179, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            632.736      96.9527      24.0564      30.4497      3.25136      394.524      35.7992    0.0598978
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.042905, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003522, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.046504, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.30631e-08  2.30631e-08  1.46833e-09
      low eigenvalue method done, cpu time[sec] = 0.046717, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.31e-08  1.47e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.19e-09  1.47e-09         1
         *Z       ---       ---   3.5e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.46833e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  3.65755e-43  1.01814e-43  2.85276e-45  1.87034e-44  5.62911e-46  8.95343e-46  6.87965e-52  5.99885e-72

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.06718, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 410 K
            Well    Collision, 1/sec
              W1         7.65483e+09
      global relaxation matrix dimension = 459
      setting global matrices ... done, cpu time[sec] = 0.431342, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.82314, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            474.552      72.7145      18.0423      22.8373      2.43852      295.893      26.8494    0.0449233
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.042957, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003511, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.046539, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.76771e-08  1.76771e-08  9.66607e-10
      low eigenvalue method done, cpu time[sec] = 0.046753, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.77e-08  9.67e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.67e-09  9.67e-10         1
         *Z       ---       ---   3.5e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 9.66606e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.43309e-43  6.50689e-44  1.83554e-45  1.17023e-44  3.56863e-46  6.80676e-46  7.01859e-52  6.13442e-72

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.92103, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 410 K
            Well    Collision, 1/sec
              W1         9.56854e+09
      global relaxation matrix dimension = 459
      setting global matrices ... done, cpu time[sec] = 0.432329, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.80139, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            379.641      58.1716      14.4338      18.2698      1.95082      236.714      21.4795    0.0359387
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.042942, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003512, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.046536, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.43546e-08  1.43546e-08   6.9156e-10
      low eigenvalue method done, cpu time[sec] = 0.046757, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.44e-08  6.92e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.35e-09  6.92e-10         1
         *Z       ---       ---   3.5e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 6.91559e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0   1.7536e-43  4.55403e-44  1.29264e-45  8.07553e-45  2.48663e-46  5.40172e-46  7.13398e-52  6.11395e-72

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.06114, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 410 K
            Well    Collision, 1/sec
              W1         1.14823e+10
      global relaxation matrix dimension = 459
      setting global matrices ... done, cpu time[sec] = 0.428791, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.80208, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            316.368      48.4763      12.0282      15.2248      1.62568      197.262      17.8996    0.0299489
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.04298, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00351, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.046568, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.20951e-08  1.20951e-08  5.22534e-10
      low eigenvalue method done, cpu time[sec] = 0.046784, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.21e-08  5.23e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.14e-09  5.23e-10         1
         *Z       ---       ---   3.5e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 5.22533e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.33235e-43  3.38203e-44  9.65297e-46  5.93673e-45  1.84193e-46  4.41965e-46  7.22289e-52  6.19256e-72

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.05731, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 410 K
            Well    Collision, 1/sec
              W1          1.3396e+10
      global relaxation matrix dimension = 459
      setting global matrices ... done, cpu time[sec] = 0.430239, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.80441, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            271.172      41.5511      10.3099      13.0499      1.39344      169.082      15.3425    0.0256705
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.043042, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003511, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.04663, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.04567e-08  1.04567e-08  4.10411e-10
      low eigenvalue method done, cpu time[sec] = 0.046843, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.05e-08   4.1e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.82e-10   4.1e-10         1
         *Z       ---       ---   3.5e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 4.10411e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.05104e-43  2.61923e-44  7.51262e-46  4.56247e-45  1.42428e-46  3.70006e-46  7.28534e-52  6.19914e-72

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.05981, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 410 K
            Well    Collision, 1/sec
              W1         1.53097e+10
      global relaxation matrix dimension = 459
      setting global matrices ... done, cpu time[sec] = 0.429761, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.80763, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            237.276      36.3572      9.02115      11.4186      1.21926      147.946      13.4247    0.0224617
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.042935, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003505, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.046517, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.21311e-09   9.2131e-09  3.31831e-10
      low eigenvalue method done, cpu time[sec] = 0.04673, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.21e-09  3.32e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.64e-10  3.32e-10         1
         *Z       ---       ---   3.5e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.31831e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  8.52828e-44  2.09298e-44  6.02955e-46  3.62372e-45  1.13704e-46  3.15367e-46  7.32298e-52  6.10551e-72

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.91983, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 420 K
      Energy reference = 28453 1/cm
      Energy step      = 72 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.2 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.009119
         W1 Well: collisional kernel bandwidth = 56
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.487303
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.293103
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 1.50238
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 1.5297
         W1 Well: minimal relaxation eigenvalue = 0.0875851
         W1 Well: maximal relaxation eigenvalue = 0.980867
         W1 Well:       grid size = 458
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -4523 1/cm
         B1 Barrier:        grid size = 396
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -59 1/cm
         B2 Barrier:        grid size = 393
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 156 1/cm
         B3 Barrier:        grid size = 460
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4667 1/cm
         B4 Barrier:        grid size = 481
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6178 1/cm
         B5 Barrier: nonpositive number of states at -23099 1/cm => truncating
         B5 Barrier:        grid size = 716
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23099 1/cm
         B6 Barrier:        grid size = 375
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1452 1/cm
         B7 Barrier:        grid size = 330
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4692 1/cm
         B8 Barrier:        grid size = 163
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16717 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 4.21392, elapsed time[sec] = 0
      B3 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 458
      MasterEquation::Barrier::truncate: real weight = 1.71411e+47
      MasterEquation::Barrier::truncate: effective weight = 5.62323e+43
      B4 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 458
      MasterEquation::Barrier::truncate: real weight = 5.63409e+48
      MasterEquation::Barrier::truncate: effective weight = 1.8483e+45
      B5 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 458
      MasterEquation::Barrier::truncate: real weight = 1.59106e+48
      MasterEquation::Barrier::truncate: effective weight = 1.45109e+44
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1  -4523  -4523 3.02e+09 6.12e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -59 7.65e+14
         B2    157 1.18e+14
         B3  -4523 2.95e+13
         B4  -4523 3.73e+13
         B5  -4523 3.99e+12
         B6   1453 4.82e+14
         B7   4693 4.43e+13
         B8  16717 7.87e+10
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  4.39e-08  9.87e-08  8.01e-14  3.18e-16  5.16e-43  0.000122        14  5.76e+19
          R  2.28e+07         1      2.25  1.83e-06  7.26e-09  1.18e-35  2.78e+03  3.18e+08  1.31e+27
         P1  1.01e+07     0.444         1  8.12e-07  3.23e-09  5.22e-36  1.24e+03  1.41e+08  5.83e+26
         P2  1.25e+13  5.47e+05  1.23e+06         1   0.00398  6.44e-30  1.52e+09  1.74e+14  7.19e+32
         P3  3.14e+15  1.38e+08   3.1e+08       252         1  1.62e-27  3.83e+11  4.38e+16  1.81e+35
         P4  1.94e+42   8.5e+34  1.91e+35  1.55e+29  6.18e+26         1  2.37e+38  2.71e+43  1.12e+62
         P5  8.19e+03  0.000359  0.000809  6.56e-10  2.61e-12  4.22e-39         1  1.14e+05  4.72e+23
         P6    0.0716  3.14e-09  7.07e-09  5.74e-15  2.28e-17  3.69e-44  8.74e-06         1  4.12e+18
         P7  1.74e-20  7.62e-28  1.71e-27  1.39e-33  5.53e-36  8.96e-63  2.12e-24  2.43e-19         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  3.27e+21  7.37e+21  5.98e+15  2.38e+13  3.85e-14  9.11e+24  1.04e+30   4.3e+48
          R  3.06e-22         1      2.25  1.83e-06  7.26e-09  1.18e-35  2.78e+03  3.18e+08  1.31e+27
         P1  1.36e-22     0.444         1  8.12e-07  3.23e-09  5.22e-36  1.24e+03  1.41e+08  5.83e+26
         P2  1.67e-16  5.47e+05  1.23e+06         1   0.00398  6.44e-30  1.52e+09  1.74e+14  7.19e+32
         P3  4.21e-14  1.38e+08   3.1e+08       252         1  1.62e-27  3.83e+11  4.38e+16  1.81e+35
         P4   2.6e+13   8.5e+34  1.91e+35  1.55e+29  6.18e+26         1  2.37e+38  2.71e+43  1.12e+62
         P5   1.1e-25  0.000359  0.000809  6.56e-10  2.61e-12  4.22e-39         1  1.14e+05  4.72e+23
         P6   9.6e-31  3.14e-09  7.07e-09  5.74e-15  2.28e-17  3.69e-44  8.74e-06         1  4.12e+18
         P7  2.33e-49  7.62e-28  1.71e-27  1.39e-33  5.53e-36  8.96e-63  2.12e-24  2.43e-19         1
   MasterEquation::set:  done, cpu time[sec] = 4.22842, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 420 K
            Well    Collision, 1/sec
              W1         3.76521e+08
      global relaxation matrix dimension = 458
      setting global matrices ... done, cpu time[sec] = 0.430073, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.74501, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            9952.38      1540.62      384.164      485.018      51.9626      6275.35      576.467      1.02324
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.042765, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.003516, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.046356, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.43438e-07  2.43438e-07  3.83968e-08
      low eigenvalue method done, cpu time[sec] = 0.04657, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.43e-07  3.84e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.37e-08  3.84e-08         1
         *Z       ---       ---  1.72e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.83968e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.07472e-40  4.60741e-41  1.44066e-42  1.34182e-41  3.49429e-43  4.93114e-44  1.35643e-50  3.46875e-70

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.99616, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 420 K
            Well    Collision, 1/sec
              W1         1.12956e+09
      global relaxation matrix dimension = 458
      setting global matrices ... done, cpu time[sec] = 0.429938, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.7493, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            3317.46      513.541      128.055      161.673      17.3209      2091.78      192.156     0.341079
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.042674, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003503, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.046251, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.84141e-08  9.84141e-08  1.29082e-08
      low eigenvalue method done, cpu time[sec] = 0.046465, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.84e-08  1.29e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.46e-09  1.29e-08         1
         *Z       ---       ---  1.72e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.29082e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  3.92196e-41  1.39218e-41  3.93537e-43  3.08775e-42  8.58809e-44  3.97606e-44  1.36799e-50  3.16722e-70

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.85175, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 420 K
            Well    Collision, 1/sec
              W1         1.88261e+09
      global relaxation matrix dimension = 458
      setting global matrices ... done, cpu time[sec] = 0.429887, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.75518, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1990.48      308.125      76.8329      97.0036      10.3925      1255.07      115.293     0.204647
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.042686, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003502, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.046268, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.36526e-08  6.36526e-08  7.20275e-09
      low eigenvalue method done, cpu time[sec] = 0.046485, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.37e-08   7.2e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.08e-09   7.2e-09         1
         *Z       ---       ---  1.72e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 7.20275e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.25584e-41  7.33322e-42  2.04167e-43  1.49497e-42  4.28096e-44  3.19243e-44  1.38033e-50  3.48997e-70

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.00593, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 420 K
            Well    Collision, 1/sec
              W1         2.63565e+09
      global relaxation matrix dimension = 458
      setting global matrices ... done, cpu time[sec] = 0.428936, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.76156, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1421.77      220.089      54.8806      69.2883      7.42322      896.479      82.3525     0.146177
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.042702, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003502, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.046277, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.74832e-08  4.74831e-08   4.7709e-09
      low eigenvalue method done, cpu time[sec] = 0.046493, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.75e-08  4.77e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.52e-09  4.77e-09         1
         *Z       ---       ---  1.72e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 4.7709e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.52071e-41  4.67319e-42  1.29794e-43  9.11251e-43  2.65804e-44  2.63507e-44  1.39321e-50  3.49411e-70

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.01022, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 420 K
            Well    Collision, 1/sec
              W1         3.38869e+09
      global relaxation matrix dimension = 458
      setting global matrices ... done, cpu time[sec] = 0.429312, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.75284, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1105.82       171.18      42.6849      53.8909      5.77362      697.261      64.0519     0.113693
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.042687, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003481, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.046244, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.80264e-08  3.80264e-08  3.45723e-09
      low eigenvalue method done, cpu time[sec] = 0.046458, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   3.8e-08  3.46e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.61e-09  3.46e-09         1
         *Z       ---       ---  1.72e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.45723e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.11525e-41  3.29055e-42  9.15114e-44  6.23714e-43  1.84374e-44  2.22684e-44  1.40639e-50   3.5216e-70

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.00344, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 420 K
            Well    Collision, 1/sec
              W1         3.76521e+09
      global relaxation matrix dimension = 458
      setting global matrices ... done, cpu time[sec] = 0.427909, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.7638, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            995.238      154.062      38.4164      48.5018      5.19626      627.535      57.6467     0.102324
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.042736, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003502, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.046316, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.46177e-08  3.46177e-08  3.00955e-09
      low eigenvalue method done, cpu time[sec] = 0.046529, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.46e-08  3.01e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.28e-09  3.01e-09         1
         *Z       ---       ---  1.72e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.00955e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  9.75444e-42  2.83047e-42  7.88128e-44  5.30767e-43  1.57758e-44  2.06193e-44    1.413e-50  3.52225e-70

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.01522, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 420 K
            Well    Collision, 1/sec
              W1         5.64782e+09
      global relaxation matrix dimension = 458
      setting global matrices ... done, cpu time[sec] = 0.427951, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.75529, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            663.492      102.708       25.611      32.3345      3.46417      418.357      38.4312    0.0682158
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.042895, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003485, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.046461, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.40133e-08  2.40133e-08  1.73003e-09
      low eigenvalue method done, cpu time[sec] = 0.046675, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   2.4e-08  1.73e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.26e-09  1.73e-09         1
         *Z       ---       ---  1.72e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.73003e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  5.70173e-42  1.55558e-42  4.36513e-44  2.81415e-43  8.53574e-45  1.48104e-44  1.44521e-50  3.50136e-70

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.00963, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 420 K
            Well    Collision, 1/sec
              W1         7.53042e+09
      global relaxation matrix dimension = 458
      setting global matrices ... done, cpu time[sec] = 0.432936, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.7608, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            497.619      77.0311      19.2082      24.2509      2.59813      313.768      28.8234    0.0511619
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.042726, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003502, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.046303, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.84511e-08  1.84511e-08  1.14607e-09
      low eigenvalue method done, cpu time[sec] = 0.046517, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.85e-08  1.15e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.73e-09  1.15e-09         1
         *Z       ---       ---  1.72e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.14607e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  3.81687e-42  9.99462e-43  2.82665e-44  1.77094e-43  5.44504e-45   1.1331e-44  1.47407e-50  3.48729e-70

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.01577, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 420 K
            Well    Collision, 1/sec
              W1         9.41303e+09
      global relaxation matrix dimension = 458
      setting global matrices ... done, cpu time[sec] = 0.431477, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.76009, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            398.095      61.6249      15.3666      19.4007       2.0785      251.014      23.0587    0.0409295
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.04292, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003496, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.04649, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.50088e-08  1.50088e-08  8.23914e-10
      low eigenvalue method done, cpu time[sec] = 0.046702, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.5e-08  8.24e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.41e-09  8.24e-10         1
         *Z       ---       ---  1.72e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 8.23913e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.76424e-42  7.02334e-43  2.00035e-44  1.22743e-43  3.81206e-45  9.03779e-45  1.49805e-50  3.45183e-70

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.0159, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 420 K
            Well    Collision, 1/sec
              W1         1.12956e+10
      global relaxation matrix dimension = 458
      setting global matrices ... done, cpu time[sec] = 0.42609, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.77085, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            331.746      51.3541      12.8055      16.1673      1.73209      209.178      19.2156    0.0341079
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.042667, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003501, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.046246, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.26624e-08  1.26625e-08  6.24954e-10
      low eigenvalue method done, cpu time[sec] = 0.046457, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.27e-08  6.25e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.18e-09  6.25e-10         1
         *Z       ---       ---  1.72e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 6.24954e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0   2.1084e-42  5.23277e-43  1.49965e-44  9.05491e-44  2.83442e-45  7.42591e-45  1.51656e-50  3.50249e-70

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.02403, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 420 K
            Well    Collision, 1/sec
              W1         1.31782e+10
      global relaxation matrix dimension = 458
      setting global matrices ... done, cpu time[sec] = 0.432576, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.75932, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            284.354      44.0178      10.9761      13.8577      1.48464      179.296      16.4705    0.0292354
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.042858, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003499, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.046494, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   1.0958e-08   1.0958e-08  4.92439e-10
      low eigenvalue method done, cpu time[sec] = 0.046709, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.1e-08  4.92e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.02e-09  4.92e-10         1
         *Z       ---       ---  1.72e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 4.92439e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.66863e-42  4.06342e-43  1.17094e-44  6.97885e-44   2.1986e-45  6.23929e-45  1.52964e-50  3.49928e-70

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.01957, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 420 K
            Well    Collision, 1/sec
              W1         1.50608e+10
      global relaxation matrix dimension = 458
      setting global matrices ... done, cpu time[sec] = 0.432562, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.7615, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             248.81      38.5156      9.60411      12.1255      1.29906      156.884      14.4117    0.0255809
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.04295, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003502, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.046526, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   9.6624e-09   9.6624e-09  3.99248e-10
      low eigenvalue method done, cpu time[sec] = 0.046738, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.66e-09  3.99e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0     9e-10  3.99e-10         1
         *Z       ---       ---  1.72e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.99248e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.35769e-42  3.25439e-43  9.42392e-45   5.5564e-44  1.75988e-45  5.33463e-45  1.53762e-50  3.49195e-70

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.85919, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 430 K
      Energy reference = 28731 1/cm
      Energy step      = 74 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.1 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.008682
         W1 Well: collisional kernel bandwidth = 56
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.475591
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.28147
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.266155
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 1.46372
         W1 Well: minimal relaxation eigenvalue = 0.0869314
         W1 Well: maximal relaxation eigenvalue = 0.979841
         W1 Well:       grid size = 450
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -4568 1/cm
         B1 Barrier:        grid size = 389
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -55 1/cm
         B2 Barrier:        grid size = 386
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 167 1/cm
         B3 Barrier:        grid size = 451
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4643 1/cm
         B4 Barrier:        grid size = 472
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6196 1/cm
         B5 Barrier: nonpositive number of states at -23143 1/cm => truncating
         B5 Barrier:        grid size = 701
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23143 1/cm
         B6 Barrier:        grid size = 368
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1499 1/cm
         B7 Barrier:        grid size = 325
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4681 1/cm
         B8 Barrier:        grid size = 162
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16743 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 2.88859, elapsed time[sec] = 0
      B3 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 450
      MasterEquation::Barrier::truncate: real weight = 4.51508e+46
      MasterEquation::Barrier::truncate: effective weight = 1.52234e+43
      B4 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 450
      MasterEquation::Barrier::truncate: real weight = 1.3636e+48
      MasterEquation::Barrier::truncate: effective weight = 4.59761e+44
      B5 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 450
      MasterEquation::Barrier::truncate: real weight = 2.52039e+47
      MasterEquation::Barrier::truncate: effective weight = 3.179e+43
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1  -4568  -4568 2.98e+09 6.42e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -55 8.27e+14
         B2    168 1.29e+14
         B3  -4568 3.24e+13
         B4  -4568 4.08e+13
         B5  -4568 4.39e+12
         B6   1500 5.27e+14
         B7   4682  4.9e+13
         B8  16743 9.22e+10
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  3.15e-08  6.97e-08  8.34e-14  3.78e-16  2.62e-42  7.87e-05      7.05  1.12e+19
          R  3.18e+07         1      2.21  2.65e-06   1.2e-08  8.32e-35   2.5e+03  2.24e+08  3.57e+26
         P1  1.43e+07     0.451         1   1.2e-06  5.42e-09  3.75e-35  1.13e+03  1.01e+08  1.61e+26
         P2   1.2e+13  3.77e+05  8.36e+05         1   0.00453  3.14e-29  9.44e+08  8.45e+13  1.35e+32
         P3  2.65e+15  8.34e+07  1.85e+08       221         1  6.93e-27  2.08e+11  1.87e+16  2.97e+34
         P4  3.82e+41   1.2e+34  2.66e+34  3.19e+28  1.44e+26         1  3.01e+37  2.69e+42  4.29e+60
         P5  1.27e+04    0.0004  0.000886  1.06e-09   4.8e-12  3.33e-38         1  8.96e+04  1.43e+23
         P6     0.142  4.47e-09  9.89e-09  1.18e-14  5.36e-17  3.71e-43  1.12e-05         1  1.59e+18
         P7  8.91e-20   2.8e-27  6.21e-27  7.43e-33  3.37e-35  2.33e-61  7.01e-24  6.28e-19         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  2.51e+20  5.57e+20  6.66e+14  3.02e+12  2.09e-14  6.29e+23  5.63e+28  8.97e+46
          R  3.98e-21         1      2.21  2.65e-06   1.2e-08  8.32e-35   2.5e+03  2.24e+08  3.57e+26
         P1   1.8e-21     0.451         1   1.2e-06  5.42e-09  3.75e-35  1.13e+03  1.01e+08  1.61e+26
         P2   1.5e-15  3.77e+05  8.36e+05         1   0.00453  3.14e-29  9.44e+08  8.45e+13  1.35e+32
         P3  3.31e-13  8.34e+07  1.85e+08       221         1  6.93e-27  2.08e+11  1.87e+16  2.97e+34
         P4  4.78e+13   1.2e+34  2.66e+34  3.19e+28  1.44e+26         1  3.01e+37  2.69e+42  4.29e+60
         P5  1.59e-24    0.0004  0.000886  1.06e-09   4.8e-12  3.33e-38         1  8.96e+04  1.43e+23
         P6  1.78e-29  4.47e-09  9.89e-09  1.18e-14  5.36e-17  3.71e-43  1.12e-05         1  1.59e+18
         P7  1.12e-47   2.8e-27  6.21e-27  7.43e-33  3.37e-35  2.33e-61  7.01e-24  6.28e-19         1
   MasterEquation::set:  done, cpu time[sec] = 2.9025, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 430 K
            Well    Collision, 1/sec
              W1         3.70564e+08
      global relaxation matrix dimension = 450
      setting global matrices ... done, cpu time[sec] = 0.414367, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.71303, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            10427.3      1630.62      408.595      514.564      55.3097      6647.76      618.115       1.1618
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.040768, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003404, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.044255, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.96983e-07  2.96983e-07  5.16688e-08
      low eigenvalue method done, cpu time[sec] = 0.044464, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.97e-07  5.17e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.88e-08  5.17e-08         1
         *Z       ---       ---   7.9e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 5.16688e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.39725e-39    5.921e-40  1.83438e-41  1.68609e-40  4.41063e-42   6.9058e-43  2.47466e-49  1.46471e-68

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.92114, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 430 K
            Well    Collision, 1/sec
              W1         1.11169e+09
      global relaxation matrix dimension = 450
      setting global matrices ... done, cpu time[sec] = 0.414605, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.71312, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            3475.77      543.539      136.198      171.521      18.4366      2215.92      206.038     0.387268
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.040653, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003345, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.044075, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.22375e-07  1.22375e-07  1.77409e-08
      low eigenvalue method done, cpu time[sec] = 0.044285, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.22e-07  1.77e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.17e-08  1.77e-08         1
         *Z       ---       ---   7.9e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.77409e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  5.20445e-40  1.82088e-40  5.12519e-42  3.96728e-41  1.10946e-42  5.61909e-43  2.49569e-49  1.73555e-68

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.91919, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 430 K
            Well    Collision, 1/sec
              W1         1.85282e+09
      global relaxation matrix dimension = 450
      setting global matrices ... done, cpu time[sec] = 0.413785, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.7014, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2085.46      326.123      81.7189      102.913      11.0619      1329.55      123.623     0.232361
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.040628, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00334, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.044047, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.97512e-08  7.97512e-08  1.00043e-08
      low eigenvalue method done, cpu time[sec] = 0.044261, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.98e-08     1e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.58e-09     1e-08         1
         *Z       ---       ---   7.9e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.00043e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  3.02478e-40  9.67799e-41   2.6884e-42  1.94106e-41  5.59174e-43  4.54357e-43   2.5181e-49  1.66842e-68

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.90546, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 430 K
            Well    Collision, 1/sec
              W1         2.59395e+09
      global relaxation matrix dimension = 450
      setting global matrices ... done, cpu time[sec] = 0.414234, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.59602, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1489.61      232.945      58.3707      73.5091      7.90139       949.68      88.3021     0.165972
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.127997, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003355, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.139871, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   5.9758e-08   5.9758e-08  6.67399e-09
      low eigenvalue method done, cpu time[sec] = 0.141142, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.98e-08  6.67e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.66e-09  6.67e-09         1
         *Z       ---       ---   7.9e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 6.67399e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.05355e-40  6.20519e-41  1.72176e-42  1.19139e-41  3.49744e-43  3.77114e-43  2.54148e-49   1.6606e-68

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.90363, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 430 K
            Well    Collision, 1/sec
              W1         3.33508e+09
      global relaxation matrix dimension = 450
      setting global matrices ... done, cpu time[sec] = 0.414182, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.70444, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1158.59       181.18      45.3994      57.1737      6.14552       738.64      68.6794     0.129089
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.0407, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003346, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.04413, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.80027e-08  4.80027e-08  4.86247e-09
      low eigenvalue method done, cpu time[sec] = 0.044336, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   4.8e-08  4.86e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.53e-09  4.86e-09         1
         *Z       ---       ---   7.9e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 4.86247e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.51412e-40   4.3895e-41  1.22071e-42  8.19685e-42  2.43933e-43  3.20144e-43  2.56535e-49  1.68068e-68

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.75829, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 430 K
            Well    Collision, 1/sec
              W1         3.70564e+09
      global relaxation matrix dimension = 450
      setting global matrices ... done, cpu time[sec] = 0.412896, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.71514, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1042.73      163.062      40.8595      51.4564      5.53097      664.776      61.8115      0.11618
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.040709, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003339, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.044122, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.37524e-08  4.37524e-08  4.24247e-09
      low eigenvalue method done, cpu time[sec] = 0.044333, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.38e-08  4.24e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.12e-09  4.24e-09         1
         *Z       ---       ---   7.9e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 4.24247e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.32731e-40  3.78312e-41  1.05378e-42   6.9904e-42  2.09199e-43  2.97031e-43  2.57731e-49  1.67124e-68

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.91795, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 430 K
            Well    Collision, 1/sec
              W1         5.55847e+09
      global relaxation matrix dimension = 450
      setting global matrices ... done, cpu time[sec] = 0.414913, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.71232, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            695.154      108.708      27.2396      34.3042      3.68731      443.184      41.2076    0.0774536
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.04087, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003338, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.044285, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.04791e-08  3.04791e-08  2.46026e-09
      low eigenvalue method done, cpu time[sec] = 0.044494, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.05e-08  2.46e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.86e-09  2.46e-09         1
         *Z       ---       ---   7.9e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.46026e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0   7.8267e-41  2.09475e-41  5.88916e-43  3.73697e-42   1.1419e-43  2.15101e-43  2.63548e-49  1.68186e-68

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.92766, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 430 K
            Well    Collision, 1/sec
              W1         7.41129e+09
      global relaxation matrix dimension = 450
      setting global matrices ... done, cpu time[sec] = 0.41687, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.71453, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            521.365      81.5308      20.4297      25.7282      2.76549      332.388      30.9057    0.0580902
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.040769, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003349, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.044193, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.34812e-08  2.34812e-08  1.63995e-09
      low eigenvalue method done, cpu time[sec] = 0.044401, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.35e-08  1.64e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.19e-09  1.64e-09         1
         *Z       ---       ---   7.9e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.63995e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  5.27197e-41  1.35298e-41  3.83774e-43  2.36517e-42   7.3293e-44  1.65586e-43  2.68753e-49  1.66738e-68

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.92167, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 430 K
            Well    Collision, 1/sec
              W1         9.26411e+09
      global relaxation matrix dimension = 450
      setting global matrices ... done, cpu time[sec] = 0.414987, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.7133, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            417.092      65.2247      16.3438      20.5825      2.21239       265.91      24.7246    0.0464721
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.040612, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003338, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.044026, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.91356e-08  1.91356e-08  1.18459e-09
      low eigenvalue method done, cpu time[sec] = 0.044241, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.91e-08  1.18e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.78e-09  1.18e-09         1
         *Z       ---       ---   7.9e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.18459e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  3.83629e-41  9.54583e-42  2.72906e-43  1.64644e-42  5.15538e-44  1.32729e-43  2.73076e-49  1.67083e-68

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.91871, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 430 K
            Well    Collision, 1/sec
              W1         1.11169e+10
      global relaxation matrix dimension = 450
      setting global matrices ... done, cpu time[sec] = 0.41422, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.70103, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            347.577      54.3539      13.6198      17.1521      1.84366      221.592      20.6038    0.0387268
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.040608, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003353, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.044032, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.61664e-08  1.61664e-08  9.01994e-10
      low eigenvalue method done, cpu time[sec] = 0.044239, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.62e-08  9.02e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.5e-09  9.02e-10         1
         *Z       ---       ---   7.9e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 9.01994e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.93739e-41  7.13516e-42  2.05397e-43  1.21883e-42  3.84772e-44  1.09508e-43  2.76422e-49   1.6819e-68

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.74373, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 430 K
            Well    Collision, 1/sec
              W1         1.29698e+10
      global relaxation matrix dimension = 450
      setting global matrices ... done, cpu time[sec] = 0.415119, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.70116, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            297.923      46.5891      11.6741      14.7018      1.58028      189.936      17.6604    0.0331944
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.040622, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003348, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.044045, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.40053e-08  1.40053e-08  7.13015e-10
      low eigenvalue method done, cpu time[sec] = 0.044252, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.4e-08  7.13e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.3e-09  7.13e-10         1
         *Z       ---       ---   7.9e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 7.13015e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0   2.3322e-41  5.55557e-42  1.60897e-43  9.42091e-43  2.99395e-44  9.23347e-44  2.78797e-49  1.68235e-68

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.90724, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 430 K
            Well    Collision, 1/sec
              W1         1.48226e+10
      global relaxation matrix dimension = 450
      setting global matrices ... done, cpu time[sec] = 0.413821, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.69907, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            260.683      40.7654      10.2149      12.8641      1.38274      166.194      15.4529    0.0290451
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.040753, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003338, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.044166, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.23602e-08  1.23602e-08  5.79665e-10
      low eigenvalue method done, cpu time[sec] = 0.044374, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.24e-08   5.8e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.15e-09   5.8e-10         1
         *Z       ---       ---   7.9e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 5.79664e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.90283e-41   4.4596e-42  1.29852e-43  7.51907e-43  2.40292e-44  7.91903e-44  2.80263e-49  1.67931e-68

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.90447, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 440 K
      Energy reference = 29009 1/cm
      Energy step      = 76 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.006592
         W1 Well: collisional kernel bandwidth = 55
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.461375
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.275171
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.265512
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 1.41473
         W1 Well: minimal relaxation eigenvalue = 0.0862811
         W1 Well: maximal relaxation eigenvalue = 0.978887
         W1 Well:       grid size = 443
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -4659 1/cm
         B1 Barrier:        grid size = 382
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -23 1/cm
         B2 Barrier:        grid size = 379
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 204 1/cm
         B3 Barrier:        grid size = 443
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4659 1/cm
         B4 Barrier:        grid size = 463
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6178 1/cm
         B5 Barrier: nonpositive number of states at -23127 1/cm => truncating
         B5 Barrier:        grid size = 686
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23127 1/cm
         B6 Barrier:        grid size = 362
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1497 1/cm
         B7 Barrier:        grid size = 320
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4688 1/cm
         B8 Barrier:        grid size = 161
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16773 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 2.80723, elapsed time[sec] = 1
      B4 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 443
      MasterEquation::Barrier::truncate: real weight = 3.53062e+47
      MasterEquation::Barrier::truncate: effective weight = 1.22259e+44
      B5 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 443
      MasterEquation::Barrier::truncate: real weight = 4.59753e+46
      MasterEquation::Barrier::truncate: effective weight = 7.61133e+42
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1  -4659  -4659  2.9e+09 6.73e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -23 8.94e+14
         B2    205 1.41e+14
         B3  -4659 3.55e+13
         B4  -4659 4.47e+13
         B5  -4659 4.82e+12
         B6   1498 5.76e+14
         B7   4689 5.42e+13
         B8  16773 1.08e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1   2.6e-08  5.68e-08  9.84e-14  5.05e-16   1.4e-41  5.88e-05      4.17  2.68e+18
          R  3.84e+07         1      2.18  3.78e-06  1.94e-08  5.38e-34  2.26e+03   1.6e+08  1.03e+26
         P1  1.76e+07     0.458         1  1.73e-06  8.88e-09  2.47e-34  1.03e+03  7.33e+07  4.71e+25
         P2  1.02e+13  2.65e+05  5.77e+05         1   0.00513  1.42e-28  5.97e+08  4.23e+13  2.72e+31
         P3  1.98e+15  5.16e+07  1.13e+08       195         1  2.78e-26  1.16e+11  8.26e+15  5.31e+33
         P4  7.14e+40  1.86e+33  4.06e+33  7.03e+27   3.6e+25         1  4.19e+36  2.97e+41  1.91e+59
         P5   1.7e+04  0.000443  0.000967  1.68e-09  8.59e-12  2.38e-37         1  7.09e+04  4.56e+22
         P6      0.24  6.25e-09  1.36e-08  2.36e-14  1.21e-16  3.36e-42  1.41e-05         1  6.42e+17
         P7  3.74e-19  9.73e-27  2.12e-26  3.68e-32  1.88e-34  5.23e-60  2.19e-23  1.56e-18         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  2.17e+19  4.73e+19   8.2e+13   4.2e+11  1.17e-14   4.9e+22  3.47e+27  2.23e+45
          R  4.61e-20         1      2.18  3.78e-06  1.94e-08  5.38e-34  2.26e+03   1.6e+08  1.03e+26
         P1  2.11e-20     0.458         1  1.73e-06  8.88e-09  2.47e-34  1.03e+03  7.33e+07  4.71e+25
         P2  1.22e-14  2.65e+05  5.77e+05         1   0.00513  1.42e-28  5.97e+08  4.23e+13  2.72e+31
         P3  2.38e-12  5.16e+07  1.13e+08       195         1  2.78e-26  1.16e+11  8.26e+15  5.31e+33
         P4  8.57e+13  1.86e+33  4.06e+33  7.03e+27   3.6e+25         1  4.19e+36  2.97e+41  1.91e+59
         P5  2.04e-23  0.000443  0.000967  1.68e-09  8.59e-12  2.38e-37         1  7.09e+04  4.56e+22
         P6  2.88e-28  6.25e-09  1.36e-08  2.36e-14  1.21e-16  3.36e-42  1.41e-05         1  6.42e+17
         P7  4.48e-46  9.73e-27  2.12e-26  3.68e-32  1.88e-34  5.23e-60  2.19e-23  1.56e-18         1
   MasterEquation::set:  done, cpu time[sec] = 2.82068, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 440 K
            Well    Collision, 1/sec
              W1         3.64854e+08
      global relaxation matrix dimension = 443
      setting global matrices ... done, cpu time[sec] = 0.404123, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.48838, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
              10916      1724.38      434.173       545.42       58.817      7035.44       662.01      1.31585
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.166511, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.0033, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.178478, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.18326e-07  3.18326e-07    6.032e-08
      low eigenvalue method done, cpu time[sec] = 0.179707, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.18e-07  6.03e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.07e-08  6.03e-08         1
         *Z       ---       ---     4e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 6.032e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0   1.6151e-38   6.7645e-39  2.07872e-40  1.88711e-39   4.9579e-41  8.58667e-42  3.95161e-48  6.38467e-67

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.79897, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 440 K
            Well    Collision, 1/sec
              W1         1.09456e+09
      global relaxation matrix dimension = 443
      setting global matrices ... done, cpu time[sec] = 0.40331, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.48585, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            3638.67      574.792      144.724      181.807      19.6057      2345.15       220.67     0.438616
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.15606, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00322, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.167592, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.33607e-07  1.33607e-07  2.11397e-08
      low eigenvalue method done, cpu time[sec] = 0.168793, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.34e-07  2.11e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.27e-08  2.11e-08         1
         *Z       ---       ---     4e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.11397e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  6.13621e-39  2.11646e-39  5.93641e-41  4.53685e-40  1.27539e-41  7.04255e-42  3.98504e-48  6.80741e-67

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.78491, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 440 K
            Well    Collision, 1/sec
              W1         1.82427e+09
      global relaxation matrix dimension = 443
      setting global matrices ... done, cpu time[sec] = 0.402197, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.41708, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             2183.2      344.875      86.8346      109.084      11.7634      1407.09      132.402      0.26317
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.222242, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003215, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.2339, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.77084e-08  8.77084e-08  1.20437e-08
      low eigenvalue method done, cpu time[sec] = 0.235135, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.77e-08   1.2e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.29e-09   1.2e-08         1
         *Z       ---       ---     4e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.20437e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  3.60248e-39  1.13485e-39  3.14755e-41  2.24254e-40  6.49748e-42  5.73193e-42  4.02063e-48  6.66629e-67

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.77973, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 440 K
            Well    Collision, 1/sec
              W1         2.55398e+09
      global relaxation matrix dimension = 443
      setting global matrices ... done, cpu time[sec] = 0.401595, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.35985, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1559.43       246.34      62.0247      77.9172      8.40243      1005.06      94.5729     0.187978
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.274979, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003217, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.28698, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.60042e-08  6.60042e-08  8.09063e-09
      low eigenvalue method done, cpu time[sec] = 0.288241, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   6.6e-08  8.09e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.21e-09  8.09e-09         1
         *Z       ---       ---     4e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 8.09063e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.46266e-39  7.32001e-40  2.03044e-41   1.3858e-40  4.09317e-42   4.7824e-42   4.0577e-48  6.73914e-67

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.77456, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 440 K
            Well    Collision, 1/sec
              W1         3.28368e+09
      global relaxation matrix dimension = 443
      setting global matrices ... done, cpu time[sec] = 0.401834, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.50968, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1212.89      191.597      48.2414      60.6023      6.53522      781.715      73.5567     0.146205
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.130578, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00324, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.141907, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.31771e-08  5.31771e-08  5.92577e-09
      low eigenvalue method done, cpu time[sec] = 0.1431, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.32e-08  5.93e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.99e-09  5.93e-09         1
         *Z       ---       ---     4e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 5.92577e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.82529e-39  5.20169e-40  1.44743e-41  9.58286e-41  2.87022e-42  4.07755e-42   4.0955e-48  6.70561e-67

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.78767, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 440 K
            Well    Collision, 1/sec
              W1         3.64854e+09
      global relaxation matrix dimension = 443
      setting global matrices ... done, cpu time[sec] = 0.403454, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.34058, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             1091.6      172.438      43.4173       54.542       5.8817      703.544       66.201     0.131585
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.292628, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003214, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.30416, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.85254e-08  4.85254e-08   5.1817e-09
      low eigenvalue method done, cpu time[sec] = 0.305497, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.85e-08  5.18e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.55e-09  5.18e-09         1
         *Z       ---       ---     4e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 5.1817e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.60364e-39  4.49171e-40  1.25237e-41  8.18978e-41  2.46709e-42  3.79042e-42  4.11443e-48  6.75541e-67

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.77625, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 440 K
            Well    Collision, 1/sec
              W1         5.47281e+09
      global relaxation matrix dimension = 443
      setting global matrices ... done, cpu time[sec] = 0.401158, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.53242, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            727.735      114.958      28.9449      36.3614      3.92113      469.029       44.134    0.0877233
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.107688, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003213, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.119451, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.39441e-08  3.39441e-08   3.0309e-09
      low eigenvalue method done, cpu time[sec] = 0.120983, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.39e-08  3.03e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.16e-09  3.03e-09         1
         *Z       ---       ---     4e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.0309e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  9.53746e-40  2.50555e-40  7.06119e-42  4.41383e-41  1.35836e-42  2.76654e-42  4.20633e-48  6.71236e-67

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.77704, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 440 K
            Well    Collision, 1/sec
              W1         7.29707e+09
      global relaxation matrix dimension = 443
      setting global matrices ... done, cpu time[sec] = 0.401653, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.53931, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            545.801      86.2189      21.7086       27.271      2.94085      351.772      33.1005    0.0657924
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.103497, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003216, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.114419, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.62182e-08  2.62182e-08  2.03269e-09
      low eigenvalue method done, cpu time[sec] = 0.115616, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.62e-08  2.03e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.43e-09  2.03e-09         1
         *Z       ---       ---     4e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.03269e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  6.46354e-40  1.62677e-40  4.63033e-42  2.80946e-41  8.77185e-43  2.14243e-42  4.28847e-48  6.73064e-67

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.78118, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 440 K
            Well    Collision, 1/sec
              W1         9.12134e+09
      global relaxation matrix dimension = 443
      setting global matrices ... done, cpu time[sec] = 0.401585, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.5423, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            436.641      68.9751      17.3669      21.8168      2.35268      281.418      26.4804     0.052634
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.098215, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003205, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.109522, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.14047e-08  2.14047e-08   1.4752e-09
      low eigenvalue method done, cpu time[sec] = 0.11073, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.14e-08  1.48e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.98e-09  1.48e-09         1
         *Z       ---       ---     4e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.4752e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  4.72552e-40  1.15235e-40  3.30853e-42  1.96419e-41  6.19887e-43  1.72558e-42  4.35676e-48  6.74067e-67

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.6423, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 440 K
            Well    Collision, 1/sec
              W1         1.09456e+10
      global relaxation matrix dimension = 443
      setting global matrices ... done, cpu time[sec] = 0.404966, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.55512, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            363.867      57.4792      14.4724      18.1807      1.96057      234.515       22.067    0.0438616
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.087629, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003216, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.099068, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.81077e-08  1.81077e-08  1.12754e-09
      low eigenvalue method done, cpu time[sec] = 0.100253, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.81e-08  1.13e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.67e-09  1.13e-09         1
         *Z       ---       ---     4e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.12754e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  3.63204e-40  8.64115e-41  2.49975e-42  1.45911e-41  4.64391e-43  1.42941e-42  4.40975e-48  6.73782e-67

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.79432, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 440 K
            Well    Collision, 1/sec
              W1         1.27699e+10
      global relaxation matrix dimension = 443
      setting global matrices ... done, cpu time[sec] = 0.405495, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.56187, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            311.886      49.2679      12.4049      15.5834      1.68049      201.013      18.9146    0.0375957
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.081604, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003222, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.093329, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.57037e-08  1.57037e-08  8.94143e-10
      low eigenvalue method done, cpu time[sec] = 0.094538, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.57e-08  8.94e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.45e-09  8.94e-10         1
         *Z       ---       ---     4e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 8.94143e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.89291e-40   6.7462e-41  1.96452e-42  1.13107e-41  3.62478e-43   1.2094e-42   4.4476e-48  6.73031e-67

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.79493, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 440 K
            Well    Collision, 1/sec
              W1         1.45941e+10
      global relaxation matrix dimension = 443
      setting global matrices ... done, cpu time[sec] = 0.405906, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.55665, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
              272.9      43.1094      10.8543      13.6355      1.47042      175.886      16.5503    0.0328962
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.08616, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003212, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.097856, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.38709e-08  1.38709e-08  7.28894e-10
      low eigenvalue method done, cpu time[sec] = 0.099055, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.39e-08  7.29e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.28e-09  7.29e-10         1
         *Z       ---       ---     4e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 7.28894e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.36675e-40  5.42774e-41  1.58986e-42  9.04951e-42  2.91698e-43  1.04036e-42  4.47128e-48  6.71745e-67

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.78886, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 450 K
      Energy reference = 29288 1/cm
      Energy step      = 78 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.007093
         W1 Well: collisional kernel bandwidth = 55
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.453774
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.266822
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.217932
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 1.35293
         W1 Well: minimal relaxation eigenvalue = 0.0856509
         W1 Well: maximal relaxation eigenvalue = 0.977975
         W1 Well:       grid size = 436
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -4720 1/cm
         B1 Barrier:        grid size = 376
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -40 1/cm
         B2 Barrier:        grid size = 373
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 193 1/cm
         B3 Barrier:        grid size = 435
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4643 1/cm
         B4 Barrier:        grid size = 455
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6202 1/cm
         B5 Barrier: nonpositive number of states at -23129 1/cm => truncating
         B5 Barrier:        grid size = 672
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23129 1/cm
         B6 Barrier:        grid size = 357
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1441 1/cm
         B7 Barrier:        grid size = 315
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4717 1/cm
         B8 Barrier:        grid size = 161
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16729 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 2.67791, elapsed time[sec] = 1
      B4 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 436
      MasterEquation::Barrier::truncate: real weight = 9.73524e+46
      MasterEquation::Barrier::truncate: effective weight = 3.45984e+43
      B5 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 436
      MasterEquation::Barrier::truncate: real weight = 9.50838e+45
      MasterEquation::Barrier::truncate: effective weight = 1.9415e+42
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1  -4720  -4720 2.84e+09 7.05e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -40 9.65e+14
         B2    194 1.54e+14
         B3  -4643  3.9e+13
         B4  -4720 4.88e+13
         B5  -4720 5.28e+12
         B6   1442 6.29e+14
         B7   4718 5.99e+13
         B8  16730 1.26e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1     2e-08  4.29e-08  1.06e-13  6.11e-16   6.4e-41  4.08e-05      2.32  6.26e+17
          R  5.01e+07         1      2.15  5.31e-06  3.06e-08  3.21e-33  2.05e+03  1.16e+08  3.14e+25
         P1  2.33e+07     0.465         1  2.47e-06  1.42e-08  1.49e-33       951   5.4e+07  1.46e+25
         P2  9.44e+12  1.88e+05  4.05e+05         1   0.00577  6.04e-28  3.85e+08  2.19e+13  5.91e+30
         P3  1.64e+15  3.26e+07  7.02e+07       173         1  1.05e-25  6.68e+10  3.79e+15  1.02e+33
         P4  1.56e+40  3.12e+32  6.71e+32  1.66e+27  9.56e+24         1  6.38e+35  3.62e+40  9.78e+57
         P5  2.45e+04  0.000489   0.00105   2.6e-09   1.5e-11  1.57e-36         1  5.68e+04  1.53e+22
         P6     0.432  8.61e-09  1.85e-08  4.57e-14  2.64e-16  2.76e-41  1.76e-05         1   2.7e+17
         P7   1.6e-18  3.19e-26  6.86e-26  1.69e-31  9.77e-34  1.02e-58  6.52e-23   3.7e-18         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  2.09e+18  4.49e+18  1.11e+13  6.39e+10  6.69e-15  4.27e+21  2.42e+26  6.54e+43
          R  4.79e-19         1      2.15  5.31e-06  3.06e-08  3.21e-33  2.05e+03  1.16e+08  3.14e+25
         P1  2.23e-19     0.465         1  2.47e-06  1.42e-08  1.49e-33       951   5.4e+07  1.46e+25
         P2  9.03e-14  1.88e+05  4.05e+05         1   0.00577  6.04e-28  3.85e+08  2.19e+13  5.91e+30
         P3  1.56e-11  3.26e+07  7.02e+07       173         1  1.05e-25  6.68e+10  3.79e+15  1.02e+33
         P4   1.5e+14  3.12e+32  6.71e+32  1.66e+27  9.56e+24         1  6.38e+35  3.62e+40  9.78e+57
         P5  2.34e-22  0.000489   0.00105   2.6e-09   1.5e-11  1.57e-36         1  5.68e+04  1.53e+22
         P6  4.13e-27  8.61e-09  1.85e-08  4.57e-14  2.64e-16  2.76e-41  1.76e-05         1   2.7e+17
         P7  1.53e-44  3.19e-26  6.86e-26  1.69e-31  9.77e-34  1.02e-58  6.52e-23   3.7e-18         1
   MasterEquation::set:  done, cpu time[sec] = 2.6913, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 450 K
            Well    Collision, 1/sec
              W1         3.59373e+08
      global relaxation matrix dimension = 436
      setting global matrices ... done, cpu time[sec] = 0.391912, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.17378, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            11418.6      1822.01      460.937      577.628      62.4898      7438.76      708.236      1.48705
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.422631, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003112, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.43415, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.70571e-07  3.70571e-07  7.59407e-08
      low eigenvalue method done, cpu time[sec] = 0.435396, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.71e-07  7.59e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.56e-08  7.59e-08         1
         *Z       ---       ---  2.01e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 7.59407e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0    1.673e-37   6.9292e-38  2.11309e-39  1.89606e-38  5.00204e-40   9.5624e-41  5.56769e-47  2.39131e-65

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.70692, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 450 K
            Well    Collision, 1/sec
              W1         1.07812e+09
      global relaxation matrix dimension = 436
      setting global matrices ... done, cpu time[sec] = 0.390912, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.23461, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             3806.2      607.338      153.646      192.543      20.8299      2479.59      236.079     0.495683
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.383351, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003089, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.394742, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.58394e-07  1.58394e-07  2.71442e-08
      low eigenvalue method done, cpu time[sec] = 0.395954, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.58e-07  2.71e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.5e-08  2.71e-08         1
         *Z       ---       ---  2.01e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.71442e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  6.47893e-38  2.20428e-38  6.16368e-40   4.6539e-39  1.31487e-40  7.89467e-41  5.61449e-47   2.2982e-65

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.71974, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 450 K
            Well    Collision, 1/sec
              W1         1.79686e+09
      global relaxation matrix dimension = 436
      setting global matrices ... done, cpu time[sec] = 0.390135, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.25384, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2283.72      364.403      92.1873      115.526       12.498      1487.75      141.647      0.29741
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.366737, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003072, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.378115, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.04737e-07  1.04737e-07  1.56191e-08
      low eigenvalue method done, cpu time[sec] = 0.379325, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.05e-07  1.56e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.85e-09  1.56e-08         1
         *Z       ---       ---  2.01e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.56191e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0   3.8411e-38  1.19209e-38  3.30237e-40  2.32336e-39  6.76884e-41  6.46368e-41  5.66428e-47  2.29202e-65

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.71981, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 450 K
            Well    Collision, 1/sec
              W1         2.51561e+09
      global relaxation matrix dimension = 436
      setting global matrices ... done, cpu time[sec] = 0.391526, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.20997, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1631.23      260.288      65.8481      82.5183      8.92711      1062.68      101.177     0.212435
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.40575, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003099, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.417105, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   7.9159e-08   7.9159e-08  1.05637e-08
      low eigenvalue method done, cpu time[sec] = 0.418306, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.92e-08  1.06e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.41e-09  1.06e-08         1
         *Z       ---       ---  2.01e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.05637e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.64341e-38  7.73425e-39  2.14539e-40  1.44528e-39  4.29401e-41   5.4192e-41  5.71608e-47  2.29156e-65

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.71948, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 450 K
            Well    Collision, 1/sec
              W1         3.23435e+09
      global relaxation matrix dimension = 436
      setting global matrices ... done, cpu time[sec] = 0.390136, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.26615, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1268.73      202.446      51.2152      64.1809      6.94331      826.528      78.6929     0.165228
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.352948, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003084, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.364302, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   6.3965e-08   6.3965e-08    7.777e-09
      low eigenvalue method done, cpu time[sec] = 0.365544, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   6.4e-08  7.78e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.97e-09  7.78e-09         1
         *Z       ---       ---  2.01e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 7.777e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.96929e-38  5.52053e-39  1.53755e-40  1.00439e-39  3.02694e-41  4.63936e-41  5.76881e-47  2.29496e-65

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.71894, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 450 K
            Well    Collision, 1/sec
              W1         3.59373e+09
      global relaxation matrix dimension = 436
      setting global matrices ... done, cpu time[sec] = 0.389583, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.25636, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1141.86      182.201      46.0937      57.7628      6.24898      743.876      70.8236     0.148705
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.352774, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003088, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.363827, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.84386e-08  5.84386e-08  6.81528e-09
      low eigenvalue method done, cpu time[sec] = 0.365042, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.84e-08  6.82e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.45e-09  6.82e-09         1
         *Z       ---       ---  2.01e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 6.81528e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.73388e-38  4.77598e-39  1.33333e-40  8.60171e-40  2.60755e-41  4.32048e-41   5.7952e-47  2.29244e-65

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.64199, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 450 K
            Well    Collision, 1/sec
              W1         5.39059e+09
      global relaxation matrix dimension = 436
      setting global matrices ... done, cpu time[sec] = 0.387539, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.3029, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             761.24      121.468      30.7291      38.5085      4.16598      495.917      47.2157    0.0991365
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.33673, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003105, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.346793, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.10501e-08  4.10501e-08  4.02013e-09
      low eigenvalue method done, cpu time[sec] = 0.34735, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.11e-08  4.02e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.81e-09  4.02e-09         1
         *Z       ---       ---  2.01e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 4.02013e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.03989e-38  2.68352e-39   7.5833e-41  4.67303e-40  1.44797e-41  3.17708e-41  5.92319e-47  2.29195e-65

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.73925, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 450 K
            Well    Collision, 1/sec
              W1         7.18745e+09
      global relaxation matrix dimension = 436
      setting global matrices ... done, cpu time[sec] = 0.389927, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.26591, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             570.93      91.1007      23.0468      28.8814      3.12449      371.938      35.4118    0.0743524
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.351213, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003109, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.361893, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.17904e-08  3.17904e-08  2.71232e-09
      low eigenvalue method done, cpu time[sec] = 0.362423, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.18e-08  2.71e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.94e-09  2.71e-09         1
         *Z       ---       ---  2.01e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.71232e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  7.08953e-39   1.7513e-39  5.00342e-41  2.99117e-40  9.40687e-42  2.47449e-41  6.03754e-47  2.28703e-65

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.71872, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 450 K
            Well    Collision, 1/sec
              W1         8.98432e+09
      global relaxation matrix dimension = 436
      setting global matrices ... done, cpu time[sec] = 0.390329, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.27944, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            456.744      72.8806      18.4375      23.1051      2.49959       297.55      28.3294    0.0594819
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.331769, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00313, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.342392, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   2.6002e-08   2.6002e-08  1.97755e-09
      low eigenvalue method done, cpu time[sec] = 0.342988, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   2.6e-08  1.98e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   2.4e-09  1.98e-09         1
         *Z       ---       ---  2.01e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.97755e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  5.20717e-39  1.24548e-39   3.5921e-41  2.10023e-40  6.67836e-42  2.00228e-41  6.13275e-47  2.28859e-65

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.71837, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 450 K
            Well    Collision, 1/sec
              W1         1.07812e+10
      global relaxation matrix dimension = 436
      setting global matrices ... done, cpu time[sec] = 0.394377, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.26872, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             380.62      60.7338      15.3646      19.2543      2.08299      247.959      23.6079    0.0495683
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.334009, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003082, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.344676, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.20276e-08  2.20276e-08  1.51719e-09
      low eigenvalue method done, cpu time[sec] = 0.345208, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   2.2e-08  1.52e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.02e-09  1.52e-09         1
         *Z       ---       ---  2.01e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.51719e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  4.01728e-39   9.3694e-40  2.72445e-41  1.56556e-40  5.02179e-42  1.66508e-41  6.20692e-47  2.29564e-65

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.55005, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 450 K
            Well    Collision, 1/sec
              W1          1.2578e+10
      global relaxation matrix dimension = 436
      setting global matrices ... done, cpu time[sec] = 0.390017, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.29612, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            326.246      52.0576      13.1696      16.5037      1.78542      212.536      20.2353    0.0424871
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.323663, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003098, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.335015, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.91241e-08  1.91241e-08  1.20691e-09
      low eigenvalue method done, cpu time[sec] = 0.336112, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.91e-08  1.21e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.75e-09  1.21e-09         1
         *Z       ---       ---  2.01e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.20691e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  3.20982e-39  7.33427e-40    2.148e-41  1.21708e-40  3.93194e-42  1.41351e-41  6.26027e-47  2.29196e-65

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.72358, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 450 K
            Well    Collision, 1/sec
              W1         1.43749e+10
      global relaxation matrix dimension = 436
      setting global matrices ... done, cpu time[sec] = 0.389604, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.18323, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            285.465      45.5504      11.5234      14.4407      1.56224      185.969      17.7059    0.0371762
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.43095, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003098, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.442188, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.69072e-08  1.69072e-08   9.8651e-10
      low eigenvalue method done, cpu time[sec] = 0.443292, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.69e-08  9.87e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.55e-09  9.87e-10         1
         *Z       ---       ---  2.01e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 9.8651e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0   2.6331e-39  5.91432e-40  1.74313e-41  9.76154e-41  3.17258e-42   1.2195e-41  6.29415e-47  2.29084e-65

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.71338, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 460 K
      Energy reference = 29565 1/cm
      Energy step      = 79 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -87.9 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.006512
         W1 Well: collisional kernel bandwidth = 55
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.451999
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.26712
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.259007
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 1.36195
         W1 Well: minimal relaxation eigenvalue = 0.0850537
         W1 Well: maximal relaxation eigenvalue = 0.980128
         W1 Well:       grid size = 435
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -4800 1/cm
         B1 Barrier:        grid size = 375
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -60 1/cm
         B2 Barrier:        grid size = 372
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 176 1/cm
         B3 Barrier:        grid size = 433
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4642 1/cm
         B4 Barrier:        grid size = 453
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6222 1/cm
         B5 Barrier: nonpositive number of states at -23207 1/cm => truncating
         B5 Barrier:        grid size = 668
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23207 1/cm
         B6 Barrier:        grid size = 356
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1440 1/cm
         B7 Barrier:        grid size = 315
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4679 1/cm
         B8 Barrier:        grid size = 162
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16766 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 2.73181, elapsed time[sec] = 0
      B4 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 435
      MasterEquation::Barrier::truncate: real weight = 2.84691e+46
      MasterEquation::Barrier::truncate: effective weight = 1.02474e+43
      B5 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 435
      MasterEquation::Barrier::truncate: real weight = 2.19782e+45
      MasterEquation::Barrier::truncate: effective weight = 5.2483e+41
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1  -4800  -4800 2.77e+09 7.39e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -60 1.04e+15
         B2    177 1.68e+14
         B3  -4642 4.27e+13
         B4  -4800 5.33e+13
         B5  -4800 5.79e+12
         B6   1441 6.86e+14
         B7   4680 6.61e+13
         B8  16767 1.46e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  1.64e-08  3.48e-08  1.21e-13  7.79e-16   2.9e-40  3.05e-05       1.4  1.65e+17
          R   6.1e+07         1      2.12  7.35e-06  4.75e-08  1.77e-32  1.86e+03  8.54e+07  1.01e+25
         P1  2.87e+07     0.471         1  3.46e-06  2.24e-08  8.32e-33       877  4.02e+07  4.75e+24
         P2   8.3e+12  1.36e+05  2.89e+05         1   0.00647  2.41e-27  2.53e+08  1.16e+13  1.37e+30
         P3  1.28e+15  2.11e+07  4.47e+07       155         1  3.72e-25  3.92e+10   1.8e+15  2.12e+32
         P4  3.45e+39  5.66e+31   1.2e+32  4.16e+26  2.69e+24         1  1.05e+35  4.83e+39   5.7e+56
         P5  3.27e+04  0.000537   0.00114  3.95e-09  2.55e-11   9.5e-36         1  4.59e+04  5.41e+21
         P6     0.714  1.17e-08  2.49e-08   8.6e-14  5.56e-16  2.07e-40  2.18e-05         1  1.18e+17
         P7  6.05e-18  9.92e-26  2.11e-25  7.29e-31  4.71e-33  1.75e-57  1.85e-22  8.48e-18         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  2.22e+17  4.71e+17  1.63e+12  1.05e+10  3.92e-15  4.13e+20   1.9e+25  2.24e+42
          R  4.51e-18         1      2.12  7.35e-06  4.75e-08  1.77e-32  1.86e+03  8.54e+07  1.01e+25
         P1  2.12e-18     0.471         1  3.46e-06  2.24e-08  8.32e-33       877  4.02e+07  4.75e+24
         P2  6.14e-13  1.36e+05  2.89e+05         1   0.00647  2.41e-27  2.53e+08  1.16e+13  1.37e+30
         P3  9.49e-11  2.11e+07  4.47e+07       155         1  3.72e-25  3.92e+10   1.8e+15  2.12e+32
         P4  2.55e+14  5.66e+31   1.2e+32  4.16e+26  2.69e+24         1  1.05e+35  4.83e+39   5.7e+56
         P5  2.42e-21  0.000537   0.00114  3.95e-09  2.55e-11   9.5e-36         1  4.59e+04  5.41e+21
         P6  5.28e-26  1.17e-08  2.49e-08   8.6e-14  5.56e-16  2.07e-40  2.18e-05         1  1.18e+17
         P7  4.47e-43  9.92e-26  2.11e-25  7.29e-31  4.71e-33  1.75e-57  1.85e-22  8.48e-18         1
   MasterEquation::set:  done, cpu time[sec] = 2.74579, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 460 K
            Well    Collision, 1/sec
              W1         3.54106e+08
      global relaxation matrix dimension = 435
      setting global matrices ... done, cpu time[sec] = 0.388143, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.14776, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            11935.3      1923.64      488.923      611.226      66.3334      7858.07      756.874      1.67657
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.422691, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003112, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.433372, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.10595e-07  4.10595e-07  9.02145e-08
      low eigenvalue method done, cpu time[sec] = 0.434486, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.11e-07  9.02e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.92e-08  9.02e-08         1
         *Z       ---       ---  1.07e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 9.02145e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.56362e-36  6.40553e-37  1.93969e-38   1.7213e-37  4.55917e-39   9.5685e-40  7.02555e-46  6.70606e-64

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.66786, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 460 K
            Well    Collision, 1/sec
              W1         1.06232e+09
      global relaxation matrix dimension = 435
      setting global matrices ... done, cpu time[sec] = 0.388224, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.19177, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            3978.44      641.212      162.974      203.742      22.1111      2619.36      252.291     0.558857
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.37983, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003061, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.390303, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.78613e-07  1.78613e-07  3.28656e-08
      low eigenvalue method done, cpu time[sec] = 0.390876, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.79e-07  3.29e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.68e-08  3.29e-08         1
         *Z       ---       ---  1.07e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.28656e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0   6.1681e-37  2.07066e-37  5.77501e-39  4.31042e-38  1.22373e-39  7.95514e-40  7.08454e-46  6.65528e-64

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.6692, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 460 K
            Well    Collision, 1/sec
              W1         1.77053e+09
      global relaxation matrix dimension = 435
      setting global matrices ... done, cpu time[sec] = 0.388101, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.18742, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2387.06      384.727      97.7847      122.245      13.2667      1571.61      151.375     0.335314
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.379153, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003075, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.390296, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.18937e-07  1.18937e-07  1.90942e-08
      low eigenvalue method done, cpu time[sec] = 0.391386, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.19e-07  1.91e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.11e-08  1.91e-08         1
         *Z       ---       ---  1.07e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.90942e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  3.69163e-37  1.12917e-37   3.1257e-39  2.17275e-38  6.36383e-40  6.55196e-40  7.14725e-46  6.68661e-64

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.66514, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 460 K
            Well    Collision, 1/sec
              W1         2.47874e+09
      global relaxation matrix dimension = 435
      setting global matrices ... done, cpu time[sec] = 0.388706, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.192, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1705.05      274.805      69.8462       87.318       9.4762      1122.58      108.125      0.23951
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.372302, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003057, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.383492, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.02679e-08   9.0268e-08  1.29992e-08
      low eigenvalue method done, cpu time[sec] = 0.384561, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.03e-08   1.3e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.41e-09   1.3e-08         1
         *Z       ---       ---  1.07e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.29992e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.55711e-37  7.36788e-38  2.04462e-39  1.36035e-38  4.06467e-40  5.51964e-40  7.21238e-46  6.69805e-64

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.66333, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 460 K
            Well    Collision, 1/sec
              W1         3.18696e+09
      global relaxation matrix dimension = 435
      setting global matrices ... done, cpu time[sec] = 0.389174, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.197, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1326.15      213.737      54.3248       67.914      7.37038      873.119      84.0971     0.186286
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.365759, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003053, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.376977, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.31527e-08  7.31527e-08  9.61802e-09
      low eigenvalue method done, cpu time[sec] = 0.378107, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.32e-08  9.62e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.79e-09  9.62e-09         1
         *Z       ---       ---  1.07e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 9.61802e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.91446e-37  5.28189e-38  1.47298e-39  9.49973e-39  2.88004e-40  4.74429e-40  7.27857e-46  6.69169e-64

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.66262, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 460 K
            Well    Collision, 1/sec
              W1         3.54106e+09
      global relaxation matrix dimension = 435
      setting global matrices ... done, cpu time[sec] = 0.388989, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.20545, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1193.53      192.364      48.8923      61.1226      6.63334      785.807      75.6874     0.167657
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.357297, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003075, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.368545, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.69094e-08  6.69095e-08  8.44651e-09
      low eigenvalue method done, cpu time[sec] = 0.369643, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.69e-08  8.45e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.21e-09  8.45e-09         1
         *Z       ---       ---  1.07e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 8.44651e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.68915e-37  4.57792e-38  1.28016e-39  8.15229e-39  2.48638e-40  4.42606e-40  7.31166e-46  6.68621e-64

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.52746, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 460 K
            Well    Collision, 1/sec
              W1         5.31159e+09
      global relaxation matrix dimension = 435
      setting global matrices ... done, cpu time[sec] = 0.387539, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.2711, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            795.688      128.242      32.5949      40.7484      4.42223      523.871      50.4583     0.111771
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.308054, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003057, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.31925, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.71935e-08  4.71935e-08  5.02348e-09
      low eigenvalue method done, cpu time[sec] = 0.320352, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.72e-08  5.02e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.35e-09  5.02e-09         1
         *Z       ---       ---  1.07e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 5.02348e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.02137e-37  2.59062e-38   7.3431e-40  4.46379e-39  1.39227e-40  3.27863e-40  7.47177e-46  6.68123e-64

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.67379, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 460 K
            Well    Collision, 1/sec
              W1         7.08213e+09
      global relaxation matrix dimension = 435
      setting global matrices ... done, cpu time[sec] = 0.386958, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.23669, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            596.766      96.1818      24.4462      30.5613      3.31667      392.903      37.8437    0.0838286
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.357749, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003095, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.369208, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.66429e-08  3.66429e-08  3.40921e-09
      low eigenvalue method done, cpu time[sec] = 0.370348, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.66e-08  3.41e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.37e-09  3.41e-09         1
         *Z       ---       ---  1.07e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.40921e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  7.00412e-38  1.69926e-38  4.87435e-40  2.87309e-39  9.09862e-41  2.56792e-40  7.61447e-46  6.68864e-64

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.68662, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 460 K
            Well    Collision, 1/sec
              W1         8.85266e+09
      global relaxation matrix dimension = 435
      setting global matrices ... done, cpu time[sec] = 0.388327, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.25031, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            477.413      76.9454      19.5569       24.449      2.65334      314.323       30.275    0.0670629
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.339639, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003051, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.350788, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.00258e-08  3.00258e-08  2.49696e-09
      low eigenvalue method done, cpu time[sec] = 0.351911, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0     3e-08   2.5e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.75e-09   2.5e-09         1
         *Z       ---       ---  1.07e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.49696e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  5.16779e-38   1.2132e-38  3.51584e-40   2.0259e-39  6.48902e-41  2.08732e-40  7.73318e-46  6.69166e-64

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.68704, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 460 K
            Well    Collision, 1/sec
              W1         1.06232e+10
      global relaxation matrix dimension = 435
      setting global matrices ... done, cpu time[sec] = 0.388776, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.17806, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            397.844      64.1212      16.2974      20.3742      2.21111      261.936      25.2291    0.0558857
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.390594, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003074, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.402015, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.54715e-08  2.54716e-08  1.92276e-09
      low eigenvalue method done, cpu time[sec] = 0.403121, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.55e-08  1.92e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.33e-09  1.92e-09         1
         *Z       ---       ---  1.07e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.92276e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0   4.0016e-38  9.15543e-39  2.67675e-40  1.51534e-39  4.89744e-41  1.74241e-40   7.8257e-46  6.68958e-64

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.66822, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 460 K
            Well    Collision, 1/sec
              W1         1.23937e+10
      global relaxation matrix dimension = 435
      setting global matrices ... done, cpu time[sec] = 0.387417, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.24419, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            341.009       54.961      13.9692      17.4636      1.89524      224.516       21.625     0.047902
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.328036, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00307, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.339219, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.21382e-08  2.21382e-08  1.53429e-09
      low eigenvalue method done, cpu time[sec] = 0.340315, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.21e-08  1.53e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.02e-09  1.53e-09         1
         *Z       ---       ---  1.07e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.53429e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0   3.2072e-38  7.18575e-39  2.11711e-40  1.18141e-39  3.84642e-41    1.484e-40  7.89243e-46  6.68697e-64

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.6719, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 460 K
            Well    Collision, 1/sec
              W1         1.41643e+10
      global relaxation matrix dimension = 435
      setting global matrices ... done, cpu time[sec] = 0.387248, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.26138, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            298.383      48.0909      12.2231      15.2806      1.65833      196.452      18.9219    0.0419143
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.308135, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003095, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.319083, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.95892e-08  1.95892e-08  1.25744e-09
      low eigenvalue method done, cpu time[sec] = 0.320183, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.96e-08  1.26e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.78e-09  1.26e-09         1
         *Z       ---       ---  1.07e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.25744e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.63795e-38  5.80769e-39  1.72276e-40   9.4986e-40  3.11179e-41    1.284e-40  7.93508e-46  6.68599e-64

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.66695, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 470 K
      Energy reference = 29843 1/cm
      Energy step      = 81 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -87.8 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.007115
         W1 Well: collisional kernel bandwidth = 55
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.445883
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.256633
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.246689
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 1.30907
         W1 Well: minimal relaxation eigenvalue = 0.084457
         W1 Well: maximal relaxation eigenvalue = 0.979215
         W1 Well:       grid size = 428
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -4825 1/cm
         B1 Barrier:        grid size = 369
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -45 1/cm
         B2 Barrier:        grid size = 366
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 197 1/cm
         B3 Barrier:        grid size = 426
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4662 1/cm
         B4 Barrier:        grid size = 445
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6202 1/cm
         B5 Barrier: nonpositive number of states at -23131 1/cm => truncating
         B5 Barrier:        grid size = 654
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23131 1/cm
         B6 Barrier:        grid size = 350
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1492 1/cm
         B7 Barrier:        grid size = 311
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4651 1/cm
         B8 Barrier:        grid size = 162
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16721 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 2.64483, elapsed time[sec] = 0
      B4 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 428
      MasterEquation::Barrier::truncate: real weight = 8.79602e+45
      MasterEquation::Barrier::truncate: effective weight = 3.24628e+42
      B5 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 428
      MasterEquation::Barrier::truncate: real weight = 5.60531e+44
      MasterEquation::Barrier::truncate: effective weight = 1.51847e+41
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1  -4825  -4825 2.75e+09 7.74e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -45 1.12e+15
         B2    198 1.83e+14
         B3  -4662 4.67e+13
         B4  -4825 5.82e+13
         B5  -4825 6.34e+12
         B6   1493 7.47e+14
         B7   4652 7.28e+13
         B8  16721  1.7e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  1.15e-08  2.42e-08  1.16e-13  8.33e-16  1.05e-39  1.96e-05     0.734  3.92e+16
          R  8.67e+07         1       2.1     1e-05  7.23e-08  9.06e-32   1.7e+03  6.37e+07   3.4e+24
         P1  4.14e+07     0.477         1  4.78e-06  3.45e-08  4.32e-32       811  3.04e+07  1.62e+24
         P2  8.65e+12  9.97e+04  2.09e+05         1   0.00721  9.04e-27   1.7e+08  6.35e+12  3.39e+29
         P3   1.2e+15  1.38e+07   2.9e+07       139         1  1.25e-24  2.35e+10  8.81e+14   4.7e+31
         P4  9.57e+38   1.1e+31  2.31e+31  1.11e+26  7.97e+23         1  1.88e+34  7.02e+38  3.75e+55
         P5   5.1e+04  0.000588   0.00123   5.9e-09  4.25e-11  5.33e-35         1  3.74e+04     2e+21
         P6      1.36  1.57e-08  3.29e-08  1.57e-13  1.13e-15  1.42e-39  2.67e-05         1  5.34e+16
         P7  2.55e-17  2.94e-25  6.17e-25  2.95e-30  2.13e-32  2.67e-56     5e-22  1.87e-17         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  2.59e+16  5.44e+16   2.6e+11  1.87e+09  2.35e-15  4.41e+19  1.65e+24  8.82e+40
          R  3.85e-17         1       2.1     1e-05  7.23e-08  9.06e-32   1.7e+03  6.37e+07   3.4e+24
         P1  1.84e-17     0.477         1  4.78e-06  3.45e-08  4.32e-32       811  3.04e+07  1.62e+24
         P2  3.84e-12  9.97e+04  2.09e+05         1   0.00721  9.04e-27   1.7e+08  6.35e+12  3.39e+29
         P3  5.33e-10  1.38e+07   2.9e+07       139         1  1.25e-24  2.35e+10  8.81e+14   4.7e+31
         P4  4.25e+14   1.1e+31  2.31e+31  1.11e+26  7.97e+23         1  1.88e+34  7.02e+38  3.75e+55
         P5  2.27e-20  0.000588   0.00123   5.9e-09  4.25e-11  5.33e-35         1  3.74e+04     2e+21
         P6  6.05e-25  1.57e-08  3.29e-08  1.57e-13  1.13e-15  1.42e-39  2.67e-05         1  5.34e+16
         P7  1.13e-41  2.94e-25  6.17e-25  2.95e-30  2.13e-32  2.67e-56     5e-22  1.87e-17         1
   MasterEquation::set:  done, cpu time[sec] = 2.65844, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 470 K
            Well    Collision, 1/sec
              W1         3.49041e+08
      global relaxation matrix dimension = 428
      setting global matrices ... done, cpu time[sec] = 0.376526, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.88519, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            12466.3      2029.33      518.172      646.255      70.3534      8293.75      808.012      1.88526
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.649994, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.002984, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.660488, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   5.2696e-07   5.2696e-07  1.23689e-07
      low eigenvalue method done, cpu time[sec] = 0.661595, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.27e-07  1.24e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.02e-08  1.24e-07         1
         *Z       ---       ---   5.4e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.23689e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.32773e-35  5.37851e-36    1.619e-37  1.42167e-36  3.78001e-38  8.64687e-39  7.93045e-45  1.66636e-62

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.60178, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 470 K
            Well    Collision, 1/sec
              W1         1.04712e+09
      global relaxation matrix dimension = 428
      setting global matrices ... done, cpu time[sec] = 0.37573, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.95593, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            4155.42      676.442      172.724      215.418      23.4511      2764.58      269.337     0.628421
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.572254, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002954, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.583149, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.33276e-07  2.33276e-07  4.59041e-08
      low eigenvalue method done, cpu time[sec] = 0.584257, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.33e-07  4.59e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.19e-08  4.59e-08         1
         *Z       ---       ---   5.4e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 4.59041e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0   5.3323e-36  1.76649e-36   4.9174e-38  3.63014e-37   1.0354e-38  7.24834e-39  7.99673e-45  1.68942e-62

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.59008, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 470 K
            Well    Collision, 1/sec
              W1          1.7452e+09
      global relaxation matrix dimension = 428
      setting global matrices ... done, cpu time[sec] = 0.377124, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.94354, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2493.25      405.865      103.634      129.251      14.0707      1658.75      161.602     0.377053
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.585912, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002977, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.596827, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.56434e-07  1.56434e-07  2.69214e-08
      low eigenvalue method done, cpu time[sec] = 0.597905, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.56e-07  2.69e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.46e-08  2.69e-08         1
         *Z       ---       ---   5.4e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.69214e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  3.22102e-36  9.71228e-37  2.68807e-38   1.8472e-37  5.43809e-39  6.00752e-39  8.06713e-45  1.69295e-62

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.59034, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 470 K
            Well    Collision, 1/sec
              W1         2.44329e+09
      global relaxation matrix dimension = 428
      setting global matrices ... done, cpu time[sec] = 0.375825, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.95493, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1780.89      289.904      74.0245      92.3221      10.0505      1184.82       115.43     0.269323
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.57231, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003088, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.583331, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.19229e-07  1.19229e-07  1.84462e-08
      low eigenvalue method done, cpu time[sec] = 0.584439, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.19e-07  1.84e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.11e-08  1.84e-08         1
         *Z       ---       ---   5.4e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.84462e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.24532e-36  6.37304e-37  1.77024e-38  1.16388e-37  3.49666e-39  5.08606e-39  8.14014e-45   1.6898e-62

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.46067, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 470 K
            Well    Collision, 1/sec
              W1         3.14137e+09
      global relaxation matrix dimension = 428
      setting global matrices ... done, cpu time[sec] = 0.374467, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.96835, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1385.14      225.481      57.5746      71.8061      7.81704      921.528      89.7791     0.209474
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.543987, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002966, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.554933, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.69065e-08  9.69065e-08  1.37153e-08
      low eigenvalue method done, cpu time[sec] = 0.556131, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.69e-08  1.37e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.97e-09  1.37e-08         1
         *Z       ---       ---   5.4e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.37153e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.68921e-36  4.58834e-37  1.28185e-38  8.16664e-38  2.49011e-39  4.38944e-39  8.21422e-45  1.68942e-62

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.57076, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 470 K
            Well    Collision, 1/sec
              W1         3.49041e+09
      global relaxation matrix dimension = 428
      setting global matrices ... done, cpu time[sec] = 0.377138, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.91373, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1246.63      202.933      51.8172      64.6255      7.03534      829.375      80.8012     0.188526
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.595244, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002955, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.606204, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.87402e-08  8.87402e-08  1.20698e-08
      low eigenvalue method done, cpu time[sec] = 0.607386, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.87e-08  1.21e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   8.2e-09  1.21e-08         1
         *Z       ---       ---   5.4e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.20698e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.49348e-36  3.98404e-37  1.11646e-38  7.02239e-38  2.15434e-39  4.10237e-39  8.25123e-45  1.69179e-62

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.57149, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 470 K
            Well    Collision, 1/sec
              W1         5.23561e+09
      global relaxation matrix dimension = 428
      setting global matrices ... done, cpu time[sec] = 0.376504, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.96846, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            831.084      135.288      34.5448      43.0836      4.69022      552.917      53.8675     0.125684
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.552249, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002959, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.563324, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.28556e-08  6.28556e-08  7.23665e-09
      low eigenvalue method done, cpu time[sec] = 0.564652, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.29e-08  7.24e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.78e-09  7.24e-09         1
         *Z       ---       ---   5.4e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 7.23665e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  9.10323e-37   2.2705e-37  6.45799e-39  3.87504e-38  1.21631e-39  3.06127e-39  8.43002e-45  1.69056e-62

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.58182, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 470 K
            Well    Collision, 1/sec
              W1         6.98082e+09
      global relaxation matrix dimension = 428
      setting global matrices ... done, cpu time[sec] = 0.375358, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.97582, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            623.313      101.466      25.9086      32.3127      3.51767      414.688      40.4006    0.0942632
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.545601, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002958, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.556565, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.89348e-08  4.89348e-08  4.93966e-09
      low eigenvalue method done, cpu time[sec] = 0.557783, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.89e-08  4.94e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.48e-09  4.94e-09         1
         *Z       ---       ---   5.4e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 4.93966e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  6.27857e-37  1.49678e-37  4.31251e-39  2.50786e-38  7.99535e-40   2.4111e-39  8.58921e-45  1.69109e-62

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.58201, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 470 K
            Well    Collision, 1/sec
              W1         8.72602e+09
      global relaxation matrix dimension = 428
      setting global matrices ... done, cpu time[sec] = 0.376516, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.95775, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             498.65      81.1731      20.7269      25.8502      2.81413       331.75      32.3205    0.0754106
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.56317, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00296, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.57392, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.01748e-08  4.01748e-08  3.63414e-09
      low eigenvalue method done, cpu time[sec] = 0.575137, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.02e-08  3.63e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.67e-09  3.63e-09         1
         *Z       ---       ---   5.4e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.63414e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  4.65319e-37   1.0728e-37  3.12502e-39  1.77584e-38  5.72799e-40  1.96871e-39  8.72174e-45  1.69014e-62

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.58279, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 470 K
            Well    Collision, 1/sec
              W1         1.04712e+10
      global relaxation matrix dimension = 428
      setting global matrices ... done, cpu time[sec] = 0.377696, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.9659, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            415.542      67.6442      17.2724      21.5418      2.34511      276.458      26.9337    0.0628421
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.554289, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00296, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.564972, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.41307e-08  3.41307e-08  2.80867e-09
      low eigenvalue method done, cpu time[sec] = 0.566175, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.41e-08  2.81e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.11e-09  2.81e-09         1
         *Z       ---       ---   5.4e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.80867e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  3.61626e-37   8.1215e-38  2.38817e-39  1.33284e-38  4.33893e-40  1.64962e-39   8.8253e-45  1.69086e-62

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.5837, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 470 K
            Well    Collision, 1/sec
              W1         1.22164e+10
      global relaxation matrix dimension = 428
      setting global matrices ... done, cpu time[sec] = 0.377502, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.97579, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            356.179      57.9808      14.8049      18.4644       2.0101      236.964      23.0861    0.0538647
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.554313, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00296, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.565319, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.96983e-08  2.96983e-08  2.24809e-09
      low eigenvalue method done, cpu time[sec] = 0.56658, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.97e-08  2.25e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   2.7e-09  2.25e-09         1
         *Z       ---       ---   5.4e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.24809e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.90723e-37  6.39112e-38  1.89484e-39  1.04209e-38  3.41825e-40  1.40955e-39   8.9004e-45  1.69064e-62

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.59282, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 470 K
            Well    Collision, 1/sec
              W1         1.39616e+10
      global relaxation matrix dimension = 428
      setting global matrices ... done, cpu time[sec] = 0.376747, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.79735, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            311.656      50.7332      12.9543      16.1564      1.75883      207.344      20.2003    0.0471316
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.719426, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002951, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.730139, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.63036e-08  2.63036e-08   1.8473e-09
      low eigenvalue method done, cpu time[sec] = 0.73134, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.63e-08  1.85e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.39e-09  1.85e-09         1
         *Z       ---       ---   5.4e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.8473e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.39753e-37  5.17716e-38  1.54608e-39  8.39897e-39   2.7727e-40  1.22306e-39  8.94896e-45  1.69111e-62

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.57527, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 480 K
      Energy reference = 30122 1/cm
      Energy step      = 83 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -87.7 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.007921
         W1 Well: collisional kernel bandwidth = 54
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.427574
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.250631
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.249538
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 1.24748
         W1 Well: minimal relaxation eigenvalue = 0.083858
         W1 Well: maximal relaxation eigenvalue = 0.978371
         W1 Well:       grid size = 422
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -4905 1/cm
         B1 Barrier:        grid size = 363
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -7 1/cm
         B2 Barrier:        grid size = 361
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 158 1/cm
         B3 Barrier:        grid size = 419
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4655 1/cm
         B4 Barrier:        grid size = 438
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6232 1/cm
         B5 Barrier: nonpositive number of states at -23165 1/cm => truncating
         B5 Barrier:        grid size = 642
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23165 1/cm
         B6 Barrier:        grid size = 345
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1486 1/cm
         B7 Barrier:        grid size = 307
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4640 1/cm
         B8 Barrier:        grid size = 161
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16758 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 2.56048, elapsed time[sec] = 0
      B4 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 422
      MasterEquation::Barrier::truncate: real weight = 2.86139e+45
      MasterEquation::Barrier::truncate: effective weight = 1.08211e+42
      B5 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 422
      MasterEquation::Barrier::truncate: real weight = 1.55968e+44
      MasterEquation::Barrier::truncate: effective weight = 4.70342e+40
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1  -4905  -4905 2.68e+09 8.11e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -7 1.21e+15
         B2    159 1.99e+14
         B3  -4655 5.11e+13
         B4  -4905 6.36e+13
         B5  -4905 6.94e+12
         B6   1487 8.14e+14
         B7   4641 8.02e+13
         B8  16759 1.97e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1   9.5e-09  1.97e-08  1.28e-13  1.03e-15  4.13e-39  1.48e-05     0.456  1.14e+16
          R  1.05e+08         1      2.07  1.35e-05  1.08e-07  4.34e-31  1.56e+03   4.8e+07   1.2e+24
         P1  5.08e+07     0.483         1  6.52e-06  5.21e-08   2.1e-31       752  2.32e+07  5.79e+23
         P2  7.79e+12   7.4e+04  1.53e+05         1     0.008  3.22e-26  1.15e+08  3.56e+12  8.89e+28
         P3  9.74e+14  9.25e+06  1.92e+07       125         1  4.02e-24  1.44e+10  4.45e+14  1.11e+31
         P4  2.42e+38   2.3e+30  4.77e+30  3.11e+25  2.49e+23         1  3.59e+33  1.11e+38  2.76e+54
         P5  6.75e+04  0.000642   0.00133  8.67e-09  6.93e-11  2.79e-34         1  3.08e+04   7.7e+20
         P6      2.19  2.08e-08  4.31e-08  2.81e-13  2.25e-15  9.04e-39  3.24e-05         1   2.5e+16
         P7  8.77e-17  8.33e-25  1.73e-24  1.12e-29     9e-32  3.62e-55   1.3e-21     4e-17         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  3.32e+15  6.87e+15  4.48e+10  3.58e+08  1.44e-15  5.17e+18  1.59e+23  3.98e+39
          R  3.02e-16         1      2.07  1.35e-05  1.08e-07  4.34e-31  1.56e+03   4.8e+07   1.2e+24
         P1  1.46e-16     0.483         1  6.52e-06  5.21e-08   2.1e-31       752  2.32e+07  5.79e+23
         P2  2.23e-11   7.4e+04  1.53e+05         1     0.008  3.22e-26  1.15e+08  3.56e+12  8.89e+28
         P3  2.79e-09  9.25e+06  1.92e+07       125         1  4.02e-24  1.44e+10  4.45e+14  1.11e+31
         P4  6.94e+14   2.3e+30  4.77e+30  3.11e+25  2.49e+23         1  3.59e+33  1.11e+38  2.76e+54
         P5  1.93e-19  0.000642   0.00133  8.67e-09  6.93e-11  2.79e-34         1  3.08e+04   7.7e+20
         P6  6.28e-24  2.08e-08  4.31e-08  2.81e-13  2.25e-15  9.04e-39  3.24e-05         1   2.5e+16
         P7  2.51e-40  8.33e-25  1.73e-24  1.12e-29     9e-32  3.62e-55   1.3e-21     4e-17         1
   MasterEquation::set:  done, cpu time[sec] = 2.57456, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 480 K
            Well    Collision, 1/sec
              W1         3.44164e+08
      global relaxation matrix dimension = 422
      setting global matrices ... done, cpu time[sec] = 0.366761, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.66621, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            13011.6      2139.23       548.72      682.756      74.5553      8746.18      861.733      2.11448
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.773861, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002904, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.784513, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.81973e-07  5.81973e-07  1.44633e-07
      low eigenvalue method done, cpu time[sec] = 0.785665, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.82e-07  1.45e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.52e-08  1.45e-07         1
         *Z       ---       ---  3.01e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.44633e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.03034e-34  4.13092e-35  1.23605e-36  1.07465e-35  2.86788e-37   7.1475e-38  8.08673e-44  3.73775e-61

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.46899, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 480 K
            Well    Collision, 1/sec
              W1         1.03249e+09
      global relaxation matrix dimension = 422
      setting global matrices ... done, cpu time[sec] = 0.365449, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.70689, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             4337.2      713.077      182.907      227.585      24.8518      2915.39      287.244     0.704827
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.730056, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.002882, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.740848, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.61905e-07  2.61905e-07   5.4644e-08
      low eigenvalue method done, cpu time[sec] = 0.742753, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.62e-07  5.46e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.45e-08  5.46e-08         1
         *Z       ---       ---  3.01e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 5.4644e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  4.21033e-35  1.37743e-35  3.82741e-37  2.79606e-36  8.01083e-38  6.03075e-38  8.15396e-44  3.73296e-61

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.46677, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 480 K
            Well    Collision, 1/sec
              W1         1.72082e+09
      global relaxation matrix dimension = 422
      setting global matrices ... done, cpu time[sec] = 0.365017, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.70254, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2602.32      427.846      109.744      136.551      14.9111      1749.24      172.347     0.422896
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.734792, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002883, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.745448, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.76801e-07  1.76801e-07  3.23404e-08
      low eigenvalue method done, cpu time[sec] = 0.746629, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.77e-07  3.23e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.64e-08  3.23e-08         1
         *Z       ---       ---  3.01e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.23404e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.56617e-35  7.63334e-36  2.11251e-37  1.43588e-36  4.24808e-38  5.02624e-38  8.22528e-44  3.73618e-61

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.46689, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 480 K
            Well    Collision, 1/sec
              W1         2.40915e+09
      global relaxation matrix dimension = 422
      setting global matrices ... done, cpu time[sec] = 0.363345, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.52785, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             1858.8      305.604      78.3886      97.5365      10.6508      1249.45      123.105     0.302069
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.904354, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002874, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.915071, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.35291e-07  1.35291e-07  2.22981e-08
      low eigenvalue method done, cpu time[sec] = 0.916948, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.35e-07  2.23e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.25e-08  2.23e-08         1
         *Z       ---       ---  3.01e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22981e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.79991e-35  5.03626e-36  1.40036e-37  9.10324e-37  2.74932e-38  4.27454e-38  8.29915e-44  3.73401e-61

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.45961, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 480 K
            Well    Collision, 1/sec
              W1         3.09748e+09
      global relaxation matrix dimension = 422
      setting global matrices ... done, cpu time[sec] = 0.366152, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.7212, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1445.73      237.692      60.9689      75.8617      8.28392      971.798      95.7481     0.234942
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.718192, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002874, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.728827, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.10268e-07  1.10268e-07  1.66588e-08
      low eigenvalue method done, cpu time[sec] = 0.730026, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.1e-07  1.67e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.02e-08  1.67e-08         1
         *Z       ---       ---  3.01e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.66588e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.36053e-35  3.64108e-36  1.01909e-37   6.4174e-37  1.96758e-38  3.70303e-38  8.37402e-44  3.73458e-61

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.46765, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 480 K
            Well    Collision, 1/sec
              W1         3.44164e+09
      global relaxation matrix dimension = 422
      setting global matrices ... done, cpu time[sec] = 0.36563, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.72051, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1301.16      213.923       54.872      68.2756      7.45553      874.618      86.1733     0.211448
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.720487, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002877, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.731333, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.01088e-07  1.01088e-07  1.46898e-08
      low eigenvalue method done, cpu time[sec] = 0.73326, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.01e-07  1.47e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.29e-09  1.47e-08         1
         *Z       ---       ---  3.01e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.46898e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0   1.2053e-35  3.16714e-36  8.89479e-38  5.52912e-37  1.70581e-38  3.46667e-38  8.41138e-44  3.73533e-61

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.47052, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 480 K
            Well    Collision, 1/sec
              W1         5.16246e+09
      global relaxation matrix dimension = 422
      setting global matrices ... done, cpu time[sec] = 0.365527, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.7262, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            867.439      142.615      36.5813       45.517      4.97035      583.079      57.4489     0.140965
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.715328, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002887, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.726048, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.18888e-08  7.18888e-08  8.87734e-09
      low eigenvalue method done, cpu time[sec] = 0.727241, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.19e-08  8.88e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.57e-09  8.88e-09         1
         *Z       ---       ---  3.01e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 8.87734e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  7.40446e-36  1.81744e-36  5.18752e-38  3.07435e-37  9.70887e-39   2.6049e-38   8.5917e-44  3.73528e-61

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.47209, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 480 K
            Well    Collision, 1/sec
              W1         6.88329e+09
      global relaxation matrix dimension = 422
      setting global matrices ... done, cpu time[sec] = 0.365214, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.72394, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            650.579      106.962       27.436      34.1378      3.72776      437.309      43.0867     0.105724
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.714592, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002873, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.725246, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.61109e-08  5.61109e-08  6.09399e-09
      low eigenvalue method done, cpu time[sec] = 0.726438, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.61e-08  6.09e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.11e-09  6.09e-09         1
         *Z       ---       ---  3.01e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 6.09399e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  5.13575e-36  1.20405e-36  3.48452e-38  2.00045e-37   6.4189e-39  2.06262e-38  8.75215e-44  3.73422e-61

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.46946, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 480 K
            Well    Collision, 1/sec
              W1         8.60411e+09
      global relaxation matrix dimension = 422
      setting global matrices ... done, cpu time[sec] = 0.365099, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.74569, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            520.463      85.5692      21.9488      27.3102      2.98221      349.847      34.4693    0.0845792
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.698355, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002875, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.708378, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.61505e-08  4.61505e-08  4.50318e-09
      low eigenvalue method done, cpu time[sec] = 0.708815, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.62e-08   4.5e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.19e-09   4.5e-09         1
         *Z       ---       ---  3.01e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 4.50318e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  3.82294e-36  8.66295e-37  2.53656e-38  1.42246e-37  4.61913e-39  1.69147e-38  8.88588e-44  3.73434e-61

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.47761, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 480 K
            Well    Collision, 1/sec
              W1         1.03249e+10
      global relaxation matrix dimension = 422
      setting global matrices ... done, cpu time[sec] = 0.368094, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.74252, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             433.72      71.3077      18.2907      22.7585      2.48518      291.539      28.7244    0.0704827
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.699598, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002868, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.710287, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.92619e-08  3.92619e-08  3.49283e-09
      low eigenvalue method done, cpu time[sec] = 0.711449, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.93e-08  3.49e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.55e-09  3.49e-09         1
         *Z       ---       ---  3.01e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.49283e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.98167e-36  6.57862e-37  1.94568e-38  1.07122e-37  3.51168e-39  1.42248e-38  8.99071e-44  3.73539e-61

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.47575, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 480 K
            Well    Collision, 1/sec
              W1         1.20457e+10
      global relaxation matrix dimension = 422
      setting global matrices ... done, cpu time[sec] = 0.366635, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.7333, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             371.76      61.1209      15.6777      19.5073      2.13015      249.891       24.621    0.0604137
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.705343, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002877, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.716091, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.42009e-08  3.42009e-08  2.80416e-09
      low eigenvalue method done, cpu time[sec] = 0.717273, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.42e-08   2.8e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.09e-09   2.8e-09         1
         *Z       ---       ---  3.01e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.80416e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0   2.4043e-36  5.19052e-37  1.54859e-38   8.3992e-38  2.77496e-39  1.21929e-38  9.06718e-44  3.73457e-61

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.47508, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 480 K
            Well    Collision, 1/sec
              W1         1.37666e+10
      global relaxation matrix dimension = 422
      setting global matrices ... done, cpu time[sec] = 0.368272, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.58586, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             325.29      53.4808       13.718      17.0689      1.86388      218.655      21.5433     0.052862
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.852016, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002879, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.862755, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.03189e-08  3.03189e-08  2.31025e-09
      low eigenvalue method done, cpu time[sec] = 0.864534, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.03e-08  2.31e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.73e-09  2.31e-09         1
         *Z       ---       ---  3.01e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.31025e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.98793e-36  4.21406e-37  1.26696e-38  6.78598e-38  2.25679e-39  1.06089e-38  9.11721e-44  3.73664e-61

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.46669, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 490 K
      Energy reference = 30399 1/cm
      Energy step      = 84 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -87.6 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.007969
         W1 Well: collisional kernel bandwidth = 55
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.434514
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.247805
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.240801
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 1.24268
         W1 Well: minimal relaxation eigenvalue = 0.0832982
         W1 Well: maximal relaxation eigenvalue = 0.980404
         W1 Well:       grid size = 421
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -4965 1/cm
         B1 Barrier:        grid size = 362
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -9 1/cm
         B2 Barrier:        grid size = 360
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 158 1/cm
         B3 Barrier:        grid size = 417
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4628 1/cm
         B4 Barrier:        grid size = 436
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6225 1/cm
         B5 Barrier: nonpositive number of states at -23109 1/cm => truncating
         B5 Barrier:        grid size = 637
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23109 1/cm
         B6 Barrier:        grid size = 344
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1502 1/cm
         B7 Barrier:        grid size = 306
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4694 1/cm
         B8 Barrier:        grid size = 163
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16707 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 2.54686, elapsed time[sec] = 0
      B4 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 421
      MasterEquation::Barrier::truncate: real weight = 9.76935e+44
      MasterEquation::Barrier::truncate: effective weight = 3.73904e+41
      B5 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 421
      MasterEquation::Barrier::truncate: real weight = 4.689e+43
      MasterEquation::Barrier::truncate: effective weight = 1.51927e+40
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1  -4965  -4965 2.63e+09 8.49e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -9  1.3e+15
         B2    159 2.17e+14
         B3  -4628 5.58e+13
         B4  -4965 6.93e+13
         B5  -4965 7.59e+12
         B6   1503 8.86e+14
         B7   4695 8.83e+13
         B8  16707 2.28e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  7.56e-09  1.55e-08  1.36e-13   1.2e-15  1.48e-38  1.08e-05     0.277  3.35e+15
          R  1.32e+08         1      2.05   1.8e-05  1.59e-07  1.95e-30  1.43e+03  3.67e+07  4.43e+23
         P1  6.45e+07     0.488         1  8.77e-06  7.76e-08  9.53e-31       699  1.79e+07  2.16e+23
         P2  7.36e+12  5.56e+04  1.14e+05         1   0.00884  1.09e-25  7.97e+07  2.04e+12  2.46e+28
         P3  8.32e+14  6.29e+06  1.29e+07       113         1  1.23e-23  9.02e+09  2.31e+14  2.79e+30
         P4  6.77e+37  5.12e+29  1.05e+30  9.21e+24  8.14e+22         1  7.34e+32  1.88e+37  2.27e+53
         P5  9.22e+04  0.000698   0.00143  1.25e-08  1.11e-10  1.36e-33         1  2.56e+04  3.09e+20
         P6      3.61  2.73e-08  5.59e-08   4.9e-13  4.33e-15  5.32e-38  3.91e-05         1  1.21e+16
         P7  2.99e-16  2.26e-24  4.63e-24  4.06e-29  3.59e-31  4.41e-54  3.24e-21  8.28e-17         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  4.61e+14  9.44e+14  8.28e+09  7.32e+07     9e-16   6.6e+17  1.69e+22  2.04e+38
          R  2.17e-15         1      2.05   1.8e-05  1.59e-07  1.95e-30  1.43e+03  3.67e+07  4.43e+23
         P1  1.06e-15     0.488         1  8.77e-06  7.76e-08  9.53e-31       699  1.79e+07  2.16e+23
         P2  1.21e-10  5.56e+04  1.14e+05         1   0.00884  1.09e-25  7.97e+07  2.04e+12  2.46e+28
         P3  1.37e-08  6.29e+06  1.29e+07       113         1  1.23e-23  9.02e+09  2.31e+14  2.79e+30
         P4  1.11e+15  5.12e+29  1.05e+30  9.21e+24  8.14e+22         1  7.34e+32  1.88e+37  2.27e+53
         P5  1.51e-18  0.000698   0.00143  1.25e-08  1.11e-10  1.36e-33         1  2.56e+04  3.09e+20
         P6  5.92e-23  2.73e-08  5.59e-08   4.9e-13  4.33e-15  5.32e-38  3.91e-05         1  1.21e+16
         P7   4.9e-39  2.26e-24  4.63e-24  4.06e-29  3.59e-31  4.41e-54  3.24e-21  8.28e-17         1
   MasterEquation::set:  done, cpu time[sec] = 2.56033, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 490 K
            Well    Collision, 1/sec
              W1         3.39465e+08
      global relaxation matrix dimension = 421
      setting global matrices ... done, cpu time[sec] = 0.36426, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.66422, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            13571.5      2253.42      580.608       720.77      78.9448      9215.69      918.128      2.36621
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.795885, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002876, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.806131, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.75445e-07  6.75445e-07   1.7701e-07
      low eigenvalue method done, cpu time[sec] = 0.807329, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.75e-07  1.77e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.38e-08  1.77e-07         1
         *Z       ---       ---  1.69e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.7701e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  7.34537e-34  2.91433e-34  8.67422e-36  7.46977e-35  2.00059e-36  5.41487e-37   7.4996e-43  7.26779e-60

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.48583, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 490 K
            Well    Collision, 1/sec
              W1         1.01839e+09
      global relaxation matrix dimension = 421
      setting global matrices ... done, cpu time[sec] = 0.364293, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.7202, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            4523.84      751.142      193.536      240.257      26.3149       3071.9      306.043     0.788737
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.743501, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002842, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.75392, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.08881e-07  3.08881e-07  6.80423e-08
      low eigenvalue method done, cpu time[sec] = 0.755092, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.09e-07   6.8e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.88e-08   6.8e-08         1
         *Z       ---       ---  1.69e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 6.80423e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  3.05224e-34  9.86233e-35  2.73673e-36  1.97922e-35  5.69529e-37   4.5975e-37  7.56162e-43  7.26769e-60

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.33618, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 490 K
            Well    Collision, 1/sec
              W1         1.69732e+09
      global relaxation matrix dimension = 421
      setting global matrices ... done, cpu time[sec] = 0.363831, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.72633, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             2714.3      450.685      116.122      144.154       15.789      1843.14      183.626     0.473242
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.737517, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002835, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.747916, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.09871e-07  2.09871e-07  4.06278e-08
      low eigenvalue method done, cpu time[sec] = 0.749609, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   2.1e-07  4.06e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.94e-08  4.06e-08         1
         *Z       ---       ---  1.69e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 4.06278e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.87654e-34  5.50782e-35  1.52477e-36  1.02552e-35  3.04858e-37  3.85241e-37  7.62735e-43  7.27028e-60

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.48674, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 490 K
            Well    Collision, 1/sec
              W1         2.37625e+09
      global relaxation matrix dimension = 421
      setting global matrices ... done, cpu time[sec] = 0.364615, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.52477, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1938.79      321.918      82.9441      102.967      11.2778      1316.53      131.161      0.33803
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.931506, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002851, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.942199, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   1.6123e-07   1.6123e-07  2.81829e-08
      low eigenvalue method done, cpu time[sec] = 0.944217, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.61e-07  2.82e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.48e-08  2.82e-08         1
         *Z       ---       ---  1.69e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.81829e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.32411e-34  3.65333e-35  1.01724e-36  6.54097e-36  1.98558e-37  3.29065e-37  7.69535e-43  7.26566e-60

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.48034, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 490 K
            Well    Collision, 1/sec
              W1         3.05518e+09
      global relaxation matrix dimension = 421
      setting global matrices ... done, cpu time[sec] = 0.363567, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.72543, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1507.95      250.381       64.512      80.0856      8.77165      1023.97      102.014     0.262912
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.734648, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002858, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.745248, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.31771e-07  1.31771e-07  2.11533e-08
      low eigenvalue method done, cpu time[sec] = 0.746452, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.32e-07  2.12e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.21e-08  2.12e-08         1
         *Z       ---       ---  1.69e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.11533e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.00548e-34  2.65207e-35  7.43902e-37  4.63224e-36  1.42787e-37  2.86116e-37  7.76417e-43  7.26919e-60

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.35729, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 490 K
            Well    Collision, 1/sec
              W1         3.39465e+09
      global relaxation matrix dimension = 421
      setting global matrices ... done, cpu time[sec] = 0.361903, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.72503, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1357.15      225.342      58.0608       72.077      7.89448      921.569      91.8128     0.236621
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.732244, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00286, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.742885, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.20935e-07  1.20935e-07    1.869e-08
      low eigenvalue method done, cpu time[sec] = 0.744033, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.21e-07  1.87e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.11e-08  1.87e-08         1
         *Z       ---       ---  1.69e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.869e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  8.92504e-35  2.31087e-35  6.50631e-37  3.99876e-36  1.24043e-37   2.6829e-37  7.79848e-43  7.27124e-60

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.47981, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 490 K
            Well    Collision, 1/sec
              W1         5.09197e+09
      global relaxation matrix dimension = 421
      setting global matrices ... done, cpu time[sec] = 0.363912, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.7435, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            904.767      150.228      38.7072      48.0513      5.26299       614.38      61.2086     0.157747
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.715696, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002848, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.726349, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.63472e-08  8.63472e-08  1.13821e-08
      low eigenvalue method done, cpu time[sec] = 0.727525, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.63e-08  1.14e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.86e-09  1.14e-08         1
         *Z       ---       ---  1.69e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.13821e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  5.52489e-35  1.33509e-35  3.82517e-37   2.2401e-36   7.1162e-38  2.02961e-37  7.96393e-43  7.26886e-60

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.48666, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 490 K
            Well    Collision, 1/sec
              W1         6.78929e+09
      global relaxation matrix dimension = 421
      setting global matrices ... done, cpu time[sec] = 0.364113, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.71702, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            678.576      112.671      29.0304      36.0385      3.94724      460.785      45.9064     0.118311
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.724899, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002845, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.735288, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.75695e-08  6.75695e-08  7.85688e-09
      low eigenvalue method done, cpu time[sec] = 0.736704, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.76e-08  7.86e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.12e-09  7.86e-09         1
         *Z       ---       ---  1.69e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 7.85688e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  3.85321e-35  8.88798e-36  2.58428e-37  1.46539e-36  4.73148e-38  1.61545e-37  8.11107e-43  7.26732e-60

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.47067, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 490 K
            Well    Collision, 1/sec
              W1         8.48662e+09
      global relaxation matrix dimension = 421
      setting global matrices ... done, cpu time[sec] = 0.365487, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.75428, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             542.86       90.137      23.2243      28.8308      3.15779      368.628      36.7251    0.0946484
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.708882, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002876, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.719249, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.56777e-08  5.56777e-08  5.83099e-09
      low eigenvalue method done, cpu time[sec] = 0.720311, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.57e-08  5.83e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.03e-09  5.83e-09         1
         *Z       ---       ---  1.69e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 5.83099e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.88057e-35  6.41898e-36  1.88968e-37  1.04629e-36  3.41982e-38  1.33035e-37  8.23384e-43  7.26981e-60

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.49107, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 490 K
            Well    Collision, 1/sec
              W1         1.01839e+10
      global relaxation matrix dimension = 421
      setting global matrices ... done, cpu time[sec] = 0.364049, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.74278, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            452.384      75.1142      19.3536      24.0257      2.63149       307.19      30.6043    0.0788737
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.72037, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002853, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.730664, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.74338e-08  4.74338e-08  4.53871e-09
      low eigenvalue method done, cpu time[sec] = 0.731717, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.74e-08  4.54e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.27e-09  4.54e-09         1
         *Z       ---       ---  1.69e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 4.53871e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.25457e-35  4.88959e-36   1.4548e-37  7.90579e-37  2.60922e-38  1.12277e-37  8.33036e-43   7.2697e-60

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.48797, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 490 K
            Well    Collision, 1/sec
              W1         1.18813e+10
      global relaxation matrix dimension = 421
      setting global matrices ... done, cpu time[sec] = 0.363047, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.74234, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            387.757      64.3836      16.5888      20.5934      2.25557      263.306      26.2322     0.067606
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.718902, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002872, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.729282, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.13658e-08  4.13658e-08  3.65468e-09
      low eigenvalue method done, cpu time[sec] = 0.730368, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.14e-08  3.65e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.72e-09  3.65e-09         1
         *Z       ---       ---  1.69e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.65468e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.82339e-35  3.86787e-36  1.16147e-37  6.21616e-37  2.06804e-38  9.65346e-38  8.40115e-43  7.27075e-60

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.48778, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 490 K
            Well    Collision, 1/sec
              W1         1.35786e+10
      global relaxation matrix dimension = 421
      setting global matrices ... done, cpu time[sec] = 0.365398, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.76188, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            339.288      56.3356      14.5152      18.0193      1.97362      230.392      22.9532    0.0591553
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.700853, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002837, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.711254, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.67044e-08  3.67044e-08  3.01869e-09
      low eigenvalue method done, cpu time[sec] = 0.712305, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.67e-08  3.02e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.29e-09  3.02e-09         1
         *Z       ---       ---  1.69e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.01869e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.51148e-35  3.14724e-36  9.52773e-38  5.03436e-37  1.68624e-38  8.42207e-38    8.448e-43  7.27037e-60

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.49376, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 500 K
      Energy reference = 30677 1/cm
      Energy step      = 86 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -87.5 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.007543
         W1 Well: collisional kernel bandwidth = 54
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.250167
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.244508
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.245931
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 1.2084
         W1 Well: minimal relaxation eigenvalue = 0.0827059
         W1 Well: maximal relaxation eigenvalue = 0.979597
         W1 Well:       grid size = 416
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -5099 1/cm
         B1 Barrier:        grid size = 357
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -24 1/cm
         B2 Barrier:        grid size = 355
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 146 1/cm
         B3 Barrier:        grid size = 411
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4669 1/cm
         B4 Barrier:        grid size = 429
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6217 1/cm
         B5 Barrier: nonpositive number of states at -23159 1/cm => truncating
         B5 Barrier:        grid size = 626
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23159 1/cm
         B6 Barrier:        grid size = 340
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1437 1/cm
         B7 Barrier:        grid size = 302
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4705 1/cm
         B8 Barrier:        grid size = 162
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16745 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 2.32517, elapsed time[sec] = 0
      B4 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 416
      MasterEquation::Barrier::truncate: real weight = 3.49043e+44
      MasterEquation::Barrier::truncate: effective weight = 1.36771e+41
      B5 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 416
      MasterEquation::Barrier::truncate: real weight = 1.5105e+43
      MasterEquation::Barrier::truncate: effective weight = 5.26494e+39
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1  -5099  -5099 2.51e+09 8.89e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -24 1.41e+15
         B2    147 2.36e+14
         B3  -4669  6.1e+13
         B4  -5099 7.55e+13
         B5  -5099  8.3e+12
         B6   1438 9.64e+14
         B7   4706 9.71e+13
         B8  16745 2.63e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  7.22e-09  1.46e-08  1.71e-13  1.66e-15  5.97e-38  9.55e-06     0.204  1.23e+15
          R  1.38e+08         1      2.03  2.37e-05   2.3e-07  8.26e-30  1.32e+03  2.83e+07   1.7e+23
         P1  6.83e+07     0.493         1  1.17e-05  1.14e-07  4.08e-30       652   1.4e+07  8.38e+22
         P2  5.85e+12  4.23e+04  8.57e+04         1   0.00973  3.49e-25  5.59e+07   1.2e+12  7.18e+27
         P3  6.01e+14  4.34e+06  8.81e+06       103         1  3.59e-23  5.74e+09  1.23e+14  7.38e+29
         P4  1.68e+37  1.21e+29  2.45e+29  2.86e+24  2.79e+22         1   1.6e+32  3.42e+36  2.06e+52
         P5  1.05e+05  0.000756   0.00153  1.79e-08  1.74e-10  6.25e-33         1  2.14e+04  1.29e+20
         P6      4.89  3.53e-08  7.17e-08  8.36e-13  8.14e-15  2.92e-37  4.67e-05         1  6.01e+15
         P7  8.15e-16  5.88e-24  1.19e-23  1.39e-28  1.35e-30  4.86e-53  7.78e-21  1.66e-16         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  6.93e+13   1.4e+14  1.64e+09  1.59e+07  5.72e-16  9.16e+16  1.96e+21  1.18e+37
          R  1.44e-14         1      2.03  2.37e-05   2.3e-07  8.26e-30  1.32e+03  2.83e+07   1.7e+23
         P1  7.12e-15     0.493         1  1.17e-05  1.14e-07  4.08e-30       652   1.4e+07  8.38e+22
         P2   6.1e-10  4.23e+04  8.57e+04         1   0.00973  3.49e-25  5.59e+07   1.2e+12  7.18e+27
         P3  6.27e-08  4.34e+06  8.81e+06       103         1  3.59e-23  5.74e+09  1.23e+14  7.38e+29
         P4  1.75e+15  1.21e+29  2.45e+29  2.86e+24  2.79e+22         1   1.6e+32  3.42e+36  2.06e+52
         P5  1.09e-17  0.000756   0.00153  1.79e-08  1.74e-10  6.25e-33         1  2.14e+04  1.29e+20
         P6   5.1e-22  3.53e-08  7.17e-08  8.36e-13  8.14e-15  2.92e-37  4.67e-05         1  6.01e+15
         P7   8.5e-38  5.88e-24  1.19e-23  1.39e-28  1.35e-30  4.86e-53  7.78e-21  1.66e-16         1
   MasterEquation::set:  done, cpu time[sec] = 2.33923, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 500 K
            Well    Collision, 1/sec
              W1         3.34932e+08
      global relaxation matrix dimension = 416
      setting global matrices ... done, cpu time[sec] = 0.354533, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.46607, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            14146.1      2372.05      613.877       760.34      83.5278      9702.68      977.285      2.64275
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.943732, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002819, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.953484, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.51078e-07  6.51078e-07  1.78402e-07
      low eigenvalue method done, cpu time[sec] = 0.953993, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.51e-07  1.78e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   6.1e-08  1.78e-07         1
         *Z       ---       ---  1.06e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.78402e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  4.83706e-33  1.89933e-33  5.62693e-35  4.80177e-34  1.29049e-35  3.79622e-36   6.3627e-42  1.25446e-58

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.40571, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 500 K
            Well    Collision, 1/sec
              W1          1.0048e+09
      global relaxation matrix dimension = 416
      setting global matrices ... done, cpu time[sec] = 0.354525, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.50745, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            4715.37      790.683      204.626      253.447      27.8426      3234.23      325.762     0.880918
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.900237, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002766, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.910425, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.02221e-07  3.02221e-07  6.97401e-08
      low eigenvalue method done, cpu time[sec] = 0.910962, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.02e-07  6.97e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.79e-08  6.97e-08         1
         *Z       ---       ---  1.06e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 6.97401e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.04291e-33  6.52125e-34  1.80794e-35  1.29499e-34  3.74207e-36  3.23746e-36  6.41507e-42  1.25542e-58

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.26111, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 500 K
            Well    Collision, 1/sec
              W1         1.67466e+09
      global relaxation matrix dimension = 416
      setting global matrices ... done, cpu time[sec] = 0.353987, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.51988, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2829.22       474.41      122.775      152.068      16.7056      1940.54      195.457     0.528551
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.877244, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002758, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.887594, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.06595e-07  2.06595e-07  4.20025e-08
      low eigenvalue method done, cpu time[sec] = 0.88869, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.07e-07   4.2e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.9e-08   4.2e-08         1
         *Z       ---       ---  1.06e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 4.20025e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.26667e-33  3.66963e-34  1.01657e-35  6.76867e-35  2.02144e-36  2.72524e-36  6.47051e-42   1.2561e-58

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.39527, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 500 K
            Well    Collision, 1/sec
              W1         2.34452e+09
      global relaxation matrix dimension = 416
      setting global matrices ... done, cpu time[sec] = 0.35557, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.34249, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2020.87      338.864      87.6967       108.62      11.9325       1386.1      139.612     0.377536
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.0508, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002769, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.06116, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.59298e-07  1.59298e-07  2.93101e-08
      low eigenvalue method done, cpu time[sec] = 1.06273, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.59e-07  2.93e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.45e-08  2.93e-08         1
         *Z       ---       ---  1.06e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.93101e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  8.99017e-34  2.44686e-34  6.82459e-36  4.34277e-35  1.32479e-36  2.33696e-36  6.52777e-42  1.25605e-58

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.39353, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 500 K
            Well    Collision, 1/sec
              W1         3.01439e+09
      global relaxation matrix dimension = 416
      setting global matrices ... done, cpu time[sec] = 0.358121, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.52707, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1571.79      263.561      68.2085      84.4823      9.28086      1078.08      108.587     0.293639
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.869002, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.00277, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.879001, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.30528e-07  1.30528e-07  2.20998e-08
      low eigenvalue method done, cpu time[sec] = 0.880111, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.31e-07  2.21e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.19e-08  2.21e-08         1
         *Z       ---       ---  1.06e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.20998e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  6.85757e-34  1.78341e-34  5.01471e-36  3.08932e-35  9.57199e-37  2.03877e-36  6.58566e-42    1.256e-58

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.39798, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 500 K
            Well    Collision, 1/sec
              W1         3.34932e+09
      global relaxation matrix dimension = 416
      setting global matrices ... done, cpu time[sec] = 0.355496, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.51914, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1414.61      237.205      61.3877       76.034      8.35278      970.268      97.7285     0.264275
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.876419, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002769, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.886821, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.19919e-07  1.19919e-07  1.95641e-08
      low eigenvalue method done, cpu time[sec] = 0.888279, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.2e-07  1.96e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.09e-08  1.96e-08         1
         *Z       ---       ---  1.06e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.95641e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  6.09867e-34  1.55663e-34  4.39485e-36  2.67191e-35  8.33212e-37  1.91463e-36  6.61449e-42  1.25625e-58

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.3935, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 500 K
            Well    Collision, 1/sec
              W1         5.02398e+09
      global relaxation matrix dimension = 416
      setting global matrices ... done, cpu time[sec] = 0.355561, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.54113, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            943.073      158.137      40.9251      50.6894      5.56852      646.845      65.1524     0.176184
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.855091, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002756, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.865328, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.59432e-08  8.59431e-08  1.20049e-08
      low eigenvalue method done, cpu time[sec] = 0.866434, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.59e-08   1.2e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.76e-09   1.2e-08         1
         *Z       ---       ---  1.06e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.20049e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  3.80363e-34   9.0536e-35  2.60431e-36  1.50786e-35   4.8174e-37   1.4576e-36  6.75336e-42  1.25603e-58

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.39312, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 500 K
            Well    Collision, 1/sec
              W1         6.69864e+09
      global relaxation matrix dimension = 416
      setting global matrices ... done, cpu time[sec] = 0.358966, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.55326, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            707.305      118.603      30.6938       38.017      4.17639      485.134      48.8643     0.132138
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.844894, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002758, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.85523, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.74163e-08  6.74163e-08  8.33202e-09
      low eigenvalue method done, cpu time[sec] = 0.856354, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.74e-08  8.33e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.07e-09  8.33e-09         1
         *Z       ---       ---  1.06e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 8.33202e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.66712e-34  6.05621e-35  1.76949e-36   9.9158e-36  3.22096e-37  1.16588e-36  6.87677e-42  1.25622e-58

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.40394, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 500 K
            Well    Collision, 1/sec
              W1          8.3733e+09
      global relaxation matrix dimension = 416
      setting global matrices ... done, cpu time[sec] = 0.358279, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.55007, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            565.844       94.882      24.5551      30.4136      3.34111      388.107      39.0914      0.10571
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.853369, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002778, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.863713, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   5.5648e-08   5.5648e-08  6.20997e-09
      low eigenvalue method done, cpu time[sec] = 0.864796, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.56e-08  6.21e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.99e-09  6.21e-09         1
         *Z       ---       ---  1.06e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 6.20997e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.00232e-34  4.39025e-35  1.29963e-36   7.1088e-36  2.33816e-37  9.64009e-37  6.97982e-42  1.25639e-58

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.40721, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 500 K
            Well    Collision, 1/sec
              W1          1.0048e+10
      global relaxation matrix dimension = 416
      setting global matrices ... done, cpu time[sec] = 0.357887, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.54357, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            471.537      79.0683      20.4626      25.3447      2.78426      323.423      32.5762    0.0880918
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.853548, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002774, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.863916, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.74714e-08  4.74715e-08  4.85054e-09
      low eigenvalue method done, cpu time[sec] = 0.865358, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.75e-08  4.85e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.25e-09  4.85e-09         1
         *Z       ---       ---  1.06e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 4.85054e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.57261e-34  3.35446e-35  1.00416e-36  5.38927e-36  1.79027e-37  8.16371e-37  7.06105e-42  1.25637e-58

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.36434, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 500 K
            Well    Collision, 1/sec
              W1         1.17226e+10
      global relaxation matrix dimension = 416
      setting global matrices ... done, cpu time[sec] = 0.326861, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.16029, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            404.174      67.7729      17.5393       21.724      2.38651      277.219      27.9224    0.0755072
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.11368, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002757, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.12411, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.14425e-08  4.14425e-08  3.91727e-09
      low eigenvalue method done, cpu time[sec] = 1.12566, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.14e-08  3.92e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   3.7e-09  3.92e-09         1
         *Z       ---       ---  1.06e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.91727e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.27557e-34  2.66036e-35  8.04144e-37  4.24931e-36  1.42319e-37  7.03985e-37  7.12093e-42  1.25641e-58

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.2478, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 500 K
            Well    Collision, 1/sec
              W1         1.33973e+10
      global relaxation matrix dimension = 416
      setting global matrices ... done, cpu time[sec] = 0.357625, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.52078, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            353.652      59.3013      15.3469      19.0085      2.08819      242.567      24.4321    0.0660688
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.842533, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.002762, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.852959, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.68045e-08  3.68045e-08   3.2438e-09
      low eigenvalue method done, cpu time[sec] = 0.854058, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.68e-08  3.24e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.28e-09  3.24e-09         1
         *Z       ---       ---  1.06e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.2438e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.06004e-34  2.16951e-35  6.61395e-37  3.44971e-36  1.16343e-37  6.15789e-37  7.16096e-42  1.25648e-58

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.22647, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 510 K
      Energy reference = 30956 1/cm
      Energy step      = 88 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -87.4 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.008185
         W1 Well: collisional kernel bandwidth = 54
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.413193
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.235723
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.232253
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 1.13599
         W1 Well: minimal relaxation eigenvalue = 0.0821525
         W1 Well: maximal relaxation eigenvalue = 0.978785
         W1 Well:       grid size = 410
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -5124 1/cm
         B1 Barrier:        grid size = 352
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -20 1/cm
         B2 Barrier:        grid size = 350
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 155 1/cm
         B3 Barrier:        grid size = 405
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4684 1/cm
         B4 Barrier:        grid size = 422
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6180 1/cm
         B5 Barrier: nonpositive number of states at -23165 1/cm => truncating
         B5 Barrier:        grid size = 615
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23165 1/cm
         B6 Barrier:        grid size = 335
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1475 1/cm
         B7 Barrier:        grid size = 299
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4643 1/cm
         B8 Barrier:        grid size = 162
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16699 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 2.39083, elapsed time[sec] = 0
      B4 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 410
      MasterEquation::Barrier::truncate: real weight = 1.30151e+44
      MasterEquation::Barrier::truncate: effective weight = 5.21848e+40
      B5 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 410
      MasterEquation::Barrier::truncate: real weight = 5.17712e+42
      MasterEquation::Barrier::truncate: effective weight = 1.90237e+39
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1  -5124  -5124 2.49e+09 9.31e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -20 1.51e+15
         B2    156 2.56e+14
         B3  -4684 6.66e+13
         B4  -5124 8.23e+13
         B5  -5124 9.06e+12
         B6   1476 1.05e+15
         B7   4644 1.07e+14
         B8  16700 3.02e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  5.26e-09  1.06e-08  1.62e-13  1.73e-15  1.74e-37  6.43e-06     0.116  3.56e+14
          R   1.9e+08         1      2.01  3.08e-05  3.29e-07  3.31e-29  1.22e+03   2.2e+07  6.78e+22
         P1  9.47e+07     0.498         1  1.53e-05  1.64e-07  1.65e-29       609   1.1e+07  3.37e+22
         P2  6.18e+12  3.25e+04  6.52e+04         1    0.0107  1.07e-24  3.97e+07  7.16e+11   2.2e+27
         P3  5.79e+14  3.04e+06  6.11e+06      93.7         1  1.01e-22  3.72e+09  6.71e+13  2.06e+29
         P4  5.75e+36  3.02e+28  6.07e+28  9.31e+23  9.94e+21         1   3.7e+31  6.67e+35  2.05e+51
         P5  1.55e+05  0.000818   0.00164  2.52e-08  2.69e-10   2.7e-32         1   1.8e+04  5.54e+19
         P6      8.62  4.54e-08   9.1e-08   1.4e-12  1.49e-14   1.5e-36  5.55e-05         1  3.07e+15
         P7  2.81e-15  1.48e-23  2.96e-23  4.54e-28  4.85e-30  4.88e-52  1.81e-20  3.25e-16         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  1.12e+13  2.25e+13  3.45e+08  3.68e+06  3.71e-16  1.37e+16  2.47e+20  7.59e+35
          R  8.92e-14         1      2.01  3.08e-05  3.29e-07  3.31e-29  1.22e+03   2.2e+07  6.78e+22
         P1  4.44e-14     0.498         1  1.53e-05  1.64e-07  1.65e-29       609   1.1e+07  3.37e+22
         P2   2.9e-09  3.25e+04  6.52e+04         1    0.0107  1.07e-24  3.97e+07  7.16e+11   2.2e+27
         P3  2.71e-07  3.04e+06  6.11e+06      93.7         1  1.01e-22  3.72e+09  6.71e+13  2.06e+29
         P4   2.7e+15  3.02e+28  6.07e+28  9.31e+23  9.94e+21         1   3.7e+31  6.67e+35  2.05e+51
         P5  7.29e-17  0.000818   0.00164  2.52e-08  2.69e-10   2.7e-32         1   1.8e+04  5.54e+19
         P6  4.05e-21  4.54e-08   9.1e-08   1.4e-12  1.49e-14   1.5e-36  5.55e-05         1  3.07e+15
         P7  1.32e-36  1.48e-23  2.96e-23  4.54e-28  4.85e-30  4.88e-52  1.81e-20  3.25e-16         1
   MasterEquation::set:  done, cpu time[sec] = 2.40398, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 510 K
            Well    Collision, 1/sec
              W1         3.30556e+08
      global relaxation matrix dimension = 410
      setting global matrices ... done, cpu time[sec] = 0.345819, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.23345, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            14735.6      2495.18      648.566      801.509      88.3099      10207.5      1039.29      2.94608
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.10696, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002673, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.11679, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.21478e-07  8.21478e-07  2.35794e-07
      low eigenvalue method done, cpu time[sec] = 1.11794, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.21e-07  2.36e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.68e-08  2.36e-07         1
         *Z       ---       ---  5.89e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.35794e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.95543e-32  1.14901e-32  3.38888e-34  2.86675e-33  7.73022e-35  2.44558e-35  4.97831e-41  1.94141e-57

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.3129, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 510 K
            Well    Collision, 1/sec
              W1         9.91668e+08
      global relaxation matrix dimension = 410
      setting global matrices ... done, cpu time[sec] = 0.345373, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.27499, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            4911.86      831.727      216.189       267.17      29.4366      3402.49      346.431     0.982026
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.04676, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002673, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.0567, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.87134e-07  3.87134e-07  9.36876e-08
      low eigenvalue method done, cpu time[sec] = 1.05779, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.87e-07  9.37e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.57e-08  9.37e-08         1
         *Z       ---       ---  5.89e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 9.36876e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.26804e-32  4.00063e-33  1.10829e-34  7.86508e-34    2.282e-35  2.10154e-35  5.01925e-41  1.94024e-57

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.28925, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 510 K
            Well    Collision, 1/sec
              W1         1.65278e+09
      global relaxation matrix dimension = 410
      setting global matrices ... done, cpu time[sec] = 0.337264, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.26405, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2947.12      499.036      129.713      160.302       17.662       2041.5      207.859     0.589215
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.05144, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002662, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.06146, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.66294e-07  2.66294e-07  5.69002e-08
      low eigenvalue method done, cpu time[sec] = 1.06264, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.66e-07  5.69e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.44e-08  5.69e-08         1
         *Z       ---       ---  5.89e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 5.69002e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0   7.9271e-33  2.26787e-33  6.28755e-35  4.14603e-34  1.24375e-35  1.77908e-35  5.06254e-41  1.94047e-57

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.27647, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 510 K
            Well    Collision, 1/sec
              W1         2.31389e+09
      global relaxation matrix dimension = 410
      setting global matrices ... done, cpu time[sec] = 0.344934, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.27367, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2105.08      356.454      92.6523      114.501      12.6157      1458.21       148.47     0.420868
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.05018, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00266, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.06014, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.06112e-07  2.06112e-07  3.99362e-08
      low eigenvalue method done, cpu time[sec] = 1.06123, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.06e-07  3.99e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.88e-08  3.99e-08         1
         *Z       ---       ---  5.89e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.99362e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  5.65835e-33  1.51992e-33  4.24692e-35  2.67549e-34  8.20075e-36  1.53237e-35  5.10718e-41  1.94031e-57

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.29375, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 510 K
            Well    Collision, 1/sec
              W1           2.975e+09
      global relaxation matrix dimension = 410
      setting global matrices ... done, cpu time[sec] = 0.345739, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.27817, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1637.29      277.242      72.0629      89.0565      9.81221      1134.16      115.477     0.327342
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.04275, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002661, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.05256, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.69344e-07  1.69344e-07  3.02458e-08
      low eigenvalue method done, cpu time[sec] = 1.05363, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.69e-07  3.02e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.54e-08  3.02e-08         1
         *Z       ---       ---  5.89e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.02458e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  4.33503e-33  1.11217e-33  3.13524e-35  1.91164e-34  5.95272e-36  1.34172e-35  5.15223e-41  1.94027e-57

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.2917, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 510 K
            Well    Collision, 1/sec
              W1         3.30556e+09
      global relaxation matrix dimension = 410
      setting global matrices ... done, cpu time[sec] = 0.345746, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.29095, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1473.56      249.518      64.8566      80.1509      8.83099      1020.75      103.929     0.294608
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.02892, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002677, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.03906, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.55749e-07  1.55749e-07   2.6826e-08
      low eigenvalue method done, cpu time[sec] = 1.04017, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.56e-07  2.68e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.41e-08  2.68e-08         1
         *Z       ---       ---  5.89e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.6826e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  3.86249e-33  9.72368e-34  2.75316e-35  1.65643e-34  5.19182e-36  1.26206e-35  5.17464e-41  1.94025e-57

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.28806, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 510 K
            Well    Collision, 1/sec
              W1         4.95834e+09
      global relaxation matrix dimension = 410
      setting global matrices ... done, cpu time[sec] = 0.345217, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.27518, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            982.373      166.345      43.2377      53.4339      5.88733      680.499      69.2862     0.196405
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.04079, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.002663, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.05082, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.12064e-07  1.12064e-07   1.6583e-08
      low eigenvalue method done, cpu time[sec] = 1.05191, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.12e-07  1.66e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.01e-08  1.66e-08         1
         *Z       ---       ---  5.89e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.6583e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.42663e-33  5.69259e-34  1.64415e-35  9.41566e-35  3.02478e-36  9.67159e-36  5.28234e-41  1.94048e-57

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.28475, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 510 K
            Well    Collision, 1/sec
              W1         6.61112e+09
      global relaxation matrix dimension = 410
      setting global matrices ... done, cpu time[sec] = 0.345069, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.27174, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             736.78      124.759      32.4283      40.0754       4.4155      510.374      51.9646     0.147304
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.02016, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002663, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.03024, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.81341e-08  8.81341e-08  1.15711e-08
      low eigenvalue method done, cpu time[sec] = 1.03189, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.81e-08  1.16e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   7.9e-09  1.16e-08         1
         *Z       ---       ---  5.89e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.15711e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.71059e-33  3.82596e-34  1.12336e-35  6.22394e-35  2.03352e-36  7.77509e-36  5.37784e-41  1.94038e-57

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.25957, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 510 K
            Well    Collision, 1/sec
              W1          8.2639e+09
      global relaxation matrix dimension = 410
      setting global matrices ... done, cpu time[sec] = 0.345243, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.29696, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            589.424      99.8072      25.9426      32.0604       3.5324      408.299      41.5717     0.117843
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.02387, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002661, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.03398, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.28857e-08  7.28857e-08  8.66016e-09
      low eigenvalue method done, cpu time[sec] = 1.0351, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.29e-08  8.66e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.51e-09  8.66e-09         1
         *Z       ---       ---  5.89e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 8.66016e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.28954e-33  2.78375e-34  8.28669e-36  4.48003e-35   1.4825e-36  6.45516e-36   5.4575e-41  1.94067e-57

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.2882, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 510 K
            Well    Collision, 1/sec
              W1         9.91668e+09
      global relaxation matrix dimension = 410
      setting global matrices ... done, cpu time[sec] = 0.345127, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.29593, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            491.186      83.1727      21.6189       26.717      2.94366      340.249      34.6431    0.0982026
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.02723, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00267, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.03712, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.22662e-08  6.22662e-08  6.78754e-09
      low eigenvalue method done, cpu time[sec] = 1.03822, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.23e-08  6.79e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.55e-09  6.79e-09         1
         *Z       ---       ---  5.89e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 6.78754e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.01624e-33   2.1334e-34  6.42561e-36  3.40753e-35  1.13909e-36  5.48539e-36  5.52031e-41  1.94069e-57

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.2905, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 510 K
            Well    Collision, 1/sec
              W1         1.15695e+10
      global relaxation matrix dimension = 410
      setting global matrices ... done, cpu time[sec] = 0.344488, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.29869, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            421.017      71.2909      18.5305      22.9003      2.52314      291.642      29.6941    0.0841736
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.02201, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002663, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.03188, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.44214e-08  5.44214e-08  5.49745e-09
      low eigenvalue method done, cpu time[sec] = 1.03295, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.44e-08   5.5e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.84e-09   5.5e-09         1
         *Z       ---       ---  5.89e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 5.49745e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  8.26661e-34  1.69628e-34  5.16122e-36  2.69418e-35  9.08203e-37  4.74433e-36  5.56672e-41  1.94084e-57

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.2881, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 510 K
            Well    Collision, 1/sec
              W1         1.32222e+10
      global relaxation matrix dimension = 410
      setting global matrices ... done, cpu time[sec] = 0.345674, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.30168, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             368.39      62.3795      16.2141      20.0377      2.20775      255.187      25.9823    0.0736519
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.01149, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002668, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.02143, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.83771e-08  4.83771e-08  4.56372e-09
      low eigenvalue method done, cpu time[sec] = 1.02287, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.84e-08  4.56e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.29e-09  4.56e-09         1
         *Z       ---       ---  5.89e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 4.56372e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  6.88694e-34  1.38635e-34  4.25609e-36  2.19243e-35  7.44329e-37  4.16082e-36  5.59789e-41  1.94095e-57

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.28048, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 520 K
      Energy reference = 31233 1/cm
      Energy step      = 90 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -87.3 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.006415
         W1 Well: collisional kernel bandwidth = 54
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.40642
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.230151
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.23625
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 1.0859
         W1 Well: minimal relaxation eigenvalue = 0.0815911
         W1 Well: maximal relaxation eigenvalue = 0.978042
         W1 Well:       grid size = 405
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -5217 1/cm
         B1 Barrier:        grid size = 348
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -86 1/cm
         B2 Barrier:        grid size = 345
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 182 1/cm
         B3 Barrier:        grid size = 399
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4676 1/cm
         B4 Barrier:        grid size = 416
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6207 1/cm
         B5 Barrier: nonpositive number of states at -23127 1/cm => truncating
         B5 Barrier:        grid size = 604
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23126 1/cm
         B6 Barrier:        grid size = 331
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1442 1/cm
         B7 Barrier:        grid size = 295
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4682 1/cm
         B8 Barrier:        grid size = 161
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16742 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 2.32861, elapsed time[sec] = 0
      B4 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 405
      MasterEquation::Barrier::truncate: real weight = 5.05228e+43
      MasterEquation::Barrier::truncate: effective weight = 2.07179e+40
      B5 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 405
      MasterEquation::Barrier::truncate: real weight = 1.87658e+42
      MasterEquation::Barrier::truncate: effective weight = 7.23072e+38
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1  -5217  -5217 2.42e+09 9.74e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -86 1.63e+15
         B2    183 2.78e+14
         B3  -4676 7.26e+13
         B4  -5217 8.96e+13
         B5  -5217  9.9e+12
         B6   1443 1.14e+15
         B7   4683 1.17e+14
         B8  16743 3.48e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  4.54e-09  9.03e-09   1.8e-13   2.1e-15   5.7e-37  5.15e-06    0.0788  1.27e+14
          R   2.2e+08         1      1.99  3.97e-05  4.63e-07  1.25e-28  1.13e+03  1.73e+07   2.8e+22
         P1  1.11e+08     0.503         1  1.99e-05  2.33e-07  6.31e-29       571  8.72e+06  1.41e+22
         P2  5.55e+12  2.52e+04  5.01e+04         1    0.0117  3.16e-24  2.86e+07  4.37e+11  7.06e+26
         P3  4.76e+14  2.16e+06   4.3e+06      85.7         1  2.71e-22  2.45e+09  3.75e+13  6.05e+28
         P4  1.76e+36  7.97e+27  1.59e+28  3.16e+23  3.69e+21         1  9.05e+30  1.38e+35  2.23e+50
         P5  1.94e+05  0.000881   0.00175   3.5e-08  4.08e-10  1.11e-31         1  1.53e+04  2.47e+19
         P6      12.7  5.76e-08  1.15e-07  2.29e-12  2.67e-14  7.23e-36  6.54e-05         1  1.61e+15
         P7  7.86e-15  3.57e-23   7.1e-23  1.42e-27  1.65e-29  4.48e-51  4.05e-20   6.2e-16         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  1.95e+12  3.87e+12  7.72e+07     9e+05  2.44e-16  2.21e+15  3.37e+19  5.45e+34
          R  5.14e-13         1      1.99  3.97e-05  4.63e-07  1.25e-28  1.13e+03  1.73e+07   2.8e+22
         P1  2.59e-13     0.503         1  1.99e-05  2.33e-07  6.31e-29       571  8.72e+06  1.41e+22
         P2   1.3e-08  2.52e+04  5.01e+04         1    0.0117  3.16e-24  2.86e+07  4.37e+11  7.06e+26
         P3  1.11e-06  2.16e+06   4.3e+06      85.7         1  2.71e-22  2.45e+09  3.75e+13  6.05e+28
         P4   4.1e+15  7.97e+27  1.59e+28  3.16e+23  3.69e+21         1  9.05e+30  1.38e+35  2.23e+50
         P5  4.53e-16  0.000881   0.00175   3.5e-08  4.08e-10  1.11e-31         1  1.53e+04  2.47e+19
         P6  2.96e-20  5.76e-08  1.15e-07  2.29e-12  2.67e-14  7.23e-36  6.54e-05         1  1.61e+15
         P7  1.84e-35  3.57e-23   7.1e-23  1.42e-27  1.65e-29  4.48e-51  4.05e-20   6.2e-16         1
   MasterEquation::set:  done, cpu time[sec] = 2.34234, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 520 K
            Well    Collision, 1/sec
              W1         3.26328e+08
      global relaxation matrix dimension = 405
      setting global matrices ... done, cpu time[sec] = 0.336745, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.07892, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            15340.1      2622.98      684.717      844.319      93.2973      10730.5      1104.24      3.27751
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.19296, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00266, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.20295, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.79479e-07   8.7948e-07  2.62584e-07
      low eigenvalue method done, cpu time[sec] = 1.20406, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.79e-07  2.63e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.18e-08  2.63e-07         1
         *Z       ---       ---  3.64e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.62584e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.68253e-31  6.47402e-32  1.90268e-33  1.59603e-32  4.31776e-34  1.47725e-34  3.58002e-40  2.71214e-56

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.21553, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 520 K
            Well    Collision, 1/sec
              W1         9.78985e+08
      global relaxation matrix dimension = 405
      setting global matrices ... done, cpu time[sec] = 0.336715, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.13209, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            5113.35      874.326      228.239       281.44      31.0991      3576.84      368.082       1.0925
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.14169, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002596, elapsed time[sec] = 1
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.15159, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.20381e-07  4.20381e-07  1.06002e-07
      low eigenvalue method done, cpu time[sec] = 1.15269, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0   4.2e-07  1.06e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.85e-08  1.06e-07         1
         *Z       ---       ---  3.64e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.06002e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  7.33028e-32   2.2856e-32  6.33063e-34  4.45256e-33  1.29701e-34  1.27427e-34  3.60924e-40  2.69675e-56

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.21986, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 520 K
            Well    Collision, 1/sec
              W1         1.63164e+09
      global relaxation matrix dimension = 405
      setting global matrices ... done, cpu time[sec] = 0.337443, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.11945, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            3068.01      524.595      136.943      168.864      18.6595       2146.1      220.849     0.655502
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.15666, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002593, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.16654, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.90856e-07  2.90856e-07  6.49085e-08
      low eigenvalue method done, cpu time[sec] = 1.16767, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.91e-07  6.49e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.65e-08  6.49e-08         1
         *Z       ---       ---  3.64e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 6.49085e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0   4.6193e-32  1.30511e-32  3.62295e-34  2.36672e-33  7.13077e-35  1.08325e-34  3.64011e-40  2.69731e-56

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.22175, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 520 K
            Well    Collision, 1/sec
              W1          2.2843e+09
      global relaxation matrix dimension = 405
      setting global matrices ... done, cpu time[sec] = 0.33694, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.94782, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2191.44      374.711      97.8168      120.617      13.3282      1532.93      157.749     0.468216
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.317, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002587, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.32681, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.25931e-07  2.25931e-07  4.58151e-08
      low eigenvalue method done, cpu time[sec] = 1.32842, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.26e-07  4.58e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.05e-08  4.58e-08         1
         *Z       ---       ---  3.64e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 4.58151e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  3.31559e-32  8.79095e-33  2.46179e-34  1.53594e-33  4.72972e-35  9.36413e-35  3.67189e-40  2.69773e-56

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.20977, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 520 K
            Well    Collision, 1/sec
              W1         2.93695e+09
      global relaxation matrix dimension = 405
      setting global matrices ... done, cpu time[sec] = 0.337559, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.38896, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1704.45      291.442      76.0797      93.8132      10.3664      1192.28      122.694     0.364168
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.87741, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002575, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.886708, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.86098e-07  1.86098e-07  3.48491e-08
      low eigenvalue method done, cpu time[sec] = 0.887818, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.86e-07  3.48e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.68e-08  3.48e-08         1
         *Z       ---       ---  3.64e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.48491e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.55105e-32  6.45756e-33  1.82572e-34  1.10217e-33  3.44878e-35  8.22472e-35  3.70394e-40  2.69764e-56

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.21704, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 520 K
            Well    Collision, 1/sec
              W1         3.26328e+09
      global relaxation matrix dimension = 405
      setting global matrices ... done, cpu time[sec] = 0.337619, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.1192, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1534.01      262.298      68.4717      84.4319      9.32973      1073.05      110.424     0.327751
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.15311, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002584, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.16299, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.71334e-07  1.71334e-07   3.0966e-08
      low eigenvalue method done, cpu time[sec] = 1.16456, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.71e-07   3.1e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.54e-08   3.1e-08         1
         *Z       ---       ---  3.64e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.0966e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.27711e-32  5.65515e-33  1.60634e-34  9.56772e-34  3.01373e-35  7.74728e-35  3.71987e-40  2.69754e-56

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.21684, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 520 K
            Well    Collision, 1/sec
              W1         4.89492e+09
      global relaxation matrix dimension = 405
      setting global matrices ... done, cpu time[sec] = 0.336633, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.14577, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1022.67      174.865      45.6478      56.2879      6.21982      715.367      73.6163     0.218501
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.12633, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002577, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.13627, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   1.2374e-07   1.2374e-07  1.92814e-08
      low eigenvalue method done, cpu time[sec] = 1.13739, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.24e-07  1.93e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.11e-08  1.93e-08         1
         *Z       ---       ---  3.64e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.92814e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.44087e-32  3.33219e-33  9.66603e-35   5.4774e-34  1.76904e-35  5.97234e-35  3.79642e-40  2.69774e-56

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.11184, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 520 K
            Well    Collision, 1/sec
              W1         6.52656e+09
      global relaxation matrix dimension = 405
      setting global matrices ... done, cpu time[sec] = 0.335902, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.14388, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            767.003      131.149      34.2359       42.216      4.66486      536.526      55.2122     0.163876
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.13066, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002586, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.13979, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.75549e-08  9.75548e-08  1.35246e-08
      low eigenvalue method done, cpu time[sec] = 1.14031, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.76e-08  1.35e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   8.7e-09  1.35e-08         1
         *Z       ---       ---  3.64e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.35246e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.02098e-32  2.25004e-33  6.64057e-35   3.6392e-34  1.19574e-35  4.82359e-35  3.86432e-40  2.69768e-56

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.21416, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 520 K
            Well    Collision, 1/sec
              W1         8.15821e+09
      global relaxation matrix dimension = 405
      setting global matrices ... done, cpu time[sec] = 0.33628, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.14605, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            613.602      104.919      27.3887      33.7728      3.73189       429.22      44.1698       0.1311
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.12785, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00261, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.13685, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.08198e-08  8.08198e-08  1.01639e-08
      low eigenvalue method done, cpu time[sec] = 1.13736, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.08e-08  1.02e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.18e-09  1.02e-08         1
         *Z       ---       ---  3.64e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.01638e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  7.72806e-33   1.6431e-33   4.9196e-35  2.62994e-34  8.75414e-36  4.02005e-35  3.92107e-40    2.698e-56

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.21269, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 520 K
            Well    Collision, 1/sec
              W1         9.78985e+09
      global relaxation matrix dimension = 405
      setting global matrices ... done, cpu time[sec] = 0.336119, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.16318, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            511.335      87.4326      22.8239       28.144      3.10991      357.684      36.8082      0.10925
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.11924, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002598, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.12812, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.91389e-08  6.91389e-08  7.99294e-09
      low eigenvalue method done, cpu time[sec] = 1.12863, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.91e-08  7.99e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.13e-09  7.99e-09         1
         *Z       ---       ---  3.64e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 7.99294e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  6.11058e-33  1.26301e-33  3.82815e-35  2.00685e-34  6.74955e-36  3.42721e-35  3.96601e-40  2.69803e-56

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.2242, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 520 K
            Well    Collision, 1/sec
              W1         1.14215e+10
      global relaxation matrix dimension = 405
      setting global matrices ... done, cpu time[sec] = 0.335113, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.17459, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            438.287      74.9422      19.5634      24.1234      2.66564      306.586      31.5498    0.0936432
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.1014, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00257, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.1106, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.04946e-08  6.04946e-08  6.49222e-09
      low eigenvalue method done, cpu time[sec] = 1.11166, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.05e-08  6.49e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.35e-09  6.49e-09         1
         *Z       ---       ---  3.64e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 6.49222e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  4.98474e-33  1.00676e-33  3.08403e-35  1.59108e-34  5.39719e-36  2.97257e-35  3.99943e-40  2.69825e-56

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.21881, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 520 K
            Well    Collision, 1/sec
              W1         1.30531e+10
      global relaxation matrix dimension = 405
      setting global matrices ... done, cpu time[sec] = 0.337025, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.14802, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            383.501      65.5744      17.1179       21.108      2.33243      268.263      27.6061    0.0819378
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.11972, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00257, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.12948, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.38247e-08  5.38247e-08  5.40284e-09
      low eigenvalue method done, cpu time[sec] = 1.13058, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.38e-08   5.4e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.75e-09   5.4e-09         1
         *Z       ---       ---  3.64e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 5.40284e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  4.16298e-33  8.24612e-34  2.54974e-35  1.29782e-34   4.4345e-36  2.61347e-35  4.02215e-40   2.6984e-56

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.21433, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 530 K
      Energy reference = 31511 1/cm
      Energy step      = 91 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -87.2 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.006644
         W1 Well: collisional kernel bandwidth = 54
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.408059
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.229513
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.229521
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 1.09185
         W1 Well: minimal relaxation eigenvalue = 0.0810753
         W1 Well: maximal relaxation eigenvalue = 0.979939
         W1 Well:       grid size = 404
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -5253 1/cm
         B1 Barrier:        grid size = 347
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -65 1/cm
         B2 Barrier:        grid size = 344
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 206 1/cm
         B3 Barrier:        grid size = 397
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4615 1/cm
         B4 Barrier:        grid size = 415
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6253 1/cm
         B5 Barrier: nonpositive number of states at -23271 1/cm => truncating
         B5 Barrier:        grid size = 602
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23271 1/cm
         B6 Barrier:        grid size = 330
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1480 1/cm
         B7 Barrier:        grid size = 295
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4666 1/cm
         B8 Barrier:        grid size = 162
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16769 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 2.32715, elapsed time[sec] = 0
      B4 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 404
      MasterEquation::Barrier::truncate: real weight = 2.03707e+43
      MasterEquation::Barrier::truncate: effective weight = 8.44621e+39
      B5 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 404
      MasterEquation::Barrier::truncate: real weight = 7.15693e+41
      MasterEquation::Barrier::truncate: effective weight = 2.83389e+38
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1  -5253  -5253 2.39e+09 1.02e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -65 1.75e+15
         B2    207 3.02e+14
         B3  -4615 7.92e+13
         B4  -5253 9.74e+13
         B5  -5253 1.08e+13
         B6   1481 1.24e+15
         B7   4667 1.28e+14
         B8  16770 3.99e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  3.48e-09  6.87e-09  1.76e-13  2.24e-15  1.58e-36  3.68e-06     0.048  4.17e+13
          R  2.87e+08         1      1.97  5.06e-05  6.43e-07  4.52e-28  1.06e+03  1.38e+07   1.2e+22
         P1  1.46e+08     0.507         1  2.57e-05  3.26e-07   2.3e-28       535  6.99e+06  6.07e+21
         P2  5.67e+12  1.98e+04  3.89e+04         1    0.0127  8.94e-24  2.08e+07  2.72e+11  2.36e+26
         P3  4.46e+14  1.55e+06  3.06e+06      78.7         1  7.03e-22  1.64e+09  2.14e+13  1.86e+28
         P4  6.34e+35  2.21e+27  4.36e+27  1.12e+23  1.42e+21         1  2.33e+30  3.04e+34  2.64e+49
         P5  2.72e+05  0.000948   0.00187   4.8e-08   6.1e-10  4.29e-31         1  1.31e+04  1.13e+19
         P6      20.8  7.26e-08  1.43e-07  3.68e-12  4.67e-14  3.29e-35  7.66e-05         1  8.69e+14
         P7   2.4e-14  8.36e-23  1.65e-22  4.23e-27  5.38e-29  3.78e-50  8.82e-20  1.15e-15         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1   3.6e+11  7.11e+11  1.82e+07  2.32e+05  1.63e-16   3.8e+14  4.96e+18  4.31e+33
          R  2.77e-12         1      1.97  5.06e-05  6.43e-07  4.52e-28  1.06e+03  1.38e+07   1.2e+22
         P1  1.41e-12     0.507         1  2.57e-05  3.26e-07   2.3e-28       535  6.99e+06  6.07e+21
         P2  5.48e-08  1.98e+04  3.89e+04         1    0.0127  8.94e-24  2.08e+07  2.72e+11  2.36e+26
         P3  4.31e-06  1.55e+06  3.06e+06      78.7         1  7.03e-22  1.64e+09  2.14e+13  1.86e+28
         P4  6.13e+15  2.21e+27  4.36e+27  1.12e+23  1.42e+21         1  2.33e+30  3.04e+34  2.64e+49
         P5  2.63e-15  0.000948   0.00187   4.8e-08   6.1e-10  4.29e-31         1  1.31e+04  1.13e+19
         P6  2.01e-19  7.26e-08  1.43e-07  3.68e-12  4.67e-14  3.29e-35  7.66e-05         1  8.69e+14
         P7  2.32e-34  8.36e-23  1.65e-22  4.23e-27  5.38e-29  3.78e-50  8.82e-20  1.15e-15         1
   MasterEquation::set:  done, cpu time[sec] = 2.34043, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 530 K
            Well    Collision, 1/sec
              W1          3.2224e+08
      global relaxation matrix dimension = 404
      setting global matrices ... done, cpu time[sec] = 0.336481, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.03175, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            15959.7      2755.51      722.373      888.815      98.4958      11272.1      1172.23      3.63845
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.23653, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002594, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.24593, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.07214e-06  1.07214e-06   3.3291e-07
      low eigenvalue method done, cpu time[sec] = 1.24725, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.07e-06  3.33e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.95e-08  3.33e-07         1
         *Z       ---       ---  2.15e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.3291e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  8.96064e-31  3.41375e-31  9.99781e-33  8.31853e-32  2.25756e-33  8.24825e-34  2.39788e-39  3.39584e-55

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.21033, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 530 K
            Well    Collision, 1/sec
              W1         9.66721e+08
      global relaxation matrix dimension = 404
      setting global matrices ... done, cpu time[sec] = 0.336794, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.06757, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            5319.89      918.504      240.791      296.272      32.8319      3757.36      390.744      1.21282
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.20369, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002571, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.21355, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   5.1968e-07   5.1968e-07  1.36464e-07
      low eigenvalue method done, cpu time[sec] = 1.21468, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   5.2e-07  1.36e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.75e-08  1.36e-07         1
         *Z       ---       ---  2.15e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.36464e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  3.96192e-31  1.22135e-31   3.3825e-33   2.3585e-32  6.89672e-34   7.1712e-34  2.41741e-39  3.39603e-55

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.21082, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 530 K
            Well    Collision, 1/sec
              W1          1.6112e+09
      global relaxation matrix dimension = 404
      setting global matrices ... done, cpu time[sec] = 0.336212, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.06036, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            3191.93      551.102      144.475      177.763      19.6992      2254.42      234.446      0.72769
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.21637, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002559, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.22606, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.61655e-07  3.61655e-07  8.42256e-08
      low eigenvalue method done, cpu time[sec] = 1.22718, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.62e-07  8.42e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.28e-08  8.42e-08         1
         *Z       ---       ---  2.15e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 8.42256e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.51606e-31  7.02322e-32  1.95223e-33  1.26381e-32  3.82392e-34  6.13083e-34  2.43802e-39  3.39389e-55

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.21598, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 530 K
            Well    Collision, 1/sec
              W1         2.25568e+09
      global relaxation matrix dimension = 404
      setting global matrices ... done, cpu time[sec] = 0.335734, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.11119, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2279.95      393.644      103.196      126.974      14.0708       1610.3      167.462     0.519778
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.176, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002563, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.18555, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.81938e-07  2.81938e-07  5.97765e-08
      low eigenvalue method done, cpu time[sec] = 1.18664, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.82e-07  5.98e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.54e-08  5.98e-08         1
         *Z       ---       ---  2.15e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 5.97765e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.81569e-31  4.75388e-32  1.33428e-33  8.24714e-33  2.55105e-34  5.32294e-34  2.45921e-39  3.39442e-55

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.22671, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 530 K
            Well    Collision, 1/sec
              W1         2.90016e+09
      global relaxation matrix dimension = 404
      setting global matrices ... done, cpu time[sec] = 0.335981, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.09861, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             1773.3      306.168      80.2636      98.7572       10.944      1252.45      130.248     0.404272
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.1896, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002573, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.19924, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.32824e-07  2.32824e-07  4.56609e-08
      low eigenvalue method done, cpu time[sec] = 1.20034, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.33e-07  4.57e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.09e-08  4.57e-08         1
         *Z       ---       ---  2.15e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 4.56609e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.40281e-31  3.50523e-32  9.93953e-34    5.943e-33   1.8684e-34  4.69192e-34  2.48053e-39  3.39437e-55

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.22776, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 530 K
            Well    Collision, 1/sec
              W1          3.2224e+09
      global relaxation matrix dimension = 404
      setting global matrices ... done, cpu time[sec] = 0.335471, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.06597, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1595.97      275.551      72.2373      88.8815      9.84958      1127.21      117.223     0.363845
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.20013, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002567, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.20973, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.14575e-07  2.14576e-07   4.0646e-08
      low eigenvalue method done, cpu time[sec] = 1.21084, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.15e-07  4.06e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.93e-08  4.06e-08         1
         *Z       ---       ---  2.15e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 4.0646e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.25439e-31  3.07461e-32  8.76178e-34  5.16819e-33  1.63577e-34  4.42647e-34  2.49112e-39  3.39466e-55

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.20361, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 530 K
            Well    Collision, 1/sec
              W1         4.83361e+09
      global relaxation matrix dimension = 404
      setting global matrices ... done, cpu time[sec] = 0.336268, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.09232, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1063.98      183.701      48.1582      59.2543      6.56639      751.473      78.1488     0.242563
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.18531, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002561, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.19456, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.55561e-07  1.55561e-07  2.54878e-08
      low eigenvalue method done, cpu time[sec] = 1.19593, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.56e-07  2.55e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.39e-08  2.55e-08         1
         *Z       ---       ---  2.15e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.54878e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  7.99274e-32  1.82312e-32  5.31159e-34  2.97939e-33  9.67256e-35  3.43421e-34  2.54192e-39  3.39469e-55

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.21438, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 530 K
            Well    Collision, 1/sec
              W1         6.44481e+09
      global relaxation matrix dimension = 404
      setting global matrices ... done, cpu time[sec] = 0.335545, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.11324, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            797.984      137.776      36.1186      44.4407      4.92479      563.605      58.6116     0.181922
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.16362, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002565, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.17337, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   1.2295e-07   1.2295e-07  1.79696e-08
      low eigenvalue method done, cpu time[sec] = 1.17447, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.23e-07   1.8e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.09e-08   1.8e-08         1
         *Z       ---       ---  2.15e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.79696e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  5.69222e-32  1.23668e-32   3.6687e-34  1.98945e-33  6.57263e-35  2.78717e-34   2.5869e-39  3.39489e-55

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.21607, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 530 K
            Well    Collision, 1/sec
              W1         8.05601e+09
      global relaxation matrix dimension = 404
      setting global matrices ... done, cpu time[sec] = 0.335203, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.07387, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            638.387       110.22      28.8949      35.5526      3.93983      450.884      46.8893     0.145538
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.17679, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00257, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.18655, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.02045e-07  1.02045e-07  1.35586e-08
      low eigenvalue method done, cpu time[sec] = 1.18765, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.02e-07  1.36e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.04e-09  1.36e-08         1
         *Z       ---       ---  2.15e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.35586e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  4.32571e-32  9.06335e-33  2.72937e-34  1.44334e-33  4.83185e-35  2.33203e-34  2.62449e-39  3.39498e-55

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.189, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 530 K
            Well    Collision, 1/sec
              W1         9.66721e+09
      global relaxation matrix dimension = 404
      setting global matrices ... done, cpu time[sec] = 0.335845, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.11341, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            531.989      91.8504      24.0791      29.6272      3.28319      375.736      39.0744     0.121282
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.18411, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002563, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.19391, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.74204e-08  8.74204e-08  1.06978e-08
      low eigenvalue method done, cpu time[sec] = 1.195, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.74e-08  1.07e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.72e-09  1.07e-08         1
         *Z       ---       ---  2.15e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.06978e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  3.43152e-32  6.98725e-33  2.13118e-34  1.10491e-33  3.73808e-35  1.99472e-34  2.65428e-39   3.3952e-55

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.23836, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 530 K
            Well    Collision, 1/sec
              W1         1.12784e+10
      global relaxation matrix dimension = 404
      setting global matrices ... done, cpu time[sec] = 0.336973, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.09204, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            455.991      78.7289      20.6392      25.3947      2.81417       322.06      33.4924     0.103956
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.17708, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002566, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.18694, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.65781e-08  7.65781e-08   8.7135e-09
      low eigenvalue method done, cpu time[sec] = 1.18804, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.66e-08  8.71e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.75e-09  8.71e-09         1
         *Z       ---       ---  2.15e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 8.7135e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.80704e-32   5.5835e-33  1.72194e-34  8.78367e-34   2.9977e-35  1.73506e-34   2.6765e-39  3.39539e-55

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.21537, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 530 K
            Well    Collision, 1/sec
              W1         1.28896e+10
      global relaxation matrix dimension = 404
      setting global matrices ... done, cpu time[sec] = 0.337795, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.1186, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            398.992      68.8878      18.0593      22.2204       2.4624      281.802      29.3058    0.0909612
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.16075, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002564, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.17056, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.81997e-08  6.81997e-08  7.26898e-09
      low eigenvalue method done, cpu time[sec] = 1.17191, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.82e-08  7.27e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0     6e-09  7.27e-09         1
         *Z       ---       ---  2.15e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 7.26898e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.34993e-32  4.58315e-33  1.42723e-34  7.18147e-34  2.46914e-35   1.5293e-34   2.6917e-39  3.39552e-55

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.22539, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 540 K
      Energy reference = 31790 1/cm
      Energy step      = 93 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -87.2 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.007788
         W1 Well: collisional kernel bandwidth = 54
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.401104
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.224113
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.233883
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 1.05645
         W1 Well: minimal relaxation eigenvalue = 0.0805393
         W1 Well: maximal relaxation eigenvalue = 0.979194
         W1 Well:       grid size = 399
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -5317 1/cm
         B1 Barrier:        grid size = 342
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -16 1/cm
         B2 Barrier:        grid size = 340
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 169 1/cm
         B3 Barrier:        grid size = 392
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4666 1/cm
         B4 Barrier:        grid size = 409
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6247 1/cm
         B5 Barrier: nonpositive number of states at -23267 1/cm => truncating
         B5 Barrier:        grid size = 592
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23266 1/cm
         B6 Barrier:        grid size = 326
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1471 1/cm
         B7 Barrier:        grid size = 292
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4633 1/cm
         B8 Barrier:        grid size = 162
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16723 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 2.28254, elapsed time[sec] = 1
      B4 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 399
      MasterEquation::Barrier::truncate: real weight = 8.51285e+42
      MasterEquation::Barrier::truncate: effective weight = 3.60722e+39
      B5 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 399
      MasterEquation::Barrier::truncate: real weight = 2.85923e+41
      MasterEquation::Barrier::truncate: effective weight = 1.17181e+38
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1  -5317  -5317 2.34e+09 1.07e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -16 1.88e+15
         B2    170 3.28e+14
         B3  -4666 8.63e+13
         B4  -5317 1.06e+14
         B5  -5317 1.18e+13
         B6   1472 1.34e+15
         B7   4634 1.41e+14
         B8  16724 4.57e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  2.85e-09  5.56e-09  1.82e-13  2.51e-15  4.43e-36   2.8e-06    0.0314   1.5e+13
          R  3.51e+08         1      1.95   6.4e-05  8.83e-07  1.56e-27       984   1.1e+07  5.28e+21
         P1   1.8e+08     0.512         1  3.27e-05  4.52e-07  7.96e-28       503  5.64e+06   2.7e+21
         P2  5.49e+12  1.56e+04  3.05e+04         1    0.0138  2.43e-23  1.54e+07  1.72e+11  8.25e+25
         P3  3.98e+14  1.13e+06  2.21e+06      72.5         1  1.76e-21  1.11e+09  1.25e+13  5.98e+27
         P4  2.26e+35  6.42e+26  1.26e+27  4.11e+22  5.67e+20         1  6.32e+29  7.08e+33  3.39e+48
         P5  3.57e+05   0.00102   0.00199  6.51e-08  8.98e-10  1.58e-30         1  1.12e+04  5.37e+18
         P6      31.9  9.07e-08  1.77e-07  5.81e-12  8.01e-14  1.41e-34  8.92e-05         1  4.79e+14
         P7  6.66e-14  1.89e-22   3.7e-22  1.21e-26  1.67e-28  2.95e-49  1.86e-19  2.09e-15         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  7.11e+10  1.39e+11  4.55e+06  6.28e+04  1.11e-16  6.99e+13  7.84e+17  3.75e+32
          R  1.41e-11         1      1.95   6.4e-05  8.83e-07  1.56e-27       984   1.1e+07  5.28e+21
         P1   7.2e-12     0.512         1  3.27e-05  4.52e-07  7.96e-28       503  5.64e+06   2.7e+21
         P2   2.2e-07  1.56e+04  3.05e+04         1    0.0138  2.43e-23  1.54e+07  1.72e+11  8.25e+25
         P3  1.59e-05  1.13e+06  2.21e+06      72.5         1  1.76e-21  1.11e+09  1.25e+13  5.98e+27
         P4  9.04e+15  6.42e+26  1.26e+27  4.11e+22  5.67e+20         1  6.32e+29  7.08e+33  3.39e+48
         P5  1.43e-14   0.00102   0.00199  6.51e-08  8.98e-10  1.58e-30         1  1.12e+04  5.37e+18
         P6  1.28e-18  9.07e-08  1.77e-07  5.81e-12  8.01e-14  1.41e-34  8.92e-05         1  4.79e+14
         P7  2.66e-33  1.89e-22   3.7e-22  1.21e-26  1.67e-28  2.95e-49  1.86e-19  2.09e-15         1
   MasterEquation::set:  done, cpu time[sec] = 2.29631, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 540 K
            Well    Collision, 1/sec
              W1         3.18285e+08
      global relaxation matrix dimension = 399
      setting global matrices ... done, cpu time[sec] = 0.327689, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.90208, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            16594.6      2892.94      761.574       935.04      103.912      11832.6      1243.35      4.03107
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.32376, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002535, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.33289, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.21855e-06  1.21855e-06  3.91831e-07
      low eigenvalue method done, cpu time[sec] = 1.33428, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.22e-06  3.92e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.13e-07  3.92e-07         1
         *Z       ---       ---  1.33e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.91831e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  4.48144e-30  1.69187e-30   4.9369e-32   4.0758e-31  1.10952e-32  4.34548e-33  1.49472e-38  3.88676e-54

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.14154, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 540 K
            Well    Collision, 1/sec
              W1         9.54855e+08
      global relaxation matrix dimension = 399
      setting global matrices ... done, cpu time[sec] = 0.327016, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.95336, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            5531.53      964.314      253.858       311.68      34.6372       3944.2      414.451      1.34369
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.27114, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002517, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.28083, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.98538e-07  5.98538e-07   1.6302e-07
      low eigenvalue method done, cpu time[sec] = 1.28194, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.99e-07  1.63e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.45e-08  1.63e-07         1
         *Z       ---       ---  1.33e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.6302e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.01021e-30  6.13102e-31  1.69763e-32  1.17389e-31  3.44552e-33  3.79724e-33  1.50685e-38  3.88663e-54

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.14412, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 540 K
            Well    Collision, 1/sec
              W1         1.59142e+09
      global relaxation matrix dimension = 399
      setting global matrices ... done, cpu time[sec] = 0.326596, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.94426, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            3318.92      578.588      152.315      187.008      20.7823      2366.52       248.67     0.806213
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.28035, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002505, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.28999, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.18853e-07  4.18853e-07  1.01396e-07
      low eigenvalue method done, cpu time[sec] = 1.29106, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.19e-07  1.01e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.78e-08  1.01e-07         1
         *Z       ---       ---  1.33e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.01396e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0   1.2863e-30  3.54969e-31  9.87934e-33  6.34014e-32  1.92621e-33  3.26094e-33  1.51963e-38  3.88751e-54

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.14281, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 540 K
            Well    Collision, 1/sec
              W1         2.22799e+09
      global relaxation matrix dimension = 399
      setting global matrices ... done, cpu time[sec] = 0.327627, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.77394, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2370.66      413.277      108.796      133.577      14.8445      1690.37      177.622     0.575867
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.44852, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002489, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.45807, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.27654e-07  3.27654e-07  7.23485e-08
      low eigenvalue method done, cpu time[sec] = 1.45919, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.28e-07  7.23e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.94e-08  7.23e-08         1
         *Z       ---       ---  1.33e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 7.23485e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  9.33135e-31  2.41418e-31  6.79067e-33   4.1597e-32  1.29232e-33  2.84172e-33  1.53275e-38  3.88738e-54

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.14002, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 540 K
            Well    Collision, 1/sec
              W1         2.86456e+09
      global relaxation matrix dimension = 399
      setting global matrices ... done, cpu time[sec] = 0.32747, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.96066, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1843.84      321.438      84.6194      103.893      11.5457      1314.73       138.15     0.447896
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.2688, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002504, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.27838, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.71243e-07  2.71243e-07  5.54925e-08
      low eigenvalue method done, cpu time[sec] = 1.27948, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.71e-07  5.55e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.43e-08  5.55e-08         1
         *Z       ---       ---  1.33e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 5.54925e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0   7.2388e-31  1.78663e-31  5.08074e-33  3.00992e-32  9.50604e-34  2.51269e-33  1.54594e-38  3.88753e-54

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.14469, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 540 K
            Well    Collision, 1/sec
              W1         3.18285e+09
      global relaxation matrix dimension = 399
      setting global matrices ... done, cpu time[sec] = 0.328177, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.96814, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1659.46      289.294      76.1574       93.504      10.3912      1183.26      124.335     0.403107
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.25561, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002505, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.26519, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.50233e-07  2.50233e-07  4.94847e-08
      low eigenvalue method done, cpu time[sec] = 1.26625, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   2.5e-07  4.95e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.24e-08  4.95e-08         1
         *Z       ---       ---  1.33e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 4.94847e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  6.48415e-31  1.56961e-31  4.48704e-33   2.6221e-32  8.33783e-34  2.37385e-33  1.55248e-38  3.88749e-54

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.14549, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 540 K
            Well    Collision, 1/sec
              W1         4.77427e+09
      global relaxation matrix dimension = 399
      setting global matrices ... done, cpu time[sec] = 0.329465, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.97719, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1106.31      192.863      50.7716       62.336      6.92745      788.841      82.8902     0.268738
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.24651, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002519, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.25615, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.82079e-07  1.82079e-07  3.12454e-08
      low eigenvalue method done, cpu time[sec] = 1.25726, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.82e-07  3.12e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.62e-08  3.12e-08         1
         *Z       ---       ---  1.33e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.12454e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  4.15985e-31  9.36482e-32  2.74003e-33  1.52198e-32  4.96592e-34  1.85249e-33  1.58383e-38  3.88766e-54

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.14401, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 540 K
            Well    Collision, 1/sec
              W1          6.3657e+09
      global relaxation matrix dimension = 399
      setting global matrices ... done, cpu time[sec] = 0.327327, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.97294, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             829.73      144.647      38.0787       46.752      5.19558      591.631      62.1676     0.201553
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.25359, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002509, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.26338, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.44259e-07  1.44259e-07  2.21397e-08
      low eigenvalue method done, cpu time[sec] = 1.26445, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.44e-07  2.21e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.28e-08  2.21e-08         1
         *Z       ---       ---  1.33e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.21397e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.97727e-31  6.38108e-32  1.90254e-33  1.02131e-32  3.39203e-34  1.51029e-33  1.61155e-38  3.88782e-54

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.14459, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 540 K
            Well    Collision, 1/sec
              W1         7.95712e+09
      global relaxation matrix dimension = 399
      setting global matrices ... done, cpu time[sec] = 0.328115, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.97569, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            663.784      115.718       30.463      37.4016      4.15647      473.305      49.7341     0.161243
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.25497, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002492, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.26455, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.19945e-07  1.19945e-07   1.6771e-08
      low eigenvalue method done, cpu time[sec] = 1.26564, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.2e-07  1.68e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.06e-08  1.68e-08         1
         *Z       ---       ---  1.33e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.6771e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.27138e-31  4.69306e-32  1.42128e-33  7.43822e-33  2.50383e-34  1.26835e-33  1.63473e-38  3.88807e-54

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.14873, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 540 K
            Well    Collision, 1/sec
              W1         9.54855e+09
      global relaxation matrix dimension = 399
      setting global matrices ... done, cpu time[sec] = 0.328348, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.99109, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            553.153      96.4314      25.3858       31.168      3.46372       394.42      41.4451     0.134369
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.23568, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002509, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.24523, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.02897e-07  1.02897e-07  1.32754e-08
      low eigenvalue method done, cpu time[sec] = 1.24634, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.03e-07  1.33e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.04e-09  1.33e-08         1
         *Z       ---       ---  1.33e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.32754e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.80766e-31  3.62854e-32  1.11357e-33  5.71213e-33  1.94355e-34  1.08831e-33  1.65313e-38  3.88821e-54

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.6355, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 540 K
            Well    Collision, 1/sec
              W1           1.114e+10
      global relaxation matrix dimension = 399
      setting global matrices ... done, cpu time[sec] = 0.327666, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.00007, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            474.131      82.6555      21.7593      26.7154      2.96891      338.075      35.5244     0.115173
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.22663, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002498, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.23616, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.02363e-08  9.02363e-08  1.08429e-08
      low eigenvalue method done, cpu time[sec] = 1.23726, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.02e-08  1.08e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.91e-09  1.08e-08         1
         *Z       ---       ---  1.33e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.08429e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.48274e-31  2.90669e-32  9.02337e-34  4.55312e-33  1.56303e-34  9.49229e-34  1.66691e-38   3.8884e-54

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.14475, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 540 K
            Well    Collision, 1/sec
              W1         1.27314e+10
      global relaxation matrix dimension = 399
      setting global matrices ... done, cpu time[sec] = 0.329966, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.99169, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            414.865      72.3236      19.0394       23.376      2.59779      295.815      31.0838     0.100777
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.23241, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002491, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.24185, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.04384e-08  8.04384e-08  9.06697e-09
      low eigenvalue method done, cpu time[sec] = 1.24292, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.04e-08  9.07e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.04e-09  9.07e-09         1
         *Z       ---       ---  1.33e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 9.06697e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.24422e-31  2.39101e-32  7.49777e-34  3.73122e-33   1.2906e-34  8.38682e-34  1.67641e-38  3.88861e-54

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.14643, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 550 K
      Energy reference = 32067 1/cm
      Energy step      = 95 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -87.1 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.006886
         W1 Well: collisional kernel bandwidth = 53
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.392092
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.219323
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.219489
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 1.03363
         W1 Well: minimal relaxation eigenvalue = 0.0799904
         W1 Well: maximal relaxation eigenvalue = 0.978522
         W1 Well:       grid size = 395
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -5457 1/cm
         B1 Barrier:        grid size = 338
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -43 1/cm
         B2 Barrier:        grid size = 336
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 146 1/cm
         B3 Barrier:        grid size = 386
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4602 1/cm
         B4 Barrier:        grid size = 403
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6217 1/cm
         B5 Barrier: nonpositive number of states at -23223 1/cm => truncating
         B5 Barrier:        grid size = 582
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23223 1/cm
         B6 Barrier:        grid size = 322
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1477 1/cm
         B7 Barrier:        grid size = 288
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4706 1/cm
         B8 Barrier:        grid size = 161
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16772 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 2.23613, elapsed time[sec] = 0
      B4 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 395
      MasterEquation::Barrier::truncate: real weight = 3.67994e+42
      MasterEquation::Barrier::truncate: effective weight = 1.59287e+39
      B5 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 395
      MasterEquation::Barrier::truncate: real weight = 1.192e+41
      MasterEquation::Barrier::truncate: effective weight = 5.04375e+37
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1  -5457  -5457 2.24e+09 1.12e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -43 2.02e+15
         B2    147 3.55e+14
         B3  -4602  9.4e+13
         B4  -5457 1.15e+14
         B5  -5457 1.28e+13
         B6   1478 1.45e+15
         B7   4707 1.54e+14
         B8  16772 5.22e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  2.77e-09  5.38e-09  2.23e-13  3.32e-15  1.42e-35  2.55e-06    0.0247  6.65e+12
          R  3.61e+08         1      1.94  8.03e-05   1.2e-06  5.12e-27       919   8.9e+06   2.4e+21
         P1  1.86e+08     0.516         1  4.14e-05  6.18e-07  2.64e-27       474  4.59e+06  1.24e+21
         P2  4.49e+12  1.25e+04  2.42e+04         1    0.0149  6.38e-23  1.15e+07  1.11e+11  2.99e+25
         P3  3.01e+14  8.34e+05  1.62e+06      66.9         1  4.27e-21  7.67e+08  7.42e+12     2e+27
         P4  7.04e+34  1.95e+26  3.79e+26  1.57e+22  2.34e+20         1  1.79e+29  1.74e+33  4.69e+47
         P5  3.92e+05   0.00109   0.00211  8.73e-08   1.3e-09  5.57e-30         1  9.68e+03  2.61e+18
         P6      40.5  1.12e-07  2.18e-07  9.02e-12  1.35e-13  5.76e-34  0.000103         1   2.7e+14
         P7   1.5e-13  4.17e-22  8.08e-22  3.34e-26     5e-28  2.13e-48  3.83e-19  3.71e-15         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  1.49e+10  2.88e+10  1.19e+06  1.78e+04  7.61e-17  1.37e+13  1.32e+17  3.57e+31
          R  6.73e-11         1      1.94  8.03e-05   1.2e-06  5.12e-27       919   8.9e+06   2.4e+21
         P1  3.47e-11     0.516         1  4.14e-05  6.18e-07  2.64e-27       474  4.59e+06  1.24e+21
         P2  8.38e-07  1.25e+04  2.42e+04         1    0.0149  6.38e-23  1.15e+07  1.11e+11  2.99e+25
         P3  5.61e-05  8.34e+05  1.62e+06      66.9         1  4.27e-21  7.67e+08  7.42e+12     2e+27
         P4  1.31e+16  1.95e+26  3.79e+26  1.57e+22  2.34e+20         1  1.79e+29  1.74e+33  4.69e+47
         P5  7.32e-14   0.00109   0.00211  8.73e-08   1.3e-09  5.57e-30         1  9.68e+03  2.61e+18
         P6  7.56e-18  1.12e-07  2.18e-07  9.02e-12  1.35e-13  5.76e-34  0.000103         1   2.7e+14
         P7   2.8e-32  4.17e-22  8.08e-22  3.34e-26     5e-28  2.13e-48  3.83e-19  3.71e-15         1
   MasterEquation::set:  done, cpu time[sec] = 2.2494, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 550 K
            Well    Collision, 1/sec
              W1         3.14455e+08
      global relaxation matrix dimension = 395
      setting global matrices ... done, cpu time[sec] = 0.321412, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.76236, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            17244.9      3035.33      802.366      983.039      109.551      12412.4       1317.7      4.45818
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.44076, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002493, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.44971, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.16897e-06  1.16897e-06  3.86655e-07
      low eigenvalue method done, cpu time[sec] = 1.45077, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.17e-06  3.87e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.07e-07  3.87e-07         1
         *Z       ---       ---  9.17e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.86654e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.11199e-29  7.90134e-30  2.29817e-31  1.88319e-30  5.14171e-32  2.15048e-32  8.69405e-38  4.07416e-53

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.10272, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 550 K
            Well    Collision, 1/sec
              W1         9.43365e+08
      global relaxation matrix dimension = 395
      setting global matrices ... done, cpu time[sec] = 0.320297, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.80819, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            5748.29      1011.78      267.455       327.68       36.517      4137.48      439.233      1.48606
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.39472, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002428, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.40344, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.81258e-07  5.81258e-07  1.63199e-07
      low eigenvalue method done, cpu time[sec] = 1.40398, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.81e-07  1.63e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.25e-08  1.63e-07         1
         *Z       ---       ---  9.17e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.63199e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  9.60659e-30  2.89924e-30  8.02829e-32  5.50713e-31  1.62227e-32  1.88933e-32  8.76409e-38  4.07439e-53

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.09804, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 550 K
            Well    Collision, 1/sec
              W1         1.57227e+09
      global relaxation matrix dimension = 395
      setting global matrices ... done, cpu time[sec] = 0.263016, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.80079, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            3448.98      607.066      160.473      196.608      21.9102      2482.49       263.54     0.891635
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.4039, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002445, elapsed time[sec] = 1
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.41243, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.08853e-07  4.08853e-07  1.02272e-07
      low eigenvalue method done, cpu time[sec] = 1.41333, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.09e-07  1.02e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.66e-08  1.02e-07         1
         *Z       ---       ---  9.17e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.02272e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  6.19239e-30   1.6898e-30  4.70982e-32  2.99731e-31  9.14245e-33  1.62991e-32  8.83781e-38  4.07339e-53

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.04379, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 550 K
            Well    Collision, 1/sec
              W1         2.20118e+09
      global relaxation matrix dimension = 395
      setting global matrices ... done, cpu time[sec] = 0.322574, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.78627, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2463.55      433.618      114.624      140.434      15.6502       1773.2      188.243     0.636882
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.38634, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002424, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.39517, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.20853e-07  3.20853e-07  7.33553e-08
      low eigenvalue method done, cpu time[sec] = 1.39625, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.21e-07  7.34e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.86e-08  7.34e-08         1
         *Z       ---       ---  9.17e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 7.33553e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  4.51528e-30  1.15461e-30  3.25537e-32  1.97689e-31  6.16774e-33  1.42566e-32  8.91339e-38  4.07375e-53

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.06965, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 550 K
            Well    Collision, 1/sec
              W1         2.83009e+09
      global relaxation matrix dimension = 395
      setting global matrices ... done, cpu time[sec] = 0.320266, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.81916, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             1916.1      337.259      89.1517      109.227      12.1723      1379.16      146.411     0.495353
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.38574, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002432, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.39502, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.66218e-07  2.66218e-07  5.64914e-08
      low eigenvalue method done, cpu time[sec] = 1.39611, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.66e-07  5.65e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.37e-08  5.65e-08         1
         *Z       ---       ---  9.17e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 5.64914e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  3.51661e-30  8.57565e-31  2.44606e-32  1.43624e-31  4.55611e-33  1.26452e-32  8.98928e-38   4.0738e-53

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.10166, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 550 K
            Well    Collision, 1/sec
              W1         3.14455e+09
      global relaxation matrix dimension = 395
      setting global matrices ... done, cpu time[sec] = 0.321392, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.82524, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1724.49      303.533      80.2366      98.3039      10.9551      1241.24       131.77     0.445818
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.37687, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002451, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.38622, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.45825e-07  2.45825e-07  5.04621e-08
      low eigenvalue method done, cpu time[sec] = 1.38729, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.46e-07  5.05e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.18e-08  5.05e-08         1
         *Z       ---       ---  9.17e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 5.0462e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  3.15533e-30  7.54555e-31  2.16416e-32  1.25333e-31   4.0034e-33  1.19631e-32  9.02692e-38  4.07375e-53

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.09929, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 550 K
            Well    Collision, 1/sec
              W1         4.71682e+09
      global relaxation matrix dimension = 395
      setting global matrices ... done, cpu time[sec] = 0.320769, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.83059, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1149.66      202.355       53.491      65.5359      7.30341      827.495      87.8466     0.297212
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.36885, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002432, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.37857, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.79484e-07  1.79484e-07  3.20785e-08
      low eigenvalue method done, cpu time[sec] = 1.38042, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.79e-07  3.21e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.58e-08  3.21e-08         1
         *Z       ---       ---  9.17e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.20785e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0   2.0378e-30  4.52935e-31  1.33101e-32  7.32386e-32  2.40127e-33  9.38972e-33  9.20712e-38  4.07396e-53

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.09869, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 550 K
            Well    Collision, 1/sec
              W1          6.2891e+09
      global relaxation matrix dimension = 395
      setting global matrices ... done, cpu time[sec] = 0.322376, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.83659, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            862.244      151.766      40.1183      49.1519      5.47755      620.621      65.8849     0.222909
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.37071, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002427, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.37989, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.42526e-07  1.42526e-07   2.2842e-08
      low eigenvalue method done, cpu time[sec] = 1.38097, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.43e-07  2.28e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.25e-08  2.28e-08         1
         *Z       ---       ---  9.17e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.2842e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.46559e-30  3.09991e-31  9.28978e-33  4.93849e-32  1.64862e-33  7.68949e-33  9.36657e-38  4.07419e-53

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.10466, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 550 K
            Well    Collision, 1/sec
              W1         7.86137e+09
      global relaxation matrix dimension = 395
      setting global matrices ... done, cpu time[sec] = 0.32337, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.85304, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            689.795      121.413      32.0946      39.3216      4.38204      496.497      52.7079     0.178327
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.34914, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002421, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.35794, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    1.187e-07    1.187e-07    1.737e-08
      low eigenvalue method done, cpu time[sec] = 1.35901, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.19e-07  1.74e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.04e-08  1.74e-08         1
         *Z       ---       ---  9.17e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.737e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.12239e-30  2.28781e-31  6.96816e-33   3.6104e-32  1.22183e-33  6.48135e-33  9.50013e-38  4.07443e-53

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.10289, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 550 K
            Well    Collision, 1/sec
              W1         9.43365e+09
      global relaxation matrix dimension = 395
      setting global matrices ... done, cpu time[sec] = 0.32207, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.83245, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            574.829      101.178      26.7455       32.768       3.6517      413.748      43.9233     0.148606
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.36878, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002432, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.3781, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.01961e-07  1.01961e-07  1.37934e-08
      low eigenvalue method done, cpu time[sec] = 1.37919, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.02e-07  1.38e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   8.9e-09  1.38e-08         1
         *Z       ---       ---  9.17e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.37934e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  8.96065e-31  1.77393e-31  5.47782e-33  2.78124e-32  9.51553e-34  5.57859e-33  9.60655e-38  4.07464e-53

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.10316, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 550 K
            Well    Collision, 1/sec
              W1         1.10059e+10
      global relaxation matrix dimension = 395
      setting global matrices ... done, cpu time[sec] = 0.322847, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.83964, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            492.711      86.7237      22.9247      28.0868      3.13003      354.641      37.6485     0.127376
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.3658, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.002419, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.37519, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.95089e-08  8.95089e-08  1.12965e-08
      low eigenvalue method done, cpu time[sec] = 1.37626, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.95e-08  1.13e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.79e-09  1.13e-08         1
         *Z       ---       ---  9.17e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.12965e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  7.36974e-31  1.42449e-31  4.45138e-33  2.22278e-32  7.67398e-34  4.87876e-33  9.68672e-38  4.07484e-53

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.10934, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 550 K
            Well    Collision, 1/sec
              W1         1.25782e+10
      global relaxation matrix dimension = 395
      setting global matrices ... done, cpu time[sec] = 0.322704, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.84807, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            431.122      75.8832      20.0591       24.576      2.73878      310.311      32.9425     0.111454
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.35455, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002422, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.36387, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.98594e-08  7.98594e-08  9.46853e-09
      low eigenvalue method done, cpu time[sec] = 1.36499, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.99e-08  9.47e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.94e-09  9.47e-09         1
         *Z       ---       ---  9.17e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 9.46853e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  6.19867e-31  1.17424e-31  3.70791e-33  1.82571e-32  6.35185e-34  4.32083e-33  9.74257e-38  4.07503e-53

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.10252, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 560 K
      Energy reference = 32345 1/cm
      Energy step      = 97 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -87 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.006973
         W1 Well: collisional kernel bandwidth = 53
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.383145
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.214044
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.228044
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 1.00346
         W1 Well: minimal relaxation eigenvalue = 0.0794823
         W1 Well: maximal relaxation eigenvalue = 0.977829
         W1 Well:       grid size = 390
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -5485 1/cm
         B1 Barrier:        grid size = 334
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -52 1/cm
         B2 Barrier:        grid size = 332
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 140 1/cm
         B3 Barrier:        grid size = 381
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4611 1/cm
         B4 Barrier:        grid size = 398
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6261 1/cm
         B5 Barrier: nonpositive number of states at -23139 1/cm => truncating
         B5 Barrier:        grid size = 572
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23139 1/cm
         B6 Barrier:        grid size = 318
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1498 1/cm
         B7 Barrier:        grid size = 285
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4699 1/cm
         B8 Barrier:        grid size = 161
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16728 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 2.19477, elapsed time[sec] = 0
      B4 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 390
      MasterEquation::Barrier::truncate: real weight = 1.64251e+42
      MasterEquation::Barrier::truncate: effective weight = 7.2593e+38
      B5 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 390
      MasterEquation::Barrier::truncate: real weight = 5.16858e+40
      MasterEquation::Barrier::truncate: effective weight = 2.24603e+37
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1  -5485  -5485 2.22e+09 1.17e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -52 2.17e+15
         B2    141 3.85e+14
         B3  -4611 1.02e+14
         B4  -5485 1.25e+14
         B5  -5485  1.4e+13
         B6   1499 1.57e+15
         B7   4700 1.69e+14
         B8  16728 5.96e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  2.09e-09  4.03e-09  2.09e-13  3.37e-15  3.38e-35   1.8e-06    0.0151  2.35e+12
          R  4.78e+08         1      1.92  9.98e-05  1.61e-06  1.61e-26       861  7.23e+06  1.12e+21
         P1  2.48e+08      0.52         1  5.19e-05  8.36e-07  8.39e-27       447  3.76e+06  5.83e+20
         P2  4.79e+12     1e+04  1.93e+04         1    0.0161  1.62e-22  8.62e+06  7.25e+10  1.12e+25
         P3  2.97e+14  6.21e+05   1.2e+06        62         1     1e-20  5.35e+08  4.49e+12  6.97e+26
         P4  2.96e+34  6.19e+25  1.19e+26  6.18e+21  9.97e+19         1  5.33e+28  4.48e+32  6.95e+46
         P5  5.55e+05   0.00116   0.00224  1.16e-07  1.87e-09  1.88e-29         1  8.41e+03   1.3e+18
         P6      66.1  1.38e-07  2.66e-07  1.38e-11  2.23e-13  2.23e-33  0.000119         1  1.55e+14
         P7  4.26e-13  8.91e-22  1.71e-21  8.89e-26  1.43e-27  1.44e-47  7.67e-19  6.44e-15         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  3.29e+09  6.33e+09  3.28e+05  5.29e+03  5.31e-17  2.83e+12  2.38e+16  3.69e+30
          R  3.04e-10         1      1.92  9.98e-05  1.61e-06  1.61e-26       861  7.23e+06  1.12e+21
         P1  1.58e-10      0.52         1  5.19e-05  8.36e-07  8.39e-27       447  3.76e+06  5.83e+20
         P2  3.05e-06     1e+04  1.93e+04         1    0.0161  1.62e-22  8.62e+06  7.25e+10  1.12e+25
         P3  0.000189  6.21e+05   1.2e+06        62         1     1e-20  5.35e+08  4.49e+12  6.97e+26
         P4  1.88e+16  6.19e+25  1.19e+26  6.18e+21  9.97e+19         1  5.33e+28  4.48e+32  6.95e+46
         P5  3.53e-13   0.00116   0.00224  1.16e-07  1.87e-09  1.88e-29         1  8.41e+03   1.3e+18
         P6   4.2e-17  1.38e-07  2.66e-07  1.38e-11  2.23e-13  2.23e-33  0.000119         1  1.55e+14
         P7  2.71e-31  8.91e-22  1.71e-21  8.89e-26  1.43e-27  1.44e-47  7.67e-19  6.44e-15         1
   MasterEquation::set:  done, cpu time[sec] = 2.20785, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 560 K
            Well    Collision, 1/sec
              W1         3.10744e+08
      global relaxation matrix dimension = 390
      setting global matrices ... done, cpu time[sec] = 0.31236, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.57389, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            17910.8      3182.85       844.79      1032.86       115.42      13011.9      1395.37      4.92258
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.56735, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002404, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.57643, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.44154e-06  1.44154e-06  4.92475e-07
      low eigenvalue method done, cpu time[sec] = 1.57784, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.44e-06  4.92e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.32e-07  4.92e-07         1
         *Z       ---       ---  5.62e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 4.92475e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0   9.4074e-29  3.48729e-29  1.01153e-30  8.22849e-30  2.25318e-31  1.00892e-31   4.7534e-37  3.92258e-52

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.0124, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 560 K
            Well    Collision, 1/sec
              W1         9.32231e+08
      global relaxation matrix dimension = 390
      setting global matrices ... done, cpu time[sec] = 0.300578, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.6332, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            5970.25      1060.95      281.597      344.286      38.4734       4337.3      465.122      1.64086
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.50829, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00236, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.51742, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.25869e-07  7.25869e-07  2.10805e-07
      low eigenvalue method done, cpu time[sec] = 1.5185, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.26e-07  2.11e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.54e-08  2.11e-07         1
         *Z       ---       ---  5.62e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.10805e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  4.33744e-29  1.29541e-29  3.58846e-31  2.44241e-30  7.22028e-32  8.89565e-32  4.79149e-37  3.92281e-52

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.00338, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 560 K
            Well    Collision, 1/sec
              W1         1.55372e+09
      global relaxation matrix dimension = 390
      setting global matrices ... done, cpu time[sec] = 0.301983, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.63517, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            3582.15       636.57      168.958      206.571      23.0841      2602.38      279.073     0.984515
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.50754, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002359, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.5167, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.13311e-07  5.13311e-07  1.33077e-07
      low eigenvalue method done, cpu time[sec] = 1.51777, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.13e-07  1.33e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.59e-08  1.33e-07         1
         *Z       ---       ---  5.62e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.33077e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.81597e-29  7.59975e-30  2.12182e-31  1.33934e-30  4.10116e-32  7.70296e-32  4.83152e-37  3.92335e-52

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.00617, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 560 K
            Well    Collision, 1/sec
              W1         2.17521e+09
      global relaxation matrix dimension = 390
      setting global matrices ... done, cpu time[sec] = 0.303536, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.63836, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2558.68      454.693      120.684      147.551      16.4886      1858.84      199.338     0.703225
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.49951, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002356, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.50874, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.04181e-07  4.04181e-07  9.59372e-08
      low eigenvalue method done, cpu time[sec] = 1.50982, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.04e-07  9.59e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   3.6e-08  9.59e-08         1
         *Z       ---       ---  5.62e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 9.59371e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.06358e-29   5.2166e-30  1.47456e-31  8.87941e-31  2.78175e-32  6.75945e-32  4.87251e-37   3.9234e-52

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.00381, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 560 K
            Well    Collision, 1/sec
              W1         2.79669e+09
      global relaxation matrix dimension = 390
      setting global matrices ... done, cpu time[sec] = 0.302209, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.6175, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1990.08       353.65      93.8656      114.762      12.8245      1445.77      155.041     0.546953
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.52538, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002365, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.53455, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.36167e-07  3.36167e-07  7.41728e-08
      low eigenvalue method done, cpu time[sec] = 1.53598, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.36e-07  7.42e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.98e-08  7.42e-08         1
         *Z       ---       ---  5.62e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 7.41728e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.61338e-29  3.88827e-30  1.11261e-31  6.47661e-31  2.06342e-32   6.0122e-32  4.91362e-37   3.9237e-52

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.01296, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 560 K
            Well    Collision, 1/sec
              W1         3.10744e+09
      global relaxation matrix dimension = 390
      setting global matrices ... done, cpu time[sec] = 0.304417, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.64065, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1791.08      318.285       84.479      103.286       11.542      1301.19      139.537     0.492258
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.50141, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002365, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.5104, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.10722e-07  3.10722e-07  6.63675e-08
      low eigenvalue method done, cpu time[sec] = 1.51148, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.11e-07  6.64e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.75e-08  6.64e-08         1
         *Z       ---       ---  5.62e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 6.63675e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.45002e-29   3.4264e-30  9.86134e-32   5.6613e-31  1.81631e-32  5.69507e-32    4.934e-37  3.92378e-52

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.0113, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 560 K
            Well    Collision, 1/sec
              W1         4.66115e+09
      global relaxation matrix dimension = 390
      setting global matrices ... done, cpu time[sec] = 0.30368, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.63409, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1194.05       212.19      56.3193      68.8572      7.69469      867.461      93.0244     0.328172
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.51335, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002362, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.52254, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.27698e-07  2.27698e-07  4.24692e-08
      low eigenvalue method done, cpu time[sec] = 1.52365, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.28e-07  4.25e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0     2e-08  4.25e-08         1
         *Z       ---       ---  5.62e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 4.24692e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  9.42577e-30  2.06907e-30  6.10748e-32  3.33008e-31  1.09701e-32  4.49384e-32  5.03146e-37  3.92393e-52

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.01407, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 560 K
            Well    Collision, 1/sec
              W1         6.21487e+09
      global relaxation matrix dimension = 390
      setting global matrices ... done, cpu time[sec] = 0.301773, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.6481, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            895.538      159.143      42.2395      51.6429      5.77102      650.596      69.7683     0.246129
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.49567, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002353, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.50477, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.81254e-07  1.81254e-07  3.03868e-08
      low eigenvalue method done, cpu time[sec] = 1.50583, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.81e-07  3.04e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.59e-08  3.04e-08         1
         *Z       ---       ---  5.62e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.03868e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  6.81131e-30  1.42226e-30  4.28443e-32  2.25622e-31  7.56961e-33  3.69555e-32  5.11768e-37  3.92417e-52

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.00995, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 560 K
            Well    Collision, 1/sec
              W1         7.76859e+09
      global relaxation matrix dimension = 390
      setting global matrices ... done, cpu time[sec] = 0.306112, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.65019, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             716.43      127.314      33.7916      41.3143      4.61681      520.476      55.8146     0.196903
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.49228, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002355, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.50165, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.51227e-07  1.51227e-07  2.31952e-08
      low eigenvalue method done, cpu time[sec] = 1.50312, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.51e-07  2.32e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.32e-08  2.32e-08         1
         *Z       ---       ---  5.62e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.31952e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  5.23588e-30  1.05327e-30  3.22656e-32  1.65565e-31  5.63218e-33   3.1257e-32  5.18998e-37  3.92436e-52

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.01418, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 560 K
            Well    Collision, 1/sec
              W1         9.32231e+09
      global relaxation matrix dimension = 390
      setting global matrices ... done, cpu time[sec] = 0.303979, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.65687, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            597.025      106.095      28.1597      34.4286      3.84734       433.73      46.5122     0.164086
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.48821, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002357, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.49734, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.30085e-07  1.30085e-07  1.84769e-08
      low eigenvalue method done, cpu time[sec] = 1.49844, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.3e-07  1.85e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.13e-08  1.85e-08         1
         *Z       ---       ---  5.62e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.84769e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  4.19303e-30  8.18997e-31  2.54483e-32  1.27934e-31  4.40059e-33  2.69826e-32  5.24774e-37  3.92458e-52

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.00997, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 560 K
            Well    Collision, 1/sec
              W1          1.0876e+10
      global relaxation matrix dimension = 390
      setting global matrices ... done, cpu time[sec] = 0.304306, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.65688, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            511.736      90.9386      24.1369      29.5102      3.29772      371.769      39.8676     0.140645
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.48863, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00236, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.49773, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.14329e-07  1.14329e-07  1.51724e-08
      low eigenvalue method done, cpu time[sec] = 1.4988, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.14e-07  1.52e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.92e-09  1.52e-08         1
         *Z       ---       ---  5.62e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.51724e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  3.45767e-30  6.59245e-31  2.07377e-32  1.02513e-31  3.55875e-33  2.36583e-32  5.29145e-37  3.92473e-52

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.01496, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 560 K
            Well    Collision, 1/sec
              W1         1.24297e+10
      global relaxation matrix dimension = 390
      setting global matrices ... done, cpu time[sec] = 0.305166, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.65417, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            447.769      79.5713      21.1197      25.8214      2.88551      325.298      34.8841     0.123064
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.48997, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002371, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.49902, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.02102e-07  1.02102e-07  1.27467e-08
      low eigenvalue method done, cpu time[sec] = 1.50009, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.02e-07  1.27e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.84e-09  1.27e-08         1
         *Z       ---       ---  5.62e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.27467e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.91491e-30  5.44563e-31  1.73162e-32  8.43909e-32  2.95269e-33  2.10004e-32  5.32217e-37  3.92493e-52

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.01681, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 570 K
      Energy reference = 32624 1/cm
      Energy step      = 98 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -86.9 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.007563
         W1 Well: collisional kernel bandwidth = 53
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.379398
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.207681
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.219465
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 1.00398
         W1 Well: minimal relaxation eigenvalue = 0.0789765
         W1 Well: maximal relaxation eigenvalue = 0.979657
         W1 Well:       grid size = 390
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -5597 1/cm
         B1 Barrier:        grid size = 333
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -11 1/cm
         B2 Barrier:        grid size = 331
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 185 1/cm
         B3 Barrier:        grid size = 380
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4616 1/cm
         B4 Barrier:        grid size = 396
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6185 1/cm
         B5 Barrier: nonpositive number of states at -23139 1/cm => truncating
         B5 Barrier:        grid size = 569
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23139 1/cm
         B6 Barrier:        grid size = 318
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1458 1/cm
         B7 Barrier:        grid size = 285
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4693 1/cm
         B8 Barrier:        grid size = 162
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16747 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 2.1759, elapsed time[sec] = 0
      B4 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 390
      MasterEquation::Barrier::truncate: real weight = 7.5568e+41
      MasterEquation::Barrier::truncate: effective weight = 3.37427e+38
      B5 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 390
      MasterEquation::Barrier::truncate: real weight = 2.32415e+40
      MasterEquation::Barrier::truncate: effective weight = 1.02573e+37
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1  -5597  -5597 2.14e+09 1.22e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -11 2.33e+15
         B2    186 4.17e+14
         B3  -4616 1.11e+14
         B4  -5597 1.36e+14
         B5  -5597 1.52e+13
         B6   1459 1.71e+15
         B7   4694 1.85e+14
         B8  16748 6.79e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  1.94e-09  3.71e-09  2.39e-13  4.15e-15  9.48e-35  1.57e-06    0.0115  1.05e+12
          R  5.16e+08         1      1.91  0.000123  2.14e-06  4.89e-26       807  5.92e+06  5.39e+20
         P1   2.7e+08     0.523         1  6.45e-05  1.12e-06  2.56e-26       423   3.1e+06  2.82e+20
         P2  4.19e+12  8.12e+03  1.55e+04         1    0.0174  3.97e-22  6.56e+06  4.81e+10  4.38e+24
         P3  2.41e+14  4.68e+05  8.93e+05      57.6         1  2.29e-20  3.78e+08  2.77e+12  2.52e+26
         P4  1.05e+34  2.05e+25  3.91e+25  2.52e+21  4.37e+19         1  1.65e+28  1.21e+32   1.1e+46
         P5  6.39e+05   0.00124   0.00237  1.53e-07  2.65e-09  6.06e-29         1  7.34e+03  6.68e+17
         P6        87  1.69e-07  3.23e-07  2.08e-11  3.61e-13  8.25e-33  0.000136         1   9.1e+13
         P7  9.56e-13  1.85e-21  3.54e-21  2.28e-25  3.97e-27  9.07e-47   1.5e-18   1.1e-14         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  7.66e+08  1.46e+09  9.44e+04  1.64e+03  3.75e-17  6.19e+11  4.54e+15  4.13e+29
          R   1.3e-09         1      1.91  0.000123  2.14e-06  4.89e-26       807  5.92e+06  5.39e+20
         P1  6.83e-10     0.523         1  6.45e-05  1.12e-06  2.56e-26       423   3.1e+06  2.82e+20
         P2  1.06e-05  8.12e+03  1.55e+04         1    0.0174  3.97e-22  6.56e+06  4.81e+10  4.38e+24
         P3   0.00061  4.68e+05  8.93e+05      57.6         1  2.29e-20  3.78e+08  2.77e+12  2.52e+26
         P4  2.67e+16  2.05e+25  3.91e+25  2.52e+21  4.37e+19         1  1.65e+28  1.21e+32   1.1e+46
         P5  1.62e-12   0.00124   0.00237  1.53e-07  2.65e-09  6.06e-29         1  7.34e+03  6.68e+17
         P6   2.2e-16  1.69e-07  3.23e-07  2.08e-11  3.61e-13  8.25e-33  0.000136         1   9.1e+13
         P7  2.42e-30  1.85e-21  3.54e-21  2.28e-25  3.97e-27  9.07e-47   1.5e-18   1.1e-14         1
   MasterEquation::set:  done, cpu time[sec] = 2.18916, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 570 K
            Well    Collision, 1/sec
              W1         3.07145e+08
      global relaxation matrix dimension = 390
      setting global matrices ... done, cpu time[sec] = 0.313468, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.5963, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            18592.3      3335.56      888.892      1084.54      121.526      13631.4      1476.45      5.42643
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.55187, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002356, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.56178, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.47091e-06  1.47091e-06  5.15603e-07
      low eigenvalue method done, cpu time[sec] = 1.56286, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.47e-06  5.16e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.34e-07  5.16e-07         1
         *Z       ---       ---  3.87e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 5.15603e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0   3.9713e-28  1.45765e-28  4.22076e-30    3.409e-29  9.36164e-31  4.45583e-31  2.44782e-36  3.48811e-51

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.03578, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 570 K
            Well    Collision, 1/sec
              W1         9.21435e+08
      global relaxation matrix dimension = 390
      setting global matrices ... done, cpu time[sec] = 0.299383, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.64415, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            6197.43      1111.85      296.297      361.514      40.5086      4543.81      492.151      1.80881
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.51627, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002353, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.52573, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.49346e-07  7.49346e-07  2.23762e-07
      low eigenvalue method done, cpu time[sec] = 1.52681, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.49e-07  2.24e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.71e-08  2.24e-07         1
         *Z       ---       ---  3.87e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.23762e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0   1.8553e-28  5.48155e-29  1.52003e-30   1.0267e-29  3.04575e-31  3.95057e-31  2.46733e-36  3.48993e-51

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.02059, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 570 K
            Well    Collision, 1/sec
              W1         1.53573e+09
      global relaxation matrix dimension = 390
      setting global matrices ... done, cpu time[sec] = 0.302623, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.65373, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            3718.46      667.112      177.778      216.908      24.3051      2726.29      295.291      1.08529
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.512, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002342, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.52098, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.32545e-07  5.32545e-07  1.42271e-07
      low eigenvalue method done, cpu time[sec] = 1.52205, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.33e-07  1.42e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.73e-08  1.42e-07         1
         *Z       ---       ---  3.87e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.42271e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.21291e-28  3.23674e-29  9.05712e-31  5.67168e-30  1.74335e-31  3.43617e-31  2.48782e-36   3.4895e-51

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.0246, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 570 K
            Well    Collision, 1/sec
              W1         2.15002e+09
      global relaxation matrix dimension = 390
      setting global matrices ... done, cpu time[sec] = 0.30485, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.6304, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2656.04      476.509      126.985      154.934      17.3608      1947.35      210.922     0.775204
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.53251, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002346, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.54148, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.20631e-07  4.20631e-07  1.03077e-07
      low eigenvalue method done, cpu time[sec] = 1.54261, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.21e-07  1.03e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.72e-08  1.03e-07         1
         *Z       ---       ---  3.87e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.03077e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  8.93164e-29  2.23182e-29  6.32772e-31  3.77921e-30  1.18875e-31  3.02609e-31  2.50876e-36  3.48965e-51

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.02522, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 570 K
            Well    Collision, 1/sec
              W1         2.76431e+09
      global relaxation matrix dimension = 390
      setting global matrices ... done, cpu time[sec] = 0.302313, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.65193, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2065.81      370.618      98.7657      120.505      13.5029       1514.6       164.05     0.602937
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.51706, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002338, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.52612, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.50632e-07  3.50632e-07  7.99995e-08
      low eigenvalue method done, cpu time[sec] = 1.5272, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.51e-07     8e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.09e-08     8e-08         1
         *Z       ---       ---  3.87e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 7.99995e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0   7.0094e-29  1.66935e-29  4.79401e-31  2.76725e-30   8.8537e-32  2.69961e-31  2.52974e-36   3.4898e-51

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.03045, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 570 K
            Well    Collision, 1/sec
              W1         3.07145e+09
      global relaxation matrix dimension = 390
      setting global matrices ... done, cpu time[sec] = 0.303622, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.64518, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1859.23      333.556      88.8892      108.454      12.1526      1363.14      147.645     0.542643
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.51765, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002341, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.52662, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   3.2439e-07   3.2439e-07  7.16986e-08
      low eigenvalue method done, cpu time[sec] = 1.52769, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.24e-07  7.17e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.85e-08  7.17e-08         1
         *Z       ---       ---  3.87e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 7.16986e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  6.30981e-29  1.47325e-29  4.25646e-31  2.42289e-30  7.80689e-32  2.56062e-31  2.54014e-36  3.48994e-51

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.02356, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 570 K
            Well    Collision, 1/sec
              W1         4.60718e+09
      global relaxation matrix dimension = 390
      setting global matrices ... done, cpu time[sec] = 0.303515, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.63412, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1239.49      222.371      59.2594      72.3027      8.10171      908.762      98.4303     0.361762
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.52561, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002343, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.53469, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   2.3852e-07   2.3852e-07  4.61782e-08
      low eigenvalue method done, cpu time[sec] = 1.53634, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.39e-07  4.62e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.08e-08  4.62e-08         1
         *Z       ---       ---  3.87e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 4.61782e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  4.12779e-29  8.94899e-30  2.65427e-31  1.43444e-30  4.74731e-32  2.03169e-31   2.5898e-36  3.49004e-51

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.0236, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 570 K
            Well    Collision, 1/sec
              W1          6.1429e+09
      global relaxation matrix dimension = 390
      setting global matrices ... done, cpu time[sec] = 0.302429, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.64426, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            929.614      166.778      44.4446      54.2271      6.07629      681.572      73.8227     0.271321
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.51107, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002348, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.52019, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.90301e-07  1.90301e-07  3.31968e-08
      low eigenvalue method done, cpu time[sec] = 1.52128, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.9e-07  3.32e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.66e-08  3.32e-08         1
         *Z       ---       ---  3.87e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.31968e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.99673e-29  6.17795e-30  1.87128e-31  9.76446e-31  3.29194e-32  1.67792e-31  2.63372e-36  3.49024e-51

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.01665, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 570 K
            Well    Collision, 1/sec
              W1         7.67863e+09
      global relaxation matrix dimension = 390
      setting global matrices ... done, cpu time[sec] = 0.302769, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.64855, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            743.691      133.422      35.5557      43.3816      4.86103      545.257      59.0582     0.217057
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.50432, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002343, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.51347, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.59042e-07  1.59042e-07  2.54346e-08
      low eigenvalue method done, cpu time[sec] = 1.51453, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.59e-07  2.54e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.38e-08  2.54e-08         1
         *Z       ---       ---  3.87e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.54346e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.31206e-29  4.59064e-30  1.41478e-31  7.19175e-31  2.45889e-32  1.42414e-31  2.67058e-36   3.4904e-51

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.01934, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 570 K
            Well    Collision, 1/sec
              W1         9.21435e+09
      global relaxation matrix dimension = 390
      setting global matrices ... done, cpu time[sec] = 0.305025, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.67639, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            619.743      111.185      29.6297      36.1514      4.05086      454.381      49.2151     0.180881
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.47842, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002332, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.48757, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.36987e-07  1.36987e-07   2.0323e-08
      low eigenvalue method done, cpu time[sec] = 1.48862, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.37e-07  2.03e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.18e-08  2.03e-08         1
         *Z       ---       ---  3.87e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.0323e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.85718e-29  3.57957e-30  1.11947e-31  5.57403e-31  1.92736e-32  1.23303e-31   2.7001e-36  3.49058e-51

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.02144, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 570 K
            Well    Collision, 1/sec
              W1         1.07501e+10
      global relaxation matrix dimension = 390
      setting global matrices ... done, cpu time[sec] = 0.302922, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.64881, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            531.208      95.3017      25.3969      30.9869      3.47216       389.47      42.1844     0.155041
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.50462, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002344, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.51385, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.20524e-07  1.20524e-07   1.6732e-08
      low eigenvalue method done, cpu time[sec] = 1.51556, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.21e-07  1.67e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.04e-08  1.67e-08         1
         *Z       ---       ---  3.87e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.6732e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.53543e-29   2.8882e-30  9.14761e-32  4.47793e-31  1.56289e-32   1.0839e-31  2.72255e-36  3.49077e-51

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.01793, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 570 K
            Well    Collision, 1/sec
              W1         1.22858e+10
      global relaxation matrix dimension = 390
      setting global matrices ... done, cpu time[sec] = 0.30245, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.66698, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            464.807       83.389      22.2223      27.1135      3.03814      340.786      36.9114     0.135661
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.48658, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002347, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.49573, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   1.0773e-07   1.0773e-07   1.4089e-08
      low eigenvalue method done, cpu time[sec] = 1.49684, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.08e-07  1.41e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.27e-09  1.41e-08         1
         *Z       ---       ---  3.87e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.4089e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.29732e-29   2.3907e-30  7.65662e-32  3.69457e-31  1.29979e-32  9.64315e-32  2.73844e-36  3.49091e-51

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.01923, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 580 K
      Energy reference = 32901 1/cm
      Energy step      = 100 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -86.7 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.007573
         W1 Well: collisional kernel bandwidth = 53
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.35035
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.208652
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.21593
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.973546
         W1 Well: minimal relaxation eigenvalue = 0.0784916
         W1 Well: maximal relaxation eigenvalue = 0.97896
         W1 Well:       grid size = 385
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -5599 1/cm
         B1 Barrier:        grid size = 330
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -99 1/cm
         B2 Barrier:        grid size = 327
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 200 1/cm
         B3 Barrier:        grid size = 376
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4699 1/cm
         B4 Barrier:        grid size = 391
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6199 1/cm
         B5 Barrier: nonpositive number of states at -23099 1/cm => truncating
         B5 Barrier:        grid size = 560
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23099 1/cm
         B6 Barrier:        grid size = 314
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1500 1/cm
         B7 Barrier:        grid size = 282
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4700 1/cm
         B8 Barrier:        grid size = 162
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16700 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 2.10958, elapsed time[sec] = 0
      B4 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 385
      MasterEquation::Barrier::truncate: real weight = 3.57803e+41
      MasterEquation::Barrier::truncate: effective weight = 1.63027e+38
      B5 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 385
      MasterEquation::Barrier::truncate: real weight = 1.08104e+40
      MasterEquation::Barrier::truncate: effective weight = 4.88181e+36
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1  -5599  -5599 2.14e+09 1.28e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -99  2.5e+15
         B2    201 4.52e+14
         B3  -4699 1.21e+14
         B4  -5599 1.47e+14
         B5  -5599 1.65e+13
         B6   1501 1.85e+15
         B7   4701 2.02e+14
         B8  16701 7.72e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1   1.4e-09  2.66e-09  2.12e-13  3.95e-15     2e-34  1.07e-06   0.00685  3.73e+11
          R  7.13e+08         1       1.9  0.000151  2.81e-06  1.43e-25       759  4.88e+06  2.66e+20
         P1  3.75e+08     0.527         1  7.95e-05  1.48e-06  7.51e-26       400  2.57e+06   1.4e+20
         P2  4.72e+12  6.63e+03  1.26e+04         1    0.0187  9.45e-22  5.03e+06  3.24e+10  1.76e+24
         P3  2.53e+14  3.55e+05  6.74e+05      53.6         1  5.06e-20   2.7e+08  1.74e+12  9.45e+25
         P4     5e+33  7.02e+24  1.33e+25  1.06e+21  1.97e+19         1  5.32e+27  3.43e+31  1.86e+45
         P5  9.39e+05   0.00132    0.0025  1.99e-07  3.71e-09  1.88e-28         1  6.43e+03   3.5e+17
         P6       146  2.05e-07  3.89e-07  3.09e-11  5.76e-13  2.92e-32  0.000155         1  5.44e+13
         P7  2.68e-12  3.76e-21  7.14e-21  5.68e-25  1.06e-26  5.36e-46  2.86e-18  1.84e-14         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  1.88e+08  3.57e+08  2.83e+04       529  2.68e-17  1.43e+11  9.17e+14  4.99e+28
          R  5.32e-09         1       1.9  0.000151  2.81e-06  1.43e-25       759  4.88e+06  2.66e+20
         P1   2.8e-09     0.527         1  7.95e-05  1.48e-06  7.51e-26       400  2.57e+06   1.4e+20
         P2  3.53e-05  6.63e+03  1.26e+04         1    0.0187  9.45e-22  5.03e+06  3.24e+10  1.76e+24
         P3   0.00189  3.55e+05  6.74e+05      53.6         1  5.06e-20   2.7e+08  1.74e+12  9.45e+25
         P4  3.73e+16  7.02e+24  1.33e+25  1.06e+21  1.97e+19         1  5.32e+27  3.43e+31  1.86e+45
         P5  7.01e-12   0.00132    0.0025  1.99e-07  3.71e-09  1.88e-28         1  6.43e+03   3.5e+17
         P6  1.09e-15  2.05e-07  3.89e-07  3.09e-11  5.76e-13  2.92e-32  0.000155         1  5.44e+13
         P7     2e-29  3.76e-21  7.14e-21  5.68e-25  1.06e-26  5.36e-46  2.86e-18  1.84e-14         1
   MasterEquation::set:  done, cpu time[sec] = 2.12263, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 580 K
            Well    Collision, 1/sec
              W1         3.03654e+08
      global relaxation matrix dimension = 385
      setting global matrices ... done, cpu time[sec] = 0.308179, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.45662, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            19289.6      3493.63      934.715      1138.14      127.874      14271.3      1561.06      5.97143
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.66146, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00231, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.66992, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.89603e-06  1.89603e-06  6.84833e-07
      low eigenvalue method done, cpu time[sec] = 1.671, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.9e-06  6.85e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.72e-07  6.85e-07         1
         *Z       ---       ---  2.38e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 6.84832e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.59412e-27  5.80078e-28  1.67557e-29  1.34407e-28  3.70123e-30  1.87864e-30   1.1918e-35  2.87757e-50

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.96681, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 580 K
            Well    Collision, 1/sec
              W1         9.10961e+08
      global relaxation matrix dimension = 385
      setting global matrices ... done, cpu time[sec] = 0.29377, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.49525, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            6429.87      1164.54      311.572      379.379      42.6246      4757.12      520.354      1.99048
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.61625, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002277, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.62536, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.77455e-07  9.77456e-07   3.0117e-07
      low eigenvalue method done, cpu time[sec] = 1.62643, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.77e-07  3.01e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.74e-08  3.01e-07         1
         *Z       ---       ---  2.38e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.0117e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  7.54324e-28  2.20685e-28  6.12295e-30  4.10544e-29    1.222e-30  1.67101e-30  1.20126e-35  2.87686e-50

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.9542, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 580 K
            Well    Collision, 1/sec
              W1         1.51827e+09
      global relaxation matrix dimension = 385
      setting global matrices ... done, cpu time[sec] = 0.297621, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.51419, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            3857.92      698.726      186.943      227.627      25.5748      2854.27      312.212      1.19429
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.59247, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002301, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.60147, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   6.9823e-07   6.9823e-07  1.92823e-07
      low eigenvalue method done, cpu time[sec] = 1.60255, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.98e-07  1.93e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   6.2e-08  1.93e-07         1
         *Z       ---       ---  2.38e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.92823e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  4.96498e-28  1.31123e-28  3.67581e-30  2.28423e-29  7.04716e-31  1.45847e-30  1.21118e-35  2.87704e-50

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.94482, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 580 K
            Well    Collision, 1/sec
              W1         2.12558e+09
      global relaxation matrix dimension = 385
      setting global matrices ... done, cpu time[sec] = 0.291744, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.50833, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2755.66       499.09      133.531      162.591      18.2677      2038.76      223.009     0.853062
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.61129, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002277, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.62061, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   5.5329e-07   5.5329e-07   1.4038e-07
      low eigenvalue method done, cpu time[sec] = 1.62173, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.53e-07   1.4e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.89e-08   1.4e-07         1
         *Z       ---       ---  2.38e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.4038e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  3.67348e-28  9.08082e-29  2.58142e-30  1.52959e-29  4.83019e-31  1.28829e-30  1.22132e-35  2.87706e-50

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.95464, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 580 K
            Well    Collision, 1/sec
              W1         2.73288e+09
      global relaxation matrix dimension = 385
      setting global matrices ... done, cpu time[sec] = 0.293496, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.50096, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2143.29      388.181      103.857       126.46      14.2082      1585.71      173.451     0.663493
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.61123, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002295, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.62023, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.62301e-07  4.62301e-07  1.09359e-07
      low eigenvalue method done, cpu time[sec] = 1.62132, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.62e-07  1.09e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.07e-08  1.09e-07         1
         *Z       ---       ---  2.38e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.09359e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.89349e-28  6.81528e-29  1.96356e-30  1.12427e-29  3.61178e-31  1.15231e-30  1.23145e-35  2.87703e-50

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.94423, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 580 K
            Well    Collision, 1/sec
              W1         3.03654e+09
      global relaxation matrix dimension = 385
      setting global matrices ... done, cpu time[sec] = 0.29123, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.51328, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1928.96      349.363      93.4715      113.814      12.7874      1427.13      156.106     0.597143
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.60578, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002288, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.61473, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.28114e-07  4.28114e-07   9.8169e-08
      low eigenvalue method done, cpu time[sec] = 1.61583, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.28e-07  9.82e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.76e-08  9.82e-08         1
         *Z       ---       ---  2.38e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 9.8169e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0   2.6088e-28  6.02344e-29  1.74635e-30  9.85954e-30  3.19014e-31  1.09427e-30  1.23646e-35  2.87715e-50

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.95021, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 580 K
            Well    Collision, 1/sec
              W1         4.55481e+09
      global relaxation matrix dimension = 385
      setting global matrices ... done, cpu time[sec] = 0.29391, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.53052, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1285.97      232.909      62.3143      75.8757      8.52492      951.423      104.071     0.398096
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.58459, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002286, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.59362, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.15924e-07  3.15924e-07  6.36272e-08
      low eigenvalue method done, cpu time[sec] = 1.59472, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.16e-07  6.36e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.76e-08  6.36e-08         1
         *Z       ---       ---  2.38e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 6.36272e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.71728e-28  3.67986e-29  1.09632e-30  5.87438e-30  1.95285e-31  8.72599e-31   1.2604e-35  2.87728e-50

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.95577, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 580 K
            Well    Collision, 1/sec
              W1         6.07308e+09
      global relaxation matrix dimension = 385
      setting global matrices ... done, cpu time[sec] = 0.293616, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.52072, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             964.48      174.681      46.7357      56.9068      6.39369      713.567      78.0531     0.298572
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.59103, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.0023, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.5999, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   2.5267e-07   2.5267e-07  4.59522e-08
      low eigenvalue method done, cpu time[sec] = 1.60096, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.53e-07   4.6e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.19e-08   4.6e-08         1
         *Z       ---       ---  2.38e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 4.59522e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.25241e-28  2.55108e-29  7.76699e-31  4.01726e-30  1.36075e-31  7.23517e-31  1.28155e-35  2.87743e-50

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.9509, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 580 K
            Well    Collision, 1/sec
              W1         7.59134e+09
      global relaxation matrix dimension = 385
      setting global matrices ... done, cpu time[sec] = 0.294165, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.33884, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            771.584      139.745      37.3886      45.5254      5.11495      570.854      62.4424     0.238857
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.77034, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002276, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.77932, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.11549e-07  2.11549e-07   3.5336e-08
      low eigenvalue method done, cpu time[sec] = 1.78043, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.12e-07  3.53e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.83e-08  3.53e-08         1
         *Z       ---       ---  2.38e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.5336e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  9.69753e-29  1.90192e-29  5.89487e-31  2.96955e-30  1.02029e-31  6.16108e-31  1.29931e-35  2.87758e-50

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.96077, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 580 K
            Well    Collision, 1/sec
              W1         9.10961e+09
      global relaxation matrix dimension = 385
      setting global matrices ... done, cpu time[sec] = 0.297244, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.52731, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            642.987      116.454      31.1572      37.9379      4.26246      475.712      52.0354     0.199048
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.5871, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002293, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.59604, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.82472e-07  1.82472e-07  2.83198e-08
      low eigenvalue method done, cpu time[sec] = 1.59716, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.82e-07  2.83e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.57e-08  2.83e-08         1
         *Z       ---       ---  2.38e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.83198e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  7.81282e-29   1.4871e-29  4.67927e-31  2.30846e-30  8.02253e-32  5.34926e-31  1.31356e-35  2.87772e-50

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.95655, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 580 K
            Well    Collision, 1/sec
              W1         1.06279e+10
      global relaxation matrix dimension = 385
      setting global matrices ... done, cpu time[sec] = 0.29456, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.54003, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            551.131       99.818      26.7061      32.5182      3.65354      407.753      44.6017     0.170612
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.57754, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002273, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.58652, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   1.6073e-07   1.6073e-07  2.33757e-08
      low eigenvalue method done, cpu time[sec] = 1.58761, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.61e-07  2.34e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.38e-08  2.34e-08         1
         *Z       ---       ---  2.38e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.33757e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0   6.4757e-29  1.20268e-29  3.83399e-31  1.85923e-30   6.5229e-32   4.7138e-31  1.32442e-35  2.87786e-50

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.95837, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 580 K
            Well    Collision, 1/sec
              W1         1.21462e+10
      global relaxation matrix dimension = 385
      setting global matrices ... done, cpu time[sec] = 0.294777, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.54433, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             482.24      87.3407      23.3679      28.4534      3.19684      356.784      39.0265     0.149286
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.5749, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00228, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.58386, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.43809e-07  1.43809e-07  1.97272e-08
      low eigenvalue method done, cpu time[sec] = 1.58496, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.44e-07  1.97e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.23e-08  1.97e-08         1
         *Z       ---       ---  2.38e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.97272e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  5.48357e-29  9.97533e-30  3.21665e-31  1.53737e-30  5.43749e-32  4.20288e-31  1.33216e-35  2.87801e-50

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.95805, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 590 K
      Energy reference = 33179 1/cm
      Energy step      = 102 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -86.6 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.006276
         W1 Well: collisional kernel bandwidth = 53
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.362669
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.205454
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.203633
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.918762
         W1 Well: minimal relaxation eigenvalue = 0.0779898
         W1 Well: maximal relaxation eigenvalue = 0.978336
         W1 Well:       grid size = 381
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -5683 1/cm
         B1 Barrier:        grid size = 326
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -73 1/cm
         B2 Barrier:        grid size = 324
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 130 1/cm
         B3 Barrier:        grid size = 371
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4662 1/cm
         B4 Barrier:        grid size = 386
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6193 1/cm
         B5 Barrier: nonpositive number of states at -23125 1/cm => truncating
         B5 Barrier:        grid size = 552
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23124 1/cm
         B6 Barrier:        grid size = 311
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1456 1/cm
         B7 Barrier:        grid size = 280
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4619 1/cm
         B8 Barrier:        grid size = 161
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16757 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 2.05168, elapsed time[sec] = 0
      B4 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 381
      MasterEquation::Barrier::truncate: real weight = 1.74094e+41
      MasterEquation::Barrier::truncate: effective weight = 8.09095e+37
      B5 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 381
      MasterEquation::Barrier::truncate: real weight = 5.18927e+39
      MasterEquation::Barrier::truncate: effective weight = 2.39651e+36
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1  -5683  -5683 2.08e+09 1.34e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -73 2.67e+15
         B2    131 4.89e+14
         B3  -4662 1.31e+14
         B4  -5683  1.6e+14
         B5  -5683  1.8e+13
         B6   1457    2e+15
         B7   4619 2.21e+14
         B8  16757 8.77e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  1.22e-09   2.3e-09  2.24e-13  4.47e-15  4.88e-34  8.71e-07   0.00494  1.63e+11
          R  8.21e+08         1      1.89  0.000184  3.67e-06  4.01e-25       715  4.05e+06  1.34e+20
         P1  4.35e+08      0.53         1  9.73e-05  1.95e-06  2.12e-25       379  2.15e+06  7.12e+19
         P2  4.47e+12  5.45e+03  1.03e+04         1      0.02  2.18e-21  3.89e+06  2.21e+10  7.31e+23
         P3  2.24e+14  2.73e+05  5.14e+05        50         1  1.09e-19  1.95e+08   1.1e+12  3.66e+25
         P4  2.05e+33   2.5e+24  4.71e+24  4.58e+20  9.15e+18         1  1.78e+27  1.01e+31  3.35e+44
         P5  1.15e+06    0.0014   0.00264  2.57e-07  5.13e-09  5.61e-28         1  5.67e+03  1.88e+17
         P6       203  2.47e-07  4.65e-07  4.53e-11  9.05e-13  9.89e-32  0.000176         1  3.31e+13
         P7  6.12e-12  7.45e-21  1.41e-20  1.37e-24  2.73e-26  2.99e-45  5.33e-18  3.02e-14         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  4.83e+07   9.1e+07  8.86e+03       177  1.93e-17  3.45e+10  1.96e+14  6.48e+27
          R  2.07e-08         1      1.89  0.000184  3.67e-06  4.01e-25       715  4.05e+06  1.34e+20
         P1   1.1e-08      0.53         1  9.73e-05  1.95e-06  2.12e-25       379  2.15e+06  7.12e+19
         P2  0.000113  5.45e+03  1.03e+04         1      0.02  2.18e-21  3.89e+06  2.21e+10  7.31e+23
         P3   0.00565  2.73e+05  5.14e+05        50         1  1.09e-19  1.95e+08   1.1e+12  3.66e+25
         P4  5.17e+16   2.5e+24  4.71e+24  4.58e+20  9.15e+18         1  1.78e+27  1.01e+31  3.35e+44
         P5   2.9e-11    0.0014   0.00264  2.57e-07  5.13e-09  5.61e-28         1  5.67e+03  1.88e+17
         P6  5.11e-15  2.47e-07  4.65e-07  4.53e-11  9.05e-13  9.89e-32  0.000176         1  3.31e+13
         P7  1.54e-28  7.45e-21  1.41e-20  1.37e-24  2.73e-26  2.99e-45  5.33e-18  3.02e-14         1
   MasterEquation::set:  done, cpu time[sec] = 2.06514, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 590 K
            Well    Collision, 1/sec
              W1         3.00264e+08
      global relaxation matrix dimension = 381
      setting global matrices ... done, cpu time[sec] = 0.300585, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.36112, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            20002.9      3657.19      982.305      1193.69      134.471        14932      1649.29      6.55983
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.73829, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002268, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.77163, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.05015e-06  2.05015e-06  7.58268e-07
      low eigenvalue method done, cpu time[sec] = 1.77269, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.05e-06  7.58e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.85e-07  7.58e-07         1
         *Z       ---       ---  1.63e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 7.58268e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  6.09928e-27  2.20129e-27   6.3426e-29  5.05427e-28  1.39557e-29  7.48667e-30  5.50637e-35  2.20808e-49

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.95693, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 590 K
            Well    Collision, 1/sec
              W1         9.00793e+08
      global relaxation matrix dimension = 381
      setting global matrices ... done, cpu time[sec] = 0.289479, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.34737, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            6667.62      1219.06      327.435      397.896      44.8237      4977.34      549.763      2.18661
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.69678, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00225, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.7303, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.06848e-06  1.06848e-06  3.37762e-07
      low eigenvalue method done, cpu time[sec] = 1.73138, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.07e-06  3.38e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.51e-08  3.38e-07         1
         *Z       ---       ---  1.63e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.37761e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.92212e-27  8.46824e-28  2.35081e-29  1.56507e-28  4.67377e-30  6.69853e-30  5.55003e-35  2.20789e-49

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.89325, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 590 K
            Well    Collision, 1/sec
              W1         1.50132e+09
      global relaxation matrix dimension = 381
      setting global matrices ... done, cpu time[sec] = 0.289372, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.36204, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            4000.57      731.437      196.461      238.738      26.8942       2986.4      329.858      1.31197
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.67789, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002229, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.71108, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.66857e-07  7.66857e-07  2.17713e-07
      low eigenvalue method done, cpu time[sec] = 1.71219, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.67e-07  2.18e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.77e-08  2.18e-07         1
         *Z       ---       ---  1.63e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.17713e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.93605e-27  5.06191e-28   1.4216e-29  8.76885e-29  2.71502e-30   5.8728e-30  5.59573e-35  2.20807e-49

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.88805, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 590 K
            Well    Collision, 1/sec
              W1         2.10185e+09
      global relaxation matrix dimension = 381
      setting global matrices ... done, cpu time[sec] = 0.29117, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.35884, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2857.55      522.455      140.329      170.527      19.2101      2133.15      235.613     0.937119
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.68451, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002237, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.71745, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.09488e-07  6.09488e-07  1.59248e-07
      low eigenvalue method done, cpu time[sec] = 1.71853, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.09e-07  1.59e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.35e-08  1.59e-07         1
         *Z       ---       ---  1.63e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.59248e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.43906e-27  3.52049e-28   1.0034e-29  5.90021e-29  1.87029e-30  5.20593e-30  5.64231e-35  2.20814e-49

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.89518, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 590 K
            Well    Collision, 1/sec
              W1         2.70238e+09
      global relaxation matrix dimension = 381
      setting global matrices ... done, cpu time[sec] = 0.289627, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.36263, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2222.54      406.354      109.145      132.632      14.9412      1659.11      183.254     0.728871
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.67847, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002271, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.71171, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.10362e-07  5.10362e-07  1.24512e-07
      low eigenvalue method done, cpu time[sec] = 1.71281, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   5.1e-07  1.25e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.47e-08  1.25e-07         1
         *Z       ---       ---  1.63e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.24512e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.13757e-27  2.65091e-28  7.66217e-30  4.35284e-29  1.40395e-30  4.67009e-30  5.68883e-35  2.20828e-49

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.88611, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 590 K
            Well    Collision, 1/sec
              W1         3.00264e+09
      global relaxation matrix dimension = 381
      setting global matrices ... done, cpu time[sec] = 0.291909, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.36739, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2000.29      365.719      98.2305      119.369      13.4471       1493.2      164.929     0.655983
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.6716, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002222, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.70475, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.73043e-07  4.73043e-07  1.11945e-07
      low eigenvalue method done, cpu time[sec] = 1.70585, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.73e-07  1.12e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.13e-08  1.12e-07         1
         *Z       ---       ---  1.63e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.11945e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.02722e-27  2.34623e-28  6.82594e-30  3.82337e-29   1.2421e-30  4.44065e-30  5.71183e-35  2.20826e-49

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.89478, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 590 K
            Well    Collision, 1/sec
              W1         4.50397e+09
      global relaxation matrix dimension = 381
      setting global matrices ... done, cpu time[sec] = 0.291046, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.38433, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1333.52      243.812       65.487      79.5792      8.96473      995.468      109.953     0.437322
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.66445, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002231, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.698, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.50241e-07  3.50241e-07  7.30051e-08
      low eigenvalue method done, cpu time[sec] = 1.69906, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   3.5e-07   7.3e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.04e-08   7.3e-08         1
         *Z       ---       ---  1.63e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 7.30051e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  6.80297e-28  1.44142e-28  4.31335e-30  2.29219e-29  7.65324e-31  3.56011e-30  5.82144e-35  2.20838e-49

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.90442, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 590 K
            Well    Collision, 1/sec
              W1         6.00529e+09
      global relaxation matrix dimension = 381
      setting global matrices ... done, cpu time[sec] = 0.291586, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.37527, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1000.14      182.859      49.1153      59.6844      6.72355      746.601      82.4644     0.327992
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.67157, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002229, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.70466, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.80748e-07  2.80748e-07  5.29636e-08
      low eigenvalue method done, cpu time[sec] = 1.70574, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.81e-07   5.3e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.43e-08   5.3e-08         1
         *Z       ---       ---  1.63e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 5.29636e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  4.98354e-28  1.00339e-28  3.07048e-30  1.57465e-29  5.35816e-31  2.96409e-30  5.91812e-35  2.20849e-49

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.89971, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 590 K
            Well    Collision, 1/sec
              W1         7.50661e+09
      global relaxation matrix dimension = 381
      setting global matrices ... done, cpu time[sec] = 0.291733, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.38513, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            800.114      146.287      39.2922      47.7475      5.37884      597.281      65.9715     0.262393
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.65982, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002233, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.69272, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.35451e-07  2.35451e-07  4.08733e-08
      low eigenvalue method done, cpu time[sec] = 1.69375, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.35e-07  4.09e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.03e-08  4.09e-08         1
         *Z       ---       ---  1.63e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 4.08733e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  3.87241e-28  7.50501e-29  2.33921e-30  1.16813e-29  4.03261e-31  2.53257e-30  5.99926e-35  2.20859e-49

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.90145, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 590 K
            Well    Collision, 1/sec
              W1         9.00793e+09
      global relaxation matrix dimension = 381
      setting global matrices ... done, cpu time[sec] = 0.29244, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.41064, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            666.762      121.906      32.7435      39.7896      4.48237      497.734      54.9763     0.218661
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.65974, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002241, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.69298, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.03357e-07  2.03357e-07  3.28545e-08
      low eigenvalue method done, cpu time[sec] = 1.69407, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.03e-07  3.29e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.75e-08  3.29e-08         1
         *Z       ---       ---  1.63e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.28544e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  3.12893e-28  5.88393e-29  1.86264e-30  9.10752e-30  3.18067e-31  2.20516e-30  6.06439e-35  2.20871e-49

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.92553, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 590 K
            Well    Collision, 1/sec
              W1         1.05093e+10
      global relaxation matrix dimension = 381
      setting global matrices ... done, cpu time[sec] = 0.289613, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.3866, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             571.51      104.491      28.0659      34.1054      3.84203      426.629      47.1225     0.187424
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.6587, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.002235, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.6917, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   1.7932e-07   1.7932e-07  2.71872e-08
      low eigenvalue method done, cpu time[sec] = 1.69281, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.79e-07  2.72e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.54e-08  2.72e-08         1
         *Z       ---       ---  1.63e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.71872e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.59989e-28   4.7695e-29  1.53023e-30  7.35354e-30  2.59294e-31  1.94802e-30  6.11417e-35  2.20882e-49

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.89786, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 590 K
            Well    Collision, 1/sec
              W1         1.20106e+10
      global relaxation matrix dimension = 381
      setting global matrices ... done, cpu time[sec] = 0.292782, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.37816, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            500.071      91.4296      24.5576      29.8422      3.36177      373.301      41.2322     0.163996
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.6568, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00224, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.68992, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.60588e-07  1.60588e-07  2.29942e-08
      low eigenvalue method done, cpu time[sec] = 1.69101, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.61e-07   2.3e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.37e-08   2.3e-08         1
         *Z       ---       ---  1.63e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.29942e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.20635e-28  3.96388e-29  1.28682e-30  6.09377e-30  2.16644e-31  1.74069e-30  6.14979e-35  2.20893e-49

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.89312, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 600 K
      Energy reference = 33457 1/cm
      Energy step      = 103 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -86.5 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.006988
         W1 Well: collisional kernel bandwidth = 53
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.371311
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.198913
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.20216
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.91908
         W1 Well: minimal relaxation eigenvalue = 0.0775071
         W1 Well: maximal relaxation eigenvalue = 0.980091
         W1 Well:       grid size = 381
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -5785 1/cm
         B1 Barrier:        grid size = 325
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -17 1/cm
         B2 Barrier:        grid size = 323
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 187 1/cm
         B3 Barrier:        grid size = 370
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4652 1/cm
         B4 Barrier:        grid size = 385
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6198 1/cm
         B5 Barrier: nonpositive number of states at -23193 1/cm => truncating
         B5 Barrier:        grid size = 550
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23192 1/cm
         B6 Barrier:        grid size = 311
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1424 1/cm
         B7 Barrier:        grid size = 280
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4616 1/cm
         B8 Barrier:        grid size = 162
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16771 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 2.04472, elapsed time[sec] = 0
      B4 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 381
      MasterEquation::Barrier::truncate: real weight = 8.69284e+40
      MasterEquation::Barrier::truncate: effective weight = 4.07957e+37
      B5 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 381
      MasterEquation::Barrier::truncate: real weight = 2.56552e+39
      MasterEquation::Barrier::truncate: effective weight = 1.19875e+36
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1  -5785  -5785 2.01e+09  1.4e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -17 2.87e+15
         B2    188 5.29e+14
         B3  -4652 1.43e+14
         B4  -5785 1.73e+14
         B5  -5785 1.95e+13
         B6   1425 2.16e+15
         B7   4617 2.41e+14
         B8  16772 9.95e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  1.11e-09  2.09e-09  2.47e-13  5.28e-15  1.21e-33  7.51e-07   0.00377  7.72e+10
          R  8.98e+08         1      1.87  0.000222  4.74e-06  1.09e-24       674  3.38e+06  6.94e+19
         P1  4.79e+08     0.533         1  0.000118  2.53e-06  5.81e-25       360   1.8e+06   3.7e+19
         P2  4.05e+12  4.51e+03  8.45e+03         1    0.0214  4.91e-21  3.04e+06  1.52e+10  3.13e+23
         P3  1.89e+14  2.11e+05  3.96e+05      46.8         1   2.3e-19  1.42e+08  7.14e+11  1.46e+25
         P4  8.25e+32  9.19e+23  1.72e+24  2.04e+20  4.35e+18         1   6.2e+26  3.11e+30  6.37e+43
         P5  1.33e+06   0.00148   0.00278  3.29e-07  7.03e-09  1.61e-27         1  5.02e+03  1.03e+17
         P6       265  2.96e-07  5.54e-07  6.56e-11   1.4e-12  3.22e-31  0.000199         1  2.05e+13
         P7  1.29e-11  1.44e-20   2.7e-20   3.2e-24  6.83e-26  1.57e-44  9.72e-18  4.88e-14         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1   1.3e+07  2.43e+07  2.88e+03      61.5  1.41e-17  8.75e+09  4.39e+13     9e+26
          R   7.7e-08         1      1.87  0.000222  4.74e-06  1.09e-24       674  3.38e+06  6.94e+19
         P1  4.11e-08     0.533         1  0.000118  2.53e-06  5.81e-25       360   1.8e+06   3.7e+19
         P2  0.000347  4.51e+03  8.45e+03         1    0.0214  4.91e-21  3.04e+06  1.52e+10  3.13e+23
         P3    0.0163  2.11e+05  3.96e+05      46.8         1   2.3e-19  1.42e+08  7.14e+11  1.46e+25
         P4  7.08e+16  9.19e+23  1.72e+24  2.04e+20  4.35e+18         1   6.2e+26  3.11e+30  6.37e+43
         P5  1.14e-10   0.00148   0.00278  3.29e-07  7.03e-09  1.61e-27         1  5.02e+03  1.03e+17
         P6  2.28e-14  2.96e-07  5.54e-07  6.56e-11   1.4e-12  3.22e-31  0.000199         1  2.05e+13
         P7  1.11e-27  1.44e-20   2.7e-20   3.2e-24  6.83e-26  1.57e-44  9.72e-18  4.88e-14         1
   MasterEquation::set:  done, cpu time[sec] = 2.05772, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 600 K
            Well    Collision, 1/sec
              W1         2.96972e+08
      global relaxation matrix dimension = 381
      setting global matrices ... done, cpu time[sec] = 0.301322, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.35171, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            20732.1      3826.31      1031.71      1251.25      141.324      15613.8      1741.24      7.19473
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.75268, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002267, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.76208, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.12776e-06  2.12776e-06   8.0398e-07
      low eigenvalue method done, cpu time[sec] = 1.76318, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.13e-06  8.04e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.91e-07  8.04e-07         1
         *Z       ---       ---  1.15e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 8.03979e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.22836e-26  7.96855e-27  2.29317e-28  1.81543e-27  5.02619e-29  2.86898e-29   2.4116e-34  1.58232e-48

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.97181, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 600 K
            Well    Collision, 1/sec
              W1         8.90916e+08
      global relaxation matrix dimension = 381
      setting global matrices ... done, cpu time[sec] = 0.291173, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.38204, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             6910.7      1275.44      343.903      417.082       47.108       5204.6      580.412      2.39824
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.70177, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002252, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.71057, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.12072e-06  1.12072e-06  3.62699e-07
      low eigenvalue method done, cpu time[sec] = 1.71165, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.12e-06  3.63e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.92e-08  3.63e-07         1
         *Z       ---       ---  1.15e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.62699e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.08063e-26  3.10059e-27  8.61857e-29  5.69776e-28  1.70707e-29  2.57354e-29  2.43063e-34  1.58264e-48

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.91202, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 600 K
            Well    Collision, 1/sec
              W1         1.48486e+09
      global relaxation matrix dimension = 381
      setting global matrices ... done, cpu time[sec] = 0.28609, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.38278, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            4146.42      765.261      206.342      250.249      28.2648      3122.76      348.247      1.43895
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.69919, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002272, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.70812, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.08042e-07  8.08043e-07  2.35344e-07
      low eigenvalue method done, cpu time[sec] = 1.7092, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.08e-07  2.35e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   7.1e-08  2.35e-07         1
         *Z       ---       ---  1.15e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.35344e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  7.20602e-27  1.86462e-27   5.2493e-29  3.21438e-28  9.98775e-30  2.26328e-29  2.45052e-34  1.58271e-48

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.90085, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 600 K
            Well    Collision, 1/sec
              W1          2.0788e+09
      global relaxation matrix dimension = 381
      setting global matrices ... done, cpu time[sec] = 0.287766, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.38581, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2961.73      546.615      147.387      178.749      20.1891      2230.54      248.748      1.02782
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.69925, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002255, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.70815, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.44096e-07  6.44096e-07  1.72943e-07
      low eigenvalue method done, cpu time[sec] = 1.70925, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.44e-07  1.73e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.63e-08  1.73e-07         1
         *Z       ---       ---  1.15e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.72943e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  5.38044e-27  1.30232e-27   3.7235e-29   2.1731e-28  6.91436e-30  2.01181e-29  2.47077e-34   1.5827e-48

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.91023, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 600 K
            Well    Collision, 1/sec
              W1         2.67275e+09
      global relaxation matrix dimension = 381
      setting global matrices ... done, cpu time[sec] = 0.289625, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.39727, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2303.57      425.145      114.634      139.027      15.7027      1734.87      193.471     0.799414
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.68592, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002254, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.69492, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.40483e-07  5.40483e-07  1.35704e-07
      low eigenvalue method done, cpu time[sec] = 1.69617, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   5.4e-07  1.36e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   4.7e-08  1.36e-07         1
         *Z       ---       ---  1.15e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.35704e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  4.26813e-27  9.83862e-28  2.85422e-29  1.60904e-28  5.21013e-30   1.8091e-29  2.49097e-34  1.58276e-48

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.90724, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 600 K
            Well    Collision, 1/sec
              W1         2.96972e+09
      global relaxation matrix dimension = 381
      setting global matrices ... done, cpu time[sec] = 0.28974, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.38197, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2073.21      382.631      103.171      125.125      14.1324      1561.38      174.124     0.719473
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.70092, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002252, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.70981, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.01398e-07  5.01398e-07  1.22195e-07
      low eigenvalue method done, cpu time[sec] = 1.71086, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.01e-07  1.22e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.36e-08  1.22e-07         1
         *Z       ---       ---  1.15e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.22195e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  3.85987e-27  8.72007e-28  2.54687e-29  1.41552e-28  4.61701e-30  1.72211e-29  2.50095e-34  1.58279e-48

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.90582, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 600 K
            Well    Collision, 1/sec
              W1         4.45458e+09
      global relaxation matrix dimension = 381
      setting global matrices ... done, cpu time[sec] = 0.289386, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.40096, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1382.14      255.087      68.7806      83.4164       9.4216      1040.92      116.082     0.479648
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.68796, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002267, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.69688, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.72446e-07  3.72446e-07  8.01731e-08
      low eigenvalue method done, cpu time[sec] = 1.69794, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.72e-07  8.02e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.21e-08  8.02e-08         1
         *Z       ---       ---  1.15e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 8.01731e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0   2.5715e-27  5.38711e-28  1.61976e-29  8.53843e-29  2.86304e-30  1.38711e-29  2.54847e-34  1.58285e-48

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.91343, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 600 K
            Well    Collision, 1/sec
              W1         5.93944e+09
      global relaxation matrix dimension = 381
      setting global matrices ... done, cpu time[sec] = 0.288609, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.40396, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1036.61      191.315      51.5854      62.5623       7.0662      780.691      87.0618     0.359736
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.68245, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002253, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.6914, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.99207e-07  2.99207e-07   5.8422e-08
      low eigenvalue method done, cpu time[sec] = 1.69249, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.99e-07  5.84e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.57e-08  5.84e-08         1
         *Z       ---       ---  1.15e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 5.8422e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.89198e-27  3.76534e-28  1.15846e-29  5.89176e-29  2.01384e-30  1.15919e-29  2.59035e-34  1.58293e-48

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.90931, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 600 K
            Well    Collision, 1/sec
              W1          7.4243e+09
      global relaxation matrix dimension = 381
      setting global matrices ... done, cpu time[sec] = 0.290067, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.38612, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            829.284      153.052      41.2683      50.0498      5.65296      624.553      69.6495     0.287789
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.69023, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002256, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.69933, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.51345e-07  2.51345e-07  4.52439e-08
      low eigenvalue method done, cpu time[sec] = 1.70044, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.51e-07  4.52e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.15e-08  4.52e-08         1
         *Z       ---       ---  1.15e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 4.52438e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.47523e-27  2.82544e-28  8.85839e-30  4.38609e-29  1.52123e-30  9.93503e-30  2.62554e-34  1.58301e-48

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.90401, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 600 K
            Well    Collision, 1/sec
              W1         8.90916e+09
      global relaxation matrix dimension = 381
      setting global matrices ... done, cpu time[sec] = 0.289355, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.3856, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             691.07      127.544      34.3903      41.7082       4.7108       520.46      58.0412     0.239824
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.69343, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002254, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.70224, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.17367e-07  2.17367e-07  3.64732e-08
      low eigenvalue method done, cpu time[sec] = 1.70332, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.17e-07  3.65e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.86e-08  3.65e-08         1
         *Z       ---       ---  1.15e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.64732e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0   1.1954e-27  2.22106e-28  7.07534e-30  3.42961e-29  1.20351e-30  8.67354e-30  2.65384e-34  1.58309e-48

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.90717, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 600 K
            Well    Collision, 1/sec
              W1          1.0394e+10
      global relaxation matrix dimension = 381
      setting global matrices ... done, cpu time[sec] = 0.290297, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.41204, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            592.346      109.323      29.4774      35.7499      4.03783      446.109      49.7496     0.205564
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.67526, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002258, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.68413, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.91878e-07  1.91878e-07  3.02565e-08
      low eigenvalue method done, cpu time[sec] = 1.68521, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.92e-07  3.03e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.63e-08  3.03e-08         1
         *Z       ---       ---  1.15e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.02565e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  9.95712e-28  1.80449e-28   5.8279e-30  2.77595e-29  9.83668e-31  7.67992e-30  2.67556e-34  1.58316e-48

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.91772, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 600 K
            Well    Collision, 1/sec
              W1         1.18789e+10
      global relaxation matrix dimension = 381
      setting global matrices ... done, cpu time[sec] = 0.294284, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.40987, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            518.303      95.6577      25.7927      31.2811       3.5331      390.345      43.5309     0.179868
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.67232, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002242, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.68126, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.71987e-07  1.71987e-07  2.56454e-08
      low eigenvalue method done, cpu time[sec] = 1.68235, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.72e-07  2.56e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.46e-08  2.56e-08         1
         *Z       ---       ---  1.15e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.56454e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  8.46795e-28  1.50267e-28  4.91205e-30  2.30533e-29  8.23727e-31  6.87669e-30   2.6912e-34  1.58324e-48

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.91335, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 610 K
      Energy reference = 33735 1/cm
      Energy step      = 105 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -86.4 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.006393
         W1 Well: collisional kernel bandwidth = 53
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.362206
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.193177
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.194007
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.907918
         W1 Well: minimal relaxation eigenvalue = 0.0770251
         W1 Well: maximal relaxation eigenvalue = 0.979466
         W1 Well:       grid size = 377
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -5850 1/cm
         B1 Barrier:        grid size = 322
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -75 1/cm
         B2 Barrier:        grid size = 320
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 134 1/cm
         B3 Barrier:        grid size = 366
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4695 1/cm
         B4 Barrier:        grid size = 381
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6270 1/cm
         B5 Barrier: nonpositive number of states at -23175 1/cm => truncating
         B5 Barrier:        grid size = 542
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23175 1/cm
         B6 Barrier:        grid size = 307
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1499 1/cm
         B7 Barrier:        grid size = 277
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4649 1/cm
         B8 Barrier:        grid size = 162
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16724 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 2.01188, elapsed time[sec] = 0
      B4 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 377
      MasterEquation::Barrier::truncate: real weight = 4.44855e+40
      MasterEquation::Barrier::truncate: effective weight = 2.12825e+37
      B5 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 377
      MasterEquation::Barrier::truncate: real weight = 1.30391e+39
      MasterEquation::Barrier::truncate: effective weight = 6.21849e+35
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1  -5850  -5850 1.97e+09 1.46e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -75 3.07e+15
         B2    135 5.72e+14
         B3  -4695 1.55e+14
         B4  -5850 1.87e+14
         B5  -5850 2.12e+13
         B6   1500 2.33e+15
         B7   4650 2.63e+14
         B8  16725 1.13e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  9.31e-10  1.74e-09  2.48e-13  5.66e-15  2.67e-33  5.94e-07   0.00265  3.41e+10
          R  1.07e+09         1      1.86  0.000266  6.07e-06  2.86e-24       637  2.84e+06  3.66e+19
         P1  5.76e+08     0.536         1  0.000143  3.26e-06  1.54e-24       342  1.52e+06  1.97e+19
         P2  4.03e+12  3.75e+03  6.99e+03         1    0.0228  1.07e-20  2.39e+06  1.07e+10  1.37e+23
         P3  1.77e+14  1.65e+05  3.07e+05      43.9         1  4.71e-19  1.05e+08  4.68e+11  6.03e+24
         P4  3.75e+32  3.49e+23  6.51e+23  9.31e+19  2.12e+18         1  2.23e+26  9.92e+29  1.28e+43
         P5  1.68e+06   0.00157   0.00293  4.18e-07  9.53e-09  4.49e-27         1  4.46e+03  5.75e+16
         P6       378  3.52e-07  6.56e-07  9.38e-11  2.14e-12  1.01e-30  0.000224         1  1.29e+13
         P7  2.93e-11  2.73e-20  5.09e-20  7.28e-24  1.66e-25  7.81e-44  1.74e-17  7.75e-14         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  3.64e+06  6.79e+06       971      22.1  1.04e-17  2.32e+09  1.03e+13  1.33e+26
          R  2.75e-07         1      1.86  0.000266  6.07e-06  2.86e-24       637  2.84e+06  3.66e+19
         P1  1.47e-07     0.536         1  0.000143  3.26e-06  1.54e-24       342  1.52e+06  1.97e+19
         P2   0.00103  3.75e+03  6.99e+03         1    0.0228  1.07e-20  2.39e+06  1.07e+10  1.37e+23
         P3    0.0452  1.65e+05  3.07e+05      43.9         1  4.71e-19  1.05e+08  4.68e+11  6.03e+24
         P4  9.59e+16  3.49e+23  6.51e+23  9.31e+19  2.12e+18         1  2.23e+26  9.92e+29  1.28e+43
         P5  4.31e-10   0.00157   0.00293  4.18e-07  9.53e-09  4.49e-27         1  4.46e+03  5.75e+16
         P6  9.67e-14  3.52e-07  6.56e-07  9.38e-11  2.14e-12  1.01e-30  0.000224         1  1.29e+13
         P7  7.49e-27  2.73e-20  5.09e-20  7.28e-24  1.66e-25  7.81e-44  1.74e-17  7.75e-14         1
   MasterEquation::set:  done, cpu time[sec] = 2.02656, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 610 K
            Well    Collision, 1/sec
              W1         2.93772e+08
      global relaxation matrix dimension = 377
      setting global matrices ... done, cpu time[sec] = 0.294168, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.26683, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            21477.5      4001.13      1082.97      1310.86      148.439      16317.1      1837.01      7.87968
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.80805, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002203, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.84078, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.39122e-06  2.39123e-06  9.23654e-07
      low eigenvalue method done, cpu time[sec] = 1.84202, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.39e-06  9.24e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.14e-07  9.24e-07         1
         *Z       ---       ---  7.89e+27
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 9.23654e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  7.79899e-26  2.76704e-26  7.94564e-28  6.25117e-27  1.73514e-28  1.04729e-28  1.00454e-33  1.06304e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.92128, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 610 K
            Well    Collision, 1/sec
              W1         8.81317e+08
      global relaxation matrix dimension = 377
      setting global matrices ... done, cpu time[sec] = 0.284161, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.2531, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            7159.18      1333.71       360.99      436.952      49.4798      5439.03      612.335      2.62656
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.75869, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002185, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.79123, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   1.2725e-06   1.2725e-06  4.21765e-07
      low eigenvalue method done, cpu time[sec] = 1.79361, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.27e-06  4.22e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.12e-07  4.22e-07         1
         *Z       ---       ---  7.89e+27
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 4.21765e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  3.82666e-26  1.08807e-26   3.0267e-28  1.98756e-27  5.97345e-29  9.43367e-29  1.01241e-33  1.06306e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.84653, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 610 K
            Well    Collision, 1/sec
              W1         1.46886e+09
      global relaxation matrix dimension = 377
      setting global matrices ... done, cpu time[sec] = 0.284823, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.25625, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            4295.51      800.225      216.594      262.171      29.6879      3263.42      367.401      1.57594
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.75155, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002184, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.78384, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.21631e-07  9.21631e-07  2.75428e-07
      low eigenvalue method done, cpu time[sec] = 1.7849, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.22e-07  2.75e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.06e-08  2.75e-07         1
         *Z       ---       ---  7.89e+27
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.75428e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.56773e-26  6.58105e-27  1.85633e-28  1.12877e-27  3.51933e-29  8.32677e-29  1.02062e-33  1.06312e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.84173, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 610 K
            Well    Collision, 1/sec
              W1         2.05641e+09
      global relaxation matrix dimension = 377
      setting global matrices ... done, cpu time[sec] = 0.283961, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.23439, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            3068.22       571.59       154.71      187.265      21.2056      2331.01      262.429      1.12567
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.76635, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002183, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.79876, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.36763e-07  7.36763e-07  2.03308e-07
      low eigenvalue method done, cpu time[sec] = 1.79984, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.37e-07  2.03e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.41e-08  2.03e-07         1
         *Z       ---       ---  7.89e+27
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.03308e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.92565e-26  4.61512e-27  1.32312e-28  7.66635e-28  2.44814e-29  7.42402e-29  1.02898e-33  1.06312e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.83367, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 610 K
            Well    Collision, 1/sec
              W1         2.64395e+09
      global relaxation matrix dimension = 377
      setting global matrices ... done, cpu time[sec] = 0.285124, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.25036, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2386.39       444.57       120.33      145.651      16.4933      1813.01      204.112      0.87552
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.75709, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00219, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.78952, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.19549e-07  6.19549e-07  1.60086e-07
      low eigenvalue method done, cpu time[sec] = 1.79059, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   6.2e-07   1.6e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.37e-08   1.6e-07         1
         *Z       ---       ---  7.89e+27
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.60086e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.53277e-26  3.49763e-27  1.01801e-28  5.69667e-28  1.85159e-29  6.69315e-29   1.0373e-33  1.06313e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.86521, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 610 K
            Well    Collision, 1/sec
              W1         2.93772e+09
      global relaxation matrix dimension = 377
      setting global matrices ... done, cpu time[sec] = 0.285323, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.25725, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2147.75      400.113      108.297      131.086      14.8439      1631.71      183.701     0.787968
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.74834, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002185, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.78067, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.75246e-07  5.75247e-07  1.44365e-07
      low eigenvalue method done, cpu time[sec] = 1.78211, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.75e-07  1.44e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.98e-08  1.44e-07         1
         *Z       ---       ---  7.89e+27
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.44365e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.38819e-26   3.1042e-27  9.09836e-29  5.01914e-28  1.64341e-29  6.37866e-29  1.04141e-33  1.06315e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.84279, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 610 K
            Well    Collision, 1/sec
              W1         4.40658e+09
      global relaxation matrix dimension = 377
      setting global matrices ... done, cpu time[sec] = 0.285691, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.27058, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1431.84      266.742       72.198      87.3904      9.89596      1087.81      122.467     0.525312
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.74235, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002197, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.77461, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.28701e-07  4.28702e-07  9.52788e-08
      low eigenvalue method done, cpu time[sec] = 1.77567, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.29e-07  9.53e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.68e-08  9.53e-08         1
         *Z       ---       ---  7.89e+27
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 9.52788e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  9.30203e-27  1.92808e-27  5.82287e-29  3.04571e-28  1.02549e-29  5.16269e-29  1.06098e-33   1.0632e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.84443, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 610 K
            Well    Collision, 1/sec
              W1         5.87544e+09
      global relaxation matrix dimension = 377
      setting global matrices ... done, cpu time[sec] = 0.284375, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.27618, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1073.88      200.056      54.1485      65.5428      7.42197      815.854      91.8503     0.393984
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.73979, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002186, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.77221, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.45169e-07  3.45169e-07  6.97306e-08
      low eigenvalue method done, cpu time[sec] = 1.77327, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.45e-07  6.97e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.95e-08  6.97e-08         1
         *Z       ---       ---  7.89e+27
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 6.97306e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  6.87319e-27    1.353e-27  4.18375e-29  2.11082e-28  7.24624e-30  4.33071e-29  1.07825e-33  1.06325e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.84564, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 610 K
            Well    Collision, 1/sec
              W1         7.34431e+09
      global relaxation matrix dimension = 377
      setting global matrices ... done, cpu time[sec] = 0.283786, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.2677, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            859.102      160.045      43.3188      52.4342      5.93758      652.683      73.4803     0.315187
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.73989, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002189, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.77222, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.90441e-07  2.90441e-07   5.4187e-08
      low eigenvalue method done, cpu time[sec] = 1.77331, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   2.9e-07  5.42e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.48e-08  5.42e-08         1
         *Z       ---       ---  7.89e+27
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 5.4187e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  5.37735e-27  1.01846e-27  3.21084e-29  1.57681e-28  5.49353e-30  3.72328e-29  1.09277e-33   1.0633e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.83671, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 610 K
            Well    Collision, 1/sec
              W1         8.81317e+09
      global relaxation matrix dimension = 377
      setting global matrices ... done, cpu time[sec] = 0.283555, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.25934, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            715.918      133.371       36.099      43.6952      4.94798      543.903      61.2335     0.262656
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.74532, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002209, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.7777, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   2.5151e-07   2.5151e-07  4.38071e-08
      low eigenvalue method done, cpu time[sec] = 1.7788, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.52e-07  4.38e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.14e-08  4.38e-08         1
         *Z       ---       ---  7.89e+27
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 4.38071e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0   4.3696e-27  8.02698e-28  2.57229e-29  1.23647e-28  4.35918e-30  3.25917e-29  1.10449e-33  1.06336e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.8348, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 610 K
            Well    Collision, 1/sec
              W1          1.0282e+10
      global relaxation matrix dimension = 377
      setting global matrices ... done, cpu time[sec] = 0.282944, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.27768, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            613.644      114.318       30.942       37.453      4.24113      466.202      52.4859     0.225134
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.73046, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002204, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.76292, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.22259e-07  2.22259e-07  3.64287e-08
      low eigenvalue method done, cpu time[sec] = 1.764, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.22e-07  3.64e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.88e-08  3.64e-08         1
         *Z       ---       ---  7.89e+27
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.64287e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0   3.6484e-27  6.53601e-28  2.12423e-29  1.00324e-28  3.57201e-30   2.8925e-29  1.11353e-33  1.06341e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.83153, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 610 K
            Well    Collision, 1/sec
              W1         1.17509e+10
      global relaxation matrix dimension = 377
      setting global matrices ... done, cpu time[sec] = 0.283416, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.28724, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            536.939      100.028      27.0743      32.7714      3.71099      407.927      45.9252     0.196992
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.72348, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.00219, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.75588, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.99402e-07  1.99402e-07  3.09425e-08
      low eigenvalue method done, cpu time[sec] = 1.75696, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.99e-07  3.09e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.69e-08  3.09e-08         1
         *Z       ---       ---  7.89e+27
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.09425e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  3.10925e-27  5.45338e-28  1.79443e-29  8.34923e-29  2.99788e-30  2.59531e-29   1.1201e-33  1.06347e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.84073, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 620 K
      Energy reference = 34013 1/cm
      Energy step      = 107 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -86.3 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.00736
         W1 Well: collisional kernel bandwidth = 52
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.349281
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.19228
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.197397
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.877946
         W1 Well: minimal relaxation eigenvalue = 0.0765548
         W1 Well: maximal relaxation eigenvalue = 0.978861
         W1 Well:       grid size = 373
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -5897 1/cm
         B1 Barrier:        grid size = 318
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -12 1/cm
         B2 Barrier:        grid size = 316
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 201 1/cm
         B3 Barrier:        grid size = 361
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4614 1/cm
         B4 Barrier:        grid size = 376
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6219 1/cm
         B5 Barrier: nonpositive number of states at -23125 1/cm => truncating
         B5 Barrier:        grid size = 534
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23125 1/cm
         B6 Barrier:        grid size = 304
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1485 1/cm
         B7 Barrier:        grid size = 274
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4695 1/cm
         B8 Barrier:        grid size = 162
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16679 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.97854, elapsed time[sec] = 0
      B4 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 373
      MasterEquation::Barrier::truncate: real weight = 2.33041e+40
      MasterEquation::Barrier::truncate: effective weight = 1.13614e+37
      B5 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 373
      MasterEquation::Barrier::truncate: real weight = 6.80147e+38
      MasterEquation::Barrier::truncate: effective weight = 3.30825e+35
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1  -5897  -5897 1.94e+09 1.52e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -12 3.29e+15
         B2    202 6.18e+14
         B3  -4614 1.68e+14
         B4  -5897 2.03e+14
         B5  -5897  2.3e+13
         B6   1486 2.52e+15
         B7   4696 2.86e+14
         B8  16679 1.27e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  7.57e-10   1.4e-09  2.41e-13  5.84e-15  5.52e-33  4.57e-07   0.00182   1.5e+10
          R  1.32e+09         1      1.85  0.000318  7.72e-06  7.29e-24       603   2.4e+06  1.97e+19
         P1  7.12e+08     0.539         1  0.000172  4.16e-06  3.93e-24       325  1.29e+06  1.07e+19
         P2  4.15e+12  3.14e+03  5.83e+03         1    0.0243  2.29e-20   1.9e+06  7.54e+09  6.21e+22
         P3  1.71e+14   1.3e+05   2.4e+05      41.2         1  9.45e-19  7.81e+07  3.11e+11  2.56e+24
         P4  1.81e+32  1.37e+23  2.54e+23  4.36e+19  1.06e+18         1  8.27e+25  3.29e+29  2.71e+42
         P5  2.19e+06   0.00166   0.00307  5.28e-07  1.28e-08  1.21e-26         1  3.98e+03  3.27e+16
         P6       551  4.17e-07  7.73e-07  1.33e-10  3.22e-12  3.04e-30  0.000252         1  8.24e+12
         P7  6.69e-11  5.06e-20  9.39e-20  1.61e-23  3.91e-25  3.69e-43  3.05e-17  1.21e-13         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  1.07e+06  1.97e+06       339      8.22  7.77e-18  6.42e+08  2.55e+12   2.1e+25
          R  9.39e-07         1      1.85  0.000318  7.72e-06  7.29e-24       603   2.4e+06  1.97e+19
         P1  5.06e-07     0.539         1  0.000172  4.16e-06  3.93e-24       325  1.29e+06  1.07e+19
         P2   0.00295  3.14e+03  5.83e+03         1    0.0243  2.29e-20   1.9e+06  7.54e+09  6.21e+22
         P3     0.122   1.3e+05   2.4e+05      41.2         1  9.45e-19  7.81e+07  3.11e+11  2.56e+24
         P4  1.29e+17  1.37e+23  2.54e+23  4.36e+19  1.06e+18         1  8.27e+25  3.29e+29  2.71e+42
         P5  1.56e-09   0.00166   0.00307  5.28e-07  1.28e-08  1.21e-26         1  3.98e+03  3.27e+16
         P6  3.92e-13  4.17e-07  7.73e-07  1.33e-10  3.22e-12  3.04e-30  0.000252         1  8.24e+12
         P7  4.75e-26  5.06e-20  9.39e-20  1.61e-23  3.91e-25  3.69e-43  3.05e-17  1.21e-13         1
   MasterEquation::set:  done, cpu time[sec] = 1.99152, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 620 K
            Well    Collision, 1/sec
              W1         2.90661e+08
      global relaxation matrix dimension = 373
      setting global matrices ... done, cpu time[sec] = 0.289185, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.12361, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            22239.2       4181.8      1136.14      1372.57      155.824      17042.2       1936.7      8.61788
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.892, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002176, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.92458, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.76295e-06  2.76295e-06  1.09095e-06
      low eigenvalue method done, cpu time[sec] = 1.92567, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.76e-06  1.09e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.47e-07  1.09e-06         1
         *Z       ---       ---  5.38e+27
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.09094e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.61839e-25  9.20972e-26  2.64166e-27  2.06552e-26  5.74793e-28  3.65622e-28  3.99739e-33  6.71333e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.84015, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 620 K
            Well    Collision, 1/sec
              W1         8.71982e+08
      global relaxation matrix dimension = 373
      setting global matrices ... done, cpu time[sec] = 0.276487, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.14559, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            7413.07      1393.93      378.713      457.522      51.9414      5680.73      645.567      2.87263
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.8462, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00214, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.8783, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.48541e-06  1.48541e-06  5.04163e-07
      low eigenvalue method done, cpu time[sec] = 1.87939, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.49e-06  5.04e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.31e-07  5.04e-07         1
         *Z       ---       ---  5.38e+27
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 5.04163e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.29958e-25  3.66063e-26  1.01968e-27  6.65186e-27  2.00535e-28  3.30957e-28  4.02852e-33  6.71304e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.80067, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 620 K
            Well    Collision, 1/sec
              W1          1.4533e+09
      global relaxation matrix dimension = 373
      setting global matrices ... done, cpu time[sec] = 0.27785, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.12823, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            4447.84       836.36      227.228      274.513      31.1648      3408.44       387.34      1.72358
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.85407, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002146, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.88619, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.08069e-06  1.08069e-06   3.3132e-07
      low eigenvalue method done, cpu time[sec] = 1.88728, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.08e-06  3.31e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.42e-08  3.31e-07         1
         *Z       ---       ---  5.38e+27
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.3132e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  8.77382e-26  2.22686e-26  6.29667e-28  3.80255e-27  1.18958e-28  2.93263e-28  4.06097e-33  6.71312e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.7917, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 620 K
            Well    Collision, 1/sec
              W1         2.03462e+09
      global relaxation matrix dimension = 373
      setting global matrices ... done, cpu time[sec] = 0.276616, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.13379, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            3177.03        597.4      162.306      196.081      22.2606       2434.6      276.672      1.23113
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.84856, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00214, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.88072, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.66416e-07  8.66416e-07  2.45644e-07
      low eigenvalue method done, cpu time[sec] = 1.88208, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.66e-07  2.46e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.51e-08  2.46e-07         1
         *Z       ---       ---  5.38e+27
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.45644e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  6.60816e-26  1.56796e-26  4.50933e-28  2.59436e-27  8.31426e-29  2.62287e-28  4.09393e-33  6.71325e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.79174, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 620 K
            Well    Collision, 1/sec
              W1         2.61595e+09
      global relaxation matrix dimension = 373
      setting global matrices ... done, cpu time[sec] = 0.277459, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.16033, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2471.02      464.644      126.238      152.507      17.3138      1893.58      215.189     0.957542
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.82127, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002146, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.85341, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.30118e-07  7.30118e-07  1.94084e-07
      low eigenvalue method done, cpu time[sec] = 1.8545, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   7.3e-07  1.94e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.31e-08  1.94e-07         1
         *Z       ---       ---  5.38e+27
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.94084e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  5.27754e-26  1.19204e-26  3.48219e-28  1.93456e-27   6.3113e-29  2.37084e-28  4.12674e-33  6.71338e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.79498, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 620 K
            Well    Collision, 1/sec
              W1         2.90661e+09
      global relaxation matrix dimension = 373
      setting global matrices ... done, cpu time[sec] = 0.276849, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.15787, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2223.92       418.18      113.614      137.257      15.5824      1704.22       193.67     0.861788
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.82484, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002117, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.85712, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.78502e-07  6.78502e-07   1.7528e-07
      low eigenvalue method done, cpu time[sec] = 1.85819, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.79e-07  1.75e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.85e-08  1.75e-07         1
         *Z       ---       ---  5.38e+27
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.7528e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  4.78656e-26  1.05938e-26  3.11704e-28  1.70702e-27  5.61044e-29  2.26207e-28  4.14293e-33  6.71346e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.80321, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 620 K
            Well    Collision, 1/sec
              W1         4.35991e+09
      global relaxation matrix dimension = 373
      setting global matrices ... done, cpu time[sec] = 0.280093, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.13975, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1482.61      278.787      75.7426      91.5044      10.3883      1136.15      129.113     0.574525
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.84164, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002137, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.87377, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.07319e-07  5.07319e-07  1.16354e-07
      low eigenvalue method done, cpu time[sec] = 1.87486, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.07e-07  1.16e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.35e-08  1.16e-07         1
         *Z       ---       ---  5.38e+27
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.16354e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  3.22567e-26  6.61533e-27  2.00723e-28  1.04197e-27  3.52251e-29  1.83974e-28  4.21996e-33  6.71381e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.79659, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 620 K
            Well    Collision, 1/sec
              W1         5.81321e+09
      global relaxation matrix dimension = 373
      setting global matrices ... done, cpu time[sec] = 0.27692, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.14587, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1111.96       209.09      56.8069      68.6283       7.7912      852.109       96.835     0.430894
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.83385, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002135, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.86582, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.09389e-07  4.09389e-07  8.55177e-08
      low eigenvalue method done, cpu time[sec] = 1.86724, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.09e-07  8.55e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.49e-08  8.55e-08         1
         *Z       ---       ---  5.38e+27
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 8.55177e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0   2.3934e-26  4.66048e-27  1.44873e-28  7.25247e-28  2.50028e-29  1.54908e-28   4.2879e-33   6.7141e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.79222, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 620 K
            Well    Collision, 1/sec
              W1         7.26652e+09
      global relaxation matrix dimension = 373
      setting global matrices ... done, cpu time[sec] = 0.278025, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.14993, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            889.568      167.272      45.4455      54.9026      6.23296      681.688       77.468     0.344715
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.83079, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00216, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.86324, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.45062e-07  3.45062e-07  6.66795e-08
      low eigenvalue method done, cpu time[sec] = 1.86433, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.45e-07  6.67e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.93e-08  6.67e-08         1
         *Z       ---       ---  5.38e+27
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 6.66795e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.87874e-26  3.51911e-27  1.11582e-28  5.43614e-28  1.90227e-29  1.33593e-28  4.34514e-33  6.71447e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.79211, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 620 K
            Well    Collision, 1/sec
              W1         8.71982e+09
      global relaxation matrix dimension = 373
      setting global matrices ... done, cpu time[sec] = 0.278345, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.16538, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            741.307      139.393      37.8713      45.7522      5.19414      568.073      64.5567     0.287263
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.82439, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002127, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.85636, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.99211e-07  2.99211e-07  5.40574e-08
      low eigenvalue method done, cpu time[sec] = 1.85743, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.99e-07  5.41e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.53e-08  5.41e-08         1
         *Z       ---       ---  5.38e+27
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 5.40574e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.53086e-26  2.78076e-27  8.96564e-29   4.2748e-28  1.51392e-29  1.17248e-28  4.39145e-33   6.7148e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.80589, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 620 K
            Well    Collision, 1/sec
              W1         1.01731e+10
      global relaxation matrix dimension = 373
      setting global matrices ... done, cpu time[sec] = 0.279516, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.14715, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            635.406       119.48      32.4611      39.2162      4.45212       486.92      55.3343     0.246225
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.83287, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00216, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.86472, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.64705e-07  2.64705e-07  4.50601e-08
      low eigenvalue method done, cpu time[sec] = 1.86578, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.65e-07  4.51e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.24e-08  4.51e-08         1
         *Z       ---       ---  5.38e+27
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 4.50601e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.28121e-26  2.26926e-27  7.42271e-29  3.47679e-28  1.24367e-29  1.04296e-28  4.42732e-33  6.71514e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.79689, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 620 K
            Well    Collision, 1/sec
              W1         1.16264e+10
      global relaxation matrix dimension = 373
      setting global matrices ... done, cpu time[sec] = 0.278846, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.15812, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             555.98      104.545      28.4035      34.3141       3.8956      426.055      48.4175     0.215447
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.82241, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002154, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.85423, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.37705e-07  2.37705e-07   3.8354e-08
      low eigenvalue method done, cpu time[sec] = 1.85564, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.38e-07  3.84e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0     2e-08  3.84e-08         1
         *Z       ---       ---  5.38e+27
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.8354e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.09412e-26  1.89703e-27  6.28416e-29  2.89952e-28  1.04606e-29  9.37707e-29  4.45356e-33  6.71546e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.79421, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 630 K
      Energy reference = 34291 1/cm
      Energy step      = 109 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -86.2 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.005841
         W1 Well: collisional kernel bandwidth = 52
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.356834
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.182957
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.186552
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.85321
         W1 Well: minimal relaxation eigenvalue = 0.0760964
         W1 Well: maximal relaxation eigenvalue = 0.978274
         W1 Well:       grid size = 369
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -5929 1/cm
         B1 Barrier:        grid size = 315
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -43 1/cm
         B2 Barrier:        grid size = 313
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 174 1/cm
         B3 Barrier:        grid size = 357
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4621 1/cm
         B4 Barrier:        grid size = 372
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6256 1/cm
         B5 Barrier: nonpositive number of states at -23261 1/cm => truncating
         B5 Barrier:        grid size = 528
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23261 1/cm
         B6 Barrier:        grid size = 301
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1482 1/cm
         B7 Barrier:        grid size = 272
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4643 1/cm
         B8 Barrier:        grid size = 161
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16742 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.93191, elapsed time[sec] = 0
      B4 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 369
      MasterEquation::Barrier::truncate: real weight = 1.24828e+40
      MasterEquation::Barrier::truncate: effective weight = 6.19947e+36
      B5 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 369
      MasterEquation::Barrier::truncate: real weight = 3.63565e+38
      MasterEquation::Barrier::truncate: effective weight = 1.80248e+35
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1  -5929  -5929 1.92e+09 1.59e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -43 3.52e+15
         B2    175 6.67e+14
         B3  -4621 1.82e+14
         B4  -5929 2.19e+14
         B5  -5929  2.5e+13
         B6   1483 2.72e+15
         B7   4643 3.12e+14
         B8  16743 1.44e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1     6e-10  1.11e-09  2.26e-13  5.84e-15  1.08e-32  3.43e-07   0.00122  6.51e+09
          R  1.67e+09         1      1.84  0.000378  9.73e-06   1.8e-23       572  2.03e+06  1.09e+19
         P1  9.04e+08     0.542         1  0.000205  5.28e-06  9.78e-24       310   1.1e+06  5.89e+18
         P2  4.42e+12  2.65e+03  4.88e+03         1    0.0258  4.78e-20  1.51e+06  5.39e+09  2.88e+22
         P3  1.71e+14  1.03e+05   1.9e+05      38.8         1  1.85e-18  5.87e+07  2.09e+11  1.12e+24
         P4  9.24e+31  5.54e+22  1.02e+23  2.09e+19   5.4e+17         1  3.17e+25  1.13e+29  6.02e+41
         P5  2.92e+06   0.00175   0.00323  6.61e-07   1.7e-08  3.16e-26         1  3.56e+03   1.9e+16
         P6       820  4.91e-07  9.07e-07  1.86e-10  4.78e-12  8.86e-30  0.000281         1  5.34e+12
         P7  1.54e-10  9.21e-20   1.7e-19  3.48e-23  8.96e-25  1.66e-42  5.26e-17  1.87e-13         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  3.24e+05  5.97e+05       122      3.15  5.84e-18  1.85e+08  6.59e+11  3.52e+24
          R  3.09e-06         1      1.84  0.000378  9.73e-06   1.8e-23       572  2.03e+06  1.09e+19
         P1  1.67e-06     0.542         1  0.000205  5.28e-06  9.78e-24       310   1.1e+06  5.89e+18
         P2   0.00818  2.65e+03  4.88e+03         1    0.0258  4.78e-20  1.51e+06  5.39e+09  2.88e+22
         P3     0.317  1.03e+05   1.9e+05      38.8         1  1.85e-18  5.87e+07  2.09e+11  1.12e+24
         P4  1.71e+17  5.54e+22  1.02e+23  2.09e+19   5.4e+17         1  3.17e+25  1.13e+29  6.02e+41
         P5   5.4e-09   0.00175   0.00323  6.61e-07   1.7e-08  3.16e-26         1  3.56e+03   1.9e+16
         P6  1.52e-12  4.91e-07  9.07e-07  1.86e-10  4.78e-12  8.86e-30  0.000281         1  5.34e+12
         P7  2.84e-25  9.21e-20   1.7e-19  3.48e-23  8.96e-25  1.66e-42  5.26e-17  1.87e-13         1
   MasterEquation::set:  done, cpu time[sec] = 1.94662, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 630 K
            Well    Collision, 1/sec
              W1         2.87633e+08
      global relaxation matrix dimension = 369
      setting global matrices ... done, cpu time[sec] = 0.285507, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.01633, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            23017.2       4368.4      1191.26      1436.42      163.485      17789.5      2040.42      9.41176
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.00613, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002169, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.03746, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.27845e-06  3.27845e-06  1.32313e-06
      low eigenvalue method done, cpu time[sec] = 2.03847, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.28e-06  1.32e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.93e-07  1.32e-06         1
         *Z       ---       ---  3.66e+27
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.32313e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0   8.4507e-25  2.94733e-25  8.44556e-27  6.56389e-26  1.83118e-27  1.22807e-27  1.52349e-32  3.99712e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.83949, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 630 K
            Well    Collision, 1/sec
              W1           8.629e+08
      global relaxation matrix dimension = 369
      setting global matrices ... done, cpu time[sec] = 0.274387, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.0367, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            7672.41      1456.13      397.086      478.808       54.495      5929.83      680.142      3.13725
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.91497, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002078, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.94577, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.78031e-06  1.78031e-06  6.18663e-07
      low eigenvalue method done, cpu time[sec] = 1.94681, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.78e-06  6.19e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.56e-07  6.19e-07         1
         *Z       ---       ---  3.66e+27
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 6.18663e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  4.24157e-25  1.18386e-25  3.30238e-27  2.14044e-26   6.4724e-28  1.11602e-27  1.53531e-32  3.99748e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.7506, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 630 K
            Well    Collision, 1/sec
              W1         1.43817e+09
      global relaxation matrix dimension = 369
      setting global matrices ... done, cpu time[sec] = 0.273475, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.0169, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            4603.45       873.68      238.252      287.285       32.697       3557.9      408.085      1.88235
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.93176, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002066, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.96264, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.30103e-06  1.30103e-06  4.09076e-07
      low eigenvalue method done, cpu time[sec] = 1.96373, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.3e-06  4.09e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.13e-07  4.09e-07         1
         *Z       ---       ---  3.66e+27
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 4.09076e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.88077e-25  7.24234e-26  2.05292e-27  1.23146e-26  3.86521e-28  9.92353e-28  1.54761e-32   3.9976e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.74826, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 630 K
            Well    Collision, 1/sec
              W1         2.01343e+09
      global relaxation matrix dimension = 369
      setting global matrices ... done, cpu time[sec] = 0.275648, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.0276, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            3288.18      624.057       170.18      205.203       23.355      2541.36      291.489      1.34454
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.93028, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002073, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.96151, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.04606e-06  1.04606e-06  3.04602e-07
      low eigenvalue method done, cpu time[sec] = 1.96258, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.05e-06  3.05e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.05e-08  3.05e-07         1
         *Z       ---       ---  3.66e+27
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.04602e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.17882e-25  5.11965e-26  1.47701e-27  8.43932e-27  2.71404e-28  8.90098e-28  1.56008e-32  3.99766e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.75877, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 630 K
            Well    Collision, 1/sec
              W1          2.5887e+09
      global relaxation matrix dimension = 369
      setting global matrices ... done, cpu time[sec] = 0.273655, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.0199, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2557.47      485.378      132.362      159.603       18.165      1976.61      226.714      1.04575
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.92833, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002077, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.9598, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.83362e-07  8.83362e-07  2.41472e-07
      low eigenvalue method done, cpu time[sec] = 1.96087, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.83e-07  2.41e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.61e-08  2.41e-07         1
         *Z       ---       ---  3.66e+27
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.41472e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.74578e-25  3.90422e-26  1.14467e-27  6.31466e-27  2.06759e-28  8.06544e-28  1.57248e-32  3.99772e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.7475, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 630 K
            Well    Collision, 1/sec
              W1         2.87633e+09
      global relaxation matrix dimension = 369
      setting global matrices ... done, cpu time[sec] = 0.274403, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.02184, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2301.72       436.84      119.126      143.642      16.3485      1778.95      204.042     0.941176
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.92641, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00208, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.95737, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.21629e-07  8.21629e-07   2.1839e-07
      low eigenvalue method done, cpu time[sec] = 1.95888, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.22e-07  2.18e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.07e-08  2.18e-07         1
         *Z       ---       ---  3.66e+27
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.1839e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.58559e-25  3.47432e-26   1.0262e-27  5.58011e-27   1.8408e-28  7.70389e-28  1.57859e-32  3.99779e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.74856, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 630 K
            Well    Collision, 1/sec
              W1          4.3145e+09
      global relaxation matrix dimension = 369
      setting global matrices ... done, cpu time[sec] = 0.273982, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.01646, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1534.48      291.227      79.4173      95.7616       10.899      1185.97      136.028      0.62745
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.93258, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002084, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.96335, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.16359e-07  6.16359e-07  1.45796e-07
      low eigenvalue method done, cpu time[sec] = 1.96445, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.16e-07  1.46e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.26e-08  1.46e-07         1
         *Z       ---       ---  3.66e+27
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.45796e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.07449e-25  2.18096e-26  6.64834e-28  3.42586e-27  1.16273e-28  6.29451e-28  1.60766e-32  3.99798e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.75164, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 630 K
            Well    Collision, 1/sec
              W1         5.75267e+09
      global relaxation matrix dimension = 369
      setting global matrices ... done, cpu time[sec] = 0.273294, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.05367, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1150.86       218.42       59.563      71.8212      8.17424      889.474      102.021     0.470588
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.91428, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00208, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.94541, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.98505e-07  4.98505e-07  1.07604e-07
      low eigenvalue method done, cpu time[sec] = 1.94647, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.99e-07  1.08e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.24e-08  1.08e-07         1
         *Z       ---       ---  3.66e+27
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.07604e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  8.00525e-26  1.54243e-26   4.8198e-28  2.39462e-27  8.28963e-29  5.31924e-28  1.63328e-32  3.99818e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.76852, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 630 K
            Well    Collision, 1/sec
              W1         7.19084e+09
      global relaxation matrix dimension = 369
      setting global matrices ... done, cpu time[sec] = 0.273366, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.04054, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            920.689      174.736      47.6504       57.457      6.53939       711.58       81.617      0.37647
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.90697, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002078, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.938, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   4.2089e-07   4.2089e-07  8.41781e-08
      low eigenvalue method done, cpu time[sec] = 1.93905, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.21e-07  8.42e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.56e-08  8.42e-08         1
         *Z       ---       ---  3.66e+27
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 8.41781e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  6.30431e-26  1.16826e-26  3.72528e-28  1.80091e-27  6.32902e-29  4.60103e-28  1.65488e-32  3.99837e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.75015, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 630 K
            Well    Collision, 1/sec
              W1           8.629e+09
      global relaxation matrix dimension = 369
      setting global matrices ... done, cpu time[sec] = 0.276043, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.06276, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            767.241      145.613      39.7086      47.8808       5.4495      592.983      68.0142     0.313725
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.90275, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002097, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.93366, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.65458e-07  3.65458e-07  6.84312e-08
      low eigenvalue method done, cpu time[sec] = 1.93496, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.65e-07  6.84e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.08e-08  6.84e-08         1
         *Z       ---       ---  3.66e+27
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 6.84312e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  5.15086e-26  9.25497e-27  3.00201e-28   1.4201e-27  5.05157e-29   4.0484e-28  1.67239e-32  3.99857e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.77375, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 630 K
            Well    Collision, 1/sec
              W1         1.00672e+10
      global relaxation matrix dimension = 369
      setting global matrices ... done, cpu time[sec] = 0.27492, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.05212, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            657.635      124.811       34.036      41.0407        4.671      508.271      58.2978     0.268907
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.90474, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002101, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.93593, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.23673e-07  3.23673e-07  5.71755e-08
      low eigenvalue method done, cpu time[sec] = 1.93722, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.24e-07  5.72e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.72e-08  5.72e-08         1
         *Z       ---       ---  3.66e+27
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 5.71755e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  4.32084e-26  7.56904e-27  2.49157e-28  1.15773e-27  4.16008e-29  3.60921e-28  1.68599e-32  3.99876e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.76323, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 630 K
            Well    Collision, 1/sec
              W1         1.15053e+10
      global relaxation matrix dimension = 369
      setting global matrices ... done, cpu time[sec] = 0.278088, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.04369, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            575.431       109.21      29.7815      35.9106      4.08712      444.737      51.0106     0.235294
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.90642, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002087, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.93789, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.90933e-07  2.90933e-07  4.87662e-08
      low eigenvalue method done, cpu time[sec] = 1.93894, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.91e-07  4.88e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.44e-08  4.88e-08         1
         *Z       ---       ---  3.66e+27
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 4.87662e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  3.69738e-26  6.33954e-27  2.11399e-28  9.67496e-28  3.50665e-29  3.25139e-28    1.696e-32  3.99896e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.76065, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 640 K
      Energy reference = 34569 1/cm
      Energy step      = 110 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -86.1 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.006877
         W1 Well: collisional kernel bandwidth = 52
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.349684
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.187751
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.191171
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.859004
         W1 Well: minimal relaxation eigenvalue = 0.0756421
         W1 Well: maximal relaxation eigenvalue = 0.979943
         W1 Well:       grid size = 369
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -6021 1/cm
         B1 Barrier:        grid size = 315
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -81 1/cm
         B2 Barrier:        grid size = 313
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 138 1/cm
         B3 Barrier:        grid size = 357
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4701 1/cm
         B4 Barrier:        grid size = 371
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6241 1/cm
         B5 Barrier: nonpositive number of states at -23181 1/cm => truncating
         B5 Barrier:        grid size = 525
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23181 1/cm
         B6 Barrier:        grid size = 301
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1458 1/cm
         B7 Barrier:        grid size = 272
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4648 1/cm
         B8 Barrier:        grid size = 162
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16748 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.94172, elapsed time[sec] = 0
      B4 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 369
      MasterEquation::Barrier::truncate: real weight = 6.82974e+39
      MasterEquation::Barrier::truncate: effective weight = 3.42304e+36
      B5 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 369
      MasterEquation::Barrier::truncate: real weight = 1.98877e+38
      MasterEquation::Barrier::truncate: effective weight = 9.95561e+34
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1  -6021  -6021 1.86e+09 1.66e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -81 3.76e+15
         B2    139 7.21e+14
         B3  -4701 1.97e+14
         B4  -6021 2.37e+14
         B5  -6021 2.71e+13
         B6   1459 2.93e+15
         B7   4649 3.39e+14
         B8  16749 1.62e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1   5.4e-10  9.91e-10  2.41e-13  6.58e-15  2.34e-32  2.93e-07  0.000937  3.29e+09
          R  1.85e+09         1      1.84  0.000446  1.22e-05  4.34e-23       543  1.74e+06  6.09e+18
         P1  1.01e+09     0.545         1  0.000243  6.64e-06  2.36e-23       296  9.45e+05  3.32e+18
         P2  4.15e+12  2.24e+03  4.12e+03         1    0.0273  9.73e-20  1.22e+06  3.89e+09  1.36e+22
         P3  1.52e+14  8.21e+04  1.51e+05      36.6         1  3.56e-18  4.45e+07  1.42e+11  4.99e+23
         P4  4.27e+31  2.31e+22  4.23e+22  1.03e+19  2.81e+17         1  1.25e+25     4e+28   1.4e+41
         P5  3.41e+06   0.00184   0.00338  8.22e-07  2.25e-08  7.99e-26         1   3.2e+03  1.12e+16
         P6  1.07e+03  5.76e-07  1.06e-06  2.57e-10  7.02e-12   2.5e-29  0.000313         1  3.51e+12
         P7  3.04e-10  1.64e-19  3.02e-19  7.33e-23     2e-24  7.13e-42  8.91e-17  2.85e-13         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  1.02e+05  1.88e+05      45.6      1.25  4.43e-18  5.54e+07  1.77e+11  6.22e+23
          R  9.79e-06         1      1.84  0.000446  1.22e-05  4.34e-23       543  1.74e+06  6.09e+18
         P1  5.33e-06     0.545         1  0.000243  6.64e-06  2.36e-23       296  9.45e+05  3.32e+18
         P2     0.022  2.24e+03  4.12e+03         1    0.0273  9.73e-20  1.22e+06  3.89e+09  1.36e+22
         P3     0.803  8.21e+04  1.51e+05      36.6         1  3.56e-18  4.45e+07  1.42e+11  4.99e+23
         P4  2.26e+17  2.31e+22  4.23e+22  1.03e+19  2.81e+17         1  1.25e+25     4e+28   1.4e+41
         P5   1.8e-08   0.00184   0.00338  8.22e-07  2.25e-08  7.99e-26         1   3.2e+03  1.12e+16
         P6  5.64e-12  5.76e-07  1.06e-06  2.57e-10  7.02e-12   2.5e-29  0.000313         1  3.51e+12
         P7  1.61e-24  1.64e-19  3.02e-19  7.33e-23     2e-24  7.13e-42  8.91e-17  2.85e-13         1
   MasterEquation::set:  done, cpu time[sec] = 1.95481, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 640 K
            Well    Collision, 1/sec
              W1         2.84687e+08
      global relaxation matrix dimension = 369
      setting global matrices ... done, cpu time[sec] = 0.282448, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.04246, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            23811.7      4561.09      1248.38      1502.48      171.429      18559.3      2148.28      10.2636
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.96051, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002095, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.96938, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.46952e-06  3.46953e-06  1.42447e-06
      low eigenvalue method done, cpu time[sec] = 1.97043, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.47e-06  1.42e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.08e-07  1.42e-06         1
         *Z       ---       ---  2.67e+27
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.42446e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.62706e-24  9.09403e-25  2.60157e-26   2.0102e-25  5.62168e-27  3.96545e-27  5.56042e-32  2.25048e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.81482, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 640 K
            Well    Collision, 1/sec
              W1          8.5406e+08
      global relaxation matrix dimension = 369
      setting global matrices ... done, cpu time[sec] = 0.273145, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.04861, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            7937.24      1520.36      416.127      500.827      57.1429      6186.45      716.095       3.4212
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.94895, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.002081, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.95733, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   1.9014e-06   1.9014e-06  6.73529e-07
      low eigenvalue method done, cpu time[sec] = 1.95841, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.9e-06  6.74e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.66e-07  6.74e-07         1
         *Z       ---       ---  2.67e+27
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 6.73528e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.33286e-24   3.6888e-25  1.03004e-26  6.63451e-26  2.01212e-27  3.61925e-27   5.6033e-32  2.25051e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.77503, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 640 K
            Well    Collision, 1/sec
              W1         1.42343e+09
      global relaxation matrix dimension = 369
      setting global matrices ... done, cpu time[sec] = 0.272958, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.05102, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            4762.34      912.219      249.676      300.496      34.2857      3711.87      429.657      2.05272
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.94901, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002084, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.95738, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   1.3952e-06   1.3952e-06  4.48004e-07
      low eigenvalue method done, cpu time[sec] = 1.9584, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.4e-06  4.48e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.21e-07  4.48e-07         1
         *Z       ---       ---  2.67e+27
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 4.48004e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  9.10492e-25  2.26876e-25  6.44475e-27  3.84084e-26  1.20942e-27  3.22956e-27  5.64785e-32  2.25054e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.77881, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 640 K
            Well    Collision, 1/sec
              W1         1.99281e+09
      global relaxation matrix dimension = 369
      setting global matrices ... done, cpu time[sec] = 0.273126, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.05649, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            3401.67      651.585       178.34       214.64      24.4898      2651.33      306.898      1.46623
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.93896, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002073, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.9474, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.12475e-06  1.12475e-06  3.34979e-07
      low eigenvalue method done, cpu time[sec] = 1.94844, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.12e-06  3.35e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.68e-08  3.35e-07         1
         *Z       ---       ---  2.67e+27
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.34979e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  6.91442e-25  1.60989e-25   4.6577e-27  2.64354e-26  8.53046e-28  2.90508e-27  5.69297e-32  2.25057e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.77447, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 640 K
            Well    Collision, 1/sec
              W1         2.56218e+09
      global relaxation matrix dimension = 369
      setting global matrices ... done, cpu time[sec] = 0.274703, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.0621, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2645.75      506.788      138.709      166.942      19.0476      2062.15      238.698       1.1404
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.93522, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002081, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.94354, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.51657e-07  9.51658e-07  2.66415e-07
      low eigenvalue method done, cpu time[sec] = 1.94462, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.52e-07  2.66e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.16e-08  2.66e-07         1
         *Z       ---       ---  2.67e+27
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.66414e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  5.55777e-25  1.23134e-25  3.62226e-27  1.98462e-26  6.52126e-28  2.63874e-27   5.7378e-32  2.25062e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.78245, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 640 K
            Well    Collision, 1/sec
              W1         2.84687e+09
      global relaxation matrix dimension = 369
      setting global matrices ... done, cpu time[sec] = 0.274512, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.04594, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2381.17      456.109      124.838      150.248      17.1429      1855.93      214.828      1.02636
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.95343, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002077, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.96158, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.85865e-07  8.85865e-07  2.41282e-07
      low eigenvalue method done, cpu time[sec] = 1.96264, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.86e-07  2.41e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.58e-08  2.41e-07         1
         *Z       ---       ---  2.67e+27
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.41282e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  5.05466e-25  1.09715e-25  3.25222e-27  1.75626e-26   5.8146e-28  2.52318e-27   5.7599e-32  2.25064e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.78276, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 640 K
            Well    Collision, 1/sec
              W1          4.2703e+09
      global relaxation matrix dimension = 369
      setting global matrices ... done, cpu time[sec] = 0.273395, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.06544, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1587.45      304.073      83.2254      100.165      11.4286      1237.29      143.219     0.684239
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.93652, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002085, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.94465, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.66575e-07  6.66575e-07  1.61968e-07
      low eigenvalue method done, cpu time[sec] = 1.94576, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.67e-07  1.62e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.67e-08  1.62e-07         1
         *Z       ---       ---  2.67e+27
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.61968e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0   3.4439e-25  6.92223e-26  2.11943e-27  1.08433e-26  3.69444e-28   2.0709e-27  5.86486e-32  2.25074e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.78465, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 640 K
            Well    Collision, 1/sec
              W1         5.69373e+09
      global relaxation matrix dimension = 369
      setting global matrices ... done, cpu time[sec] = 0.275008, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.07524, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1190.59      228.055       62.419       75.124      8.57143      927.967      107.414     0.513179
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.92245, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002094, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.93108, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.40251e-07  5.40251e-07  1.20025e-07
      low eigenvalue method done, cpu time[sec] = 1.93217, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   5.4e-07   1.2e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.57e-08   1.2e-07         1
         *Z       ---       ---  2.67e+27
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.20025e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.57605e-25  4.91393e-26  1.54317e-27  7.61068e-27   2.6453e-28  1.75621e-27  5.95739e-32  2.25085e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.78305, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 640 K
            Well    Collision, 1/sec
              W1         7.11717e+09
      global relaxation matrix dimension = 369
      setting global matrices ... done, cpu time[sec] = 0.275919, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.05287, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            952.469      182.444      49.9352      60.0992      6.85714      742.374      85.9314     0.410544
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.94445, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002086, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.95258, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   4.5686e-07   4.5686e-07  9.41985e-08
      low eigenvalue method done, cpu time[sec] = 1.95362, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.57e-07  9.42e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.85e-08  9.42e-08         1
         *Z       ---       ---  2.67e+27
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 9.41985e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.03514e-25    3.733e-26  1.19683e-27  5.74249e-27  2.02657e-28  1.52351e-27  6.03549e-32  2.25096e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.78232, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 640 K
            Well    Collision, 1/sec
              W1          8.5406e+09
      global relaxation matrix dimension = 369
      setting global matrices ... done, cpu time[sec] = 0.276262, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.06359, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            793.724      152.036      41.6127      50.0827      5.71429      618.645      71.6095      0.34212
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.9304, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002082, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.93861, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.97192e-07  3.97192e-07  7.67824e-08
      low eigenvalue method done, cpu time[sec] = 1.9397, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.97e-07  7.68e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.34e-08  7.68e-08         1
         *Z       ---       ---  2.67e+27
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 7.67824e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.66718e-25  2.96464e-26  9.67213e-28  4.54049e-27  1.62211e-28  1.34385e-27  6.09894e-32  2.25107e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.78149, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 640 K
            Well    Collision, 1/sec
              W1         9.96403e+09
      global relaxation matrix dimension = 369
      setting global matrices ... done, cpu time[sec] = 0.275807, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.07071, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            680.335      130.317       35.668       42.928      4.89796      530.267      61.3796     0.293245
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.92644, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.002074, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.93471, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.52146e-07  3.52146e-07  6.43003e-08
      low eigenvalue method done, cpu time[sec] = 1.93579, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.52e-07  6.43e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.95e-08  6.43e-08         1
         *Z       ---       ---  2.67e+27
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 6.43003e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0   1.4017e-25  2.42974e-26  8.04714e-28  3.71019e-27  1.33909e-28  1.20066e-27  6.14845e-32  2.25118e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.77846, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 640 K
            Well    Collision, 1/sec
              W1         1.13875e+10
      global relaxation matrix dimension = 369
      setting global matrices ... done, cpu time[sec] = 0.273886, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.08037, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            595.293      114.027      31.2095       37.562      4.28572      463.984      53.7071      0.25659
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.92036, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002083, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.92826, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.16806e-07  3.16806e-07  5.49531e-08
      low eigenvalue method done, cpu time[sec] = 1.92969, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.17e-07   5.5e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.65e-08   5.5e-08         1
         *Z       ---       ---  2.67e+27
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 5.49531e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.20182e-25  2.03884e-26  6.84219e-28  3.10682e-27  1.13115e-28  1.08371e-27   6.1851e-32  2.25129e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.78272, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 650 K
      Energy reference = 34847 1/cm
      Energy step      = 112 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -86 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.00719
         W1 Well: collisional kernel bandwidth = 52
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.347717
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.183486
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.189502
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.836832
         W1 Well: minimal relaxation eigenvalue = 0.075166
         W1 Well: maximal relaxation eigenvalue = 0.979419
         W1 Well:       grid size = 366
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -6145 1/cm
         B1 Barrier:        grid size = 312
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -97 1/cm
         B2 Barrier:        grid size = 310
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 126 1/cm
         B3 Barrier:        grid size = 353
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4689 1/cm
         B4 Barrier:        grid size = 367
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6257 1/cm
         B5 Barrier: nonpositive number of states at -23169 1/cm => truncating
         B5 Barrier:        grid size = 518
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23169 1/cm
         B6 Barrier:        grid size = 298
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1470 1/cm
         B7 Barrier:        grid size = 270
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4607 1/cm
         B8 Barrier:        grid size = 162
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16703 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.91147, elapsed time[sec] = 0
      B4 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 366
      MasterEquation::Barrier::truncate: real weight = 3.81307e+39
      MasterEquation::Barrier::truncate: effective weight = 1.94584e+36
      B5 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 366
      MasterEquation::Barrier::truncate: real weight = 1.1119e+38
      MasterEquation::Barrier::truncate: effective weight = 5.66952e+34
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1  -6145  -6145 1.78e+09 1.74e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -97 4.02e+15
         B2    127 7.78e+14
         B3  -4689 2.14e+14
         B4  -6145 2.57e+14
         B5  -6145 2.93e+13
         B6   1471 3.16e+15
         B7   4607 3.69e+14
         B8  16703 1.83e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  5.13e-10  9.37e-10  2.68e-13  7.77e-15   5.2e-32  2.64e-07  0.000762  1.78e+09
          R  1.95e+09         1      1.83  0.000524  1.52e-05  1.02e-22       516  1.49e+06  3.47e+18
         P1  1.07e+09     0.547         1  0.000287  8.29e-06  5.56e-23       282  8.14e+05   1.9e+18
         P2  3.72e+12  1.91e+03  3.49e+03         1    0.0289  1.94e-19  9.85e+05  2.84e+09  6.63e+21
         P3  1.29e+14   6.6e+04  1.21e+05      34.6         1   6.7e-18   3.4e+07  9.81e+10  2.29e+23
         P4  1.92e+31  9.85e+21   1.8e+22  5.16e+18  1.49e+17         1  5.08e+24  1.46e+28  3.42e+40
         P5  3.78e+06   0.00194   0.00354  1.02e-06  2.94e-08  1.97e-25         1  2.88e+03  6.73e+15
         P6  1.31e+03  6.73e-07  1.23e-06  3.52e-10  1.02e-11  6.83e-29  0.000347         1  2.34e+12
         P7  5.62e-10  2.88e-19  5.26e-19  1.51e-22  4.36e-24  2.92e-41  1.49e-16  4.28e-13         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  3.34e+04   6.1e+04      17.5     0.506  3.39e-18  1.72e+07  4.97e+10  1.16e+23
          R  2.99e-05         1      1.83  0.000524  1.52e-05  1.02e-22       516  1.49e+06  3.47e+18
         P1  1.64e-05     0.547         1  0.000287  8.29e-06  5.56e-23       282  8.14e+05   1.9e+18
         P2    0.0572  1.91e+03  3.49e+03         1    0.0289  1.94e-19  9.85e+05  2.84e+09  6.63e+21
         P3      1.98   6.6e+04  1.21e+05      34.6         1   6.7e-18   3.4e+07  9.81e+10  2.29e+23
         P4  2.95e+17  9.85e+21   1.8e+22  5.16e+18  1.49e+17         1  5.08e+24  1.46e+28  3.42e+40
         P5  5.81e-08   0.00194   0.00354  1.02e-06  2.94e-08  1.97e-25         1  2.88e+03  6.73e+15
         P6  2.01e-11  6.73e-07  1.23e-06  3.52e-10  1.02e-11  6.83e-29  0.000347         1  2.34e+12
         P7  8.62e-24  2.88e-19  5.26e-19  1.51e-22  4.36e-24  2.92e-41  1.49e-16  4.28e-13         1
   MasterEquation::set:  done, cpu time[sec] = 1.92481, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 650 K
            Well    Collision, 1/sec
              W1         2.81817e+08
      global relaxation matrix dimension = 366
      setting global matrices ... done, cpu time[sec] = 0.278136, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.90223, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            24622.7         4760      1307.55      1570.78      179.662      19352.1      2260.38      11.1766
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.58383, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002093, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.61488, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.45987e-06  3.45987e-06  1.44119e-06
      low eigenvalue method done, cpu time[sec] = 1.61624, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.46e-06  1.44e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.05e-07  1.44e-06         1
         *Z       ---       ---  2.03e+27
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.44118e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  7.88004e-24  2.70674e-24  7.73462e-26  5.94272e-25  1.66589e-26  1.23608e-26  1.95422e-31  1.20073e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.78325, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 650 K
            Well    Collision, 1/sec
              W1         8.45451e+08
      global relaxation matrix dimension = 366
      setting global matrices ... done, cpu time[sec] = 0.268218, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.91177, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            8207.58      1586.67       435.85      523.594      59.8875       6450.7      753.461      3.72553
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.02493, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002028, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.05524, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.91276e-06  1.91276e-06  6.88973e-07
      low eigenvalue method done, cpu time[sec] = 2.05634, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.91e-06  6.89e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.66e-07  6.89e-07         1
         *Z       ---       ---  2.03e+27
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 6.88973e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  4.04052e-24  1.10872e-24  3.10006e-26  1.98465e-25  6.03646e-27  1.13202e-26  1.96926e-31  1.20074e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.72271, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 650 K
            Well    Collision, 1/sec
              W1         1.40909e+09
      global relaxation matrix dimension = 366
      setting global matrices ... done, cpu time[sec] = 0.270394, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.92488, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            4924.55          952       261.51      314.156      35.9325      3870.42      452.077      2.23532
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.00644, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002024, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.03729, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.40906e-06  1.40906e-06  4.60958e-07
      low eigenvalue method done, cpu time[sec] = 2.03835, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.41e-06  4.61e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.21e-07  4.61e-07         1
         *Z       ---       ---  2.03e+27
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 4.60958e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.77579e-24  6.85539e-25    1.952e-26  1.15598e-25  3.65146e-27  1.01335e-26  1.98487e-31  1.20077e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.72096, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 650 K
            Well    Collision, 1/sec
              W1         1.97272e+09
      global relaxation matrix dimension = 366
      setting global matrices ... done, cpu time[sec] = 0.269146, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.92529, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            3517.53          680      186.793      224.397      25.6661      2764.59      322.912      1.59666
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.00598, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002039, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.0367, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   1.1388e-06   1.1388e-06  3.46078e-07
      low eigenvalue method done, cpu time[sec] = 2.03777, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.14e-06  3.46e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.74e-08  3.46e-07         1
         *Z       ---       ---  2.03e+27
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.46078e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.11641e-24  4.88282e-25  1.41698e-26  7.99014e-26  2.58692e-27  9.13987e-27  2.00065e-31  1.20079e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.71419, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 650 K
            Well    Collision, 1/sec
              W1         2.53635e+09
      global relaxation matrix dimension = 366
      setting global matrices ... done, cpu time[sec] = 0.268093, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.93033, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2735.86      528.889      145.283      174.531      19.9625      2150.23      251.154      1.24184
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.00682, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002043, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.03758, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.65351e-07  9.65351e-07  2.76118e-07
      low eigenvalue method done, cpu time[sec] = 2.03862, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.65e-07  2.76e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.22e-08  2.76e-07         1
         *Z       ---       ---  2.03e+27
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.76118e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.70646e-24  3.74565e-25  1.10575e-26  6.01825e-26  1.98439e-27  8.32099e-27   2.0163e-31  1.20082e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.71751, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 650 K
            Well    Collision, 1/sec
              W1         2.81817e+09
      global relaxation matrix dimension = 366
      setting global matrices ... done, cpu time[sec] = 0.268973, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.91434, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2462.27          476      130.755      157.078      17.9662      1935.21      226.038      1.11766
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.02357, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002022, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.05402, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   8.9931e-07   8.9931e-07  2.50412e-07
      low eigenvalue method done, cpu time[sec] = 2.0551, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.99e-07   2.5e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.65e-08   2.5e-07         1
         *Z       ---       ---  2.03e+27
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.50412e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.55406e-24  3.34167e-25  9.94249e-27  5.33326e-26  1.77195e-27   7.9648e-27  2.02401e-31  1.20083e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.72369, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 650 K
            Well    Collision, 1/sec
              W1         4.22726e+09
      global relaxation matrix dimension = 366
      setting global matrices ... done, cpu time[sec] = 0.268117, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.95241, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1641.52      317.333        87.17      104.719      11.9775      1290.14      150.692     0.745106
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.98167, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002041, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.01217, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.78683e-07  6.78683e-07  1.69009e-07
      low eigenvalue method done, cpu time[sec] = 2.01325, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.79e-07  1.69e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.73e-08  1.69e-07         1
         *Z       ---       ---  2.03e+27
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.69009e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.06446e-24  2.11897e-25  6.51703e-27  3.31113e-26  1.13238e-27  6.56561e-27  2.06057e-31  1.20089e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.72075, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 650 K
            Well    Collision, 1/sec
              W1         5.63634e+09
      global relaxation matrix dimension = 366
      setting global matrices ... done, cpu time[sec] = 0.270686, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.91505, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1231.14          238      65.3775      78.5391      8.98312      967.605      113.019      0.55883
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.01773, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002054, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.04817, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.51181e-07  5.51182e-07  1.25744e-07
      low eigenvalue method done, cpu time[sec] = 2.04922, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.51e-07  1.26e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.63e-08  1.26e-07         1
         *Z       ---       ---  2.03e+27
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.25744e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  7.99347e-25  1.50979e-25  4.76531e-27  2.33348e-26  8.14257e-28  5.58702e-27  2.09275e-31  1.20095e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.72376, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 650 K
            Well    Collision, 1/sec
              W1         7.04543e+09
      global relaxation matrix dimension = 366
      setting global matrices ... done, cpu time[sec] = 0.270318, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.92917, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            984.909        190.4       52.302      62.8313      7.18649      774.084      90.4154     0.447064
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.00626, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002048, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.03692, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.66819e-07  4.66819e-07  9.89996e-08
      low eigenvalue method done, cpu time[sec] = 2.03799, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.67e-07   9.9e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.91e-08   9.9e-08         1
         *Z       ---       ---  2.03e+27
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 9.89996e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  6.33475e-25  1.15035e-25  3.70833e-27  1.76637e-26  6.25905e-28  4.86047e-27   2.1199e-31  1.20101e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.72485, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 650 K
            Well    Collision, 1/sec
              W1         8.45451e+09
      global relaxation matrix dimension = 366
      setting global matrices ... done, cpu time[sec] = 0.270446, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.92535, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            820.758      158.667       43.585      52.3594      5.98875       645.07      75.3461     0.372553
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.00248, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002027, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.03326, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.06347e-07  4.06347e-07  8.09087e-08
      low eigenvalue method done, cpu time[sec] = 2.0343, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.06e-07  8.09e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.39e-08  8.09e-08         1
         *Z       ---       ---  2.03e+27
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 8.09087e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  5.20288e-25  9.15817e-26  3.00528e-27  1.40038e-26  5.02392e-28   4.2977e-27  2.14197e-31  1.20107e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.71998, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 650 K
            Well    Collision, 1/sec
              W1          9.8636e+09
      global relaxation matrix dimension = 366
      setting global matrices ... done, cpu time[sec] = 0.27802, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.9386, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            703.507          136      37.3586      44.8795      5.13321      552.917      64.5824     0.319331
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.99292, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002044, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.0237, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.60627e-07  3.60627e-07  6.79089e-08
      low eigenvalue method done, cpu time[sec] = 2.02476, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.61e-07  6.79e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0     3e-08  6.79e-08         1
         *Z       ---       ---  2.03e+27
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 6.79089e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  4.38409e-25  7.52161e-26  2.50637e-27  1.14691e-26  4.15726e-28   3.8479e-27  2.15922e-31  1.20112e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.72404, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 650 K
            Well    Collision, 1/sec
              W1         1.12727e+10
      global relaxation matrix dimension = 366
      setting global matrices ... done, cpu time[sec] = 0.267946, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.93909, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            615.568          119      32.6888      39.2695      4.49156      483.802      56.5096     0.279415
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.98998, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002042, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.02067, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.24714e-07  3.24714e-07  5.81519e-08
      low eigenvalue method done, cpu time[sec] = 2.02173, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.25e-07  5.82e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   2.7e-08  5.82e-08         1
         *Z       ---       ---  2.03e+27
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 5.81519e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  3.76625e-25  6.32314e-26  2.13555e-27  9.62314e-27  3.51905e-28  3.47964e-27  2.17204e-31  1.20118e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.7101, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 660 K
      Energy reference = 35125 1/cm
      Energy step      = 114 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -85.9 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.006207
         W1 Well: collisional kernel bandwidth = 52
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.338257
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.18349
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.193287
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.822046
         W1 Well: minimal relaxation eigenvalue = 0.0747372
         W1 Well: maximal relaxation eigenvalue = 0.978844
         W1 Well:       grid size = 362
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -6142 1/cm
         B1 Barrier:        grid size = 309
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -100 1/cm
         B2 Barrier:        grid size = 307
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 127 1/cm
         B3 Barrier:        grid size = 349
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4661 1/cm
         B4 Barrier:        grid size = 363
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6257 1/cm
         B5 Barrier: nonpositive number of states at -23129 1/cm => truncating
         B5 Barrier:        grid size = 511
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23129 1/cm
         B6 Barrier:        grid size = 295
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1494 1/cm
         B7 Barrier:        grid size = 267
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4686 1/cm
         B8 Barrier:        grid size = 161
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16771 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.88835, elapsed time[sec] = 0
      B4 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 362
      MasterEquation::Barrier::truncate: real weight = 2.17031e+39
      MasterEquation::Barrier::truncate: effective weight = 1.12731e+36
      B5 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 362
      MasterEquation::Barrier::truncate: real weight = 6.34626e+37
      MasterEquation::Barrier::truncate: effective weight = 3.29428e+34
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1  -6142  -6142 1.79e+09 1.81e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -100  4.3e+15
         B2    128 8.39e+14
         B3  -4661 2.31e+14
         B4  -6142 2.77e+14
         B5  -6142 3.18e+13
         B6   1495 3.41e+15
         B7   4687 4.01e+14
         B8  16771 2.05e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  3.85e-10  7.01e-10  2.36e-13  7.21e-15  8.92e-32  1.89e-07  0.000493  7.77e+08
          R   2.6e+09         1      1.82  0.000612  1.87e-05  2.32e-22       491  1.28e+06  2.02e+18
         P1  1.43e+09      0.55         1  0.000336  1.03e-05  1.27e-22       270  7.03e+05  1.11e+18
         P2  4.24e+12  1.63e+03  2.97e+03         1    0.0306  3.78e-19  8.02e+05  2.09e+09  3.29e+21
         P3  1.39e+14  5.34e+04  9.72e+04      32.7         1  1.24e-17  2.62e+07  6.84e+10  1.08e+23
         P4  1.12e+31  4.32e+21  7.86e+21  2.64e+18  8.08e+16         1  2.12e+24  5.53e+27   8.7e+39
         P5  5.29e+06   0.00204   0.00371  1.25e-06  3.81e-08  4.72e-25         1  2.61e+03  4.11e+15
         P6  2.03e+03  7.81e-07  1.42e-06  4.78e-10  1.46e-11  1.81e-28  0.000383         1  1.57e+12
         P7  1.29e-09  4.96e-19  9.03e-19  3.04e-22  9.29e-24  1.15e-40  2.44e-16  6.35e-13         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  1.13e+04  2.05e+04      6.91     0.211  2.62e-18  5.54e+06  1.45e+10  2.28e+22
          R  8.85e-05         1      1.82  0.000612  1.87e-05  2.32e-22       491  1.28e+06  2.02e+18
         P1  4.87e-05      0.55         1  0.000336  1.03e-05  1.27e-22       270  7.03e+05  1.11e+18
         P2     0.145  1.63e+03  2.97e+03         1    0.0306  3.78e-19  8.02e+05  2.09e+09  3.29e+21
         P3      4.73  5.34e+04  9.72e+04      32.7         1  1.24e-17  2.62e+07  6.84e+10  1.08e+23
         P4  3.82e+17  4.32e+21  7.86e+21  2.64e+18  8.08e+16         1  2.12e+24  5.53e+27   8.7e+39
         P5   1.8e-07   0.00204   0.00371  1.25e-06  3.81e-08  4.72e-25         1  2.61e+03  4.11e+15
         P6  6.92e-11  7.81e-07  1.42e-06  4.78e-10  1.46e-11  1.81e-28  0.000383         1  1.57e+12
         P7  4.39e-23  4.96e-19  9.03e-19  3.04e-22  9.29e-24  1.15e-40  2.44e-16  6.35e-13         1
   MasterEquation::set:  done, cpu time[sec] = 1.90197, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 660 K
            Well    Collision, 1/sec
              W1         2.79021e+08
      global relaxation matrix dimension = 362
      setting global matrices ... done, cpu time[sec] = 0.272735, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.81674, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            25450.4      4965.23      1368.82      1641.38      188.193      20168.1      2376.83      12.1549
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.10778, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.02231, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.16014, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.32778e-06  4.32779e-06  1.84107e-06
      low eigenvalue method done, cpu time[sec] = 2.16119, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.33e-06  1.84e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.82e-07  1.84e-06         1
         *Z       ---       ---  1.38e+27
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.84107e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.28402e-23  7.78364e-24  2.22253e-25  1.69808e-24  4.77137e-26  3.73122e-26   6.5836e-31  6.08922e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.72754, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 660 K
            Well    Collision, 1/sec
              W1         8.37063e+08
      global relaxation matrix dimension = 362
      setting global matrices ... done, cpu time[sec] = 0.272929, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.80077, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            8483.48      1655.08      456.272      547.127       62.731       6722.7      792.277      4.05164
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.10292, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002049, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.13375, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.41502e-06  2.41502e-06  8.89683e-07
      low eigenvalue method done, cpu time[sec] = 2.13481, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.42e-06   8.9e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.09e-07   8.9e-07         1
         *Z       ---       ---  1.38e+27
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 8.89683e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.18329e-23  3.21932e-24  9.01546e-26  5.73712e-25  1.74997e-26  3.42404e-26  6.63384e-31  6.08932e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.68453, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 660 K
            Well    Collision, 1/sec
              W1         1.39511e+09
      global relaxation matrix dimension = 362
      setting global matrices ... done, cpu time[sec] = 0.271582, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.79102, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            5090.09      993.046      273.763      328.276      37.6386      4033.62      475.366      2.43098
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.11283, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002288, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.14467, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   1.7866e-06   1.7866e-06  5.98651e-07
      low eigenvalue method done, cpu time[sec] = 2.14573, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.79e-06  5.99e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.54e-07  5.99e-07         1
         *Z       ---       ---  1.38e+27
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 5.98651e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  8.17416e-24    2.001e-24  5.71215e-26  3.36176e-25  1.06519e-26  3.07308e-26  6.68589e-31  6.08939e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.68453, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 660 K
            Well    Collision, 1/sec
              W1         1.95315e+09
      global relaxation matrix dimension = 362
      setting global matrices ... done, cpu time[sec] = 0.272354, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.80777, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            3635.78      709.319      195.545      234.483      26.8847      2881.16      339.547      1.73642
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.09677, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00205, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.12721, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.44792e-06  1.44792e-06  4.51258e-07
      low eigenvalue method done, cpu time[sec] = 2.12827, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.45e-06  4.51e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.24e-07  4.51e-07         1
         *Z       ---       ---  1.38e+27
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 4.51258e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  6.25675e-24  1.43052e-24  4.16451e-26  2.33335e-25  7.57927e-27  2.77825e-26  6.73847e-31  6.08949e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.68389, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 660 K
            Well    Collision, 1/sec
              W1         2.51119e+09
      global relaxation matrix dimension = 362
      setting global matrices ... done, cpu time[sec] = 0.271055, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.80527, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2827.83      551.692      152.091      182.376      20.9103       2240.9      264.092      1.35055
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.10194, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002046, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.13244, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.22989e-06  1.22989e-06  3.61159e-07
      low eigenvalue method done, cpu time[sec] = 2.13349, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.23e-06  3.61e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.05e-07  3.61e-07         1
         *Z       ---       ---  1.38e+27
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.61159e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  5.06015e-24  1.10054e-24  3.26071e-26  1.76318e-25  5.83349e-27  2.53457e-26   6.7906e-31  6.08964e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.68762, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 660 K
            Well    Collision, 1/sec
              W1         2.79021e+09
      global relaxation matrix dimension = 362
      setting global matrices ... done, cpu time[sec] = 0.273003, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.80874, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2545.04      496.523      136.882      164.138      18.8193      2016.81      237.683      1.21549
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.09512, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002042, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.12565, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.14672e-06  1.14672e-06  3.27974e-07
      low eigenvalue method done, cpu time[sec] = 2.12669, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.15e-06  3.28e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.74e-08  3.28e-07         1
         *Z       ---       ---  1.38e+27
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.27973e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  4.61426e-24  9.83061e-25  2.93611e-26  1.56465e-25  5.21646e-27  2.42837e-26  6.81626e-31  6.08968e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.68492, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 660 K
            Well    Collision, 1/sec
              W1         4.18532e+09
      global relaxation matrix dimension = 362
      setting global matrices ... done, cpu time[sec] = 0.273585, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.82518, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             1696.7      331.015      91.2545      109.425      12.5462      1344.54      158.455     0.810327
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.08075, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002031, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.11144, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.68191e-07  8.68191e-07  2.22534e-07
      low eigenvalue method done, cpu time[sec] = 2.11251, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.68e-07  2.23e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.32e-08  2.23e-07         1
         *Z       ---       ---  1.38e+27
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22534e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  3.17702e-24  6.26451e-25   1.9355e-26   9.7672e-26   3.3526e-27  2.00987e-26  6.93798e-31  6.08999e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.69081, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 660 K
            Well    Collision, 1/sec
              W1         5.58042e+09
      global relaxation matrix dimension = 362
      setting global matrices ... done, cpu time[sec] = 0.27372, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.82063, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1272.52      248.261      68.4409       82.069      9.40966       1008.4      118.842     0.607745
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.08498, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002063, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.11569, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.06666e-07  7.06666e-07  1.66215e-07
      low eigenvalue method done, cpu time[sec] = 2.11674, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.07e-07  1.66e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.93e-08  1.66e-07         1
         *Z       ---       ---  1.38e+27
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.66215e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.39492e-24  4.47989e-25  1.42118e-26  6.91091e-26  2.42083e-27  1.71584e-26  7.04523e-31  6.09028e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.69096, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 660 K
            Well    Collision, 1/sec
              W1         6.97553e+09
      global relaxation matrix dimension = 362
      setting global matrices ... done, cpu time[sec] = 0.274345, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.82066, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1018.02      198.609      54.7527      65.6552      7.52773      806.724      95.0732     0.486196
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.08288, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002011, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.11352, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.99523e-07  5.99523e-07  1.31271e-07
      low eigenvalue method done, cpu time[sec] = 2.11455, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0     6e-07  1.31e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.01e-08  1.31e-07         1
         *Z       ---       ---  1.38e+27
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.31271e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.90376e-24  3.42327e-25  1.10962e-26  5.24794e-26  1.86701e-27  1.49674e-26  7.13592e-31  6.09058e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.68901, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 660 K
            Well    Collision, 1/sec
              W1         8.37063e+09
      global relaxation matrix dimension = 362
      setting global matrices ... done, cpu time[sec] = 0.271725, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.82325, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            848.348      165.508      45.6272      54.7127       6.2731       672.27      79.2277     0.405164
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.08411, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002026, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.11462, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   5.2257e-07   5.2257e-07  1.07561e-07
      low eigenvalue method done, cpu time[sec] = 2.11571, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.23e-07  1.08e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.35e-08  1.08e-07         1
         *Z       ---       ---  1.38e+27
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.07561e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.56759e-24  2.73195e-25  9.01729e-27  4.17154e-26  1.50271e-27   1.3265e-26  7.20991e-31  6.09088e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.69033, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 660 K
            Well    Collision, 1/sec
              W1         9.76574e+09
      global relaxation matrix dimension = 362
      setting global matrices ... done, cpu time[sec] = 0.274574, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.82069, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            727.155      141.864      39.1091      46.8966      5.37695      576.231      67.9095     0.347283
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.08367, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002031, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.11423, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.64296e-07  4.64296e-07  9.04791e-08
      low eigenvalue method done, cpu time[sec] = 2.11526, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.64e-07  9.05e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.86e-08  9.05e-08         1
         *Z       ---       ---  1.38e+27
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 9.04791e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.32378e-24  2.24841e-25   7.5381e-27  3.42421e-26  1.24641e-27  1.19009e-26  7.26804e-31  6.09117e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.68717, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 660 K
            Well    Collision, 1/sec
              W1         1.11608e+10
      global relaxation matrix dimension = 362
      setting global matrices ... done, cpu time[sec] = 0.273284, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.82501, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            636.261      124.131      34.2204      41.0345      4.70483      504.202      59.4208     0.303873
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.07879, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00203, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.10959, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.18461e-07  4.18461e-07  7.76297e-08
      low eigenvalue method done, cpu time[sec] = 2.11065, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.18e-07  7.76e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.47e-08  7.76e-08         1
         *Z       ---       ---  1.38e+27
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 7.76297e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0   1.1394e-24   1.8936e-25  6.43609e-27  2.87873e-26  1.05723e-27  1.07815e-26  7.31157e-31  6.09147e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.68602, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 670 K
      Energy reference = 35403 1/cm
      Energy step      = 116 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -85.7 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.007195
         W1 Well: collisional kernel bandwidth = 52
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.344445
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.183607
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.182163
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.79902
         W1 Well: minimal relaxation eigenvalue = 0.0742811
         W1 Well: maximal relaxation eigenvalue = 0.978354
         W1 Well:       grid size = 359
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -6241 1/cm
         B1 Barrier:        grid size = 306
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -93 1/cm
         B2 Barrier:        grid size = 304
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 138 1/cm
         B3 Barrier:        grid size = 345
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4617 1/cm
         B4 Barrier:        grid size = 359
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6241 1/cm
         B5 Barrier: nonpositive number of states at -23177 1/cm => truncating
         B5 Barrier:        grid size = 505
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23177 1/cm
         B6 Barrier:        grid size = 293
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1414 1/cm
         B7 Barrier:        grid size = 265
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4662 1/cm
         B8 Barrier:        grid size = 161
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16726 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.86266, elapsed time[sec] = 0
      B5 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 359
      MasterEquation::Barrier::truncate: real weight = 3.69382e+37
      MasterEquation::Barrier::truncate: effective weight = 1.95145e+34
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1  -6241  -6241 1.73e+09 1.89e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -93 4.59e+15
         B2    139 9.04e+14
         B3  -4617  2.5e+14
         B4  -6241 2.99e+14
         B5  -6241 3.44e+13
         B6   1415 3.67e+15
         B7   4663 4.36e+14
         B8  16727 2.31e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1   3.5e-10  6.34e-10  2.49e-13  8.03e-15   1.8e-31  1.64e-07  0.000387  4.16e+08
          R  2.86e+09         1      1.81  0.000712   2.3e-05  5.15e-22       468  1.11e+06  1.19e+18
         P1  1.58e+09     0.552         1  0.000393  1.27e-05  2.84e-22       258  6.11e+05  6.56e+17
         P2  4.02e+12   1.4e+03  2.54e+03         1    0.0323  7.24e-19  6.57e+05  1.55e+09  1.67e+21
         P3  1.25e+14  4.35e+04  7.89e+04        31         1  2.24e-17  2.04e+07  4.82e+10  5.18e+22
         P4  5.55e+30  1.94e+21  3.52e+21  1.38e+18  4.46e+16         1  9.07e+23  2.15e+27  2.31e+39
         P5  6.12e+06   0.00214   0.00388  1.52e-06  4.91e-08   1.1e-24         1  2.37e+03  2.54e+15
         P6  2.58e+03  9.04e-07  1.64e-06  6.44e-10  2.08e-11  4.66e-28  0.000423         1  1.07e+12
         P7  2.41e-09  8.41e-19  1.52e-18  5.99e-22  1.93e-23  4.34e-40  3.93e-16  9.31e-13         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  3.94e+03  7.15e+03      2.81    0.0906  2.03e-18  1.84e+06  4.36e+09  4.69e+21
          R  0.000254         1      1.81  0.000712   2.3e-05  5.15e-22       468  1.11e+06  1.19e+18
         P1   0.00014     0.552         1  0.000393  1.27e-05  2.84e-22       258  6.11e+05  6.56e+17
         P2     0.356   1.4e+03  2.54e+03         1    0.0323  7.24e-19  6.57e+05  1.55e+09  1.67e+21
         P3        11  4.35e+04  7.89e+04        31         1  2.24e-17  2.04e+07  4.82e+10  5.18e+22
         P4  4.92e+17  1.94e+21  3.52e+21  1.38e+18  4.46e+16         1  9.07e+23  2.15e+27  2.31e+39
         P5  5.42e-07   0.00214   0.00388  1.52e-06  4.91e-08   1.1e-24         1  2.37e+03  2.54e+15
         P6  2.29e-10  9.04e-07  1.64e-06  6.44e-10  2.08e-11  4.66e-28  0.000423         1  1.07e+12
         P7  2.13e-22  8.41e-19  1.52e-18  5.99e-22  1.93e-23  4.34e-40  3.93e-16  9.31e-13         1
   MasterEquation::set:  done, cpu time[sec] = 1.87724, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 670 K
            Well    Collision, 1/sec
              W1         2.76296e+08
      global relaxation matrix dimension = 359
      setting global matrices ... done, cpu time[sec] = 0.26819, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.77289, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            26294.8      5176.91      1432.23      1714.32      197.028      21007.7      2497.73      13.2028
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.05966, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.111187, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.19979, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.51373e-06  4.51374e-06  1.94809e-06
      low eigenvalue method done, cpu time[sec] = 2.20116, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.51e-06  1.95e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.96e-07  1.95e-06         1
         *Z       ---       ---  1.04e+27
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.94809e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  6.40714e-23  2.16615e-23  6.18269e-25  4.69804e-24  1.32315e-25  1.08495e-25  2.14037e-30  2.94059e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.72025, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 670 K
            Well    Collision, 1/sec
              W1         8.28887e+08
      global relaxation matrix dimension = 359
      setting global matrices ... done, cpu time[sec] = 0.268399, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.75087, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            8764.94      1725.64       477.41      571.441       65.676      7002.57      832.577      4.40092
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.0554, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.088022, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.17296, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.54019e-06   2.5402e-06  9.51369e-07
      low eigenvalue method done, cpu time[sec] = 2.17404, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.54e-06  9.51e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.19e-07  9.51e-07         1
         *Z       ---       ---  1.04e+27
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 9.51368e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  3.35291e-23  9.04506e-24  2.53748e-25  1.60535e-24  4.91043e-26  9.99425e-26  2.15659e-30  2.94065e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.66514, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 670 K
            Well    Collision, 1/sec
              W1         1.38148e+09
      global relaxation matrix dimension = 359
      setting global matrices ... done, cpu time[sec] = 0.269291, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.77104, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            5258.97      1035.38      286.446      342.865      39.4056      4201.54      499.546      2.64055
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.05943, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.066783, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.15524, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.88641e-06  1.88641e-06  6.43739e-07
      low eigenvalue method done, cpu time[sec] = 2.15628, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.89e-06  6.44e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.61e-07  6.44e-07         1
         *Z       ---       ---  1.04e+27
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 6.43738e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.32873e-23  5.65106e-24  1.61753e-25  9.46209e-25  3.00721e-26  8.99824e-26  2.17337e-30   2.9407e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.66952, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 670 K
            Well    Collision, 1/sec
              W1         1.93407e+09
      global relaxation matrix dimension = 359
      setting global matrices ... done, cpu time[sec] = 0.268135, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.75626, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             3756.4      739.559      204.604      244.903      28.1469       3001.1      356.819      1.88611
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.05802, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.080101, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.16714, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.53264e-06  1.53264e-06  4.87149e-07
      low eigenvalue method done, cpu time[sec] = 2.16819, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.53e-06  4.87e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.3e-07  4.87e-07         1
         *Z       ---       ---  1.04e+27
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 4.87148e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.78928e-23  4.05466e-24  1.18428e-25  6.59433e-25  2.14885e-26  8.15611e-26   2.1903e-30  2.94076e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.68639, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 670 K
            Well    Collision, 1/sec
              W1         2.48666e+09
      global relaxation matrix dimension = 359
      setting global matrices ... done, cpu time[sec] = 0.269264, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.77416, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2921.65      575.212      159.137       190.48       21.892      2334.19      277.526      1.46697
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.05851, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.064673, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.15232, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.30426e-06  1.30426e-06  3.91073e-07
      low eigenvalue method done, cpu time[sec] = 2.15375, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.3e-06  3.91e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.1e-07  3.91e-07         1
         *Z       ---       ---  1.04e+27
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.91073e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.45139e-23  3.12822e-24  9.30308e-26  4.99871e-25  1.65933e-26  7.45714e-26  2.20707e-30  2.94081e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.66971, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 670 K
            Well    Collision, 1/sec
              W1         2.76296e+09
      global relaxation matrix dimension = 359
      setting global matrices ... done, cpu time[sec] = 0.268574, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.77514, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2629.48      517.691      143.223      171.432      19.7028      2100.77      249.773      1.32028
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.06412, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.053377, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.14667, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    1.217e-06    1.217e-06  3.55604e-07
      low eigenvalue method done, cpu time[sec] = 2.14771, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.22e-06  3.56e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.03e-07  3.56e-07         1
         *Z       ---       ---  1.04e+27
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.55604e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.32519e-23  2.79772e-24  8.38874e-26  4.44187e-25   1.4859e-26  7.15174e-26  2.21533e-30  2.94085e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.66223, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 670 K
            Well    Collision, 1/sec
              W1         4.14444e+09
      global relaxation matrix dimension = 359
      setting global matrices ... done, cpu time[sec] = 0.268057, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.77327, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1752.99      345.127      95.4821      114.288      13.1352      1400.51      166.515     0.880184
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.05823, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.058103, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.14575, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.24097e-07  9.24097e-07  2.42538e-07
      low eigenvalue method done, cpu time[sec] = 2.14682, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.24e-07  2.43e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.75e-08  2.43e-07         1
         *Z       ---       ---  1.04e+27
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.42538e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  9.17068e-24  1.79152e-24  5.56075e-26  2.78766e-25  9.60315e-27  5.94386e-26  2.25447e-30  2.94099e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.66078, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 670 K
            Well    Collision, 1/sec
              W1         5.52592e+09
      global relaxation matrix dimension = 359
      setting global matrices ... done, cpu time[sec] = 0.268849, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.78016, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1314.74      258.846      71.6116      85.7162      9.85141      1050.39      124.887     0.660138
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.05917, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.055266, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.14391, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    7.537e-07    7.537e-07  1.81853e-07
      low eigenvalue method done, cpu time[sec] = 2.14497, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.54e-07  1.82e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.29e-08  1.82e-07         1
         *Z       ---       ---  1.04e+27
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.81852e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  6.93916e-24  1.28577e-24  4.09982e-26  1.98021e-25  6.96259e-27  5.09088e-26  2.28897e-30  2.94113e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.66381, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 670 K
            Well    Collision, 1/sec
              W1          6.9074e+09
      global relaxation matrix dimension = 359
      setting global matrices ... done, cpu time[sec] = 0.267858, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.776, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1051.79      207.076      57.2892      68.5729      7.88112      840.308      99.9093     0.528111
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.06224, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.051278, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.14294, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.40413e-07  6.40413e-07   1.4406e-07
      low eigenvalue method done, cpu time[sec] = 2.14434, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   6.4e-07  1.44e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.32e-08  1.44e-07         1
         *Z       ---       ---  1.04e+27
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.4406e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  5.53261e-24   9.8533e-25  3.21147e-26  1.50841e-25  5.38722e-27  4.45281e-26  2.31819e-30  2.94127e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.65939, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 670 K
            Well    Collision, 1/sec
              W1         8.28887e+09
      global relaxation matrix dimension = 359
      setting global matrices ... done, cpu time[sec] = 0.270178, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.78063, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            876.494      172.564       47.741      57.1441       6.5676      700.257      83.2577     0.440092
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.07092, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.041619, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.14146, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.58903e-07  5.58903e-07   1.1834e-07
      low eigenvalue method done, cpu time[sec] = 2.14248, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.59e-07  1.18e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.63e-08  1.18e-07         1
         *Z       ---       ---  1.04e+27
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.1834e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  4.56703e-24  7.88223e-25  2.61686e-26  1.20213e-25  4.34774e-27  3.95549e-26   2.3421e-30  2.94142e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.66518, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 670 K
            Well    Collision, 1/sec
              W1         9.67035e+09
      global relaxation matrix dimension = 359
      setting global matrices ... done, cpu time[sec] = 0.271105, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.77892, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            751.281      147.912      40.9209      48.9807      5.62937       600.22      71.3638     0.377222
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.06305, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.052741, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.14501, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.97087e-07  4.97087e-07  9.97634e-08
      low eigenvalue method done, cpu time[sec] = 2.14609, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.97e-07  9.98e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.11e-08  9.98e-08         1
         *Z       ---       ---  1.04e+27
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 9.97634e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  3.86499e-24  6.50042e-25  2.19266e-26  9.88953e-26  3.61454e-27  3.55591e-26  2.36095e-30  2.94156e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.66991, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 670 K
            Well    Collision, 1/sec
              W1         1.10518e+10
      global relaxation matrix dimension = 359
      setting global matrices ... done, cpu time[sec] = 0.271411, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.7847, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            657.371      129.423      35.8058      42.8581       4.9257      525.193      62.4433     0.330069
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.05834, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.057027, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.14448, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.48405e-07  4.48405e-07  8.57589e-08
      low eigenvalue method done, cpu time[sec] = 2.14552, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.48e-07  8.58e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   3.7e-08  8.58e-08         1
         *Z       ---       ---  1.04e+27
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 8.57589e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  3.33291e-24  5.48443e-25  1.87591e-26  8.33024e-26  3.07215e-27  3.22724e-26  2.37517e-30   2.9417e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.67387, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 680 K
      Energy reference = 35682 1/cm
      Energy step      = 117 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -85.6 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.007144
         W1 Well: collisional kernel bandwidth = 52
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.346346
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.181969
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.187333
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.808696
         W1 Well: minimal relaxation eigenvalue = 0.0738518
         W1 Well: maximal relaxation eigenvalue = 0.979948
         W1 Well:       grid size = 359
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -6320 1/cm
         B1 Barrier:        grid size = 305
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -2 1/cm
         B2 Barrier:        grid size = 304
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 114 1/cm
         B3 Barrier:        grid size = 345
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4682 1/cm
         B4 Barrier:        grid size = 358
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6203 1/cm
         B5 Barrier: nonpositive number of states at -23169 1/cm => truncating
         B5 Barrier:        grid size = 503
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23168 1/cm
         B6 Barrier:        grid size = 293
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1401 1/cm
         B7 Barrier:        grid size = 265
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4677 1/cm
         B8 Barrier:        grid size = 162
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16728 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.88149, elapsed time[sec] = 0
      B5 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 359
      MasterEquation::Barrier::truncate: real weight = 2.19497e+37
      MasterEquation::Barrier::truncate: effective weight = 1.16975e+34
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1  -6320  -6320 1.68e+09 1.98e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -2  4.9e+15
         B2    115 9.74e+14
         B3  -4682 2.71e+14
         B4  -6203 3.23e+14
         B5  -6320 3.72e+13
         B6   1402 3.95e+15
         B7   4678 4.74e+14
         B8  16729 2.59e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1   3.1e-10   5.6e-10  2.56e-13   8.7e-15  3.48e-31  1.38e-07  0.000298  2.21e+08
          R  3.22e+09         1       1.8  0.000825   2.8e-05  1.12e-21       446   9.6e+05  7.12e+17
         P1  1.78e+09     0.554         1  0.000457  1.55e-05  6.21e-22       247  5.32e+05  3.95e+17
         P2  3.91e+12  1.21e+03  2.19e+03         1     0.034  1.36e-18  5.41e+05  1.16e+09  8.64e+20
         P3  1.15e+14  3.57e+04  6.44e+04      29.4         1     4e-17  1.59e+07  3.43e+10  2.54e+22
         P4  2.87e+30  8.92e+20  1.61e+21  7.36e+17   2.5e+16         1  3.98e+23  8.57e+26  6.36e+38
         P5  7.22e+06   0.00224   0.00405  1.85e-06  6.28e-08  2.51e-24         1  2.15e+03   1.6e+15
         P6  3.35e+03  1.04e-06  1.88e-06  8.59e-10  2.92e-11  1.17e-27  0.000464         1  7.42e+11
         P7  4.52e-09   1.4e-18  2.53e-18  1.16e-21  3.93e-23  1.57e-39  6.26e-16  1.35e-12         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  1.42e+03  2.56e+03      1.17    0.0398  1.59e-18  6.34e+05  1.36e+09  1.01e+21
          R  0.000704         1       1.8  0.000825   2.8e-05  1.12e-21       446   9.6e+05  7.12e+17
         P1   0.00039     0.554         1  0.000457  1.55e-05  6.21e-22       247  5.32e+05  3.95e+17
         P2     0.853  1.21e+03  2.19e+03         1     0.034  1.36e-18  5.41e+05  1.16e+09  8.64e+20
         P3      25.1  3.57e+04  6.44e+04      29.4         1     4e-17  1.59e+07  3.43e+10  2.54e+22
         P4  6.28e+17  8.92e+20  1.61e+21  7.36e+17   2.5e+16         1  3.98e+23  8.57e+26  6.36e+38
         P5  1.58e-06   0.00224   0.00405  1.85e-06  6.28e-08  2.51e-24         1  2.15e+03   1.6e+15
         P6  7.33e-10  1.04e-06  1.88e-06  8.59e-10  2.92e-11  1.17e-27  0.000464         1  7.42e+11
         P7  9.88e-22   1.4e-18  2.53e-18  1.16e-21  3.93e-23  1.57e-39  6.26e-16  1.35e-12         1
   MasterEquation::set:  done, cpu time[sec] = 1.89584, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 680 K
            Well    Collision, 1/sec
              W1         2.73638e+08
      global relaxation matrix dimension = 359
      setting global matrices ... done, cpu time[sec] = 0.267549, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.74805, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            27158.3      5395.81      1498.03      1789.88      206.201      21873.6      2623.57      14.3272
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.05691, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.124592, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.1895, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.85362e-06  4.85363e-06  2.12563e-06
      low eigenvalue method done, cpu time[sec] = 2.19056, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.85e-06  2.13e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.24e-07  2.13e-06         1
         *Z       ---       ---  7.78e+26
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.12563e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.74205e-22  5.84757e-23  1.66734e-24  1.26022e-23  3.55734e-25  3.06035e-25  6.72651e-30  1.35538e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.70286, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 680 K
            Well    Collision, 1/sec
              W1         8.20915e+08
      global relaxation matrix dimension = 359
      setting global matrices ... done, cpu time[sec] = 0.268172, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.77461, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            9052.75       1798.6      499.343      596.626      68.7336      7291.22      874.522      4.77574
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.0587, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.098844, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.16508, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.75403e-06  2.75403e-06  1.04865e-06
      low eigenvalue method done, cpu time[sec] = 2.16613, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.75e-06  1.05e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.36e-07  1.05e-06         1
         *Z       ---       ---  7.78e+26
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.04865e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  9.20561e-23  2.46378e-23  6.92134e-25  4.35384e-24   1.3354e-25  2.82696e-25  6.77727e-30  1.35541e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.68194, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 680 K
            Well    Collision, 1/sec
              W1         1.36819e+09
      global relaxation matrix dimension = 359
      setting global matrices ... done, cpu time[sec] = 0.269734, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.76557, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            5431.65      1079.16      299.606      357.975      41.2402      4374.73      524.713      2.86545
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.05314, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.103623, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.16429, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.05291e-06  2.05291e-06   7.1341e-07
      low eigenvalue method done, cpu time[sec] = 2.16534, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.05e-06  7.13e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.75e-07  7.13e-07         1
         *Z       ---       ---  7.78e+26
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 7.1341e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0   6.4273e-23  1.54689e-23  4.43824e-25  2.58088e-24  8.22694e-26  2.55229e-25  6.82969e-30  1.35543e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.67223, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 680 K
            Well    Collision, 1/sec
              W1         1.91547e+09
      global relaxation matrix dimension = 359
      setting global matrices ... done, cpu time[sec] = 0.268929, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.77552, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            3879.75       770.83      214.004      255.697      29.4573      3124.81      374.795      2.04675
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.06414, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.086763, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.15846, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.67201e-06  1.67202e-06  5.41927e-07
      low eigenvalue method done, cpu time[sec] = 2.15947, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.67e-06  5.42e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.42e-07  5.42e-07         1
         *Z       ---       ---  7.78e+26
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 5.41927e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  4.95674e-23  1.11379e-23  3.26291e-25  1.80584e-24  5.90307e-26  2.31893e-25  6.88252e-30  1.35547e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.67658, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 680 K
            Well    Collision, 1/sec
              W1         2.46274e+09
      global relaxation matrix dimension = 359
      setting global matrices ... done, cpu time[sec] = 0.268253, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.78525, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            3017.58      599.535      166.448      198.875      22.9112      2430.41      291.507      1.59191
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.0533, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.098748, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.15954, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.42547e-06  1.42547e-06  4.36339e-07
      low eigenvalue method done, cpu time[sec] = 2.16057, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.43e-06  4.36e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.2e-07  4.36e-07         1
         *Z       ---       ---  7.78e+26
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 4.36338e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  4.03234e-23  8.61663e-24  2.57138e-25  1.37311e-24  4.57296e-26  2.12456e-25  6.93479e-30  1.35549e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.68845, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 680 K
            Well    Collision, 1/sec
              W1         2.73638e+09
      global relaxation matrix dimension = 359
      setting global matrices ... done, cpu time[sec] = 0.268234, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.77739, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2715.83      539.581      149.803      178.988      20.6201      2187.36      262.357      1.43272
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.06225, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.093366, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.16309, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.33111e-06  1.33111e-06  3.97269e-07
      low eigenvalue method done, cpu time[sec] = 2.16414, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.33e-06  3.97e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.12e-07  3.97e-07         1
         *Z       ---       ---  7.78e+26
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.97268e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0   3.6863e-23  7.71538e-24  2.32184e-25  1.22176e-24  4.10064e-26  2.03944e-25   6.9605e-30   1.3555e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.68189, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 680 K
            Well    Collision, 1/sec
              W1         4.10457e+09
      global relaxation matrix dimension = 359
      setting global matrices ... done, cpu time[sec] = 0.268174, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.80151, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1810.55      359.721      99.8686      119.325      13.7467      1458.24      174.904     0.955149
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.05943, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.076562, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.1435, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.01368e-06  1.01368e-06  2.72328e-07
      low eigenvalue method done, cpu time[sec] = 2.14454, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.01e-06  2.72e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.47e-08  2.72e-07         1
         *Z       ---       ---  7.78e+26
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.72328e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.56369e-23  4.96387e-24  1.54749e-25  7.70781e-25  2.66462e-26  1.70169e-25   7.0823e-30  1.35557e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.6861, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 680 K
            Well    Collision, 1/sec
              W1         5.47277e+09
      global relaxation matrix dimension = 359
      setting global matrices ... done, cpu time[sec] = 0.269773, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.81378, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1357.91      269.791      74.9014      89.4938        10.31      1093.68      131.178     0.716361
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.06188, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.085696, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.15525, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.28442e-07  8.28442e-07  2.04953e-07
      low eigenvalue method done, cpu time[sec] = 2.15629, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.28e-07  2.05e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.88e-08  2.05e-07         1
         *Z       ---       ---  7.78e+26
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.04953e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.94699e-23  3.57502e-24  1.14551e-25  5.49632e-25  1.93968e-26  1.46205e-25  7.18961e-30  1.35563e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.71808, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 680 K
            Well    Collision, 1/sec
              W1         6.84096e+09
      global relaxation matrix dimension = 359
      setting global matrices ... done, cpu time[sec] = 0.268824, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.79543, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1086.33      215.832      59.9212      71.5951      8.24803      874.946      104.943     0.573089
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.06233, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.077603, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.14738, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.05007e-07  7.05007e-07  1.62844e-07
      low eigenvalue method done, cpu time[sec] = 2.14844, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.05e-07  1.63e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.84e-08  1.63e-07         1
         *Z       ---       ---  7.78e+26
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.62844e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.55688e-23  2.74732e-24  9.00155e-26  4.19958e-25  1.50559e-26  1.28213e-25  7.28056e-30   1.3557e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.69098, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 680 K
            Well    Collision, 1/sec
              W1         8.20915e+09
      global relaxation matrix dimension = 359
      setting global matrices ... done, cpu time[sec] = 0.270143, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.78232, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            905.275       179.86      49.9343      59.6626      6.87336      729.122      87.4522     0.477574
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.06009, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.089426, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.15694, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.16037e-07  6.16037e-07  1.34102e-07
      low eigenvalue method done, cpu time[sec] = 2.15798, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.16e-07  1.34e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.08e-08  1.34e-07         1
         *Z       ---       ---  7.78e+26
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.34102e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.28831e-23  2.20286e-24  7.35433e-26  3.35536e-25   1.2183e-26  1.14148e-25  7.35507e-30  1.35577e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.68851, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 680 K
            Well    Collision, 1/sec
              W1         9.57734e+09
      global relaxation matrix dimension = 359
      setting global matrices ... done, cpu time[sec] = 0.270055, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.80469, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             775.95      154.166      42.8008      51.1393      5.89145      624.961       74.959     0.409349
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.62907, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.001975, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.63702, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.48466e-07  5.48466e-07  1.13292e-07
      low eigenvalue method done, cpu time[sec] = 1.63836, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.48e-07  1.13e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.51e-08  1.13e-07         1
         *Z       ---       ---  7.78e+26
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.13292e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.09255e-23  1.82031e-24  6.17618e-26  2.76636e-25  1.01514e-26  1.02818e-25  7.41403e-30  1.35583e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.67873, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 680 K
            Well    Collision, 1/sec
              W1         1.09455e+10
      global relaxation matrix dimension = 359
      setting global matrices ... done, cpu time[sec] = 0.257786, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.7917, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            678.956      134.895      37.4507      44.7469      5.15502      546.841      65.5892     0.358181
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.06021, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.072867, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.14055, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.95186e-07  4.95186e-07  9.75703e-08
      low eigenvalue method done, cpu time[sec] = 2.1416, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.95e-07  9.76e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.06e-08  9.76e-08         1
         *Z       ---       ---  7.78e+26
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 9.75703e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  9.43879e-24   1.5385e-24  5.29449e-26  2.33462e-25  8.64523e-27  9.34775e-26  7.45867e-30   1.3559e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.66314, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 690 K
      Energy reference = 35960 1/cm
      Energy step      = 119 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -85.5 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.006265
         W1 Well: collisional kernel bandwidth = 52
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.340734
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.178835
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.18123
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.792592
         W1 Well: minimal relaxation eigenvalue = 0.0734111
         W1 Well: maximal relaxation eigenvalue = 0.979458
         W1 Well:       grid size = 356
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -6404 1/cm
         B1 Barrier:        grid size = 303
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -96 1/cm
         B2 Barrier:        grid size = 301
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 141 1/cm
         B3 Barrier:        grid size = 341
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4619 1/cm
         B4 Barrier:        grid size = 355
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6284 1/cm
         B5 Barrier: nonpositive number of states at -23183 1/cm => truncating
         B5 Barrier:        grid size = 497
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23182 1/cm
         B6 Barrier:        grid size = 290
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1449 1/cm
         B7 Barrier:        grid size = 263
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4662 1/cm
         B8 Barrier:        grid size = 162
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16682 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.84938, elapsed time[sec] = 0
      B5 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 356
      MasterEquation::Barrier::truncate: real weight = 1.32472e+37
      MasterEquation::Barrier::truncate: effective weight = 7.18111e+33
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1  -6404  -6404 1.64e+09 2.07e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -96 5.23e+15
         B2    142 1.05e+15
         B3  -4619 2.92e+14
         B4  -6284 3.49e+14
         B5  -6404 4.03e+13
         B6   1450 4.25e+15
         B7   4663 5.14e+14
         B8  16682  2.9e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  2.75e-10  4.94e-10  2.61e-13  9.34e-15  6.55e-31  1.17e-07   0.00023  1.19e+08
          R  3.64e+09         1       1.8  0.000951   3.4e-05  2.38e-21       426  8.37e+05  4.33e+17
         P1  2.02e+09     0.556         1  0.000529  1.89e-05  1.32e-21       237  4.65e+05  2.41e+17
         P2  3.83e+12  1.05e+03  1.89e+03         1    0.0357  2.51e-18  4.48e+05   8.8e+08  4.56e+20
         P3  1.07e+14  2.94e+04  5.29e+04        28         1  7.01e-17  1.25e+07  2.46e+10  1.28e+22
         P4  1.53e+30   4.2e+20  7.55e+20  3.99e+17  1.43e+16         1  1.79e+23  3.51e+26  1.82e+38
         P5  8.54e+06   0.00235   0.00422  2.23e-06  7.98e-08  5.59e-24         1  1.96e+03  1.02e+15
         P6  4.35e+03  1.19e-06  2.15e-06  1.14e-09  4.06e-11  2.85e-27  0.000509         1  5.18e+11
         P7  8.39e-09  2.31e-18  4.15e-18  2.19e-21  7.84e-23   5.5e-39  9.83e-16  1.93e-12         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1       527       948     0.501    0.0179  1.26e-18  2.25e+05  4.41e+08  2.28e+20
          R    0.0019         1       1.8  0.000951   3.4e-05  2.38e-21       426  8.37e+05  4.33e+17
         P1   0.00105     0.556         1  0.000529  1.89e-05  1.32e-21       237  4.65e+05  2.41e+17
         P2      1.99  1.05e+03  1.89e+03         1    0.0357  2.51e-18  4.48e+05   8.8e+08  4.56e+20
         P3      55.8  2.94e+04  5.29e+04        28         1  7.01e-17  1.25e+07  2.46e+10  1.28e+22
         P4  7.96e+17   4.2e+20  7.55e+20  3.99e+17  1.43e+16         1  1.79e+23  3.51e+26  1.82e+38
         P5  4.45e-06   0.00235   0.00422  2.23e-06  7.98e-08  5.59e-24         1  1.96e+03  1.02e+15
         P6  2.27e-09  1.19e-06  2.15e-06  1.14e-09  4.06e-11  2.85e-27  0.000509         1  5.18e+11
         P7  4.38e-21  2.31e-18  4.15e-18  2.19e-21  7.84e-23   5.5e-39  9.83e-16  1.93e-12         1
   MasterEquation::set:  done, cpu time[sec] = 1.86344, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 690 K
            Well    Collision, 1/sec
              W1         2.71046e+08
      global relaxation matrix dimension = 356
      setting global matrices ... done, cpu time[sec] = 0.264825, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.65216, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            28036.4      5620.83      1565.89      1867.67      215.667      22761.6      2753.72       15.524
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.01321, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.180367, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.22405, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.19019e-06   5.1902e-06  2.30507e-06
      low eigenvalue method done, cpu time[sec] = 2.23895, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.19e-06  2.31e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.51e-07  2.31e-06         1
         *Z       ---       ---  5.87e+26
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.30507e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  4.59683e-22  1.53097e-22  4.36496e-24   3.2819e-23   9.2849e-25  8.33083e-25  2.04262e-29   5.9742e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.64945, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 690 K
            Well    Collision, 1/sec
              W1         8.13137e+08
      global relaxation matrix dimension = 356
      setting global matrices ... done, cpu time[sec] = 0.264449, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.65648, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            9345.48      1873.61      521.964      622.557      71.8889      7587.19      917.906      5.17465
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.01173, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.178873, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.22104, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.96904e-06  2.96904e-06  1.14869e-06
      low eigenvalue method done, cpu time[sec] = 2.23609, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.97e-06  1.15e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.54e-07  1.15e-06         1
         *Z       ---       ---  5.87e+26
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.14869e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.45255e-22  6.51013e-23  1.83236e-24   1.1462e-23  3.52509e-25  7.73243e-25  2.05793e-29  5.97431e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.64691, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 690 K
            Well    Collision, 1/sec
              W1         1.35523e+09
      global relaxation matrix dimension = 356
      setting global matrices ... done, cpu time[sec] = 0.262755, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.65282, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            5607.29      1124.17      313.178      373.534      43.1334      4552.31      550.743      3.10479
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.01165, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.178072, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.22019, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.22144e-06  2.22144e-06  7.85653e-07
      low eigenvalue method done, cpu time[sec] = 2.23522, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.22e-06  7.86e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.88e-07  7.86e-07         1
         *Z       ---       ---  5.87e+26
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 7.85653e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.72122e-22   4.1077e-23  1.18185e-24  6.83281e-24  2.18443e-25  7.00573e-25  2.07373e-29  5.97442e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.63225, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 690 K
            Well    Collision, 1/sec
              W1         1.89732e+09
      global relaxation matrix dimension = 356
      setting global matrices ... done, cpu time[sec] = 0.263771, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.65359, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             4005.2      802.975      223.699       266.81      30.8095      3251.65      393.388      2.21771
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.00817, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.178831, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.21741, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.81369e-06  1.81369e-06  5.99049e-07
      low eigenvalue method done, cpu time[sec] = 2.2327, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.81e-06  5.99e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.53e-07  5.99e-07         1
         *Z       ---       ---  5.87e+26
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 5.99048e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.33225e-22  2.96801e-23  8.72405e-25  4.79968e-24  1.57379e-25  6.38275e-25  2.08963e-29  5.97454e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.63078, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 690 K
            Well    Collision, 1/sec
              W1         2.43941e+09
      global relaxation matrix dimension = 356
      setting global matrices ... done, cpu time[sec] = 0.260374, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.65952, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            3115.16      624.536      173.988      207.519       23.963      2529.06      305.969      1.72488
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.00705, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.178182, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.2151, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.54906e-06  1.54906e-06  4.83741e-07
      low eigenvalue method done, cpu time[sec] = 2.23001, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.55e-06  4.84e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.3e-07  4.84e-07         1
         *Z       ---       ---  5.87e+26
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 4.83741e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.08688e-22  2.30244e-23   6.8968e-25  3.66065e-24  1.22303e-25   5.8611e-25  2.10536e-29  5.97465e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.63299, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 690 K
            Well    Collision, 1/sec
              W1         2.71046e+09
      global relaxation matrix dimension = 356
      setting global matrices ... done, cpu time[sec] = 0.26332, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.65625, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2803.64      562.083      156.589      186.767      21.5667      2276.16      275.372       1.5524
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.0153, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.178302, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.2238, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.44762e-06  1.44762e-06  4.40979e-07
      low eigenvalue method done, cpu time[sec] = 2.23597, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.45e-06  4.41e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.21e-07  4.41e-07         1
         *Z       ---       ---  5.87e+26
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 4.40979e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  9.94822e-23  2.06404e-23  6.23589e-25   3.2614e-24  1.09819e-25  5.63198e-25  2.11309e-29  5.97472e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.6319, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 690 K
            Well    Collision, 1/sec
              W1         4.06569e+09
      global relaxation matrix dimension = 356
      setting global matrices ... done, cpu time[sec] = 0.263944, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.66484, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             1869.1      374.722      104.393      124.511      14.3778      1517.44      183.581      1.03493
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.02405, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.177435, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.23026, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.10559e-06  1.10559e-06  3.03803e-07
      low eigenvalue method done, cpu time[sec] = 2.2313, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.11e-06  3.04e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.19e-08  3.04e-07         1
         *Z       ---       ---  5.87e+26
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.03803e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  6.95243e-23  1.33419e-23  4.17847e-25  2.06818e-24  7.17447e-26  4.71896e-25  2.14968e-29    5.975e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.63259, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 690 K
            Well    Collision, 1/sec
              W1         5.42092e+09
      global relaxation matrix dimension = 356
      setting global matrices ... done, cpu time[sec] = 0.264258, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.6506, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1401.82      281.041      78.2946      93.3835      10.7833      1138.08      137.686     0.776198
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.01207, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.178739, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.22074, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.05377e-07  9.05377e-07  2.29484e-07
      low eigenvalue method done, cpu time[sec] = 2.2363, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.05e-07  2.29e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.49e-08  2.29e-07         1
         *Z       ---       ---  5.87e+26
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.29484e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  5.29908e-23  9.64245e-24  3.10525e-25  1.48039e-24   5.2432e-26  4.06759e-25  2.18193e-29  5.97529e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.63466, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 690 K
            Well    Collision, 1/sec
              W1         6.77615e+09
      global relaxation matrix dimension = 356
      setting global matrices ... done, cpu time[sec] = 0.26497, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.6577, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1121.46      224.833      62.6356      74.7068      8.62667      910.463      110.149     0.620958
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.00925, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.178117, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.2174, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.71663e-07  7.71663e-07   1.8287e-07
      low eigenvalue method done, cpu time[sec] = 2.23264, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.72e-07  1.83e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.36e-08  1.83e-07         1
         *Z       ---       ---  5.87e+26
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.8287e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  4.24956e-23  7.43055e-24  2.44781e-25  1.13454e-24  4.08256e-26  3.57654e-25   2.2093e-29  5.97558e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.63611, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 690 K
            Well    Collision, 1/sec
              W1         8.13137e+09
      global relaxation matrix dimension = 356
      setting global matrices ... done, cpu time[sec] = 0.264679, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.67054, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            934.548      187.361      52.1964      62.2557      7.18889      758.719      91.7906     0.517465
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.02693, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.169366, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.225, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.75115e-07  6.75115e-07  1.50963e-07
      low eigenvalue method done, cpu time[sec] = 2.22604, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.75e-07  1.51e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.54e-08  1.51e-07         1
         *Z       ---       ---  5.87e+26
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.50963e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  3.52493e-23  5.97177e-24   2.0051e-25  9.08741e-25  3.31216e-26  3.19141e-25  2.23177e-29  5.97586e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.63509, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 690 K
            Well    Collision, 1/sec
              W1          9.4866e+09
      global relaxation matrix dimension = 356
      setting global matrices ... done, cpu time[sec] = 0.264598, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.67603, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            801.041      160.595      44.7397       53.362      6.16191      650.331      78.6776     0.443542
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.02073, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.177339, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.2282, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.01682e-07  6.01682e-07  1.27805e-07
      low eigenvalue method done, cpu time[sec] = 2.23318, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.02e-07  1.28e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.93e-08  1.28e-07         1
         *Z       ---       ---  5.87e+26
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.27805e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.99551e-23  4.94453e-24  1.68765e-25   7.5083e-25  2.76602e-26  2.88033e-25  2.24961e-29  5.97615e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.64935, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 690 K
            Well    Collision, 1/sec
              W1         1.08418e+10
      global relaxation matrix dimension = 356
      setting global matrices ... done, cpu time[sec] = 0.264713, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.67758, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            700.911      140.521      39.1473      46.6918      5.39167      569.039      68.8429     0.388099
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.01381, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.177268, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.22136, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.43709e-07  5.43709e-07  1.10271e-07
      low eigenvalue method done, cpu time[sec] = 2.23051, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.44e-07   1.1e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.44e-08   1.1e-07         1
         *Z       ---       ---  5.87e+26
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.10271e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.59256e-23   4.1863e-24  1.44957e-25  6.34841e-25  2.36024e-26  2.62328e-25   2.2632e-29  5.97644e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.64806, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 700 K
      Energy reference = 36238 1/cm
      Energy step      = 121 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -85.4 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.007368
         W1 Well: collisional kernel bandwidth = 51
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.328999
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.176725
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.180006
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.770515
         W1 Well: minimal relaxation eigenvalue = 0.0729797
         W1 Well: maximal relaxation eigenvalue = 0.978982
         W1 Well:       grid size = 353
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -6474 1/cm
         B1 Barrier:        grid size = 300
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -61 1/cm
         B2 Barrier:        grid size = 298
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 180 1/cm
         B3 Barrier:        grid size = 338
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4660 1/cm
         B4 Barrier:        grid size = 351
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6232 1/cm
         B5 Barrier: nonpositive number of states at -23173 1/cm => truncating
         B5 Barrier:        grid size = 491
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23172 1/cm
         B6 Barrier:        grid size = 288
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1390 1/cm
         B7 Barrier:        grid size = 261
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4657 1/cm
         B8 Barrier:        grid size = 161
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16757 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.81062, elapsed time[sec] = 0
      B5 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 353
      MasterEquation::Barrier::truncate: real weight = 8.13069e+36
      MasterEquation::Barrier::truncate: effective weight = 4.48187e+33
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1  -6474  -6474  1.6e+09 2.16e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -61 5.58e+15
         B2    181 1.13e+15
         B3  -4660 3.16e+14
         B4  -6232 3.76e+14
         B5  -6474 4.35e+13
         B6   1391 4.57e+15
         B7   4658 5.58e+14
         B8  16757 3.24e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  2.39e-10  4.28e-10  2.61e-13  9.79e-15  1.18e-30  9.73e-08  0.000175  6.39e+07
          R  4.19e+09         1      1.79   0.00109   4.1e-05  4.95e-21       407  7.32e+05  2.67e+17
         P1  2.34e+09     0.558         1  0.000609  2.29e-05  2.76e-21       227  4.08e+05  1.49e+17
         P2  3.84e+12       916  1.64e+03         1    0.0375  4.54e-18  3.73e+05  6.71e+08  2.45e+20
         P3  1.02e+14  2.44e+04  4.37e+04      26.6         1  1.21e-16  9.94e+06  1.79e+10  6.53e+21
         P4  8.45e+29  2.02e+20  3.62e+20   2.2e+17  8.27e+15         1  8.22e+22  1.48e+26   5.4e+37
         P5  1.03e+07   0.00246    0.0044  2.68e-06  1.01e-07  1.22e-23         1   1.8e+03  6.56e+14
         P6  5.72e+03  1.37e-06  2.45e-06  1.49e-09   5.6e-11  6.77e-27  0.000556         1  3.65e+11
         P7  1.57e-08  3.74e-18   6.7e-18  4.08e-21  1.53e-22  1.85e-38  1.52e-15  2.74e-12         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1       201       361      0.22   0.00825  9.97e-19   8.2e+04  1.47e+08  5.38e+19
          R   0.00497         1      1.79   0.00109   4.1e-05  4.95e-21       407  7.32e+05  2.67e+17
         P1   0.00277     0.558         1  0.000609  2.29e-05  2.76e-21       227  4.08e+05  1.49e+17
         P2      4.55       916  1.64e+03         1    0.0375  4.54e-18  3.73e+05  6.71e+08  2.45e+20
         P3       121  2.44e+04  4.37e+04      26.6         1  1.21e-16  9.94e+06  1.79e+10  6.53e+21
         P4     1e+18  2.02e+20  3.62e+20   2.2e+17  8.27e+15         1  8.22e+22  1.48e+26   5.4e+37
         P5  1.22e-05   0.00246    0.0044  2.68e-06  1.01e-07  1.22e-23         1   1.8e+03  6.56e+14
         P6  6.79e-09  1.37e-06  2.45e-06  1.49e-09   5.6e-11  6.77e-27  0.000556         1  3.65e+11
         P7  1.86e-20  3.74e-18   6.7e-18  4.08e-21  1.53e-22  1.85e-38  1.52e-15  2.74e-12         1
   MasterEquation::set:  done, cpu time[sec] = 1.82513, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 700 K
            Well    Collision, 1/sec
              W1         2.68516e+08
      global relaxation matrix dimension = 353
      setting global matrices ... done, cpu time[sec] = 0.258999, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.58751, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            28931.5      5852.69      1636.05      1947.96      225.459      23674.1      2888.65      16.7996
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.96692, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.176308, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.17374, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.65843e-06  5.65844e-06  2.54861e-06
      low eigenvalue method done, cpu time[sec] = 2.18887, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.66e-06  2.55e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   4.9e-07  2.55e-06         1
         *Z       ---       ---  4.42e+26
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.5486e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.17883e-21  3.89798e-22   1.1108e-23  8.30919e-23  2.35594e-24  2.22026e-24  6.00871e-29  2.52384e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.51826, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 700 K
            Well    Collision, 1/sec
              W1         8.05547e+08
      global relaxation matrix dimension = 353
      setting global matrices ... done, cpu time[sec] = 0.258554, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.57731, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            9643.85       1950.9       545.35      649.321      75.1529      7891.37      962.884      5.59986
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.99688, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.175926, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.20276, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.26271e-06  3.26271e-06  1.28253e-06
      low eigenvalue method done, cpu time[sec] = 2.21772, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.26e-06  1.28e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.78e-07  1.28e-06         1
         *Z       ---       ---  4.42e+26
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.28252e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  6.34852e-22   1.6722e-22   4.7143e-24  2.93284e-23  9.04372e-25  2.06342e-24  6.05353e-29  2.52391e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.53501, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 700 K
            Well    Collision, 1/sec
              W1         1.34258e+09
      global relaxation matrix dimension = 353
      setting global matrices ... done, cpu time[sec] = 0.259085, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.60158, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            5786.31      1170.54       327.21      389.592      45.0918      4734.82       577.73      3.35992
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.95894, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.175356, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.16453, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   2.4501e-06  2.45011e-06  8.81756e-07
      low eigenvalue method done, cpu time[sec] = 2.1795, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.45e-06  8.82e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.07e-07  8.82e-07         1
         *Z       ---       ---  4.42e+26
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 8.81755e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0   4.4779e-22  1.06017e-22    3.058e-24  1.75799e-23  5.63635e-25  1.87339e-24  6.09969e-29  2.52395e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.52413, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 700 K
            Well    Collision, 1/sec
              W1         1.87961e+09
      global relaxation matrix dimension = 353
      setting global matrices ... done, cpu time[sec] = 0.25788, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.60302, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            4133.08      836.099      233.721       278.28      32.2084      3382.02      412.664      2.39994
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.96581, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.174232, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.16924, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   2.0052e-06   2.0052e-06  6.74786e-07
      low eigenvalue method done, cpu time[sec] = 2.18424, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.01e-06  6.75e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.68e-07  6.75e-07         1
         *Z       ---       ---  4.42e+26
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 6.74785e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0   3.4783e-22  7.68624e-23  2.26631e-24  1.23964e-23  4.07697e-25  1.71016e-24  6.14608e-29    2.524e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.5267, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 700 K
            Well    Collision, 1/sec
              W1         2.41664e+09
      global relaxation matrix dimension = 353
      setting global matrices ... done, cpu time[sec] = 0.257837, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.59872, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            3214.62      650.299      181.783       216.44       25.051      2630.46      320.961      1.86662
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.9701, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.175169, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.17529, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   1.7157e-06   1.7157e-06  5.46453e-07
      low eigenvalue method done, cpu time[sec] = 2.19032, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.72e-06  5.46e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.43e-07  5.46e-07         1
         *Z       ---       ---  4.42e+26
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 5.46453e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.84557e-22  5.97848e-23  1.79715e-24   9.4827e-24  3.17812e-25  1.57318e-24  6.19191e-29  2.52404e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.52982, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 700 K
            Well    Collision, 1/sec
              W1         2.68516e+09
      global relaxation matrix dimension = 353
      setting global matrices ... done, cpu time[sec] = 0.259529, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.63913, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2893.15      585.269      163.605      194.796      22.5459      2367.41      288.865      1.67996
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.96697, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.175848, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.17298, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.60454e-06  1.60454e-06  4.98758e-07
      low eigenvalue method done, cpu time[sec] = 2.18794, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.6e-06  4.99e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.34e-07  4.99e-07         1
         *Z       ---       ---  4.42e+26
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 4.98758e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.60767e-22  5.36561e-23  1.62708e-24  8.45924e-24  2.85749e-25  1.51292e-24  6.21443e-29  2.52407e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.56901, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 700 K
            Well    Collision, 1/sec
              W1         4.02774e+09
      global relaxation matrix dimension = 353
      setting global matrices ... done, cpu time[sec] = 0.258487, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.6034, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1928.77      390.179       109.07      129.864      15.0306      1578.27      192.577      1.11997
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.95814, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.175813, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.16395, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.22896e-06  1.22896e-06  3.45285e-07
      low eigenvalue method done, cpu time[sec] = 2.17889, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.23e-06  3.45e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.02e-07  3.45e-07         1
         *Z       ---       ---  4.42e+26
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.45285e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0   1.8311e-22   3.4842e-23  1.09597e-24  5.39149e-24  1.87661e-25  1.27215e-24  6.32099e-29  2.52419e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.52329, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 700 K
            Well    Collision, 1/sec
              W1         5.37031e+09
      global relaxation matrix dimension = 353
      setting global matrices ... done, cpu time[sec] = 0.258701, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.61192, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1446.58      292.635      81.8025      97.3981      11.2729      1183.71      144.433     0.839979
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.96722, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.174306, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.17165, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.00842e-06  1.00842e-06  2.61759e-07
      low eigenvalue method done, cpu time[sec] = 2.18661, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.01e-06  2.62e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.31e-08  2.62e-07         1
         *Z       ---       ---  4.42e+26
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.61759e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.40059e-22  2.52665e-23  8.17627e-25  3.87357e-24  1.37676e-25   1.0997e-24  6.41489e-29  2.52431e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.54032, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 700 K
            Well    Collision, 1/sec
              W1         6.71289e+09
      global relaxation matrix dimension = 353
      setting global matrices ... done, cpu time[sec] = 0.2588, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.60636, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1157.26      234.108       65.442      77.9185      9.01835      946.965      115.546     0.671983
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.97094, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.173406, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.174, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.60807e-07  8.60807e-07   2.0919e-07
      low eigenvalue method done, cpu time[sec] = 2.19007, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.61e-07  2.09e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.06e-08  2.09e-07         1
         *Z       ---       ---  4.42e+26
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.0919e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.12636e-22  1.95234e-23  6.46501e-25  2.97741e-24   1.0753e-25  9.69275e-25  6.49463e-29  2.52443e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.54357, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 700 K
            Well    Collision, 1/sec
              W1         8.05547e+09
      global relaxation matrix dimension = 353
      setting global matrices ... done, cpu time[sec] = 0.26009, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.61377, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            964.385       195.09       54.535      64.9321      7.51529      789.137      96.2884     0.559986
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.97266, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.175137, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.178, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.54036e-07  7.54036e-07  1.73104e-07
      low eigenvalue method done, cpu time[sec] = 2.19401, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.54e-07  1.73e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.17e-08  1.73e-07         1
         *Z       ---       ---  4.42e+26
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.73104e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0    9.365e-23   1.5726e-23  5.30932e-25  2.39072e-24  8.74621e-26  8.66706e-25  6.56024e-29  2.52455e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.55445, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 700 K
            Well    Collision, 1/sec
              W1         9.39805e+09
      global relaxation matrix dimension = 353
      setting global matrices ... done, cpu time[sec] = 0.259689, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.61372, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            826.616       167.22      46.7443       55.656      6.44168      676.403      82.5329     0.479988
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.96631, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.173461, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.1699, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   6.7271e-07   6.7271e-07  1.46851e-07
      low eigenvalue method done, cpu time[sec] = 2.18627, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.73e-07  1.47e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.49e-08  1.47e-07         1
         *Z       ---       ---  4.42e+26
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.46851e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  7.97455e-23  1.30462e-23  4.47857e-25  1.97946e-24   7.3201e-26  7.83661e-25   6.6125e-29  2.52468e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.54617, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 700 K
            Well    Collision, 1/sec
              W1         1.07406e+10
      global relaxation matrix dimension = 353
      setting global matrices ... done, cpu time[sec] = 0.260281, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.61951, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            723.289      146.317      40.9012       48.699      5.63647      591.853      72.2163      0.41999
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.97132, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.174445, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.17586, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.08428e-07  6.08428e-07  1.26934e-07
      low eigenvalue method done, cpu time[sec] = 2.19193, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.08e-07  1.27e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.95e-08  1.27e-07         1
         *Z       ---       ---  4.42e+26
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.26934e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  6.91411e-23  1.10645e-23  3.85416e-25  1.67677e-24  6.25824e-26  7.14899e-25   6.6525e-29   2.5248e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.55887, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 800 K
      Energy reference = 39018 1/cm
      Energy step      = 138 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -84.1 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.007803
         W1 Well: collisional kernel bandwidth = 51
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.309381
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.159578
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.162229
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.677248
         W1 Well: minimal relaxation eigenvalue = 0.0689493
         W1 Well: maximal relaxation eigenvalue = 0.980563
         W1 Well:       grid size = 335
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -7211 1/cm
         B1 Barrier:        grid size = 283
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -35 1/cm
         B2 Barrier:        grid size = 282
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 102 1/cm
         B3 Barrier:        grid size = 317
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4727 1/cm
         B4 Barrier:        grid size = 328
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6245 1/cm
         B5 Barrier: nonpositive number of states at -23634 1/cm => truncating
         B5 Barrier:        grid size = 454
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23634 1/cm
         B6 Barrier:        grid size = 272
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1482 1/cm
         B7 Barrier:        grid size = 249
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4656 1/cm
         B8 Barrier:        grid size = 162
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16662 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.65922, elapsed time[sec] = 0
      B5 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 335
      MasterEquation::Barrier::truncate: real weight = 1.33608e+35
      MasterEquation::Barrier::truncate: effective weight = 8.40085e+31
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1  -7211  -7211 1.24e+09 3.28e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -35 1.04e+16
         B2    103 2.31e+15
         B3  -4727 6.66e+14
         B4  -6245  7.8e+14
         B5  -7211 9.23e+13
         B6   1483 9.21e+15
         B7   4657 1.22e+15
         B8  16663 9.38e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  6.91e-11  1.21e-10  2.48e-13  1.42e-14   1.9e-28  1.89e-08  1.58e-05  2.87e+05
          R  1.45e+10         1      1.75   0.00358  0.000206  2.74e-18       273  2.29e+05  4.16e+15
         P1  8.28e+09     0.572         1   0.00205  0.000118  1.57e-18       156  1.31e+05  2.38e+15
         P2  4.04e+12       279       488         1    0.0574  7.66e-16  7.63e+04  6.38e+07  1.16e+18
         P3  7.04e+13  4.86e+03   8.5e+03      17.4         1  1.33e-14  1.33e+06  1.11e+09  2.02e+19
         P4  5.28e+27  3.64e+17  6.37e+17  1.31e+15  7.49e+13         1  9.96e+19  8.33e+22  1.52e+33
         P5   5.3e+07   0.00366    0.0064  1.31e-05  7.52e-07     1e-20         1       837  1.52e+13
         P6  6.33e+04  4.37e-06  7.64e-06  1.57e-08  8.99e-10   1.2e-23    0.0012         1  1.82e+10
         P7  3.48e-06   2.4e-16   4.2e-16  8.61e-19  4.94e-20  6.59e-34  6.57e-14  5.49e-11         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1    0.0498     0.087  0.000178  1.02e-05  1.37e-19      13.6  1.14e+04  2.07e+14
          R      20.1         1      1.75   0.00358  0.000206  2.74e-18       273  2.29e+05  4.16e+15
         P1      11.5     0.572         1   0.00205  0.000118  1.57e-18       156  1.31e+05  2.38e+15
         P2  5.61e+03       279       488         1    0.0574  7.66e-16  7.63e+04  6.38e+07  1.16e+18
         P3  9.77e+04  4.86e+03   8.5e+03      17.4         1  1.33e-14  1.33e+06  1.11e+09  2.02e+19
         P4  7.32e+18  3.64e+17  6.37e+17  1.31e+15  7.49e+13         1  9.96e+19  8.33e+22  1.52e+33
         P5    0.0735   0.00366    0.0064  1.31e-05  7.52e-07     1e-20         1       837  1.52e+13
         P6  8.79e-05  4.37e-06  7.64e-06  1.57e-08  8.99e-10   1.2e-23    0.0012         1  1.82e+10
         P7  4.83e-15   2.4e-16   4.2e-16  8.61e-19  4.94e-20  6.59e-34  6.57e-14  5.49e-11         1
   MasterEquation::set:  done, cpu time[sec] = 1.67335, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 800 K
            Well    Collision, 1/sec
              W1          2.4617e+08
      global relaxation matrix dimension = 335
      setting global matrices ... done, cpu time[sec] = 0.233488, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.12818, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            38830.8      8576.65      2475.31       2899.7       342.97      34227.7      4525.71      34.8777
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.70206, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.157942, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.88687, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.19779e-05  1.19779e-05  6.03995e-06
      low eigenvalue method done, cpu time[sec] = 1.90078, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.2e-05  6.04e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.99e-07  6.04e-06         1
         *Z       ---       ---  3.88e+25
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 6.03991e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  3.80473e-18  1.17584e-18  3.35277e-20   2.3944e-19  6.92801e-21  9.75242e-21  6.48272e-25  6.19318e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.69717, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 800 K
            Well    Collision, 1/sec
              W1          7.3851e+08
      global relaxation matrix dimension = 335
      setting global matrices ... done, cpu time[sec] = 0.23357, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.14459, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            12943.6      2858.88      825.105      966.567      114.323      11409.2      1508.57      11.6259
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.69712, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.15432, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.87835, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.39911e-06  7.39914e-06   3.3126e-06
      low eigenvalue method done, cpu time[sec] = 1.89262, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   7.4e-06  3.31e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.06e-07  3.31e-06         1
         *Z       ---       ---  3.88e+25
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.31259e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.22413e-18  5.45563e-19  1.56794e-20  9.28442e-20  2.93326e-21   9.2979e-21  6.52851e-25  6.19326e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.70612, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 800 K
            Well    Collision, 1/sec
              W1         1.23085e+09
      global relaxation matrix dimension = 335
      setting global matrices ... done, cpu time[sec] = 0.233054, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.14758, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            7766.16      1715.33      495.063       579.94      68.5941      6845.55      905.143      6.97553
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.69918, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.154457, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.88155, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.73996e-06  5.73997e-06  2.38473e-06
      low eigenvalue method done, cpu time[sec] = 1.89571, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.74e-06  2.38e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.66e-07  2.38e-06         1
         *Z       ---       ---  3.88e+25
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.38472e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.64005e-18  3.61046e-19  1.06997e-20  5.84593e-20  1.92396e-21  8.64463e-21  6.57492e-25  6.19338e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.71211, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 800 K
            Well    Collision, 1/sec
              W1         1.72319e+09
      global relaxation matrix dimension = 335
      setting global matrices ... done, cpu time[sec] = 0.234063, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.15529, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            5547.25      1225.24      353.616      414.243      48.9958      4889.68       646.53      4.98252
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.701, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.154827, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.88305, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.80052e-06  4.80053e-06   1.8852e-06
      low eigenvalue method done, cpu time[sec] = 1.89709, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   4.8e-06  1.89e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.87e-07  1.89e-06         1
         *Z       ---       ---  3.88e+25
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.8852e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0   1.3147e-18  2.69874e-19  8.21585e-21  4.26663e-20  1.44225e-21  8.05218e-21  6.62102e-25   6.1935e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.72143, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 800 K
            Well    Collision, 1/sec
              W1         2.21553e+09
      global relaxation matrix dimension = 335
      setting global matrices ... done, cpu time[sec] = 0.23324, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.15709, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            4314.53      952.961      275.035      322.189      38.1078      3803.08      502.857       3.8753
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.70201, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.15495, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.88435, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.17484e-06  4.17485e-06   1.5659e-06
      low eigenvalue method done, cpu time[sec] = 1.89822, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.17e-06  1.57e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.35e-07  1.57e-06         1
         *Z       ---       ---  3.88e+25
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.56589e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.10242e-18  2.15006e-19  6.69712e-21  3.35233e-20   1.1559e-21  7.53706e-21  6.66617e-25  6.19361e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.72324, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 800 K
            Well    Collision, 1/sec
              W1          2.4617e+09
      global relaxation matrix dimension = 335
      setting global matrices ... done, cpu time[sec] = 0.232885, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.15234, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            3883.08      857.665      247.531       289.97       34.297      3422.77      452.571      3.48777
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.70383, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.154785, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.88591, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.93118e-06  3.93119e-06  1.44491e-06
      low eigenvalue method done, cpu time[sec] = 1.89976, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.93e-06  1.44e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.15e-07  1.44e-06         1
         *Z       ---       ---  3.88e+25
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.44491e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.02106e-18  1.94971e-19  6.13549e-21  3.02507e-20  1.05173e-21  7.30557e-21  6.68825e-25  6.19367e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.71922, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 800 K
            Well    Collision, 1/sec
              W1         3.69255e+09
      global relaxation matrix dimension = 335
      setting global matrices ... done, cpu time[sec] = 0.233978, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.15334, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2588.72      571.776      165.021      193.313      22.8647      2281.85      301.714      2.32518
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.70619, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.15494, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.88792, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.09147e-06  3.09147e-06   1.0448e-06
      low eigenvalue method done, cpu time[sec] = 1.9021, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.09e-06  1.04e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.46e-07  1.04e-06         1
         *Z       ---       ---  3.88e+25
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.0448e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  7.48111e-19  1.31956e-19  4.33168e-21  2.01808e-20  7.24136e-22  6.35122e-21  6.79222e-25  6.19395e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.72418, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 800 K
            Well    Collision, 1/sec
              W1          4.9234e+09
      global relaxation matrix dimension = 335
      setting global matrices ... done, cpu time[sec] = 0.233399, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.15989, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1941.54      428.832      123.766      144.985      17.1485      1711.39      226.286      1.74388
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.70813, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.154936, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.89061, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.58455e-06  2.58455e-06  8.18079e-07
      low eigenvalue method done, cpu time[sec] = 1.90543, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.58e-06  8.18e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.04e-07  8.18e-07         1
         *Z       ---       ---  3.88e+25
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 8.18078e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  5.90606e-19  9.86873e-20  3.34586e-21  1.49967e-20   5.5014e-22  5.63772e-21  6.88382e-25  6.19424e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.73653, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 800 K
            Well    Collision, 1/sec
              W1         6.15425e+09
      global relaxation matrix dimension = 335
      setting global matrices ... done, cpu time[sec] = 0.2347, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.16752, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1553.23      343.066      99.0126      115.988      13.7188      1369.11      181.029      1.39511
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.70962, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.153962, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.89086, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.23826e-06  2.23826e-06  6.70905e-07
      low eigenvalue method done, cpu time[sec] = 1.90573, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.24e-06  6.71e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.76e-07  6.71e-07         1
         *Z       ---       ---  3.88e+25
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 6.70904e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  4.87157e-19  7.81642e-20     2.72e-21  1.18416e-20  4.41817e-22  5.08015e-21  6.96233e-25  6.19452e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.74647, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 800 K
            Well    Collision, 1/sec
              W1          7.3851e+09
      global relaxation matrix dimension = 335
      setting global matrices ... done, cpu time[sec] = 0.235151, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.16732, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1294.36      285.888      82.5105      96.6567      11.4323      1140.92      150.857      1.16259
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.70777, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.156396, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.89081, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   1.9837e-06   1.9837e-06  5.67303e-07
      low eigenvalue method done, cpu time[sec] = 1.90565, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.98e-06  5.67e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.56e-07  5.67e-07         1
         *Z       ---       ---  3.88e+25
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 5.67302e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0   4.1372e-19  6.42776e-20  2.28609e-21  9.72406e-21  3.67813e-22  4.62978e-21   7.0281e-25  6.19481e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.74771, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 800 K
            Well    Collision, 1/sec
              W1         8.61595e+09
      global relaxation matrix dimension = 335
      setting global matrices ... done, cpu time[sec] = 0.234931, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.20234, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1109.45      245.047      70.7233      82.8486      9.79915      977.935      129.306     0.996505
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.70433, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.154538, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.88559, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   1.7872e-06   1.7872e-06  4.90302e-07
      low eigenvalue method done, cpu time[sec] = 1.89947, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.79e-06   4.9e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.4e-07   4.9e-07         1
         *Z       ---       ---  3.88e+25
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 4.90301e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  3.58788e-19  5.42836e-20  1.96715e-21  8.20806e-21  3.14051e-22  4.25676e-21  7.08195e-25  6.19509e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.77231, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 800 K
            Well    Collision, 1/sec
              W1          9.8468e+09
      global relaxation matrix dimension = 335
      setting global matrices ... done, cpu time[sec] = 0.233316, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.16871, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             970.77      214.416      61.8829      72.4925      8.57426      855.693      113.143     0.871942
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.70126, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.154747, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.8832, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   1.6301e-06   1.6301e-06  4.30789e-07
      low eigenvalue method done, cpu time[sec] = 1.89713, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.63e-06  4.31e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.27e-07  4.31e-07         1
         *Z       ---       ---  3.88e+25
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 4.30788e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  3.16114e-19  4.67654e-20  1.72274e-21  7.07157e-21  2.73244e-22  3.94173e-21  7.12493e-25  6.19538e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.73553, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 900 K
      Energy reference = 41798 1/cm
      Energy step      = 155 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -82.6 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.006975
         W1 Well: collisional kernel bandwidth = 50
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.286122
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.145144
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.152081
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.607283
         W1 Well: minimal relaxation eigenvalue = 0.0653567
         W1 Well: maximal relaxation eigenvalue = 0.982329
         W1 Well:       grid size = 320
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -7802 1/cm
         B1 Barrier:        grid size = 270
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -52 1/cm
         B2 Barrier:        grid size = 269
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 103 1/cm
         B3 Barrier:        grid size = 300
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4702 1/cm
         B4 Barrier:        grid size = 310
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6252 1/cm
         B5 Barrier: nonpositive number of states at -23147 1/cm => truncating
         B5 Barrier:        grid size = 419
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23146 1/cm
         B6 Barrier:        grid size = 260
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1497 1/cm
         B7 Barrier:        grid size = 240
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4597 1/cm
         B8 Barrier:        grid size = 162
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16687 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.54085, elapsed time[sec] = 0
      B5 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 320
      MasterEquation::Barrier::truncate: real weight = 6.29584e+33
      MasterEquation::Barrier::truncate: effective weight = 4.44632e+30
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1  -7802  -7802 1.01e+09 4.91e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -52 1.88e+16
         B2    104 4.53e+15
         B3  -4702 1.35e+15
         B4  -6252 1.55e+15
         B5  -7802 1.87e+14
         B6   1498 1.78e+16
         B7   4598 2.53e+15
         B8  16688 2.47e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1   1.9e-11  3.28e-11  1.71e-13  1.36e-14  7.08e-27  3.74e-09  1.73e-06  3.11e+03
          R  5.27e+10         1      1.73   0.00898  0.000718  3.73e-16       197  9.11e+04  1.64e+14
         P1  3.05e+10     0.579         1    0.0052  0.000416  2.16e-16       114  5.28e+04  9.48e+13
         P2  5.86e+12       111       192         1    0.0799  4.15e-14  2.19e+04  1.01e+07  1.82e+16
         P3  7.34e+13  1.39e+03  2.41e+03      12.5         1  5.19e-13  2.74e+05  1.27e+08  2.28e+17
         P4  1.41e+26  2.68e+15  4.63e+15  2.41e+13  1.93e+12         1  5.29e+17  2.45e+20  4.39e+29
         P5  2.67e+08   0.00508   0.00877  4.56e-05  3.64e-06  1.89e-18         1       463  8.31e+11
         P6  5.78e+05   1.1e-05  1.89e-05  9.86e-08  7.87e-09  4.09e-21   0.00216         1   1.8e+09
         P7  0.000322  6.11e-15  1.06e-14  5.49e-17  4.39e-18  2.28e-30   1.2e-12  5.57e-10         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  7.84e-05  0.000135  7.04e-07  5.62e-08  2.92e-20    0.0154      7.14  1.28e+10
          R  1.28e+04         1      1.73   0.00898  0.000718  3.73e-16       197  9.11e+04  1.64e+14
         P1  7.39e+03     0.579         1    0.0052  0.000416  2.16e-16       114  5.28e+04  9.48e+13
         P2  1.42e+06       111       192         1    0.0799  4.15e-14  2.19e+04  1.01e+07  1.82e+16
         P3  1.78e+07  1.39e+03  2.41e+03      12.5         1  5.19e-13  2.74e+05  1.27e+08  2.28e+17
         P4  3.42e+19  2.68e+15  4.63e+15  2.41e+13  1.93e+12         1  5.29e+17  2.45e+20  4.39e+29
         P5      64.8   0.00508   0.00877  4.56e-05  3.64e-06  1.89e-18         1       463  8.31e+11
         P6      0.14   1.1e-05  1.89e-05  9.86e-08  7.87e-09  4.09e-21   0.00216         1   1.8e+09
         P7   7.8e-11  6.11e-15  1.06e-14  5.49e-17  4.39e-18  2.28e-30   1.2e-12  5.57e-10         1
   MasterEquation::set:  done, cpu time[sec] = 1.55504, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 900 K
            Well    Collision, 1/sec
              W1          2.2804e+08
      global relaxation matrix dimension = 320
      setting global matrices ... done, cpu time[sec] = 0.213006, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.78015, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            50409.8      12112.5      3602.51      4159.55       501.61      47597.1      6766.39      66.0266
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.49898, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.139896, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.66425, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.73575e-05  2.73579e-05  1.51301e-05
      low eigenvalue method done, cpu time[sec] = 1.67727, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.74e-05  1.51e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.22e-06  1.51e-05         1
         *Z       ---       ---  5.19e+24
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.51299e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.55351e-15  1.90036e-15  5.53538e-16  1.58841e-17  1.09015e-16  3.21137e-18  6.30282e-18  8.57656e-22  9.38852e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.06699, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 900 K
            Well    Collision, 1/sec
              W1         6.84119e+08
      global relaxation matrix dimension = 320
      setting global matrices ... done, cpu time[sec] = 0.212731, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.78593, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            16803.3      4037.49      1200.84      1386.52      167.203      15865.7      2255.46      22.0089
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.50288, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.139848, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.66805, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.78748e-05   1.7875e-05  8.89641e-06
      low eigenvalue method done, cpu time[sec] = 1.68096, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.79e-05   8.9e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.42e-06   8.9e-06         1
         *Z       ---       ---  5.19e+24
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 8.89634e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  1.55431e-15  1.18663e-15  2.73967e-16  8.04306e-18  4.56703e-17   1.4738e-18  6.12681e-18  8.63383e-22  9.38866e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.07371, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 900 K
            Well    Collision, 1/sec
              W1          1.1402e+09
      global relaxation matrix dimension = 320
      setting global matrices ... done, cpu time[sec] = 0.212827, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.79859, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
              10082       2422.5      720.501       831.91      100.322      9519.41      1353.28      13.2053
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.51895, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.139365, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.68399, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   1.4252e-05  1.42521e-05   6.6489e-06
      low eigenvalue method done, cpu time[sec] = 1.69684, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.43e-05  6.65e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.12e-06  6.65e-06         1
         *Z       ---       ---  5.19e+24
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 6.64886e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  1.11022e-15  9.07081e-16  1.87866e-16  5.72228e-18  2.99527e-17  1.00838e-18  5.80193e-18  8.69093e-22  9.38883e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.10298, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 900 K
            Well    Collision, 1/sec
              W1         1.59628e+09
      global relaxation matrix dimension = 320
      setting global matrices ... done, cpu time[sec] = 0.213014, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.79707, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             7201.4      1730.35      514.644      594.221      71.6585      6799.58      966.627      9.43237
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.49302, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.139415, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.65752, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.21429e-05   1.2143e-05  5.39745e-06
      low eigenvalue method done, cpu time[sec] = 1.67057, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.21e-05   5.4e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.51e-07   5.4e-06         1
         *Z       ---       ---  5.19e+24
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 5.39742e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  8.88178e-16   7.4602e-16  1.44037e-16   4.5242e-18  2.24958e-17  7.78604e-19     5.49e-18  8.74705e-22  9.38899e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.0756, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 900 K
            Well    Collision, 1/sec
              W1         2.05236e+09
      global relaxation matrix dimension = 320
      setting global matrices ... done, cpu time[sec] = 0.213662, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.794, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            5601.09      1345.83      400.278      462.172      55.7344      5288.56      751.821      7.33629
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.50605, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.138782, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.67012, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.07106e-05  1.07107e-05   4.5774e-06
      low eigenvalue method done, cpu time[sec] = 1.68311, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.07e-05  4.58e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.34e-07  4.58e-06         1
         *Z       ---       ---  5.19e+24
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 4.57738e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  7.77156e-16  6.38294e-16   1.1707e-16  3.77281e-18  1.80741e-17  6.38554e-19   5.2094e-18  8.80163e-22  9.38916e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.08767, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 900 K
            Well    Collision, 1/sec
              W1          2.2804e+09
      global relaxation matrix dimension = 320
      setting global matrices ... done, cpu time[sec] = 0.214556, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.79322, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            5040.98      1211.25      360.251      415.955       50.161      4759.71      676.639      6.60266
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.49633, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.139637, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.66122, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.01461e-05  1.01461e-05  4.26176e-06
      low eigenvalue method done, cpu time[sec] = 1.67407, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.01e-05  4.26e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.89e-07  4.26e-06         1
         *Z       ---       ---  5.19e+24
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 4.26174e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  7.77156e-16  5.96353e-16  1.07083e-16  3.49039e-18  1.64669e-17  5.86784e-19  5.08079e-18  8.82822e-22  9.38924e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.07713, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 900 K
            Well    Collision, 1/sec
              W1         3.42059e+09
      global relaxation matrix dimension = 320
      setting global matrices ... done, cpu time[sec] = 0.213099, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.799, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            3360.65      807.498      240.167      277.303      33.4407      3173.14      451.093      4.40177
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.49909, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.139528, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.66366, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.16729e-06  8.16732e-06  3.19413e-06
      low eigenvalue method done, cpu time[sec] = 1.67661, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.17e-06  3.19e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.29e-07  3.19e-06         1
         *Z       ---       ---  5.19e+24
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.19412e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  5.55112e-16  4.52456e-16  7.50346e-17  2.56219e-18  1.14137e-17  4.20252e-19  4.53538e-18  8.95303e-22  9.38965e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.08361, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 900 K
            Well    Collision, 1/sec
              W1         4.56079e+09
      global relaxation matrix dimension = 320
      setting global matrices ... done, cpu time[sec] = 0.213463, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.79727, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2520.49      605.624      180.125      207.977      25.0805      2379.85      338.319      3.30133
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.50125, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.139649, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.66592, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.94374e-06  6.94375e-06  2.56878e-06
      low eigenvalue method done, cpu time[sec] = 1.67885, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.94e-06  2.57e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.32e-07  2.57e-06         1
         *Z       ---       ---  5.19e+24
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.56878e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  4.44089e-16  3.66644e-16  5.75958e-17  2.03717e-18  8.72599e-18  3.28744e-19  4.11201e-18  9.06312e-22  9.39006e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.08546, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 900 K
            Well    Collision, 1/sec
              W1         5.70099e+09
      global relaxation matrix dimension = 320
      setting global matrices ... done, cpu time[sec] = 0.212688, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.80763, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2016.39      484.499        144.1      166.382      20.0644      1903.88      270.656      2.64106
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.50893, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.138804, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.67287, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   6.0928e-06  6.09281e-06  2.15239e-06
      low eigenvalue method done, cpu time[sec] = 1.68631, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.09e-06  2.15e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.64e-07  2.15e-06         1
         *Z       ---       ---  5.19e+24
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.15239e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  3.33067e-16  3.08842e-16  4.65836e-17  1.69493e-18  7.04858e-18  2.70264e-19   3.7717e-18  9.15831e-22  9.39047e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.10497, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 900 K
            Well    Collision, 1/sec
              W1         6.84119e+09
      global relaxation matrix dimension = 320
      setting global matrices ... done, cpu time[sec] = 0.214172, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.80911, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1680.33      403.749      120.084      138.652      16.7203      1586.57      225.546      2.20089
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.50291, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.139907, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.66864, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.45826e-06  5.45827e-06  1.85311e-06
      low eigenvalue method done, cpu time[sec] = 1.68219, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.46e-06  1.85e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.14e-07  1.85e-06         1
         *Z       ---       ---  5.19e+24
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.85311e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  3.33067e-16  2.66953e-16  3.89877e-17  1.45244e-18  5.89932e-18  2.29443e-19  3.49047e-18  9.23928e-22  9.39088e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.1047, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 900 K
            Well    Collision, 1/sec
              W1         7.98138e+09
      global relaxation matrix dimension = 320
      setting global matrices ... done, cpu time[sec] = 0.213758, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.81304, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1440.28      346.071      102.929      118.844      14.3317      1359.92      193.325      1.88647
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.50679, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.139195, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.67146, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.96255e-06  4.96255e-06   1.6267e-06
      low eigenvalue method done, cpu time[sec] = 1.68499, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.96e-06  1.63e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.76e-07  1.63e-06         1
         *Z       ---       ---  5.19e+24
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.6267e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  3.33067e-16  2.35064e-16  3.34306e-17  1.27088e-18  5.06192e-18  1.99239e-19  3.25301e-18   9.3071e-22  9.39129e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.10994, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 900 K
            Well    Collision, 1/sec
              W1         9.12158e+09
      global relaxation matrix dimension = 320
      setting global matrices ... done, cpu time[sec] = 0.213177, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.80636, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1260.24      302.812      90.0626      103.989      12.5402      1189.93       169.16      1.65067
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.50122, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.139747, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.66668, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.56215e-06  4.56215e-06  1.44899e-06
      low eigenvalue method done, cpu time[sec] = 1.67983, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.56e-06  1.45e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.44e-07  1.45e-06         1
         *Z       ---       ---  5.19e+24
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.44898e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16   2.0991e-16  2.91896e-17  1.12948e-18  4.42443e-18  1.75943e-19  3.04907e-18  9.36296e-22  9.39171e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.09861, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 1000 K
      Energy reference = 44578 1/cm
      Energy step      = 172 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -81.1 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.006682
         W1 Well: collisional kernel bandwidth = 49
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.271555
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.135214
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.115268
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.555692
         W1 Well: minimal relaxation eigenvalue = 0.0619885
         W1 Well: maximal relaxation eigenvalue = 0.984589
         W1 Well:       grid size = 309
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -8570 1/cm
         B1 Barrier:        grid size = 260
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -141 1/cm
         B2 Barrier:        grid size = 258
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 201 1/cm
         B3 Barrier:        grid size = 286
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4614 1/cm
         B4 Barrier:        grid size = 296
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6334 1/cm
         B5 Barrier: nonpositive number of states at -23706 1/cm => truncating
         B5 Barrier:        grid size = 397
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23706 1/cm
         B6 Barrier:        grid size = 251
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1405 1/cm
         B7 Barrier:        grid size = 232
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4674 1/cm
         B8 Barrier:        grid size = 162
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16714 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.41629, elapsed time[sec] = 0
      B5 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 309
      MasterEquation::Barrier::truncate: real weight = 6.09148e+32
      MasterEquation::Barrier::truncate: effective weight = 4.77383e+29
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1  -8570  -8570 7.73e+08 7.27e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -141 3.27e+16
         B2    202  8.5e+15
         B3  -4614 2.62e+15
         B4  -6334 2.98e+15
         B5  -8570 3.66e+14
         B6   1406  3.3e+16
         B7   4675 5.02e+15
         B8  16714 5.99e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  7.32e-12  1.26e-11  1.36e-13  1.42e-14  1.38e-25  1.09e-09  3.15e-07      89.8
          R  1.37e+11         1      1.72    0.0186   0.00194  1.89e-14       149   4.3e+04  1.23e+13
         P1  7.94e+10     0.582         1    0.0108   0.00113   1.1e-14      86.9   2.5e+04  7.13e+12
         P2  7.33e+12      53.7      92.3         1     0.104  1.01e-12  8.01e+03  2.31e+06  6.58e+14
         P3  7.03e+13       515       885      9.59         1  9.73e-12  7.69e+04  2.22e+07  6.31e+15
         P4  7.22e+24  5.29e+13  9.09e+13  9.86e+11  1.03e+11         1   7.9e+15  2.28e+18  6.49e+26
         P5  9.14e+08    0.0067    0.0115  0.000125   1.3e-05  1.27e-16         1       288  8.21e+10
         P6  3.17e+06  2.32e-05  3.99e-05  4.33e-07  4.51e-08  4.39e-19   0.00347         1  2.85e+08
         P7    0.0111  8.15e-14   1.4e-13  1.52e-15  1.58e-16  1.54e-27  1.22e-11  3.51e-09         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  4.52e-07  7.78e-07  8.43e-09  8.79e-10  8.55e-21  6.76e-05    0.0195  5.55e+06
          R  2.21e+06         1      1.72    0.0186   0.00194  1.89e-14       149   4.3e+04  1.23e+13
         P1  1.29e+06     0.582         1    0.0108   0.00113   1.1e-14      86.9   2.5e+04  7.13e+12
         P2  1.19e+08      53.7      92.3         1     0.104  1.01e-12  8.01e+03  2.31e+06  6.58e+14
         P3  1.14e+09       515       885      9.59         1  9.73e-12  7.69e+04  2.22e+07  6.31e+15
         P4  1.17e+20  5.29e+13  9.09e+13  9.86e+11  1.03e+11         1   7.9e+15  2.28e+18  6.49e+26
         P5  1.48e+04    0.0067    0.0115  0.000125   1.3e-05  1.27e-16         1       288  8.21e+10
         P6      51.4  2.32e-05  3.99e-05  4.33e-07  4.51e-08  4.39e-19   0.00347         1  2.85e+08
         P7   1.8e-07  8.15e-14   1.4e-13  1.52e-15  1.58e-16  1.54e-27  1.22e-11  3.51e-09         1
   MasterEquation::set:  done, cpu time[sec] = 1.42985, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 1000 K
            Well    Collision, 1/sec
              W1         2.12966e+08
      global relaxation matrix dimension = 309
      setting global matrices ... done, cpu time[sec] = 0.200207, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.58219, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            63357.5      16475.4      5073.71      5782.85      709.628      63837.6      9728.18      116.027
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.35324, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.129918, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.50688, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.61918e-05  4.61931e-05  2.72357e-05
      low eigenvalue method done, cpu time[sec] = 1.51916, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.62e-05  2.72e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.62e-06  2.72e-05         1
         *Z       ---       ---  1.12e+24
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.72349e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  3.45501e-13  2.57255e-13  7.10963e-14  2.06066e-15   1.3657e-14  4.08881e-16  1.06502e-15  2.60906e-19  2.02544e-28

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 4.67112, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 1000 K
            Well    Collision, 1/sec
              W1         6.38899e+08
      global relaxation matrix dimension = 309
      setting global matrices ... done, cpu time[sec] = 0.199294, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.54209, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            21119.2      5491.79      1691.24      1927.62      236.543      21279.2      3242.73      38.6757
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.35149, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.128717, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.50373, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.15833e-05  3.15838e-05  1.69592e-05
      low eigenvalue method done, cpu time[sec] = 1.51621, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.16e-05   1.7e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.42e-06   1.7e-05         1
         *Z       ---       ---  1.12e+24
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.69589e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.15161e-13  1.69552e-13  3.71426e-14  1.11494e-15  6.10373e-15  2.00737e-16  1.05092e-15  2.62554e-19  2.02547e-28

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 4.6259, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 1000 K
            Well    Collision, 1/sec
              W1         1.06483e+09
      global relaxation matrix dimension = 309
      setting global matrices ... done, cpu time[sec] = 0.198937, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.54907, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            12671.5      3295.07      1014.74      1156.57      141.926      12767.5      1945.64      23.2054
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.35258, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.131665, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.00589, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.57612e-05  2.57616e-05  1.30737e-05
      low eigenvalue method done, cpu time[sec] = 2.01856, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.58e-05  1.31e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.96e-06  1.31e-05         1
         *Z       ---       ---  1.12e+24
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.30735e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  1.65867e-13  1.33511e-13  2.62418e-14  8.21333e-16  4.14258e-15  1.42297e-16  1.00959e-15  2.64171e-19  2.02551e-28

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.1377, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 1000 K
            Well    Collision, 1/sec
              W1         1.49076e+09
      global relaxation matrix dimension = 309
      setting global matrices ... done, cpu time[sec] = 0.198942, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.5574, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            9051.07      2353.62      724.816      826.122      101.375      9119.66      1389.74      16.5753
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.3609, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.128402, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.51313, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.22943e-05  2.22945e-05  1.08492e-05
      low eigenvalue method done, cpu time[sec] = 1.5256, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.23e-05  1.08e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.68e-06  1.08e-05         1
         *Z       ---       ---  1.12e+24
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.0849e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  1.37668e-13  1.12158e-13  2.05549e-14  6.65436e-16  3.18718e-15  1.12637e-16  9.67247e-16  2.65745e-19  2.02554e-28

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 4.65085, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 1000 K
            Well    Collision, 1/sec
              W1          1.9167e+09
      global relaxation matrix dimension = 309
      setting global matrices ... done, cpu time[sec] = 0.19953, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.55604, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            7039.72       1830.6      563.746      642.539      78.8476      7093.07      1080.91      12.8919
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.3605, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.128114, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.51238, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.99016e-05  1.99017e-05  9.36125e-06
      low eigenvalue method done, cpu time[sec] = 1.52462, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.99e-05  9.36e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.49e-06  9.36e-06         1
         *Z       ---       ---  1.12e+24
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 9.36116e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  1.18794e-13  9.75797e-14  1.69914e-14  5.65597e-16   2.6094e-15  9.41837e-17  9.27809e-16  2.67266e-19  2.02558e-28

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 4.65011, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 1000 K
            Well    Collision, 1/sec
              W1         2.12966e+09
      global relaxation matrix dimension = 309
      setting global matrices ... done, cpu time[sec] = 0.199468, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.55447, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            6335.75      1647.54      507.371      578.285      70.9628      6383.76      972.818      11.6027
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.36022, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.128631, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.51283, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   1.8949e-05  1.89492e-05  8.78101e-06
      low eigenvalue method done, cpu time[sec] = 1.52549, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.89e-05  8.78e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.42e-06  8.78e-06         1
         *Z       ---       ---  1.12e+24
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 8.78094e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  1.11355e-13  9.18295e-14  1.56561e-14  5.27568e-16  2.39672e-15  8.72719e-17  9.09386e-16  2.68005e-19  2.02559e-28

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 4.64885, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 1000 K
            Well    Collision, 1/sec
              W1          3.1945e+09
      global relaxation matrix dimension = 309
      setting global matrices ... done, cpu time[sec] = 0.200171, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.55594, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            4223.83      1098.36      338.248      385.523      47.3086      4255.84      648.545      7.73514
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.36301, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.129122, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.51602, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.55623e-05  1.55624e-05  6.78122e-06
      low eigenvalue method done, cpu time[sec] = 1.52853, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.56e-05  6.78e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.15e-06  6.78e-06         1
         *Z       ---       ---  1.12e+24
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 6.78117e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  8.60423e-14  7.17266e-14  1.12984e-14  4.00152e-16  1.71589e-15  6.46154e-17  8.29152e-16  2.71464e-19  2.02568e-28

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 4.65304, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 1000 K
            Well    Collision, 1/sec
              W1         4.25933e+09
      global relaxation matrix dimension = 309
      setting global matrices ... done, cpu time[sec] = 0.198932, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.55831, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            3167.87      823.768      253.686      289.143      35.4814      3191.88      486.409      5.80135
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.35821, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.128714, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.51046, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.34253e-05  1.34254e-05  5.57715e-06
      low eigenvalue method done, cpu time[sec] = 1.52289, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.34e-05  5.58e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.89e-07  5.58e-06         1
         *Z       ---       ---  1.12e+24
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 5.57712e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  7.07212e-14  5.94054e-14   8.8667e-15     3.26e-16  1.34383e-15  5.18101e-17  7.64717e-16  2.74519e-19  2.02576e-28

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 4.649, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 1000 K
            Well    Collision, 1/sec
              W1         5.32416e+09
      global relaxation matrix dimension = 309
      setting global matrices ... done, cpu time[sec] = 0.198174, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.55883, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             2534.3      659.014      202.949      231.314      28.3851      2553.51      389.127      4.64108
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.36336, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.128692, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.51581, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.19163e-05  1.19163e-05  4.75821e-06
      low eigenvalue method done, cpu time[sec] = 1.52885, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.19e-05  4.76e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.74e-07  4.76e-06         1
         *Z       ---       ---  1.12e+24
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 4.75819e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  6.03961e-14  5.09292e-14  7.30078e-15  2.76583e-16   1.1067e-15   4.3446e-17  7.11615e-16   2.7718e-19  2.02584e-28

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 4.65652, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 1000 K
            Well    Collision, 1/sec
              W1         6.38899e+09
      global relaxation matrix dimension = 309
      setting global matrices ... done, cpu time[sec] = 0.199506, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.55627, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2111.92      549.179      169.124      192.762      23.6543      2127.92      324.273      3.86757
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.37429, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.127788, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.52575, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   1.0777e-05  1.07771e-05  4.15925e-06
      low eigenvalue method done, cpu time[sec] = 1.53893, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.08e-05  4.16e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.87e-07  4.16e-06         1
         *Z       ---       ---  1.12e+24
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 4.15923e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  5.27356e-14  4.46794e-14  6.20306e-15   2.4093e-16  9.41402e-16  3.75017e-17  6.66846e-16  2.79473e-19  2.02593e-28

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 4.6674, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 1000 K
            Well    Collision, 1/sec
              W1         7.45382e+09
      global relaxation matrix dimension = 309
      setting global matrices ... done, cpu time[sec] = 0.200565, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.56793, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1810.21      470.725      144.963      165.224      20.2751      1823.93      277.948      3.31506
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.36602, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.12839, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.51797, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.87784e-06  9.87788e-06  3.69934e-06
      low eigenvalue method done, cpu time[sec] = 1.53186, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.88e-06   3.7e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.19e-07   3.7e-06         1
         *Z       ---       ---  1.12e+24
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.69933e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  4.69624e-14   3.9851e-14  5.38878e-15  2.13818e-16  8.19166e-16  3.30354e-17  6.28406e-16  2.81429e-19  2.02601e-28

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 4.67324, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 1000 K
            Well    Collision, 1/sec
              W1         8.51866e+09
      global relaxation matrix dimension = 309
      setting global matrices ... done, cpu time[sec] = 0.200455, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.56646, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1583.94      411.884      126.843      144.571      17.7407      1595.94      243.204      2.90068
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.35756, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.128056, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.50921, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.14502e-06  9.14505e-06  3.33364e-06
      low eigenvalue method done, cpu time[sec] = 1.52239, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.15e-06  3.33e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.63e-07  3.33e-06         1
         *Z       ---       ---  1.12e+24
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.33363e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  4.22995e-14  3.59929e-14  4.75976e-15  1.92414e-16  7.24898e-16   2.9544e-17  5.94912e-16  2.83078e-19   2.0261e-28

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 4.6897, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1100 K
      Energy reference = 47358 1/cm
      Energy step      = 190 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -79.4 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.006455
         W1 Well: collisional kernel bandwidth = 48
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.2561
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.126179
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.123979
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.51639
         W1 Well: minimal relaxation eigenvalue = 0.0588886
         W1 Well: maximal relaxation eigenvalue = 0.985743
         W1 Well:       grid size = 298
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -9262 1/cm
         B1 Barrier:        grid size = 250
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -141 1/cm
         B2 Barrier:        grid size = 249
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 48 1/cm
         B3 Barrier:        grid size = 274
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4701 1/cm
         B4 Barrier:        grid size = 282
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6222 1/cm
         B5 Barrier: nonpositive number of states at -23702 1/cm => truncating
         B5 Barrier:        grid size = 374
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23701 1/cm
         B6 Barrier:        grid size = 242
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1378 1/cm
         B7 Barrier:        grid size = 225
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4608 1/cm
         B8 Barrier:        grid size = 161
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16768 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.35872, elapsed time[sec] = 0
      B5 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 298
      MasterEquation::Barrier::truncate: real weight = 9.85019e+31
      MasterEquation::Barrier::truncate: effective weight = 8.52734e+28
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1  -9262  -9262 6.02e+08 1.06e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -141 5.49e+16
         B2     49 1.54e+16
         B3  -4701 4.92e+15
         B4  -6222 5.55e+15
         B5  -9262 6.92e+14
         B6   1379 5.87e+16
         B7   4609 9.56e+15
         B8  16769 1.36e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  2.78e-12  4.78e-12  9.37e-14  1.22e-14   1.3e-24  3.27e-10  6.39e-08      4.08
          R   3.6e+11         1      1.72    0.0337   0.00438  4.69e-13       118   2.3e+04  1.47e+12
         P1  2.09e+11     0.581         1    0.0196   0.00254  2.72e-13      68.3  1.34e+04  8.53e+11
         P2  1.07e+13      29.6        51         1      0.13  1.39e-11  3.49e+03  6.82e+05  4.35e+13
         P3  8.23e+13       229       393      7.71         1  1.07e-10  2.69e+04  5.26e+06  3.36e+14
         P4  7.68e+23  2.13e+12  3.67e+12   7.2e+10  9.34e+09         1  2.51e+14  4.91e+16  3.13e+24
         P5  3.06e+09    0.0085    0.0146  0.000287  3.72e-05  3.98e-15         1       196  1.25e+10
         P6  1.56e+07  4.35e-05  7.48e-05  1.47e-06   1.9e-07  2.04e-17   0.00511         1  6.38e+07
         P7     0.245  6.81e-13  1.17e-12   2.3e-14  2.98e-15  3.19e-25  8.01e-11  1.57e-08         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  6.72e-09  1.16e-08  2.27e-10  2.94e-11  3.15e-21  7.91e-07  0.000155  9.87e+03
          R  1.49e+08         1      1.72    0.0337   0.00438  4.69e-13       118   2.3e+04  1.47e+12
         P1  8.64e+07     0.581         1    0.0196   0.00254  2.72e-13      68.3  1.34e+04  8.53e+11
         P2  4.41e+09      29.6        51         1      0.13  1.39e-11  3.49e+03  6.82e+05  4.35e+13
         P3   3.4e+10       229       393      7.71         1  1.07e-10  2.69e+04  5.26e+06  3.36e+14
         P4  3.17e+20  2.13e+12  3.67e+12   7.2e+10  9.34e+09         1  2.51e+14  4.91e+16  3.13e+24
         P5  1.27e+06    0.0085    0.0146  0.000287  3.72e-05  3.98e-15         1       196  1.25e+10
         P6  6.47e+03  4.35e-05  7.48e-05  1.47e-06   1.9e-07  2.04e-17   0.00511         1  6.38e+07
         P7  0.000101  6.81e-13  1.17e-12   2.3e-14  2.98e-15  3.19e-25  8.01e-11  1.57e-08         1
   MasterEquation::set:  done, cpu time[sec] = 1.37215, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 1100 K
            Well    Collision, 1/sec
              W1         2.00195e+08
      global relaxation matrix dimension = 298
      setting global matrices ... done, cpu time[sec] = 0.185857, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.33167, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            77472.4      21694.5      6947.38      7826.53       975.67      82867.4      13487.5      191.778
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.22798, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.119444, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.36948, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.00192e-05  8.00232e-05  5.00288e-05
      low eigenvalue method done, cpu time[sec] = 1.38105, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0     8e-05     5e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.07e-06     5e-05         1
         *Z       ---       ---  3.02e+23
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 5.00263e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  1.79016e-11  1.34843e-11  3.55535e-12  1.04311e-13  6.69833e-13  2.03572e-14   6.8025e-14  2.71899e-17  1.05806e-25

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 4.24439, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 1100 K
            Well    Collision, 1/sec
              W1         6.00585e+08
      global relaxation matrix dimension = 298
      setting global matrices ... done, cpu time[sec] = 0.186571, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.32146, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            25824.1      7231.49      2315.79      2608.84      325.223      27622.5      4495.84      63.9259
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.23039, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.118259, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.37107, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.68807e-05  5.68825e-05  3.26898e-05
      low eigenvalue method done, cpu time[sec] = 1.38287, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.69e-05  3.27e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.23e-06  3.27e-05         1
         *Z       ---       ---  3.02e+23
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.26887e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  1.16974e-11  9.29813e-12   1.9451e-12  5.97083e-14  3.16361e-13  1.05863e-14  6.78407e-14  2.73514e-17  1.05808e-25

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 4.23535, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 1100 K
            Well    Collision, 1/sec
              W1         1.00097e+09
      global relaxation matrix dimension = 298
      setting global matrices ... done, cpu time[sec] = 0.185448, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.31943, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            15494.5      4338.89      1389.48      1565.31      195.134      16573.5       2697.5      38.3556
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.22887, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.118359, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.36968, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.73228e-05   4.7324e-05  2.58668e-05
      low eigenvalue method done, cpu time[sec] = 1.38138, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.73e-05  2.59e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.48e-06  2.59e-05         1
         *Z       ---       ---  3.02e+23
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.58662e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  9.25604e-12  7.50643e-12  1.40977e-12  4.53051e-14  2.21094e-13  7.73462e-15  6.58919e-14  2.75076e-17  1.05809e-25

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 4.2293, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 1100 K
            Well    Collision, 1/sec
              W1         1.40136e+09
      global relaxation matrix dimension = 298
      setting global matrices ... done, cpu time[sec] = 0.185718, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.31576, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            11067.5      3099.21      992.483      1118.08      139.381      11838.2      1926.79      27.3968
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.22822, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.118248, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.3686, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.15189e-05  4.15198e-05  2.18679e-05
      low eigenvalue method done, cpu time[sec] = 1.3806, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.15e-05  2.19e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.03e-06  2.19e-05         1
         *Z       ---       ---  3.02e+23
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.18674e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  7.82507e-12  6.41945e-12  1.12467e-12   3.7476e-14  1.73649e-13  6.25373e-15  6.37446e-14  2.76584e-17  1.05811e-25

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 4.22455, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 1100 K
            Well    Collision, 1/sec
              W1         1.80175e+09
      global relaxation matrix dimension = 298
      setting global matrices ... done, cpu time[sec] = 0.18554, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.32251, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            8608.05       2410.5      771.932      869.614      108.408      9207.49      1498.61      21.3086
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.22542, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.118327, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.36613, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.74569e-05  3.74576e-05  1.91464e-05
      low eigenvalue method done, cpu time[sec] = 1.37782, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.75e-05  1.91e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.72e-06  1.91e-05         1
         *Z       ---       ---  3.02e+23
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.9146e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1   6.8513e-12   5.6643e-12  9.43253e-13  3.23737e-14  1.44481e-13  5.31641e-15  6.16731e-14  2.78035e-17  1.05813e-25

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 4.22834, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 1100 K
            Well    Collision, 1/sec
              W1         2.00195e+09
      global relaxation matrix dimension = 298
      setting global matrices ... done, cpu time[sec] = 0.186233, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.348, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            7747.24      2169.45      694.738      782.653       97.567      8286.74      1348.75      19.1778
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.22545, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.118418, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.36589, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.58256e-05  3.58263e-05  1.80734e-05
      low eigenvalue method done, cpu time[sec] = 1.3774, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.58e-05  1.81e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.59e-06  1.81e-05         1
         *Z       ---       ---  3.02e+23
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.80731e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  6.46727e-12  5.36314e-12  8.74598e-13  3.04083e-14   1.3363e-13  4.96144e-15  6.06875e-14  2.78738e-17  1.05814e-25

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 4.25436, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 1100 K
            Well    Collision, 1/sec
              W1         3.00292e+09
      global relaxation matrix dimension = 298
      setting global matrices ... done, cpu time[sec] = 0.185232, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.32096, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            5164.83       1446.3      463.159      521.768      65.0447      5524.49      899.167      12.7852
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.22804, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.118004, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.36886, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.99526e-05   2.9953e-05  1.43158e-05
      low eigenvalue method done, cpu time[sec] = 1.38059, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0     3e-05  1.43e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.15e-06  1.43e-05         1
         *Z       ---       ---  3.02e+23
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.43155e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  5.12268e-12  4.29331e-12   6.4733e-13  2.37157e-14  9.83628e-14  3.77924e-15  5.62857e-14  2.82028e-17  1.05818e-25

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 4.23041, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 1100 K
            Well    Collision, 1/sec
              W1          4.0039e+09
      global relaxation matrix dimension = 298
      setting global matrices ... done, cpu time[sec] = 0.185857, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.3188, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            3873.62      1084.72      347.369      391.326      48.7835      4143.37      674.376      9.58889
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.22985, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.118568, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.37027, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    2.618e-05  2.61803e-05  1.19999e-05
      low eigenvalue method done, cpu time[sec] = 1.3821, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.62e-05   1.2e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.87e-06   1.2e-05         1
         *Z       ---       ---  3.02e+23
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.19998e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  4.29401e-12   3.6222e-12  5.17781e-13   1.9726e-14  7.86458e-14  3.09504e-15  5.26389e-14  2.84943e-17  1.05822e-25

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 4.23089, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 1100 K
            Well    Collision, 1/sec
              W1         5.00487e+09
      global relaxation matrix dimension = 298
      setting global matrices ... done, cpu time[sec] = 0.184458, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.31461, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             3098.9      867.779      277.895      313.061      39.0268      3314.69        539.5      7.67111
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.22857, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.117995, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.36904, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.34797e-05    2.348e-05  1.03963e-05
      low eigenvalue method done, cpu time[sec] = 1.38044, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.35e-05  1.04e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.66e-06  1.04e-05         1
         *Z       ---       ---  3.02e+23
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.03962e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  3.72014e-12  3.15218e-12   4.3296e-13  1.70173e-14  6.58547e-14  2.63983e-15  4.95654e-14  2.87504e-17  1.05826e-25

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 4.22236, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 1100 K
            Well    Collision, 1/sec
              W1         6.00585e+09
      global relaxation matrix dimension = 298
      setting global matrices ... done, cpu time[sec] = 0.186131, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.33025, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2582.41      723.149      231.579      260.884      32.5223      2762.25      449.584      6.39259
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.22731, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.117507, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.3672, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.14187e-05  2.14189e-05  9.20587e-06
      low eigenvalue method done, cpu time[sec] = 1.37926, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.14e-05  9.21e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.51e-06  9.21e-06         1
         *Z       ---       ---  3.02e+23
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 9.20578e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  3.29425e-12  2.80048e-12  3.72678e-13  1.50327e-14  5.68067e-14  2.31135e-15  4.69279e-14  2.89738e-17   1.0583e-25

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 4.23993, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 1100 K
            Well    Collision, 1/sec
              W1         7.00682e+09
      global relaxation matrix dimension = 298
      setting global matrices ... done, cpu time[sec] = 0.185601, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.32697, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             2213.5      619.842      198.497      223.615      27.8763      2367.64      385.357      5.47937
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.23379, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.118692, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.37469, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.97768e-05   1.9777e-05  8.28022e-06
      low eigenvalue method done, cpu time[sec] = 1.38676, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.98e-05  8.28e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.39e-06  8.28e-06         1
         *Z       ---       ---  3.02e+23
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 8.28015e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.96296e-12  2.52535e-12  3.27431e-13  1.35036e-14  5.00314e-14  2.06131e-15  4.46296e-14  2.91674e-17  1.05834e-25

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 4.24505, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 1100 K
            Well    Collision, 1/sec
              W1         8.00779e+09
      global relaxation matrix dimension = 298
      setting global matrices ... done, cpu time[sec] = 0.186477, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.32159, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1936.81      542.362      173.685      195.663      24.3917      2071.68      337.188      4.79444
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.23307, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.118125, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.37364, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   1.8428e-05  1.84281e-05    7.536e-06
      low eigenvalue method done, cpu time[sec] = 1.38598, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.84e-05  7.54e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.29e-06  7.54e-06         1
         *Z       ---       ---  3.02e+23
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 7.53595e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.69673e-12  2.30308e-12  2.92115e-13  1.22824e-14  4.47483e-14   1.8636e-15  4.26013e-14  2.93341e-17  1.05838e-25

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 4.23884, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1200 K
      Energy reference = 50138 1/cm
      Energy step      = 207 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -77.7 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.006311
         W1 Well: collisional kernel bandwidth = 48
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.247968
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.119139
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.110415
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.48833
         W1 Well: minimal relaxation eigenvalue = 0.056035
         W1 Well: maximal relaxation eigenvalue = 0.988612
         W1 Well:       grid size = 290
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -9891 1/cm
         B1 Barrier:        grid size = 243
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -162 1/cm
         B2 Barrier:        grid size = 242
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 44 1/cm
         B3 Barrier:        grid size = 265
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4716 1/cm
         B4 Barrier:        grid size = 273
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6373 1/cm
         B5 Barrier: nonpositive number of states at -23347 1/cm => truncating
         B5 Barrier:        grid size = 355
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23346 1/cm
         B6 Barrier:        grid size = 235
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1493 1/cm
         B7 Barrier:        grid size = 220
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4598 1/cm
         B8 Barrier:        grid size = 162
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16604 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.2996, elapsed time[sec] = 0
      B5 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 290
      MasterEquation::Barrier::truncate: real weight = 2.32674e+31
      MasterEquation::Barrier::truncate: effective weight = 2.19449e+28
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1  -9891  -9891 4.77e+08 1.53e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -162 8.95e+16
         B2     45 2.69e+16
         B3  -4716 8.98e+15
         B4  -6373    1e+16
         B5  -9891 1.27e+15
         B6   1494 1.01e+17
         B7   4599 1.75e+16
         B8  16604 2.91e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  1.08e-12  1.86e-12  5.93e-14  9.24e-15   7.3e-24  1.03e-10  1.45e-08     0.268
          R   9.3e+11         1      1.73    0.0551   0.00858  6.79e-12      95.4  1.35e+04   2.5e+11
         P1  5.37e+11     0.578         1    0.0319   0.00496  3.92e-12      55.1  7.81e+03  1.44e+11
         P2  1.69e+13      18.1      31.4         1     0.156  1.23e-10  1.73e+03  2.45e+05  4.53e+12
         P3  1.08e+14       116       202      6.42         1  7.91e-10  1.11e+04  1.57e+06  2.91e+13
         P4  1.37e+23  1.47e+11  2.55e+11  8.12e+09  1.26e+09         1  1.41e+13  1.99e+15  3.68e+22
         P5  9.74e+09    0.0105    0.0181  0.000578     9e-05  7.12e-14         1       142  2.62e+09
         P6  6.88e+07   7.4e-05  0.000128  4.08e-06  6.35e-07  5.03e-16   0.00706         1  1.85e+07
         P7      3.72  4.01e-12  6.93e-12  2.21e-13  3.44e-14  2.72e-23  3.82e-10  5.41e-08         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  2.03e-10  3.51e-10  1.12e-11  1.74e-12  1.38e-21  1.94e-08  2.74e-06      50.7
          R  4.92e+09         1      1.73    0.0551   0.00858  6.79e-12      95.4  1.35e+04   2.5e+11
         P1  2.85e+09     0.578         1    0.0319   0.00496  3.92e-12      55.1  7.81e+03  1.44e+11
         P2  8.93e+10      18.1      31.4         1     0.156  1.23e-10  1.73e+03  2.45e+05  4.53e+12
         P3  5.73e+11       116       202      6.42         1  7.91e-10  1.11e+04  1.57e+06  2.91e+13
         P4  7.25e+20  1.47e+11  2.55e+11  8.12e+09  1.26e+09         1  1.41e+13  1.99e+15  3.68e+22
         P5  5.16e+07    0.0105    0.0181  0.000578     9e-05  7.12e-14         1       142  2.62e+09
         P6  3.64e+05   7.4e-05  0.000128  4.08e-06  6.35e-07  5.03e-16   0.00706         1  1.85e+07
         P7    0.0197  4.01e-12  6.93e-12  2.21e-13  3.44e-14  2.72e-23  3.82e-10  5.41e-08         1
   MasterEquation::set:  done, cpu time[sec] = 1.31366, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 1200 K
            Well    Collision, 1/sec
              W1         1.89207e+08
      global relaxation matrix dimension = 290
      setting global matrices ... done, cpu time[sec] = 0.177213, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.17475, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            92551.2      27787.5      9283.48      10348.3      1308.65       104626      18067.4      301.164
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.14792, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.112699, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.2815, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  0.000138247   0.00013826  9.14179e-05
      low eigenvalue method done, cpu time[sec] = 1.29289, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000138  9.14e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.02e-05  9.14e-05         1
         *Z       ---       ---  9.68e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 9.14096e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  4.56598e-10  3.47409e-10  8.77236e-11  2.61054e-12  1.62827e-11  5.01894e-13  2.09829e-12  1.27134e-15  1.90807e-23

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.97237, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 1200 K
            Well    Collision, 1/sec
              W1          5.6762e+08
      global relaxation matrix dimension = 290
      setting global matrices ... done, cpu time[sec] = 0.175427, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.17516, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            30850.4      9262.49      3094.49      3449.42      436.215      34875.2      6022.47      100.388
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.1428, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.112722, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.27652, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  0.000101636  0.000101643  6.22332e-05
      low eigenvalue method done, cpu time[sec] = 1.28793, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000102  6.22e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.36e-06  6.22e-05         1
         *Z       ---       ---  9.68e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 6.22293e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  3.10841e-10   2.4889e-10  4.99487e-11  1.56856e-12  8.06651e-12  2.74325e-13  2.10756e-12  1.27849e-15  1.90809e-23

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.9646, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 1200 K
            Well    Collision, 1/sec
              W1         9.46033e+08
      global relaxation matrix dimension = 290
      setting global matrices ... done, cpu time[sec] = 0.175566, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.17641, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            18510.2      5557.49       1856.7      2069.65      261.729      20925.1      3613.48      60.2329
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.14628, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.111676, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.27917, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.60408e-05  8.60452e-05  5.03527e-05
      low eigenvalue method done, cpu time[sec] = 1.291, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   8.6e-05  5.04e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.16e-06  5.04e-05         1
         *Z       ---       ---  9.68e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 5.03502e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.51503e-10  2.05229e-10  3.70122e-11  1.22085e-12  5.78215e-12  2.05736e-13  2.06394e-12  1.28529e-15  1.90812e-23

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.96818, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 1200 K
            Well    Collision, 1/sec
              W1         1.32445e+09
      global relaxation matrix dimension = 290
      setting global matrices ... done, cpu time[sec] = 0.175646, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.17601, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            13221.6      3969.64      1326.21      1478.32      186.949      14946.5      2581.06      43.0235
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.14601, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.112208, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.27904, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   7.6408e-05  7.64113e-05  4.32489e-05
      low eigenvalue method done, cpu time[sec] = 1.29035, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.64e-05  4.32e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.43e-06  4.32e-05         1
         *Z       ---       ---  9.68e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 4.3247e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.16022e-10  1.78198e-10  3.00002e-11  1.02808e-12  4.62323e-12  1.69422e-13   2.0118e-12  1.29181e-15  1.90815e-23

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.9664, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 1200 K
            Well    Collision, 1/sec
              W1         1.70286e+09
      global relaxation matrix dimension = 290
      setting global matrices ... done, cpu time[sec] = 0.176232, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.20785, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            10283.5       3087.5       1031.5      1149.81      145.405      11625.1      2007.49      33.4627
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.14813, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.112559, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.28206, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.95828e-05  6.95855e-05  3.83423e-05
      low eigenvalue method done, cpu time[sec] = 1.2935, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.96e-05  3.83e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.91e-06  3.83e-05         1
         *Z       ---       ---  9.68e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.83409e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  1.91516e-10  1.59136e-10  2.54792e-11  9.00569e-13  3.90076e-12  1.46102e-13  1.95969e-12  1.29805e-15  1.90818e-23

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 4.00238, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 1200 K
            Well    Collision, 1/sec
              W1         1.89207e+09
      global relaxation matrix dimension = 290
      setting global matrices ... done, cpu time[sec] = 0.176215, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.17211, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            9255.12      2778.75      928.348      1034.83      130.865      10462.6      1806.74      30.1164
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.14476, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.112014, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.27766, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.68208e-05  6.68233e-05  3.63896e-05
      low eigenvalue method done, cpu time[sec] = 1.28944, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.68e-05  3.64e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.71e-06  3.64e-05         1
         *Z       ---       ---  9.68e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.63882e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  1.81762e-10  1.51462e-10  2.37538e-11  8.50986e-13  3.62957e-12  1.37188e-13  1.93445e-12  1.30107e-15  1.90819e-23

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.9628, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 1200 K
            Well    Collision, 1/sec
              W1          2.8381e+09
      global relaxation matrix dimension = 290
      setting global matrices ... done, cpu time[sec] = 0.17588, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.17422, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            6170.08       1852.5      618.899      689.884      87.2431      6975.04      1204.49      20.0776
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.14878, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.112374, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.28239, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.67653e-05   5.6767e-05  2.94566e-05
      low eigenvalue method done, cpu time[sec] = 1.29377, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.68e-05  2.95e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.96e-06  2.95e-05         1
         *Z       ---       ---  9.68e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.94557e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  1.47134e-10  1.23823e-10   1.7972e-11  6.79786e-13  2.73673e-12  1.07095e-13  1.81901e-12  1.31518e-15  1.90826e-23

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.96986, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 1200 K
            Well    Collision, 1/sec
              W1         3.78413e+09
      global relaxation matrix dimension = 290
      setting global matrices ... done, cpu time[sec] = 0.176323, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.18504, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            4627.56      1389.37      464.174      517.413      65.4323      5231.28       903.37      15.0582
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.14535, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.111512, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.27767, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.02031e-05  5.02044e-05  2.50978e-05
      low eigenvalue method done, cpu time[sec] = 1.28886, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.02e-05  2.51e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.48e-06  2.51e-05         1
         *Z       ---       ---  9.68e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.50972e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  1.25363e-10  1.06136e-10  1.46156e-11  5.75623e-13  2.22779e-12  8.93246e-14  1.72059e-12  1.32771e-15  1.90833e-23

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.97548, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 1200 K
            Well    Collision, 1/sec
              W1         4.73016e+09
      global relaxation matrix dimension = 290
      setting global matrices ... done, cpu time[sec] = 0.175221, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.17574, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            3702.05       1111.5      371.339      413.931      52.3459      4185.02      722.696      12.0466
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.14684, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.111315, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.27961, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   4.5449e-05    4.545e-05  2.20325e-05
      low eigenvalue method done, cpu time[sec] = 1.29104, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.55e-05   2.2e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.13e-06   2.2e-05         1
         *Z       ---       ---  9.68e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.2032e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  1.10052e-10  9.35575e-11  1.23865e-11  5.03768e-13  1.89259e-12  7.73141e-14  1.63594e-12  1.33879e-15   1.9084e-23

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.96727, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 1200 K
            Well    Collision, 1/sec
              W1          5.6762e+09
      global relaxation matrix dimension = 290
      setting global matrices ... done, cpu time[sec] = 0.176057, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.1854, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            3085.04      926.249      309.449      344.942      43.6215      3487.52      602.247      10.0388
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.14924, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.11187, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.28236, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.17847e-05  4.17855e-05   1.9728e-05
      low eigenvalue method done, cpu time[sec] = 1.29355, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.18e-05  1.97e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.86e-06  1.97e-05         1
         *Z       ---       ---  9.68e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.97276e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  9.85412e-11  8.40255e-11  1.07835e-11  4.50425e-13   1.6525e-12  6.85341e-14  1.56214e-12  1.34854e-15  1.90847e-23

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.98215, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 1200 K
            Well    Collision, 1/sec
              W1         6.62223e+09
      global relaxation matrix dimension = 290
      setting global matrices ... done, cpu time[sec] = 0.175432, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.18511, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2644.32      793.927      265.242      295.665      37.3899       2989.3      516.211       8.6047
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.14613, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.112357, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.27991, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   3.8841e-05  3.88417e-05  1.79165e-05
      low eigenvalue method done, cpu time[sec] = 1.29134, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.88e-05  1.79e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.65e-06  1.79e-05         1
         *Z       ---       ---  9.68e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.79162e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1   8.9493e-11  7.64876e-11  9.56804e-12   4.0886e-13  1.47077e-12  6.17756e-14  1.49698e-12   1.3571e-15  1.90854e-23

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.97654, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 1200 K
            Well    Collision, 1/sec
              W1         7.56826e+09
      global relaxation matrix dimension = 290
      setting global matrices ... done, cpu time[sec] = 0.175632, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.18421, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2313.78      694.687      232.087      258.707      32.7162      2615.64      451.685      7.52911
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.14931, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.111352, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.28199, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.64053e-05  3.64059e-05  1.64462e-05
      low eigenvalue method done, cpu time[sec] = 1.29394, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.64e-05  1.64e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.48e-06  1.64e-05         1
         *Z       ---       ---  9.68e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.64459e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  8.21488e-11  7.03405e-11  8.61084e-12  3.75335e-13  1.32772e-12   5.6379e-14  1.43882e-12  1.36459e-15  1.90862e-23

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.98251, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1300 K
      Energy reference = 52918 1/cm
      Energy step      = 224 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -75.8 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.005795
         W1 Well: collisional kernel bandwidth = 47
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.237382
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.115782
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.126142
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.463034
         W1 Well: minimal relaxation eigenvalue = 0.0532618
         W1 Well: maximal relaxation eigenvalue = 0.992109
         W1 Well:       grid size = 284
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -10698 1/cm
         B1 Barrier:        grid size = 237
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -170 1/cm
         B2 Barrier:        grid size = 236
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 53 1/cm
         B3 Barrier:        grid size = 257
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4650 1/cm
         B4 Barrier:        grid size = 264
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6218 1/cm
         B5 Barrier: nonpositive number of states at -23690 1/cm => truncating
         B5 Barrier:        grid size = 342
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23690 1/cm
         B6 Barrier:        grid size = 230
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1397 1/cm
         B7 Barrier:        grid size = 216
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4533 1/cm
         B8 Barrier:        grid size = 162
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16630 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.27078, elapsed time[sec] = 0
      B5 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 284
      MasterEquation::Barrier::truncate: real weight = 7.32288e+30
      MasterEquation::Barrier::truncate: effective weight = 7.47387e+27
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -10698 -10698 3.51e+08 2.19e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -170 1.42e+17
         B2     54 4.56e+16
         B3  -4650 1.59e+16
         B4  -6218 1.76e+16
         B5 -10698 2.25e+15
         B6   1398 1.69e+17
         B7   4534 3.08e+16
         B8  16630 5.94e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  5.05e-13  8.81e-13  4.21e-14  7.66e-15  3.29e-23     4e-11  4.31e-09     0.028
          R  1.98e+12         1      1.74    0.0833    0.0152  6.51e-11      79.2  8.53e+03  5.55e+10
         P1  1.14e+12     0.574         1    0.0478   0.00869  3.73e-11      45.4  4.89e+03  3.18e+10
         P2  2.38e+13        12      20.9         1     0.182  7.81e-10       951  1.02e+05  6.66e+11
         P3  1.31e+14        66       115       5.5         1  4.29e-09  5.23e+03  5.63e+05  3.66e+12
         P4  3.04e+22  1.54e+10  2.68e+10  1.28e+09  2.33e+08         1  1.22e+12  1.31e+14  8.53e+20
         P5   2.5e+10    0.0126     0.022   0.00105  0.000191  8.21e-13         1       108  7.01e+08
         P6  2.32e+08  0.000117  0.000204  9.77e-06  1.78e-06  7.63e-15   0.00929         1  6.51e+06
         P7      35.7   1.8e-11  3.14e-11   1.5e-12  2.73e-13  1.17e-21  1.43e-09  1.54e-07         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  1.06e-11  1.85e-11  8.83e-13  1.61e-13   6.9e-22   8.4e-10  9.04e-08     0.588
          R  9.43e+10         1      1.74    0.0833    0.0152  6.51e-11      79.2  8.53e+03  5.55e+10
         P1  5.41e+10     0.574         1    0.0478   0.00869  3.73e-11      45.4  4.89e+03  3.18e+10
         P2  1.13e+12        12      20.9         1     0.182  7.81e-10       951  1.02e+05  6.66e+11
         P3  6.22e+12        66       115       5.5         1  4.29e-09  5.23e+03  5.63e+05  3.66e+12
         P4  1.45e+21  1.54e+10  2.68e+10  1.28e+09  2.33e+08         1  1.22e+12  1.31e+14  8.53e+20
         P5  1.19e+09    0.0126     0.022   0.00105  0.000191  8.21e-13         1       108  7.01e+08
         P6  1.11e+07  0.000117  0.000204  9.77e-06  1.78e-06  7.63e-15   0.00929         1  6.51e+06
         P7       1.7   1.8e-11  3.14e-11   1.5e-12  2.73e-13  1.17e-21  1.43e-09  1.54e-07         1
   MasterEquation::set:  done, cpu time[sec] = 1.28436, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 1300 K
            Well    Collision, 1/sec
              W1         1.79632e+08
      global relaxation matrix dimension = 284
      setting global matrices ... done, cpu time[sec] = 0.169289, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.04415, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             108383        34754      12142.7      13405.8      1717.62       128990      23501.3      452.885
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.08301, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.107419, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.21033, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  0.000202121  0.000202149  0.000139127
      low eigenvalue method done, cpu time[sec] = 1.22133, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000202  0.000139         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.44e-05  0.000139         1
         *Z       ---       ---  3.88e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.000139108
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  6.76643e-09  5.19244e-09  1.26113e-09  3.80921e-11  2.31286e-10  7.22481e-12  3.68535e-11  3.20731e-14    1.519e-21

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.75983, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 1300 K
            Well    Collision, 1/sec
              W1         5.38896e+08
      global relaxation matrix dimension = 284
      setting global matrices ... done, cpu time[sec] = 0.167742, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.05472, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            36127.7      11584.7      4047.57      4468.61      572.541      42996.7      7833.78      150.962
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.09001, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.106249, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.21665, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  0.000152908  0.000152923  9.81075e-05
      low eigenvalue method done, cpu time[sec] = 1.22752, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000153  9.81e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.07e-05  9.81e-05         1
         *Z       ---       ---  3.88e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 9.80978e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  4.77164e-09  3.84378e-09  7.43497e-10  2.38738e-11  1.19456e-10  4.12441e-12  3.72388e-11  3.22436e-14  1.51902e-21

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.76236, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 1300 K
            Well    Collision, 1/sec
              W1          8.9816e+08
      global relaxation matrix dimension = 284
      setting global matrices ... done, cpu time[sec] = 0.169083, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.06337, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            21676.6      6950.81      2428.54      2681.17      343.525        25798      4700.27       90.577
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.09103, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.106241, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.21817, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00013139  0.000131401  8.09147e-05
      low eigenvalue method done, cpu time[sec] = 1.22949, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000131  8.09e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.07e-06  8.09e-05         1
         *Z       ---       ---  3.88e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 8.09081e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1   3.9355e-09  3.22767e-09  5.61651e-10  1.89962e-11   8.7541e-11   3.1644e-12  3.67181e-11  3.24038e-14  1.51904e-21

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.77284, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 1300 K
            Well    Collision, 1/sec
              W1         1.25742e+09
      global relaxation matrix dimension = 284
      setting global matrices ... done, cpu time[sec] = 0.16881, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.0656, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            15483.3      4964.86      1734.67      1915.12      245.375      18427.2      3357.34      64.6978
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.08875, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.106236, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.21571, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  0.000117904  0.000117913   7.0456e-05
      low eigenvalue method done, cpu time[sec] = 1.22661, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000118  7.05e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.07e-06  7.05e-05         1
         *Z       ---       ---  3.88e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 7.0451e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  3.42685e-09  2.83944e-09  4.61593e-10  1.62464e-11  7.10942e-11  2.64779e-12  3.60153e-11  3.25561e-14  1.51906e-21

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.77368, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 1300 K
            Well    Collision, 1/sec
              W1         1.61669e+09
      global relaxation matrix dimension = 284
      setting global matrices ... done, cpu time[sec] = 0.168219, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.05191, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            12042.6      3861.56      1349.19      1489.54      190.847      14332.2      2611.26      50.3205
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.08801, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.107348, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.21561, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  0.000108248  0.000108255  6.31396e-05
      low eigenvalue method done, cpu time[sec] = 1.22649, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000108  6.31e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.37e-06  6.31e-05         1
         *Z       ---       ---  3.88e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 6.31357e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  3.07102e-09  2.56211e-09  3.96351e-10  1.44045e-11  6.07196e-11  2.31192e-12   3.5281e-11  3.27015e-14  1.51909e-21

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.75924, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 1300 K
            Well    Collision, 1/sec
              W1         1.79632e+09
      global relaxation matrix dimension = 284
      setting global matrices ... done, cpu time[sec] = 0.168353, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.06053, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            10838.3       3475.4      1214.27      1340.58      171.762        12899      2350.13      45.2885
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.08611, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.107112, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.21313, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  0.000104315  0.000104321  6.02041e-05
      low eigenvalue method done, cpu time[sec] = 1.22398, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000104  6.02e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.08e-06  6.02e-05         1
         *Z       ---       ---  3.88e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 6.02005e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.92825e-09  2.44954e-09  3.71272e-10  1.36825e-11  5.67957e-11  2.18251e-12  3.49179e-11  3.27717e-14   1.5191e-21

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.76401, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 1300 K
            Well    Collision, 1/sec
              W1         2.69448e+09
      global relaxation matrix dimension = 284
      setting global matrices ... done, cpu time[sec] = 0.168814, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.06606, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            7225.54      2316.94      809.514      893.722      114.508      8599.35      1566.76      30.1923
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.08827, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.134867, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.24368, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.98563e-05  8.98607e-05  4.96577e-05
      low eigenvalue method done, cpu time[sec] = 1.25477, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.99e-05  4.97e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.04e-06  4.97e-05         1
         *Z       ---       ---  3.88e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 4.96552e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.41531e-09  2.03921e-09  2.86346e-10  1.11595e-11  4.37333e-11  1.74057e-12  3.32138e-11  3.30994e-14  1.51915e-21

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.80331, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 1300 K
            Well    Collision, 1/sec
              W1         3.59264e+09
      global relaxation matrix dimension = 284
      setting global matrices ... done, cpu time[sec] = 0.168824, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.06841, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            5419.15       1737.7      607.136      670.292      85.8811      6449.51      1175.07      22.6442
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.09453, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.106651, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.22211, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.02906e-05  8.02941e-05  4.29119e-05
      low eigenvalue method done, cpu time[sec] = 1.23319, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.03e-05  4.29e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.36e-06  4.29e-05         1
         *Z       ---       ---  3.88e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 4.29101e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.08722e-09  1.77207e-09  2.36268e-10  9.59733e-12  3.61631e-11  1.47506e-12  3.17176e-11  3.33911e-14   1.5192e-21

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.78443, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 1300 K
            Well    Collision, 1/sec
              W1          4.4908e+09
      global relaxation matrix dimension = 284
      setting global matrices ... done, cpu time[sec] = 0.169594, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.08004, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            4335.32      1390.16      485.708      536.233      68.7049      5159.61      940.054      18.1154
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.09233, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.107197, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.22015, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.32878e-05  7.32906e-05  3.81042e-05
      low eigenvalue method done, cpu time[sec] = 1.23117, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.33e-05  3.81e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.86e-06  3.81e-05         1
         *Z       ---       ---  3.88e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.81027e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  1.85338e-09  1.57952e-09  2.02601e-10  8.50483e-12  3.11122e-11  1.29317e-12  3.04049e-11  3.36505e-14  1.51925e-21

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.79582, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 1300 K
            Well    Collision, 1/sec
              W1         5.38896e+09
      global relaxation matrix dimension = 284
      setting global matrices ... done, cpu time[sec] = 0.16936, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.06248, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            3612.77      1158.47      404.757      446.861      57.2541      4299.67      783.378      15.0962
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.09268, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.106093, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.21927, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.78438e-05  6.78461e-05  3.44498e-05
      low eigenvalue method done, cpu time[sec] = 1.23035, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.78e-05  3.44e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.48e-06  3.44e-05         1
         *Z       ---       ---  3.88e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.44487e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  1.67564e-09    1.432e-09  1.78142e-10  7.68456e-12  2.74552e-11  1.15872e-12  2.92428e-11  3.38807e-14  1.51931e-21

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.77645, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 1300 K
            Well    Collision, 1/sec
              W1         6.28712e+09
      global relaxation matrix dimension = 284
      setting global matrices ... done, cpu time[sec] = 0.169422, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.07341, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            3096.66      992.973      346.935      383.024      49.0749      3685.43      671.467      12.9396
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.09274, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.106759, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.21968, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.34388e-05  6.34408e-05  3.15501e-05
      low eigenvalue method done, cpu time[sec] = 1.2307, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.34e-05  3.15e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.17e-06  3.15e-05         1
         *Z       ---       ---  3.88e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.15491e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1   1.5346e-09  1.31424e-09  1.59434e-10  7.03915e-12  2.46615e-11  1.05422e-12  2.82039e-11  3.40849e-14  1.51936e-21

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.78762, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 1300 K
            Well    Collision, 1/sec
              W1         7.18528e+09
      global relaxation matrix dimension = 284
      setting global matrices ... done, cpu time[sec] = 0.169816, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.07808, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2709.58      868.851      303.568      335.146      42.9406      3224.76      587.534      11.3221
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.09388, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.107203, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.22127, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.97707e-05  5.97725e-05   2.9177e-05
      low eigenvalue method done, cpu time[sec] = 1.23232, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.98e-05  2.92e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.91e-06  2.92e-05         1
         *Z       ---       ---  3.88e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.91761e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  1.41917e-09  1.21741e-09  1.44587e-10  6.51413e-12  2.24444e-11  9.70068e-13  2.72668e-11  3.42657e-14  1.51941e-21

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.79467, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1400 K
      Energy reference = 55699 1/cm
      Energy step      = 241 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -73.9 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.006429
         W1 Well: collisional kernel bandwidth = 47
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.232144
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.110389
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.117742
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.447175
         W1 Well: minimal relaxation eigenvalue = 0.0507572
         W1 Well: maximal relaxation eigenvalue = 0.99564
         W1 Well:       grid size = 278
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -11298 1/cm
         B1 Barrier:        grid size = 232
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -213 1/cm
         B2 Barrier:        grid size = 231
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 28 1/cm
         B3 Barrier:        grid size = 251
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4792 1/cm
         B4 Barrier:        grid size = 257
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6238 1/cm
         B5 Barrier: nonpositive number of states at -23349 1/cm => truncating
         B5 Barrier:        grid size = 328
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23348 1/cm
         B6 Barrier:        grid size = 225
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1474 1/cm
         B7 Barrier:        grid size = 212
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4607 1/cm
         B8 Barrier:        grid size = 162
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16657 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.23915, elapsed time[sec] = 0
      B5 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 278
      MasterEquation::Barrier::truncate: real weight = 2.88039e+30
      MasterEquation::Barrier::truncate: effective weight = 3.16288e+27
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -11298 -11298 2.79e+08 3.09e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -213  2.2e+17
         B2     29 7.52e+16
         B3  -4792 2.75e+16
         B4  -6238 3.01e+16
         B5 -11298 3.91e+15
         B6   1475 2.75e+17
         B7   4607 5.27e+16
         B8  16657 1.16e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  2.13e-13  3.74e-13  2.52e-14  5.24e-15  9.59e-23  1.43e-11  1.21e-09   0.00324
          R   4.7e+12         1      1.76     0.119    0.0246  4.51e-10      67.1   5.7e+03  1.53e+10
         P1  2.67e+12     0.568         1    0.0673     0.014  2.56e-10      38.1  3.24e+03  8.66e+09
         P2  3.97e+13      8.44      14.8         1     0.208  3.81e-09       566  4.81e+04  1.29e+11
         P3  1.91e+14      40.6      71.4      4.81         1  1.83e-08  2.72e+03  2.31e+05  6.19e+11
         P4  1.04e+22  2.22e+09   3.9e+09  2.63e+08  5.46e+07         1  1.49e+11  1.26e+13  3.38e+19
         P5  7.01e+10    0.0149    0.0262   0.00177  0.000367  6.72e-12         1        85  2.27e+08
         P6  8.25e+08  0.000175  0.000309  2.08e-05  4.32e-06  7.91e-14    0.0118         1  2.67e+06
         P7       308  6.56e-11  1.15e-10  7.77e-12  1.62e-12  2.96e-20   4.4e-09  3.74e-07         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1   8.5e-13   1.5e-12  1.01e-13  2.09e-14  3.83e-22   5.7e-11  4.85e-09     0.013
          R  1.18e+12         1      1.76     0.119    0.0246  4.51e-10      67.1   5.7e+03  1.53e+10
         P1  6.69e+11     0.568         1    0.0673     0.014  2.56e-10      38.1  3.24e+03  8.66e+09
         P2  9.93e+12      8.44      14.8         1     0.208  3.81e-09       566  4.81e+04  1.29e+11
         P3  4.78e+13      40.6      71.4      4.81         1  1.83e-08  2.72e+03  2.31e+05  6.19e+11
         P4  2.61e+21  2.22e+09   3.9e+09  2.63e+08  5.46e+07         1  1.49e+11  1.26e+13  3.38e+19
         P5  1.75e+10    0.0149    0.0262   0.00177  0.000367  6.72e-12         1        85  2.27e+08
         P6  2.06e+08  0.000175  0.000309  2.08e-05  4.32e-06  7.91e-14    0.0118         1  2.67e+06
         P7      77.2  6.56e-11  1.15e-10  7.77e-12  1.62e-12  2.96e-20   4.4e-09  3.74e-07         1
   MasterEquation::set:  done, cpu time[sec] = 1.25241, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 1400 K
            Well    Collision, 1/sec
              W1           1.712e+08
      global relaxation matrix dimension = 278
      setting global matrices ... done, cpu time[sec] = 0.163212, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.94994, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             124763      42580.2      15586.9      17057.6      2211.87       155797      29806.6       656.32
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.03075, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.104761, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.15541, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  0.000329096  0.000329175   0.00023843
      low eigenvalue method done, cpu time[sec] = 1.16617, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000329  0.000238         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   2.3e-05  0.000238         1
         *Z       ---       ---  1.63e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.000238373
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  6.54892e-08  5.06289e-08  1.18674e-08  3.63925e-10   2.1537e-09  6.81539e-11  4.16521e-10  4.98763e-13  6.36368e-20

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.57778, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 1400 K
            Well    Collision, 1/sec
              W1         5.13601e+08
      global relaxation matrix dimension = 278
      setting global matrices ... done, cpu time[sec] = 0.162209, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.97324, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            41587.8      14193.4      5195.64      5685.86      737.289      51932.3      9935.53      218.773
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.01802, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.101718, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.13926, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  0.000255522  0.000255566  0.000173377
      low eigenvalue method done, cpu time[sec] = 1.14999, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000256  0.000173         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.74e-05  0.000173         1
         *Z       ---       ---  1.63e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.000173347
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  4.76243e-08  3.85614e-08  7.21387e-09  2.36751e-10  1.15437e-09  4.04411e-11  4.22953e-10  5.01284e-13  6.36377e-20

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.58485, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 1400 K
            Well    Collision, 1/sec
              W1         8.56001e+08
      global relaxation matrix dimension = 278
      setting global matrices ... done, cpu time[sec] = 0.162409, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.95853, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            24952.7      8516.03      3117.38      3411.52      442.373      31159.4      5961.32      131.264
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.02621, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.102132, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.1479, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  0.000222585  0.000222617  0.000145408
      low eigenvalue method done, cpu time[sec] = 1.15847, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000223  0.000145         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.5e-05  0.000145         1
         *Z       ---       ---  1.63e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.000145387
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  3.99428e-08  3.28981e-08  5.54298e-09  1.92085e-10  8.62746e-10  3.16608e-11  4.19392e-10  5.03618e-13  6.36385e-20

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.57729, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 1400 K
            Well    Collision, 1/sec
              W1          1.1984e+09
      global relaxation matrix dimension = 278
      setting global matrices ... done, cpu time[sec] = 0.162967, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.96196, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            17823.3      6082.88       2226.7       2436.8      315.981      22256.7      4258.08        93.76
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.02725, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.102337, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.14911, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  0.000201667  0.000201692  0.000128136
      low eigenvalue method done, cpu time[sec] = 1.15981, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000202  0.000128         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.35e-05  0.000128         1
         *Z       ---       ---  1.63e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00012812
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  3.51988e-08  2.92732e-08  4.61159e-09  1.66537e-10  7.10419e-10   2.6869e-11    4.135e-10  5.05824e-13  6.36393e-20

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.58546, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 1400 K
            Well    Collision, 1/sec
              W1          1.5408e+09
      global relaxation matrix dimension = 278
      setting global matrices ... done, cpu time[sec] = 0.161992, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.96213, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            13862.6      4731.13      1731.88      1895.29      245.763      17310.8      3311.84      72.9244
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.02694, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.102017, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.14832, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  0.000186543  0.000186565  0.000115918
      low eigenvalue method done, cpu time[sec] = 1.15906, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000187  0.000116         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.24e-05  0.000116         1
         *Z       ---       ---  1.63e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.000115904
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  3.18428e-08   2.6654e-08  3.99834e-09  1.49236e-10  6.13344e-10  2.37204e-11  4.06977e-10  5.07921e-13  6.36402e-20

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.58327, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 1400 K
            Well    Collision, 1/sec
              W1           1.712e+09
      global relaxation matrix dimension = 278
      setting global matrices ... done, cpu time[sec] = 0.162195, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.95578, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            12476.3      4258.02      1558.69      1705.76      221.187      15579.7      2980.66       65.632
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.02837, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.101663, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.14963, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  0.000180345  0.000180365   0.00011098
      low eigenvalue method done, cpu time[sec] = 1.16034, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00018  0.000111         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.2e-05  0.000111         1
         *Z       ---       ---  1.63e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.000110968
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  3.04867e-08  2.55832e-08  3.76113e-09  1.42405e-10  5.76386e-10  2.24989e-11  4.03669e-10  5.08932e-13  6.36406e-20

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.57803, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 1400 K
            Well    Collision, 1/sec
              W1           2.568e+09
      global relaxation matrix dimension = 278
      setting global matrices ... done, cpu time[sec] = 0.162074, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.96494, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            8317.55      2838.68      1039.13      1137.17      147.458      10386.5      1987.11      43.7547
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.02822, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.101809, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.14947, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  0.000157358  0.000157373  9.30559e-05
      low eigenvalue method done, cpu time[sec] = 1.16022, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000157   9.3e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.03e-05   9.3e-05         1
         *Z       ---       ---  1.63e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 9.30472e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.55633e-08  2.16382e-08  2.95049e-09  1.18291e-10  4.52164e-10  1.82851e-11  3.87685e-10  5.13643e-13  6.36427e-20

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.58627, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 1400 K
            Well    Collision, 1/sec
              W1           3.424e+09
      global relaxation matrix dimension = 278
      setting global matrices ... done, cpu time[sec] = 0.161827, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.96116, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            6238.16      2129.01      779.346      852.879      110.593      7789.85      1490.33       32.816
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.02286, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.101262, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.14352, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  0.000141956  0.000141968  8.14167e-05
      low eigenvalue method done, cpu time[sec] = 1.15427, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000142  8.14e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.24e-06  8.14e-05         1
         *Z       ---       ---  1.63e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 8.14101e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.23661e-08  1.90304e-08  2.46593e-09   1.0313e-10  3.79127e-10  1.57153e-11  3.73207e-10  5.17843e-13  6.36447e-20

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.5757, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 1400 K
            Well    Collision, 1/sec
              W1            4.28e+09
      global relaxation matrix dimension = 278
      setting global matrices ... done, cpu time[sec] = 0.161971, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.96113, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            4990.53      1703.21      623.477      682.303      88.4746      6231.88      1192.26      26.2528
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.02486, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.101333, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.14566, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  0.000130571  0.000130581  7.30236e-05
      low eigenvalue method done, cpu time[sec] = 1.15732, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000131   7.3e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.45e-06   7.3e-05         1
         *Z       ---       ---  1.63e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 7.30183e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.00606e-08  1.71286e-08  2.13667e-09  9.24001e-11  3.29843e-10  1.39341e-11  3.60245e-10  5.21594e-13  6.36468e-20

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.57942, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 1400 K
            Well    Collision, 1/sec
              W1         5.13601e+09
      global relaxation matrix dimension = 278
      setting global matrices ... done, cpu time[sec] = 0.161965, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.95652, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            4158.78      1419.34      519.564      568.586      73.7289      5193.23      993.553      21.8773
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.02544, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.101246, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.14614, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00012165  0.000121658  6.65822e-05
      low eigenvalue method done, cpu time[sec] = 1.15733, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000122  6.66e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.83e-06  6.66e-05         1
         *Z       ---       ---  1.63e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 6.65778e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  1.82912e-08  1.56574e-08  1.89534e-09  8.42633e-11  2.93823e-10  1.26044e-11  3.48598e-10  5.24946e-13  6.36489e-20

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.57542, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 1400 K
            Well    Collision, 1/sec
              W1         5.99201e+09
      global relaxation matrix dimension = 278
      setting global matrices ... done, cpu time[sec] = 0.161428, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.96909, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            3564.67      1216.58      445.341       487.36      63.1962      4451.34      851.617       18.752
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.02655, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.101754, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.14778, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  0.000114382  0.000114389  6.14285e-05
      low eigenvalue method done, cpu time[sec] = 1.15877, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000114  6.14e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.33e-06  6.14e-05         1
         *Z       ---       ---  1.63e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 6.14247e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  1.68755e-08  1.44733e-08  1.70933e-09  7.78064e-11  2.66082e-10  1.15623e-11   3.3806e-10  5.27943e-13   6.3651e-20

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.59031, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 1400 K
            Well    Collision, 1/sec
              W1         6.84801e+09
      global relaxation matrix dimension = 278
      setting global matrices ... done, cpu time[sec] = 0.1633, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.95695, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            3119.08       1064.5      389.673       426.44      55.2966      3894.92      745.165       16.408
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.02534, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.101254, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.14605, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  0.000108294    0.0001083    5.718e-05
      low eigenvalue method done, cpu time[sec] = 1.15748, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000108  5.72e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.91e-06  5.72e-05         1
         *Z       ---       ---  1.63e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 5.71768e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  1.57084e-08  1.34927e-08  1.56071e-09  7.25144e-11   2.4391e-10  1.07169e-11  3.28459e-10  5.30623e-13  6.36531e-20

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.57911, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1500 K
      Energy reference = 58479 1/cm
      Energy step      = 259 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -72 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.005924
         W1 Well: collisional kernel bandwidth = 46
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.220114
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.105499
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.115869
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.425321
         W1 Well: minimal relaxation eigenvalue = 0.0483487
         W1 Well: maximal relaxation eigenvalue = 0.998648
         W1 Well:       grid size = 272
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -11969 1/cm
         B1 Barrier:        grid size = 226
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -55 1/cm
         B2 Barrier:        grid size = 225
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 203 1/cm
         B3 Barrier:        grid size = 244
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4717 1/cm
         B4 Barrier:        grid size = 250
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6271 1/cm
         B5 Barrier: nonpositive number of states at -23365 1/cm => truncating
         B5 Barrier:        grid size = 316
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23365 1/cm
         B6 Barrier:        grid size = 220
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1498 1/cm
         B7 Barrier:        grid size = 208
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4606 1/cm
         B8 Barrier:        grid size = 162
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16520 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.19548, elapsed time[sec] = 0
      B5 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 272
      MasterEquation::Barrier::truncate: real weight = 1.34773e+30
      MasterEquation::Barrier::truncate: effective weight = 1.59044e+27
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -11969 -11969 2.14e+08 4.33e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -55 3.35e+17
         B2    204 1.21e+17
         B3  -4717 4.65e+16
         B4  -6271 5.05e+16
         B5 -11969 6.62e+15
         B6   1499 4.37e+17
         B7   4607 8.75e+16
         B8  16521 2.18e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  9.74e-14  1.73e-13  1.56e-14  3.65e-15  2.35e-22  5.62e-12  3.89e-10  0.000483
          R  1.03e+13         1      1.78     0.161    0.0375  2.41e-09      57.7     4e+03  4.96e+09
         P1  5.77e+12     0.562         1    0.0903    0.0211  1.36e-09      32.4  2.25e+03  2.79e+09
         P2  6.39e+13      6.23      11.1         1     0.233   1.5e-08       359  2.49e+04  3.09e+10
         P3  2.74e+14      26.7      47.5      4.28         1  6.43e-08  1.54e+03  1.07e+05  1.32e+11
         P4  4.26e+21  4.15e+08  7.38e+08  6.66e+07  1.55e+07         1  2.39e+10  1.66e+12  2.06e+18
         P5  1.78e+11    0.0173    0.0308   0.00278   0.00065  4.18e-11         1      69.3   8.6e+07
         P6  2.57e+09   0.00025  0.000445  4.02e-05  9.38e-06  6.04e-13    0.0144         1  1.24e+06
         P7  2.07e+03  2.02e-10  3.59e-10  3.24e-11  7.56e-12  4.86e-19  1.16e-08  8.06e-07         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  9.61e-14  1.71e-13  1.54e-14   3.6e-15  2.32e-22  5.54e-12  3.84e-10  0.000476
          R  1.04e+13         1      1.78     0.161    0.0375  2.41e-09      57.7     4e+03  4.96e+09
         P1  5.85e+12     0.562         1    0.0903    0.0211  1.36e-09      32.4  2.25e+03  2.79e+09
         P2  6.48e+13      6.23      11.1         1     0.233   1.5e-08       359  2.49e+04  3.09e+10
         P3  2.78e+14      26.7      47.5      4.28         1  6.43e-08  1.54e+03  1.07e+05  1.32e+11
         P4  4.32e+21  4.15e+08  7.38e+08  6.66e+07  1.55e+07         1  2.39e+10  1.66e+12  2.06e+18
         P5   1.8e+11    0.0173    0.0308   0.00278   0.00065  4.18e-11         1      69.3   8.6e+07
         P6  2.61e+09   0.00025  0.000445  4.02e-05  9.38e-06  6.04e-13    0.0144         1  1.24e+06
         P7   2.1e+03  2.02e-10  3.59e-10  3.24e-11  7.56e-12  4.86e-19  1.16e-08  8.06e-07         1
   MasterEquation::set:  done, cpu time[sec] = 1.20918, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 1500 K
            Well    Collision, 1/sec
              W1         1.63706e+08
      global relaxation matrix dimension = 272
      setting global matrices ... done, cpu time[sec] = 0.155314, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.83771, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             141484      51231.5      19674.3      21357.5      2800.15       184822      36977.8      921.049
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.963493, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.110779, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.08561, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  0.000497894  0.000498082  0.000377386
      low eigenvalue method done, cpu time[sec] = 1.09572, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000498  0.000377         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   3.4e-05  0.000377         1
         *Z       ---       ---  7.69e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.000377244
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  4.51568e-07  3.51417e-07  7.96437e-08  2.48397e-09  1.43461e-08  4.59722e-10   3.3149e-09   5.2649e-12  1.59561e-18

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.38864, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 1500 K
            Well    Collision, 1/sec
              W1         4.91119e+08
      global relaxation matrix dimension = 272
      setting global matrices ... done, cpu time[sec] = 0.155353, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.84733, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            47161.5      17077.2       6558.1      7119.17      933.383      61607.4      12325.9      307.016
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.970013, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.110961, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.08767, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  0.000395519   0.00039563  0.000281932
      low eigenvalue method done, cpu time[sec] = 1.09783, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000396  0.000282         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.63e-05  0.000282         1
         *Z       ---       ---  7.69e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.000281853
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  3.37383e-07  2.74397e-07  4.97676e-08  1.67021e-09  7.94744e-09  2.82347e-10  3.37863e-09  5.29019e-12  1.59563e-18

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.38784, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 1500 K
            Well    Collision, 1/sec
              W1         8.18532e+08
      global relaxation matrix dimension = 272
      setting global matrices ... done, cpu time[sec] = 0.154765, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.84771, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            28296.9      10246.3      3934.86       4271.5       560.03      36964.4      7395.55       184.21
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.96408, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.110916, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.08197, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  0.000348734  0.000348817  0.000239962
      low eigenvalue method done, cpu time[sec] = 1.09254, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000349   0.00024         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.29e-05   0.00024         1
         *Z       ---       ---  7.69e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.000239905
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1   2.8717e-07  2.37375e-07  3.88284e-08  1.37863e-09  6.04449e-09  2.25047e-10  3.36535e-09  5.31329e-12  1.59565e-18

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.38305, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 1500 K
            Well    Collision, 1/sec
              W1         1.14595e+09
      global relaxation matrix dimension = 272
      setting global matrices ... done, cpu time[sec] = 0.15474, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.84902, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            20212.1      7318.79      2810.61      3051.07      400.021      26403.2      5282.54      131.578
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.968233, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.110569, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.08509, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  0.000318669  0.000318737  0.000213696
      low eigenvalue method done, cpu time[sec] = 1.09522, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000319  0.000214         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.08e-05  0.000214         1
         *Z       ---       ---  7.69e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.000213651
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.55744e-07  2.13347e-07    3.266e-08  1.20977e-09   5.0389e-09  1.93398e-10  3.33218e-09  5.33499e-12  1.59567e-18

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.38565, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 1500 K
            Well    Collision, 1/sec
              W1         1.47336e+09
      global relaxation matrix dimension = 272
      setting global matrices ... done, cpu time[sec] = 0.155024, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.85057, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            15720.5      5692.39      2186.03      2373.06      311.128      20535.8      4108.64      102.339
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.961102, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.11016, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.07767, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  0.000296745  0.000296803  0.000194931
      low eigenvalue method done, cpu time[sec] = 1.08779, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000297  0.000195         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.92e-05  0.000195         1
         *Z       ---       ---  7.69e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.000194894
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.33291e-07  1.95808e-07  2.85636e-08  1.09433e-09   4.3924e-09  1.72411e-10  3.29238e-09  5.35555e-12  1.59569e-18

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.38106, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 1500 K
            Well    Collision, 1/sec
              W1         1.63706e+09
      global relaxation matrix dimension = 272
      setting global matrices ... done, cpu time[sec] = 0.155401, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.85132, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            14148.4      5123.15      1967.43      2135.75      280.015      18482.2      3697.78      92.1049
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.96732, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.111264, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.08511, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  0.000287711  0.000287765  0.000187301
      low eigenvalue method done, cpu time[sec] = 1.09523, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000288  0.000187         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.86e-05  0.000187         1
         *Z       ---       ---  7.69e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.000187266
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.24161e-07  1.88592e-07  2.69702e-08  1.04848e-09  4.14485e-09   1.6422e-10  3.27156e-09  5.36544e-12   1.5957e-18

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.3892, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 1500 K
            Well    Collision, 1/sec
              W1          2.4556e+09
      global relaxation matrix dimension = 272
      setting global matrices ... done, cpu time[sec] = 0.154175, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.8479, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            9432.29      3415.44      1311.62      1423.83      186.677      12321.5      2465.18      61.4033
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.961703, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.111172, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.07935, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  0.000253941  0.000253982  0.000159344
      low eigenvalue method done, cpu time[sec] = 1.08947, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000254  0.000159         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.62e-05  0.000159         1
         *Z       ---       ---  7.69e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.000159318
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  1.90707e-07  1.61754e-07   2.1481e-08   8.8513e-10  3.30584e-09  1.35718e-10   3.1675e-09  5.41154e-12  1.59574e-18

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.3789, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 1500 K
            Well    Collision, 1/sec
              W1         3.27413e+09
      global relaxation matrix dimension = 272
      setting global matrices ... done, cpu time[sec] = 0.155018, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.85868, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            7074.22      2561.58      983.715      1067.88      140.008      9241.11      1848.89      46.0525
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.966481, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.111212, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.08396, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  0.000231058   0.00023109  0.000140946
      low eigenvalue method done, cpu time[sec] = 1.09413, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000231  0.000141         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.46e-05  0.000141         1
         *Z       ---       ---  7.69e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.000140926
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  1.68691e-07  1.43772e-07  1.81603e-08  7.81051e-10  2.80633e-09  1.18108e-10  3.06998e-09  5.45271e-12  1.59579e-18

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.39472, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 1500 K
            Well    Collision, 1/sec
              W1         4.09266e+09
      global relaxation matrix dimension = 272
      setting global matrices ... done, cpu time[sec] = 0.154695, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.85174, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            5659.37      2049.26      786.972      854.301      112.006      7392.88      1479.11       36.842
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.963484, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.111264, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.08106, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  0.000213994  0.000214021  0.000127541
      low eigenvalue method done, cpu time[sec] = 1.09122, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000214  0.000128         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.35e-05  0.000128         1
         *Z       ---       ---  7.69e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.000127524
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  1.52649e-07  1.30521e-07  1.58826e-08  7.06616e-10  2.46593e-09  1.05776e-10  2.98085e-09  5.48963e-12  1.59584e-18

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.38474, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 1500 K
            Well    Collision, 1/sec
              W1         4.91119e+09
      global relaxation matrix dimension = 272
      setting global matrices ... done, cpu time[sec] = 0.1559, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.85094, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            4716.15      1707.72       655.81      711.917      93.3383      6160.74      1232.59      30.7016
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.973729, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.11038, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.09081, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  0.000200527  0.000200551  0.000117165
      low eigenvalue method done, cpu time[sec] = 1.10098, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000201  0.000117         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.26e-05  0.000117         1
         *Z       ---       ---  7.69e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.000117151
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  1.40232e-07  1.20182e-07     1.42e-08  6.49678e-10  2.21511e-09  9.64921e-11  2.89954e-09  5.52283e-12  1.59589e-18

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.39813, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 1500 K
            Well    Collision, 1/sec
              W1         5.72973e+09
      global relaxation matrix dimension = 272
      setting global matrices ... done, cpu time[sec] = 0.155157, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.84971, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            4042.41      1463.76      562.123      610.215      80.0043      5280.63      1056.51      26.3157
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.969803, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.110617, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.08691, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00018949  0.000189511  0.000108802
      low eigenvalue method done, cpu time[sec] = 1.09743, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00019  0.000109         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.18e-05  0.000109         1
         *Z       ---       ---  7.69e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00010879
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  1.30224e-07    1.118e-07  1.28943e-08  6.04157e-10  2.02056e-09  8.91619e-11   2.8251e-09  5.55273e-12  1.59594e-18

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.39144, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 1500 K
            Well    Collision, 1/sec
              W1         6.54826e+09
      global relaxation matrix dimension = 272
      setting global matrices ... done, cpu time[sec] = 0.155259, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.84982, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            3537.11      1280.79      491.857      533.938      70.0038      4620.55      924.444      23.0262
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.966822, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.110217, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.08334, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  0.000180196  0.000180214  0.000101864
      low eigenvalue method done, cpu time[sec] = 1.09362, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00018  0.000102         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.12e-05  0.000102         1
         *Z       ---       ---  7.69e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.000101853
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1   1.2192e-07  1.04813e-07  1.18449e-08  5.66602e-10  1.86409e-09  8.31768e-11  2.75661e-09   5.5797e-12  1.59599e-18

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.38795, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1600 K
      Energy reference = 61260 1/cm
      Energy step      = 276 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -70 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.005966
         W1 Well: collisional kernel bandwidth = 46
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.217037
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.102291
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.10883
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.407988
         W1 Well: minimal relaxation eigenvalue = 0.0460294
         W1 Well: maximal relaxation eigenvalue = 1.00338
         W1 Well:       grid size = 268
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -12708 1/cm
         B1 Barrier:        grid size = 222
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -12 1/cm
         B2 Barrier:        grid size = 222
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = -12 1/cm
         B3 Barrier:        grid size = 239
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4704 1/cm
         B4 Barrier:        grid size = 245
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6360 1/cm
         B5 Barrier: nonpositive number of states at -23197 1/cm => truncating
         B5 Barrier:        grid size = 306
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23196 1/cm
         B6 Barrier:        grid size = 217
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1367 1/cm
         B7 Barrier:        grid size = 205
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4679 1/cm
         B8 Barrier:        grid size = 162
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16547 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.16497, elapsed time[sec] = 0
      B5 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 268
      MasterEquation::Barrier::truncate: real weight = 7.25027e+29
      MasterEquation::Barrier::truncate: effective weight = 9.11755e+26
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -12708 -12708 1.58e+08 6.01e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -12 4.98e+17
         B2    -12 1.91e+17
         B3  -4704 7.69e+16
         B4  -6360 8.29e+16
         B5 -12708  1.1e+16
         B6   1368 6.79e+17
         B7   4680 1.42e+17
         B8  16548 3.95e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1   4.8e-14  8.64e-14     1e-14   2.6e-15  5.02e-22  2.41e-12   1.4e-10  8.88e-05
          R  2.08e+13         1       1.8     0.209    0.0541  1.04e-08      50.3  2.91e+03  1.85e+09
         P1  1.16e+13     0.555         1     0.116      0.03   5.8e-09      27.9  1.62e+03  1.03e+09
         P2  9.96e+13      4.78       8.6         1     0.259  4.99e-08       240  1.39e+04  8.84e+09
         P3  3.85e+14      18.5      33.3      3.87         1  1.93e-07       930  5.38e+04  3.42e+10
         P4  1.99e+21  9.57e+07  1.72e+08     2e+07  5.18e+06         1  4.81e+09  2.78e+11  1.77e+17
         P5  4.14e+11    0.0199    0.0358   0.00416   0.00108  2.08e-10         1      57.8  3.68e+07
         P6  7.16e+09  0.000344  0.000619  7.19e-05  1.86e-05  3.59e-12    0.0173         1  6.36e+05
         P7  1.13e+04   5.4e-10  9.73e-10  1.13e-10  2.92e-11  5.65e-18  2.72e-08  1.57e-06         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  1.43e-14  2.58e-14     3e-15  7.76e-16   1.5e-22  7.22e-13  4.17e-11  2.66e-05
          R  6.97e+13         1       1.8     0.209    0.0541  1.04e-08      50.3  2.91e+03  1.85e+09
         P1  3.87e+13     0.555         1     0.116      0.03   5.8e-09      27.9  1.62e+03  1.03e+09
         P2  3.33e+14      4.78       8.6         1     0.259  4.99e-08       240  1.39e+04  8.84e+09
         P3  1.29e+15      18.5      33.3      3.87         1  1.93e-07       930  5.38e+04  3.42e+10
         P4  6.67e+21  9.57e+07  1.72e+08     2e+07  5.18e+06         1  4.81e+09  2.78e+11  1.77e+17
         P5  1.39e+12    0.0199    0.0358   0.00416   0.00108  2.08e-10         1      57.8  3.68e+07
         P6   2.4e+10  0.000344  0.000619  7.19e-05  1.86e-05  3.59e-12    0.0173         1  6.36e+05
         P7  3.77e+04   5.4e-10  9.73e-10  1.13e-10  2.92e-11  5.65e-18  2.72e-08  1.57e-06         1
   MasterEquation::set:  done, cpu time[sec] = 1.17823, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 1600 K
            Well    Collision, 1/sec
              W1         1.56994e+08
      global relaxation matrix dimension = 268
      setting global matrices ... done, cpu time[sec] = 0.152484, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.78591, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             158364      60668.9      24444.8      26361.2      3491.54       215837      44999.6      1257.01
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.926503, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.098315, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.04385, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  0.000713989  0.000714391  0.000563192
      low eigenvalue method done, cpu time[sec] = 1.05421, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000714  0.000563         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.73e-05  0.000563         1
         *Z       ---       ---  4.01e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.000562875
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999998  2.36813e-06  1.85343e-06  4.07381e-07  1.29189e-08   7.2893e-08  2.36464e-09  1.98742e-08  4.06202e-11  2.63727e-17

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.27325, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 1600 K
            Well    Collision, 1/sec
              W1         4.70981e+08
      global relaxation matrix dimension = 268
      setting global matrices ... done, cpu time[sec] = 0.151222, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.79371, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            52788.1        20223      8148.27      8787.05      1163.85      71945.8      14999.9      419.004
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.928406, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.094503, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.04114, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00057877  0.000579019  0.000430883
      low eigenvalue method done, cpu time[sec] = 1.05124, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000579  0.000431         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.75e-05  0.000431         1
         *Z       ---       ---  4.01e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.000430698
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999998  1.81203e-06  1.47929e-06  2.60858e-07  8.94733e-09  4.15987e-08  1.49802e-09  2.03096e-08  4.08063e-11   2.6373e-17

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.27629, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 1600 K
            Well    Collision, 1/sec
              W1         7.84969e+08
      global relaxation matrix dimension = 268
      setting global matrices ... done, cpu time[sec] = 0.151323, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.78501, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            31672.9      12133.8      4888.96      5272.23      698.307      43167.5      8999.91      251.402
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.928137, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.094042, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.04039, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  0.000515834  0.000516026  0.000371549
      low eigenvalue method done, cpu time[sec] = 1.05053, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000516  0.000371         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   3.3e-05  0.000371         1
         *Z       ---       ---  4.01e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.000371411
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999998   1.5626e-06  1.29551e-06  2.06306e-07  7.49964e-09  3.21386e-08  1.21336e-09  2.03021e-08  4.09741e-11  2.63733e-17

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.26528, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 1600 K
            Well    Collision, 1/sec
              W1         1.09896e+09
      global relaxation matrix dimension = 268
      setting global matrices ... done, cpu time[sec] = 0.15102, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.7894, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            22623.5      8666.99      3492.12      3765.88      498.791      30833.9      6428.51      179.573
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.926876, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.093615, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.03874, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  0.000474965  0.000475124  0.000333977
      low eigenvalue method done, cpu time[sec] = 1.04912, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000475  0.000334         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.01e-05  0.000334         1
         *Z       ---       ---  4.01e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.000333865
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999999  1.40464e-06  1.17474e-06  1.75238e-07  6.65214e-09  2.70892e-08   1.0545e-09  2.01713e-08  4.11308e-11  2.63736e-17

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.26843, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 1600 K
            Well    Collision, 1/sec
              W1         1.41294e+09
      global relaxation matrix dimension = 268
      setting global matrices ... done, cpu time[sec] = 0.150499, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.78959, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
              17596      6740.99      2716.09      2929.02      387.948      23981.9      4999.95      139.668
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.928121, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.093868, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.04064, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  0.000444934  0.000445071  0.000306899
      low eigenvalue method done, cpu time[sec] = 1.05067, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000445  0.000307         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   2.8e-05  0.000307         1
         *Z       ---       ---  4.01e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.000306805
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999999  1.29079e-06  1.08577e-06   1.5445e-07  6.06799e-09  2.38179e-08  9.48311e-10  1.99941e-08  4.12788e-11  2.63739e-17

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.27207, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 1600 K
            Well    Collision, 1/sec
              W1         1.56994e+09
      global relaxation matrix dimension = 268
      setting global matrices ... done, cpu time[sec] = 0.150597, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.79479, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            15836.4      6066.89      2444.48      2636.12      349.154      21583.7      4499.96      125.701
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.930544, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.093829, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.04284, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  0.000432501  0.000432629  0.000295827
      low eigenvalue method done, cpu time[sec] = 1.05306, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000433  0.000296         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.71e-05  0.000296         1
         *Z       ---       ---  4.01e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00029574
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999999  1.24424e-06  1.04896e-06  1.46326e-07  5.83472e-09  2.25592e-08  9.06659e-10  1.98976e-08  4.13499e-11   2.6374e-17

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.27773, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 1600 K
            Well    Collision, 1/sec
              W1         2.35491e+09
      global relaxation matrix dimension = 268
      setting global matrices ... done, cpu time[sec] = 0.150267, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.78834, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            10557.6      4044.59      1629.65      1757.41      232.769      14389.2      2999.97      83.8008
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.959662, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.094301, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.07251, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  0.000385689  0.000385788  0.000254925
      low eigenvalue method done, cpu time[sec] = 1.08261, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000386  0.000255         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.39e-05  0.000255         1
         *Z       ---       ---  4.01e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00025486
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999999  1.07225e-06  9.10884e-07  1.18138e-07  4.99706e-09  1.82615e-08  7.60592e-10  1.93951e-08   4.1681e-11  2.63748e-17

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.29935, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 1600 K
            Well    Collision, 1/sec
              W1         3.13988e+09
      global relaxation matrix dimension = 268
      setting global matrices ... done, cpu time[sec] = 0.150536, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.79636, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            7918.22      3033.45      1222.24      1318.06      174.577      10791.9      2249.98      62.8506
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.930359, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.093707, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.04243, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  0.000353646  0.000353727  0.000227689
      low eigenvalue method done, cpu time[sec] = 1.05286, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000354  0.000228         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.17e-05  0.000228         1
         *Z       ---       ---  4.01e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.000227637
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999999  9.57714e-07  8.17251e-07  1.00906e-07  4.45707e-09  1.56747e-08  6.69313e-10   1.8906e-08   4.1977e-11  2.63755e-17

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.27835, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 1600 K
            Well    Collision, 1/sec
              W1         3.92484e+09
      global relaxation matrix dimension = 268
      setting global matrices ... done, cpu time[sec] = 0.150644, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.79349, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            6334.57      2426.76      977.793      1054.45      139.661      8633.49      1799.98      50.2805
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.931036, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.093804, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.04301, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  0.000329565  0.000329634  0.000207661
      low eigenvalue method done, cpu time[sec] = 1.05311, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00033  0.000208         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.01e-05  0.000208         1
         *Z       ---       ---  4.01e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.000207618
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999999  8.73489e-07  7.47608e-07  8.89882e-08   4.0673e-09  1.38967e-08  6.04818e-10   1.8449e-08  4.22434e-11  2.63763e-17

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.27652, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 1600 K
            Well    Collision, 1/sec
              W1         4.70981e+09
      global relaxation matrix dimension = 268
      setting global matrices ... done, cpu time[sec] = 0.151121, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.79492, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            5278.81       2022.3      814.827      878.705      116.385      7194.58      1499.99      41.9004
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.929024, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.093853, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.0412, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  0.000310439  0.000310498   0.00019204
      low eigenvalue method done, cpu time[sec] = 1.05135, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00031  0.000192         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.89e-05  0.000192         1
         *Z       ---       ---  4.01e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.000192003
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999999  8.07795e-07  6.92852e-07  8.01236e-08  3.76686e-09   1.2577e-08  5.55895e-10  1.80257e-08  4.24842e-11  2.63771e-17

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.27743, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 1600 K
            Well    Collision, 1/sec
              W1         5.49478e+09
      global relaxation matrix dimension = 268
      setting global matrices ... done, cpu time[sec] = 0.1505, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.80395, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             4524.7       1733.4      698.423      753.176      99.7581      6166.78       1285.7      35.9146
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.927091, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.093737, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.03907, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  0.000294677   0.00029473  0.000179368
      low eigenvalue method done, cpu time[sec] = 1.04932, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000295  0.000179         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.78e-05  0.000179         1
         *Z       ---       ---  4.01e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.000179336
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999999  7.54502e-07  6.48166e-07  7.32038e-08  3.52507e-09   1.1547e-08  5.17019e-10  1.76335e-08  4.27024e-11  2.63778e-17

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.28567, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 1600 K
            Well    Collision, 1/sec
              W1         6.27975e+09
      global relaxation matrix dimension = 268
      setting global matrices ... done, cpu time[sec] = 0.151656, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.79183, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            3959.11      1516.72       611.12      659.029      87.2884      5395.93      1124.99      31.4253
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.931482, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.093858, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.04388, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  0.000281342  0.000281389  0.000168795
      low eigenvalue method done, cpu time[sec] = 1.05473, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000281  0.000169         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.69e-05  0.000169         1
         *Z       ---       ---  4.01e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.000168766
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999999  7.10033e-07  6.10705e-07  6.76129e-08  3.32442e-09  1.07141e-08  4.85093e-10  1.72692e-08  4.29005e-11  2.63786e-17

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.28029, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1700 K
      Energy reference = 64039 1/cm
      Energy step      = 293 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -67.9 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.005958
         W1 Well: collisional kernel bandwidth = 45
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.214754
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.099859
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.108381
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.398604
         W1 Well: minimal relaxation eigenvalue = 0.0437242
         W1 Well: maximal relaxation eigenvalue = 1.00917
         W1 Well:       grid size = 265
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -13606 1/cm
         B1 Barrier:        grid size = 219
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -128 1/cm
         B2 Barrier:        grid size = 218
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 165 1/cm
         B3 Barrier:        grid size = 235
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4816 1/cm
         B4 Barrier:        grid size = 240
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6281 1/cm
         B5 Barrier: nonpositive number of states at -23275 1/cm => truncating
         B5 Barrier:        grid size = 298
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23275 1/cm
         B6 Barrier:        grid size = 214
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1336 1/cm
         B7 Barrier:        grid size = 203
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4559 1/cm
         B8 Barrier:        grid size = 162
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16573 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.14674, elapsed time[sec] = 0
      B5 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 265
      MasterEquation::Barrier::truncate: real weight = 4.36639e+29
      MasterEquation::Barrier::truncate: effective weight = 5.82915e+26
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -13606 -13606 1.09e+08 8.26e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -128 7.29e+17
         B2    166 2.95e+17
         B3  -4816 1.24e+17
         B4  -6281 1.34e+17
         B5 -13606 1.79e+16
         B6   1337 1.03e+18
         B7   4560 2.24e+17
         B8  16573 6.96e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  2.59e-14  4.71e-14  6.83e-15  1.93e-15  9.84e-22  1.15e-12  5.65e-11     2e-05
          R  3.87e+13         1      1.82     0.264    0.0747  3.81e-08      44.4  2.19e+03  7.73e+08
         P1  2.12e+13     0.549         1     0.145     0.041  2.09e-08      24.3   1.2e+03  4.24e+08
         P2  1.47e+14      3.79      6.91         1     0.283  1.44e-07       168  8.28e+03  2.93e+09
         P3  5.18e+14      13.4      24.4      3.53         1   5.1e-07       594  2.93e+04  1.03e+10
         P4  1.02e+21  2.63e+07  4.79e+07  6.94e+06  1.96e+06         1  1.17e+09  5.74e+10  2.03e+16
         P5  8.72e+11    0.0225    0.0411   0.00595   0.00168  8.58e-10         1      49.3  1.74e+07
         P6  1.77e+10  0.000457  0.000834  0.000121  3.42e-05  1.74e-11    0.0203         1  3.54e+05
         P7     5e+04  1.29e-09  2.36e-09  3.41e-10  9.66e-11  4.92e-17  5.74e-08  2.83e-06         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1   2.7e-15  4.91e-15  7.12e-16  2.01e-16  1.03e-22   1.2e-13   5.9e-12  2.08e-06
          R  3.71e+14         1      1.82     0.264    0.0747  3.81e-08      44.4  2.19e+03  7.73e+08
         P1  2.03e+14     0.549         1     0.145     0.041  2.09e-08      24.3   1.2e+03  4.24e+08
         P2  1.41e+15      3.79      6.91         1     0.283  1.44e-07       168  8.28e+03  2.93e+09
         P3  4.97e+15      13.4      24.4      3.53         1   5.1e-07       594  2.93e+04  1.03e+10
         P4  9.74e+21  2.63e+07  4.79e+07  6.94e+06  1.96e+06         1  1.17e+09  5.74e+10  2.03e+16
         P5  8.36e+12    0.0225    0.0411   0.00595   0.00168  8.58e-10         1      49.3  1.74e+07
         P6   1.7e+11  0.000457  0.000834  0.000121  3.42e-05  1.74e-11    0.0203         1  3.54e+05
         P7   4.8e+05  1.29e-09  2.36e-09  3.41e-10  9.66e-11  4.92e-17  5.74e-08  2.83e-06         1
   MasterEquation::set:  done, cpu time[sec] = 1.16023, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 1700 K
            Well    Collision, 1/sec
              W1         1.50939e+08
      global relaxation matrix dimension = 265
      setting global matrices ... done, cpu time[sec] = 0.148325, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.72476, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             175234      70842.1      29936.2      32121.1      4294.74       248591      53841.9      1674.07
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.902901, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.10527, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.01465, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  0.000955012  0.000955753   0.00077594
      low eigenvalue method done, cpu time[sec] = 1.02486, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000956  0.000775         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   6.1e-05  0.000775         1
         *Z       ---       ---   2.3e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.000775339
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1      0.99999  9.92597e-06  7.80908e-06  1.66596e-06  5.38358e-08  2.97107e-07  9.75308e-09  9.43424e-08  2.42107e-10  3.09468e-16

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.68436, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 1700 K
            Well    Collision, 1/sec
              W1         4.52817e+08
      global relaxation matrix dimension = 265
      setting global matrices ... done, cpu time[sec] = 0.147703, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.73604, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            58411.4        23614      9978.74        10707      1431.58      82863.6      17947.3      558.022
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.919846, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.104208, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.03022, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  0.000788144  0.000788622  0.000606474
      low eigenvalue method done, cpu time[sec] = 1.04036, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000789  0.000606         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.91e-05  0.000606         1
         *Z       ---       ---   2.3e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.000606107
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999992  7.75944e-06  6.35534e-06  1.09146e-06  3.82836e-08  1.74121e-07  6.35282e-09  9.66213e-08  2.43166e-10  3.09471e-16

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.19822, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 1700 K
            Well    Collision, 1/sec
              W1         7.54695e+08
      global relaxation matrix dimension = 265
      setting global matrices ... done, cpu time[sec] = 0.148084, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.74375, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            35046.9      14168.4      5987.25      6424.23      858.949      49718.2      10768.4      334.813
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.896276, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.10448, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.00705, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  0.000709192  0.000709567  0.000529089
      low eigenvalue method done, cpu time[sec] = 1.01726, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00071  0.000529         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.36e-05  0.000529         1
         *Z       ---       ---   2.3e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.000528809
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999993  6.76987e-06  5.62693e-06   8.7405e-07  3.25328e-08  1.36434e-07  5.22047e-09  9.68753e-08   2.4411e-10  3.09475e-16

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.1836, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 1700 K
            Well    Collision, 1/sec
              W1         1.05657e+09
      global relaxation matrix dimension = 265
      setting global matrices ... done, cpu time[sec] = 0.147343, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.74014, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            25033.5      10120.3       4276.6      4588.73      613.535        35513      7691.69      239.152
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.896252, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.104695, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.00693, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  0.000657439  0.000657754   0.00047956
      low eigenvalue method done, cpu time[sec] = 1.01706, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000658  0.000479         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.01e-05  0.000479         1
         *Z       ---       ---   2.3e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00047933
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999994  6.13644e-06   5.1428e-06  7.49077e-07  2.91349e-08  1.16144e-07  4.58289e-09  9.65316e-08  2.44985e-10  3.09478e-16

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.18027, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 1700 K
            Well    Collision, 1/sec
              W1         1.35845e+09
      global relaxation matrix dimension = 265
      setting global matrices ... done, cpu time[sec] = 0.147949, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.74793, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            19470.5      7871.34      3326.25      3569.02      477.194      27621.2      5982.43      186.007
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.896775, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.105282, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.00829, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  0.000619149  0.000619423  0.000443583
      low eigenvalue method done, cpu time[sec] = 1.01872, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000619  0.000443         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.75e-05  0.000443         1
         *Z       ---       ---   2.3e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.000443387
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999994  5.67628e-06  4.78321e-06  6.64885e-07   2.6776e-08  1.02912e-07   4.1538e-09  9.59438e-08   2.4581e-10  3.09481e-16

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.18859, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 1700 K
            Well    Collision, 1/sec
              W1         1.50939e+09
      global relaxation matrix dimension = 265
      setting global matrices ... done, cpu time[sec] = 0.148365, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.74924, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            17523.4      7084.21      2993.62      3212.11      429.474      24859.1      5384.19      167.407
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.899205, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.103516, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.00873, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  0.000603227  0.000603486  0.000428799
      low eigenvalue method done, cpu time[sec] = 1.01924, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000603  0.000429         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.64e-05  0.000429         1
         *Z       ---       ---   2.3e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.000428615
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999995  5.48718e-06  4.63363e-06  6.31836e-07  2.58297e-08  9.77989e-08  3.98474e-09  9.56035e-08  2.46206e-10  3.09483e-16

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.18945, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 1700 K
            Well    Collision, 1/sec
              W1         2.26409e+09
      global relaxation matrix dimension = 265
      setting global matrices ... done, cpu time[sec] = 0.147409, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.74665, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            11682.3       4722.8      1995.75      2141.41      286.316      16572.7      3589.46      111.604
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.900813, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.104737, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.01207, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    0.0005429  0.000543103  0.000373778
      low eigenvalue method done, cpu time[sec] = 1.02222, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000543  0.000374         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.24e-05  0.000374         1
         *Z       ---       ---   2.3e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.000373638
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999995  4.78335e-06  4.06833e-06  5.16438e-07  2.24076e-08  8.02292e-08   3.3879e-09  9.37283e-08  2.48049e-10  3.09491e-16

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.19001, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 1700 K
            Well    Collision, 1/sec
              W1         3.01878e+09
      global relaxation matrix dimension = 265
      setting global matrices ... done, cpu time[sec] = 0.146744, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.74716, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            8761.71       3542.1      1496.81      1606.06      214.737      12429.5      2692.09      83.7033
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.897928, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.103992, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.00789, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00050123  0.000501399  0.000336748
      low eigenvalue method done, cpu time[sec] = 1.01811, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000501  0.000337         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.97e-05  0.000337         1
         *Z       ---       ---   2.3e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.000336634
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999996  4.30963e-06   3.6808e-06  4.45225e-07  2.01787e-08  6.95525e-08  3.01121e-09  9.18156e-08  2.49697e-10    3.095e-16

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.18524, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 1700 K
            Well    Collision, 1/sec
              W1         3.77348e+09
      global relaxation matrix dimension = 265
      setting global matrices ... done, cpu time[sec] = 0.147909, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.74742, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            7009.37      2833.68      1197.45      1284.85       171.79      9943.63      2153.67      66.9627
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.898402, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.105314, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.00989, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  0.000469695  0.000469841  0.000309293
      low eigenvalue method done, cpu time[sec] = 1.01996, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00047  0.000309         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.76e-05  0.000309         1
         *Z       ---       ---   2.3e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.000309197
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999996  3.95837e-06  3.39013e-06  3.95608e-07  1.85568e-08   6.2158e-08  2.74294e-09  8.99832e-08  2.51186e-10  3.09508e-16

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.19019, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 1700 K
            Well    Collision, 1/sec
              W1         4.52817e+09
      global relaxation matrix dimension = 265
      setting global matrices ... done, cpu time[sec] = 0.147307, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.74912, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            5841.14       2361.4      997.874       1070.7      143.158      8286.36      1794.73      55.8022
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.899294, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.104943, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.01031, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  0.000444505  0.000444632  0.000287733
      low eigenvalue method done, cpu time[sec] = 1.02024, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000445  0.000288         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   2.6e-05  0.000288         1
         *Z       ---       ---   2.3e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00028765
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999996  3.68253e-06  3.16002e-06  3.58474e-07  1.72981e-08  5.66351e-08   2.5381e-09   8.8257e-08  2.52538e-10  3.09516e-16

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.18971, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 1700 K
            Well    Collision, 1/sec
              W1         5.28287e+09
      global relaxation matrix dimension = 265
      setting global matrices ... done, cpu time[sec] = 0.147772, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.75171, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            5006.69      2024.06      855.321      917.747      122.707      7102.59      1538.34      47.8305
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.903285, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.105242, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.01486, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  0.000423644  0.000423758  0.000270141
      low eigenvalue method done, cpu time[sec] = 1.02471, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000424   0.00027         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.46e-05   0.00027         1
         *Z       ---       ---   2.3e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.000270068
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999997  3.45744e-06  2.97112e-06  3.29334e-07  1.62792e-08   5.2301e-08   2.3744e-09  8.66377e-08   2.5377e-10  3.09525e-16

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.19859, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 1700 K
            Well    Collision, 1/sec
              W1         6.03756e+09
      global relaxation matrix dimension = 265
      setting global matrices ... done, cpu time[sec] = 0.146991, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.75123, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            4380.86      1771.05      748.406      803.028      107.369      6214.77      1346.05      41.8517
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.900157, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.10471, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.0108, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  0.000405919  0.000406022  0.000255387
      low eigenvalue method done, cpu time[sec] = 1.02089, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000406  0.000255         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.35e-05  0.000255         1
         *Z       ---       ---   2.3e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.000255322
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999997  3.26866e-06  2.81194e-06  3.05679e-07  1.54293e-08   4.8779e-08  2.23928e-09  8.51184e-08  2.54895e-10  3.09533e-16

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.19282, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1800 K
      Energy reference = 66819 1/cm
      Energy step      = 310 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -65.8 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.005927
         W1 Well: collisional kernel bandwidth = 45
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.206485
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.097949
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.103413
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.381879
         W1 Well: minimal relaxation eigenvalue = 0.041804
         W1 Well: maximal relaxation eigenvalue = 1.01421
         W1 Well:       grid size = 261
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -14090 1/cm
         B1 Barrier:        grid size = 216
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -141 1/cm
         B2 Barrier:        grid size = 215
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 168 1/cm
         B3 Barrier:        grid size = 231
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4791 1/cm
         B4 Barrier:        grid size = 236
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6341 1/cm
         B5 Barrier: nonpositive number of states at -23391 1/cm => truncating
         B5 Barrier:        grid size = 291
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23391 1/cm
         B6 Barrier:        grid size = 211
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1408 1/cm
         B7 Barrier:        grid size = 201
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4508 1/cm
         B8 Barrier:        grid size = 162
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16598 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.11216, elapsed time[sec] = 0
      B5 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 261
      MasterEquation::Barrier::truncate: real weight = 2.88388e+29
      MasterEquation::Barrier::truncate: effective weight = 4.07337e+26
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -14090 -14090 8.84e+07 1.13e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -141 1.05e+18
         B2    169 4.46e+17
         B3  -4791 1.98e+17
         B4  -6341 2.11e+17
         B5 -14090 2.85e+16
         B6   1409 1.55e+18
         B7   4509 3.47e+17
         B8  16599 1.19e+16
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  1.19e-14  2.19e-14  3.85e-15  1.18e-15  1.43e-21  4.69e-13  2.01e-11  4.22e-06
          R  8.42e+13         1      1.85     0.324    0.0995   1.2e-07      39.5  1.69e+03  3.55e+08
         P1  4.56e+13     0.542         1     0.176    0.0539   6.5e-08      21.4       915  1.92e+08
         P2  2.59e+14      3.08      5.69         1     0.307   3.7e-07       122  5.21e+03  1.09e+09
         P3  8.46e+14      10.1      18.6      3.26         1  1.21e-06       397   1.7e+04  3.57e+09
         P4  7.01e+20  8.33e+06  1.54e+07   2.7e+06  8.29e+05         1  3.29e+08  1.41e+10  2.96e+15
         P5  2.13e+12    0.0253    0.0468   0.00821   0.00252  3.04e-09         1      42.8  8.98e+06
         P6  4.98e+10  0.000592   0.00109  0.000192  5.89e-05  7.11e-11    0.0234         1   2.1e+05
         P7  2.37e+05  2.82e-09   5.2e-09  9.14e-10   2.8e-10  3.38e-16  1.11e-07  4.76e-06         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  6.13e-16  1.13e-15  1.99e-16   6.1e-17  7.36e-23  2.42e-14  1.04e-12  2.18e-07
          R  1.63e+15         1      1.85     0.324    0.0995   1.2e-07      39.5  1.69e+03  3.55e+08
         P1  8.83e+14     0.542         1     0.176    0.0539   6.5e-08      21.4       915  1.92e+08
         P2  5.03e+15      3.08      5.69         1     0.307   3.7e-07       122  5.21e+03  1.09e+09
         P3  1.64e+16      10.1      18.6      3.26         1  1.21e-06       397   1.7e+04  3.57e+09
         P4  1.36e+22  8.33e+06  1.54e+07   2.7e+06  8.29e+05         1  3.29e+08  1.41e+10  2.96e+15
         P5  4.13e+13    0.0253    0.0468   0.00821   0.00252  3.04e-09         1      42.8  8.98e+06
         P6  9.66e+11  0.000592   0.00109  0.000192  5.89e-05  7.11e-11    0.0234         1   2.1e+05
         P7   4.6e+06  2.82e-09   5.2e-09  9.14e-10   2.8e-10  3.38e-16  1.11e-07  4.76e-06         1
   MasterEquation::set:  done, cpu time[sec] = 1.12546, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 1800 K
            Well    Collision, 1/sec
              W1         1.45445e+08
      global relaxation matrix dimension = 261
      setting global matrices ... done, cpu time[sec] = 0.144124, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.68278, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             191944      81694.1      36224.8      38687.9      5218.24       282823      63463.5      2181.87
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.861152, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.090847, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.969906, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00146512   0.00146697   0.00126098
      low eigenvalue method done, cpu time[sec] = 0.979593, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00147   0.00126         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   9.3e-05   0.00126     0.999
         *Z       ---       ---  1.27e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00125939
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999966  3.44648e-05  2.72424e-05  5.65306e-06     1.86e-07  1.00333e-06   3.3347e-08  3.68971e-07  1.16487e-09  2.73034e-15

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.0725, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 1800 K
            Well    Collision, 1/sec
              W1         4.36334e+08
      global relaxation matrix dimension = 261
      setting global matrices ... done, cpu time[sec] = 0.14317, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.68406, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            63981.3      27231.4      12074.9        12896      1739.41      94274.4      21154.5       727.29
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.859341, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.0887, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.966136, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00123018   0.00123142   0.00100467
      low eigenvalue method done, cpu time[sec] = 0.97613, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00123     0.001         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.61e-05     0.001     0.999
         *Z       ---       ---  1.27e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00100366
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999973  2.74664e-05  2.25631e-05  3.77952e-06  1.35547e-07  6.02939e-07  2.22955e-08   3.7845e-07  1.16975e-09  2.73037e-15

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.06863, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 1800 K
            Well    Collision, 1/sec
              W1         7.27223e+08
      global relaxation matrix dimension = 261
      setting global matrices ... done, cpu time[sec] = 0.143661, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.68922, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            38388.8      16338.8      7244.96      7737.57      1043.65      56564.6      12692.7      436.374
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.866658, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.089835, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.974617, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00111729   0.00111828  0.000885743
      low eigenvalue method done, cpu time[sec] = 0.984876, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00112  0.000885         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.82e-05  0.000885         1
         *Z       ---       ---  1.27e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00088496
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999976  2.42179e-05  2.01751e-05  3.06115e-06  1.16649e-07  4.78696e-07  1.85686e-08  3.80348e-07  1.17403e-09   2.7304e-15

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.08324, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 1800 K
            Well    Collision, 1/sec
              W1         1.01811e+09
      global relaxation matrix dimension = 261
      setting global matrices ... done, cpu time[sec] = 0.142825, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.68359, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            27420.6      11670.6      5174.97      5526.84      745.462      40403.3      9066.22      311.696
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.863795, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.089396, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.971017, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00104262   0.00104346  0.000808895
      low eigenvalue method done, cpu time[sec] = 0.980825, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00104  0.000808         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   6.3e-05  0.000808         1
         *Z       ---       ---  1.27e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.000808241
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999978  2.21185e-05  1.85713e-05  2.64491e-06  1.05389e-07  4.11282e-07  1.64533e-08  3.79903e-07  1.17799e-09  2.73042e-15

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.07171, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 1800 K
            Well    Collision, 1/sec
              W1           1.309e+09
      global relaxation matrix dimension = 261
      setting global matrices ... done, cpu time[sec] = 0.143014, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.6901, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            21327.1      9077.12      4024.98      4298.65      579.804      31424.8       7051.5       242.43
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.862842, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.089921, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.970607, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  0.000986997   0.00098774  0.000752674
      low eigenvalue method done, cpu time[sec] = 0.980436, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000988  0.000752         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.92e-05  0.000752         1
         *Z       ---       ---  1.27e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.000752108
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999979  2.05823e-05   1.7371e-05  2.36282e-06  9.75215e-08  3.67054e-07  1.50209e-08  3.78442e-07  1.18171e-09  2.73045e-15

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.07763, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 1800 K
            Well    Collision, 1/sec
              W1         1.45445e+09
      global relaxation matrix dimension = 261
      setting global matrices ... done, cpu time[sec] = 0.142728, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.6899, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            19194.4      8169.41      3622.48      3868.79      521.824      28282.3      6346.35      218.187
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.86566, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.089244, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.972671, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  0.000963772  0.000964475  0.000729466
      low eigenvalue method done, cpu time[sec] = 0.982398, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000964  0.000729         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.77e-05  0.000729         1
         *Z       ---       ---  1.27e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.000728934
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1      0.99998  1.99481e-05  1.68693e-05  2.25166e-06  9.43518e-08  3.49895e-07  1.44542e-08  3.77505e-07   1.1835e-09  2.73046e-15

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.07997, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 1800 K
            Well    Collision, 1/sec
              W1         2.18167e+09
      global relaxation matrix dimension = 261
      setting global matrices ... done, cpu time[sec] = 0.142574, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.68436, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            12796.3      5446.27      2414.99      2579.19      347.882      18854.9       4230.9      145.458
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.866548, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.089358, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.973491, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  0.000875221  0.000875783  0.000642511
      low eigenvalue method done, cpu time[sec] = 0.983818, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000876  0.000642         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.17e-05  0.000642         1
         *Z       ---       ---  1.27e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.000642099
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999982  1.75718e-05  1.49599e-05   1.8613e-06  8.28176e-08  2.90594e-07  1.24416e-08  3.71911e-07  1.19179e-09  2.73053e-15

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.07642, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 1800 K
            Well    Collision, 1/sec
              W1         2.90889e+09
      global relaxation matrix dimension = 261
      setting global matrices ... done, cpu time[sec] = 0.143481, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.69266, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            9597.19       4084.7      1811.24      1934.39      260.912      14141.2      3173.18      109.093
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.863755, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.088697, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.97005, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00081351  0.000813985  0.000583423
      low eigenvalue method done, cpu time[sec] = 0.979738, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000814  0.000583         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.76e-05  0.000583         1
         *Z       ---       ---  1.27e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.000583082
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999984  1.59567e-05  1.36379e-05  1.61837e-06  7.52348e-08  2.54244e-07  1.11599e-08  3.65859e-07  1.19922e-09   2.7306e-15

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.08103, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 1800 K
            Well    Collision, 1/sec
              W1         3.63612e+09
      global relaxation matrix dimension = 261
      setting global matrices ... done, cpu time[sec] = 0.14403, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.69455, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            7677.76      3267.76      1448.99      1547.51      208.729      11312.9      2538.54      87.2748
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.860167, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.08874, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.966455, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  0.000766486    0.0007669  0.000539283
      low eigenvalue method done, cpu time[sec] = 0.976213, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000767  0.000539         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.46e-05  0.000539         1
         *Z       ---       ---  1.27e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.000538992
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999985  1.47502e-05  1.26387e-05  1.44798e-06   6.9676e-08  2.28895e-07  1.02405e-08  3.59889e-07  1.20594e-09  2.73067e-15

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.08049, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 1800 K
            Well    Collision, 1/sec
              W1         4.36334e+09
      global relaxation matrix dimension = 261
      setting global matrices ... done, cpu time[sec] = 0.143546, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.69128, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            6398.13      2723.14      1207.49       1289.6      173.941      9427.44      2115.45       72.729
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.865344, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.08953, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.972424, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  0.000728709  0.000729077  0.000504406
      low eigenvalue method done, cpu time[sec] = 0.98235, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000729  0.000504         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.21e-05  0.000504         1
         *Z       ---       ---  1.27e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.000504151
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999986  1.37967e-05  1.18426e-05  1.31976e-06  6.53353e-08  2.09852e-07  9.53435e-09   3.5416e-07  1.21207e-09  2.73074e-15

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.08179, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 1800 K
            Well    Collision, 1/sec
              W1         5.09056e+09
      global relaxation matrix dimension = 261
      setting global matrices ... done, cpu time[sec] = 0.143421, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.69765, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            5484.11      2334.12      1034.99      1105.37      149.092      8080.66      1813.24      62.3391
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.864186, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.088176, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.970106, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  0.000697275  0.000697606  0.000475796
      low eigenvalue method done, cpu time[sec] = 0.980095, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000698  0.000476         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.01e-05  0.000476         1
         *Z       ---       ---  1.27e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00047557
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999987  1.30145e-05  1.11856e-05  1.21865e-06  6.18027e-08  1.94834e-07  8.96703e-09  3.48713e-07  1.21769e-09  2.73081e-15

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.08539, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 1800 K
            Well    Collision, 1/sec
              W1         5.81779e+09
      global relaxation matrix dimension = 261
      setting global matrices ... done, cpu time[sec] = 0.142832, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.69729, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             4798.6      2042.35       905.62      967.196      130.456      7070.58      1586.59      54.5467
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.862275, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.088482, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.968653, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  0.000670451  0.000670754  0.000451689
      low eigenvalue method done, cpu time[sec] = 0.97874, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000671  0.000451         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.84e-05  0.000451         1
         *Z       ---       ---  1.27e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.000451485
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999988  1.23554e-05  1.06294e-05  1.13623e-06  5.88421e-08  1.82576e-07  8.49663e-09  3.43549e-07  1.22284e-09  2.73088e-15

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.08477, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1900 K
      Energy reference = 69599 1/cm
      Energy step      = 328 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -63.6 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.005649
         W1 Well: collisional kernel bandwidth = 44
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.179965
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.095028
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.108949
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.376499
         W1 Well: minimal relaxation eigenvalue = 0.0396921
         W1 Well: maximal relaxation eigenvalue = 1.02069
         W1 Well:       grid size = 258
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -15024 1/cm
         B1 Barrier:        grid size = 213
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -265 1/cm
         B2 Barrier:        grid size = 212
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 63 1/cm
         B3 Barrier:        grid size = 227
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4857 1/cm
         B4 Barrier:        grid size = 232
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6496 1/cm
         B5 Barrier: nonpositive number of states at -23225 1/cm => truncating
         B5 Barrier:        grid size = 283
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23225 1/cm
         B6 Barrier:        grid size = 208
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1375 1/cm
         B7 Barrier:        grid size = 198
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4655 1/cm
         B8 Barrier:        grid size = 162
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16463 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.08318, elapsed time[sec] = 0
      B5 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 258
      MasterEquation::Barrier::truncate: real weight = 2.05555e+29
      MasterEquation::Barrier::truncate: effective weight = 3.07198e+26
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -15024 -15024 5.84e+07 1.52e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -265 1.49e+18
         B2     64 6.65e+17
         B3  -4857  3.1e+17
         B4  -6496 3.29e+17
         B5 -15024 4.48e+16
         B6   1376 2.27e+18
         B7   4655 5.27e+17
         B8  16464 1.99e+16
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  6.61e-15  1.24e-14  2.57e-15  8.49e-16  2.21e-21  2.34e-13  8.82e-12  1.16e-06
          R  1.51e+14         1      1.87      0.39     0.128  3.35e-07      35.5  1.33e+03  1.76e+08
         P1  8.09e+13     0.534         1     0.208    0.0687  1.79e-07        19       713  9.43e+07
         P2  3.88e+14      2.57       4.8         1      0.33   8.6e-07        91  3.42e+03  4.52e+08
         P3  1.18e+15      7.79      14.6      3.03         1  2.61e-06       276  1.04e+04  1.37e+09
         P4  4.52e+20  2.98e+06  5.58e+06  1.16e+06  3.83e+05         1  1.06e+08  3.98e+09  5.26e+14
         P5  4.27e+12    0.0282    0.0527     0.011   0.00362  9.45e-09         1      37.6  4.97e+06
         P6  1.13e+11  0.000749    0.0014  0.000292  9.62e-05  2.51e-10    0.0266         1  1.32e+05
         P7  8.58e+05  5.67e-09  1.06e-08  2.21e-09  7.28e-10   1.9e-15  2.01e-07  7.57e-06         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  1.64e-16  3.06e-16  6.38e-17   2.1e-17  5.49e-23  5.81e-15  2.19e-13  2.89e-08
          R   6.1e+15         1      1.87      0.39     0.128  3.35e-07      35.5  1.33e+03  1.76e+08
         P1  3.26e+15     0.534         1     0.208    0.0687  1.79e-07        19       713  9.43e+07
         P2  1.57e+16      2.57       4.8         1      0.33   8.6e-07        91  3.42e+03  4.52e+08
         P3  4.75e+16      7.79      14.6      3.03         1  2.61e-06       276  1.04e+04  1.37e+09
         P4  1.82e+22  2.98e+06  5.58e+06  1.16e+06  3.83e+05         1  1.06e+08  3.98e+09  5.26e+14
         P5  1.72e+14    0.0282    0.0527     0.011   0.00362  9.45e-09         1      37.6  4.97e+06
         P6  4.57e+12  0.000749    0.0014  0.000292  9.62e-05  2.51e-10    0.0266         1  1.32e+05
         P7  3.46e+07  5.67e-09  1.06e-08  2.21e-09  7.28e-10   1.9e-15  2.01e-07  7.57e-06         1
   MasterEquation::set:  done, cpu time[sec] = 1.09627, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 1900 K
            Well    Collision, 1/sec
              W1         1.40432e+08
      global relaxation matrix dimension = 258
      setting global matrices ... done, cpu time[sec] = 0.140222, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.59665, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             208362      93163.4      43361.4      46109.3      6270.16       318275      73814.8      2789.71
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.83929, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.099163, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.955737, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00192446   0.00192775   0.00170593
      low eigenvalue method done, cpu time[sec] = 0.965858, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00193    0.0017         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000118    0.0017     0.999
         *Z       ---       ---  8.01e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00170303
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999897  0.000102636  8.14977e-05  1.64292e-05  5.52634e-07  2.91888e-06  9.81554e-08  1.22762e-06  4.68356e-09  1.89549e-14

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.96397, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 1900 K
            Well    Collision, 1/sec
              W1         4.21295e+08
      global relaxation matrix dimension = 258
      setting global matrices ... done, cpu time[sec] = 0.140444, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.62494, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
              69454      31054.5      14453.8      15369.8      2090.05       106092      24604.9      929.904
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.838429, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.099286, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.943835, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00164034   0.00164261   0.00138326
      low eigenvalue method done, cpu time[sec] = 0.953699, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00164   0.00138         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.78e-05   0.00138     0.999
         *Z       ---       ---  8.01e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00138135
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999917  8.32498e-05  6.85654e-05  1.12139e-05  4.11637e-07  1.79361e-06  6.71725e-08  1.26075e-06  4.70244e-09   1.8955e-14

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.97901, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 1900 K
            Well    Collision, 1/sec
              W1         7.02158e+08
      global relaxation matrix dimension = 258
      setting global matrices ... done, cpu time[sec] = 0.139389, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.62232, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            41672.4      18632.7      8672.27      9221.86      1254.03      63654.9        14763      557.942
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.837038, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.098689, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.941513, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00150175    0.0015036   0.00123116
      low eigenvalue method done, cpu time[sec] = 0.951316, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0015   0.00123         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.83e-05   0.00123     0.999
         *Z       ---       ---  8.01e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00122964
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999926  7.41068e-05  6.18524e-05  9.18066e-06  3.58266e-07  1.44087e-06  5.66193e-08  1.26963e-06  4.71884e-09  1.89552e-14

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.97366, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 1900 K
            Well    Collision, 1/sec
              W1         9.83021e+08
      global relaxation matrix dimension = 258
      setting global matrices ... done, cpu time[sec] = 0.139302, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.62917, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
              29766      13309.1      6194.48      6587.04      895.738      45467.8        10545       398.53
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.840756, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.098939, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.945527, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00140933   0.00141092   0.00113198
      low eigenvalue method done, cpu time[sec] = 0.955166, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00141   0.00113         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.21e-05   0.00113     0.999
         *Z       ---       ---  8.01e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0011307
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999932   6.8144e-05  5.73004e-05  7.99274e-06  3.26241e-07  1.24821e-06  5.05893e-08  1.27072e-06  4.73392e-09  1.89554e-14

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.98412, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 1900 K
            Well    Collision, 1/sec
              W1         1.26388e+09
      global relaxation matrix dimension = 258
      setting global matrices ... done, cpu time[sec] = 0.140046, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.62839, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            23151.3      10351.5      4817.93      5123.25      696.685      35363.9      8201.64      309.968
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.835618, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.099242, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.941546, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00134008    0.0013415   0.00105895
      low eigenvalue method done, cpu time[sec] = 0.951357, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00134   0.00106         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.75e-05   0.00106     0.999
         *Z       ---       ---  8.01e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00105783
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999936  6.37522e-05  5.38697e-05  7.18291e-06  3.03739e-07  1.12117e-06  4.64846e-08  1.26828e-06  4.74803e-09  1.89556e-14

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.97954, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 1900 K
            Well    Collision, 1/sec
              W1         1.40432e+09
      global relaxation matrix dimension = 258
      setting global matrices ... done, cpu time[sec] = 0.13928, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.62343, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            20836.2      9316.34      4336.14      4610.93      627.016      31827.5      7381.48      278.971
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.834726, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.098509, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.939354, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00131106   0.00131241   0.00102868
      low eigenvalue method done, cpu time[sec] = 0.949313, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00131   0.00103         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.56e-05   0.00103     0.999
         *Z       ---       ---  8.01e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00102762
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999938  6.19317e-05  5.24296e-05  6.86262e-06  2.94641e-07  1.07172e-06  4.48552e-08  1.26631e-06  4.75479e-09  1.89557e-14

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.97201, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 1900 K
            Well    Collision, 1/sec
              W1         2.10647e+09
      global relaxation matrix dimension = 258
      setting global matrices ... done, cpu time[sec] = 0.139093, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.62717, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            13890.8      6210.89      2890.76      3073.95      418.011      21218.3      4920.99      185.981
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.835107, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.099084, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.940201, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    0.0011998    0.0012009  0.000914561
      low eigenvalue method done, cpu time[sec] = 0.950027, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0012  0.000914         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.83e-05  0.000914         1
         *Z       ---       ---  8.01e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.000913726
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999945  5.50674e-05  4.69134e-05  5.73182e-06  2.61351e-07  8.99967e-07  3.90381e-08   1.2528e-06  4.78616e-09  1.89561e-14

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.97638, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 1900 K
            Well    Collision, 1/sec
              W1         2.80863e+09
      global relaxation matrix dimension = 258
      setting global matrices ... done, cpu time[sec] = 0.13984, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.62979, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            10418.1      4658.17      2168.07      2305.46      313.508      15913.7      3690.74      139.486
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.839797, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.098929, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.945039, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00112167   0.00112261  0.000836332
      low eigenvalue method done, cpu time[sec] = 0.954946, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00112  0.000836         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.33e-05  0.000836         1
         *Z       ---       ---  8.01e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.000835633
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1      0.99995   5.0361e-05  4.30593e-05  5.02259e-06  2.39287e-07  7.93896e-07  3.53046e-08  1.23692e-06  4.81426e-09  1.89566e-14

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.98487, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 1900 K
            Well    Collision, 1/sec
              W1         3.51079e+09
      global relaxation matrix dimension = 258
      setting global matrices ... done, cpu time[sec] = 0.140128, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.63645, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            8334.49      3726.54      1734.45      1844.37      250.807        12731      2952.59      111.588
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.832927, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.09877, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.937517, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00106177    0.0010626  0.000777496
      low eigenvalue method done, cpu time[sec] = 0.947887, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00106  0.000777         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.95e-05  0.000777         1
         *Z       ---       ---  8.01e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.000776892
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999953  4.68209e-05   4.0126e-05  4.52214e-06  2.23007e-07  7.19486e-07  3.26101e-08  1.22066e-06  4.83976e-09   1.8957e-14

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.98335, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 1900 K
            Well    Collision, 1/sec
              W1         4.21295e+09
      global relaxation matrix dimension = 258
      setting global matrices ... done, cpu time[sec] = 0.140081, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.62827, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             6945.4      3105.45      1445.38      1536.98      209.005      10609.2      2460.49      92.9904
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.840893, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.098622, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.945573, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00101342   0.00101416  0.000730746
      low eigenvalue method done, cpu time[sec] = 0.955344, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00101   0.00073         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.64e-05   0.00073         1
         *Z       ---       ---  8.01e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.000730213
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999956  4.40076e-05  3.77757e-05  4.14363e-06  2.10226e-07  6.63307e-07  3.05295e-08  1.20472e-06  4.86306e-09  1.89575e-14

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.98331, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 1900 K
            Well    Collision, 1/sec
              W1          4.9151e+09
      global relaxation matrix dimension = 258
      setting global matrices ... done, cpu time[sec] = 0.140143, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.63577, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             5953.2      2661.81       1238.9      1317.41      179.148      9093.56      2108.99       79.706
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.839953, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.127042, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.973158, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  0.000973023  0.000973697  0.000692214
      low eigenvalue method done, cpu time[sec] = 0.983144, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000974  0.000692         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.39e-05  0.000692         1
         *Z       ---       ---  8.01e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.000691735
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999958  4.16887e-05  3.58264e-05  3.84388e-06  1.99774e-07  6.18809e-07  2.88504e-08  1.18932e-06  4.88446e-09  1.89579e-14

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.02045, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 1900 K
            Well    Collision, 1/sec
              W1         5.61726e+09
      global relaxation matrix dimension = 258
      setting global matrices ... done, cpu time[sec] = 0.140839, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.62891, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            5209.05      2329.08      1084.03      1152.73      156.754      7956.87      1845.37      69.7428
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.84021, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.098798, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.945376, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  0.000938423  0.000939042  0.000659609
      low eigenvalue method done, cpu time[sec] = 0.955461, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000939  0.000659         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.17e-05  0.000659         1
         *Z       ---       ---  8.01e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.000659174
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1      0.99996  3.97264e-05  3.41691e-05  3.59859e-06  1.90979e-07  5.82349e-07  2.74526e-08  1.17455e-06   4.9042e-09  1.89584e-14

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.98596, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2000 K
      Energy reference = 72380 1/cm
      Energy step      = 345 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -61.4 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.005769
         W1 Well: collisional kernel bandwidth = 44
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.175988
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.092624
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.099558
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.363328
         W1 Well: minimal relaxation eigenvalue = 0.0379404
         W1 Well: maximal relaxation eigenvalue = 1.02731
         W1 Well:       grid size = 255
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -15594 1/cm
         B1 Barrier:        grid size = 210
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -69 1/cm
         B2 Barrier:        grid size = 210
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = -69 1/cm
         B3 Barrier:        grid size = 224
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4899 1/cm
         B4 Barrier:        grid size = 228
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6279 1/cm
         B5 Barrier: nonpositive number of states at -23185 1/cm => truncating
         B5 Barrier:        grid size = 277
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23184 1/cm
         B6 Barrier:        grid size = 206
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1310 1/cm
         B7 Barrier:        grid size = 197
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4414 1/cm
         B8 Barrier:        grid size = 162
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16490 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.0534, elapsed time[sec] = 0
      B5 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 255
      MasterEquation::Barrier::truncate: real weight = 1.56224e+29
      MasterEquation::Barrier::truncate: effective weight = 2.45574e+26
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -15594 -15594 4.51e+07 2.05e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -69 2.08e+18
         B2    -69 9.75e+17
         B3  -4899 4.77e+17
         B4  -6279 5.05e+17
         B5 -15594 6.92e+16
         B6   1311 3.29e+18
         B7   4415 7.87e+17
         B8  16491 3.25e+16
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1   3.3e-15  6.26e-15  1.52e-15  5.34e-16  2.79e-21  1.06e-13  3.55e-12   3.1e-07
          R  3.03e+14         1       1.9      0.46     0.162  8.45e-07      32.1  1.08e+03  9.38e+07
         P1   1.6e+14     0.527         1     0.242    0.0853  4.45e-07      16.9       568  4.95e+07
         P2  6.59e+14      2.18      4.13         1     0.352  1.84e-06      69.8  2.34e+03  2.04e+08
         P3  1.87e+15      6.19      11.7      2.84         1  5.22e-06       199  6.66e+03   5.8e+08
         P4  3.58e+20  1.18e+06  2.24e+06  5.44e+05  1.91e+05         1   3.8e+07  1.27e+09  1.11e+14
         P5  9.43e+12    0.0312    0.0591    0.0143   0.00504  2.63e-08         1      33.5  2.92e+06
         P6  2.81e+11  0.000929   0.00176  0.000427   0.00015  7.85e-10    0.0298         1  8.71e+04
         P7  3.23e+06  1.07e-08  2.02e-08   4.9e-09  1.72e-09  9.01e-15  3.42e-07  1.15e-05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  5.02e-17  9.51e-17  2.31e-17  8.11e-18  4.24e-23  1.61e-15   5.4e-14   4.7e-09
          R  1.99e+16         1       1.9      0.46     0.162  8.45e-07      32.1  1.08e+03  9.38e+07
         P1  1.05e+16     0.527         1     0.242    0.0853  4.45e-07      16.9       568  4.95e+07
         P2  4.34e+16      2.18      4.13         1     0.352  1.84e-06      69.8  2.34e+03  2.04e+08
         P3  1.23e+17      6.19      11.7      2.84         1  5.22e-06       199  6.66e+03   5.8e+08
         P4  2.36e+22  1.18e+06  2.24e+06  5.44e+05  1.91e+05         1   3.8e+07  1.27e+09  1.11e+14
         P5  6.21e+14    0.0312    0.0591    0.0143   0.00504  2.63e-08         1      33.5  2.92e+06
         P6  1.85e+13  0.000929   0.00176  0.000427   0.00015  7.85e-10    0.0298         1  8.71e+04
         P7  2.13e+08  1.07e-08  2.02e-08   4.9e-09  1.72e-09  9.01e-15  3.42e-07  1.15e-05         1
   MasterEquation::set:  done, cpu time[sec] = 1.06652, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 2000 K
            Well    Collision, 1/sec
              W1         1.35835e+08
      global relaxation matrix dimension = 255
      setting global matrices ... done, cpu time[sec] = 0.137399, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.59753, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             224380       105189      51396.8      54433.3      7458.69       354700      84842.3      3506.63
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.813042, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.086328, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.916237, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00276858   0.00277576   0.00259168
      low eigenvalue method done, cpu time[sec] = 0.925743, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00278   0.00258         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000168   0.00258     0.999
         *Z       ---       ---  4.93e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00258498
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999732  0.000267561  0.000213099  4.21321e-05  1.43654e-06  7.42029e-06  2.52675e-07  3.55863e-06  1.61614e-08  1.07362e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.91608, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 2000 K
            Well    Collision, 1/sec
              W1         4.07506e+08
      global relaxation matrix dimension = 255
      setting global matrices ... done, cpu time[sec] = 0.137464, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.59726, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            74793.3      35062.9      17132.3      18144.4      2486.23       118233      28280.8      1168.88
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.813787, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.084824, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.91587, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00239291   0.00239801   0.00213396
      low eigenvalue method done, cpu time[sec] = 0.925436, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0024   0.00213         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000142   0.00213     0.999
         *Z       ---       ---  4.93e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00212942
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1      0.99978  0.000220408   0.00018188  2.91882e-05  1.09248e-06  4.65967e-06  1.76848e-07    3.658e-06  1.62238e-08  1.07363e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.91535, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 2000 K
            Well    Collision, 1/sec
              W1         6.79177e+08
      global relaxation matrix dimension = 255
      setting global matrices ... done, cpu time[sec] = 0.137005, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.59974, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
              44876      21037.7      10279.4      10886.7      1491.74      70939.9      16968.5      701.326
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.819597, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.084474, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.921123, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00220742   0.00221166   0.00191552
      low eigenvalue method done, cpu time[sec] = 0.930673, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00221   0.00191         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000129   0.00191     0.999
         *Z       ---       ---  4.93e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00191186
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999802  0.000197889  0.000165402  2.41076e-05  9.60882e-07  3.78537e-06  1.50759e-07  3.68977e-06  1.62774e-08  1.07364e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.92321, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 2000 K
            Well    Collision, 1/sec
              W1         9.50848e+08
      global relaxation matrix dimension = 255
      setting global matrices ... done, cpu time[sec] = 0.136721, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.60356, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            32054.3        15027       7342.4      7776.19      1065.53      50671.4      12120.3      500.947
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.810162, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.084539, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.9119, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00208283   0.00208653   0.00177202
      low eigenvalue method done, cpu time[sec] = 0.921505, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00209   0.00177         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   0.00012   0.00177     0.999
         *Z       ---       ---  4.93e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00176888
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999817   0.00018309  0.000154127  2.11245e-05  8.81396e-07  3.30487e-06  1.35759e-07  3.69915e-06  1.63265e-08  1.07365e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.91705, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 2000 K
            Well    Collision, 1/sec
              W1         1.22252e+09
      global relaxation matrix dimension = 255
      setting global matrices ... done, cpu time[sec] = 0.136759, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.60121, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            24931.1      11687.6      5710.76      6048.15      828.744      39411.1      9426.92      389.626
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.813355, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.08446, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.91472, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00198899    0.0019923   0.00166574
      low eigenvalue method done, cpu time[sec] = 0.924244, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00199   0.00166         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000114   0.00166     0.999
         *Z       ---       ---  4.93e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00166297
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999828  0.000172127  0.000145574  1.90827e-05  8.25265e-07  2.98653e-06  1.25499e-07  3.69802e-06  1.63723e-08  1.07366e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.91602, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 2000 K
            Well    Collision, 1/sec
              W1         1.35835e+09
      global relaxation matrix dimension = 255
      setting global matrices ... done, cpu time[sec] = 0.137983, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.6042, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
              22438      10518.9      5139.68      5443.33      745.869        35470      8484.23      350.663
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.810741, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.084205, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.911781, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00194952   0.00195268   0.00162153
      low eigenvalue method done, cpu time[sec] = 0.921353, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00195   0.00162         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000111   0.00162     0.999
         *Z       ---       ---  4.93e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0016189
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999832  0.000167566  0.000141969   1.8273e-05  8.02494e-07  2.86223e-06  1.21414e-07  3.69514e-06  1.63942e-08  1.07366e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.91872, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 2000 K
            Well    Collision, 1/sec
              W1         2.03753e+09
      global relaxation matrix dimension = 255
      setting global matrices ... done, cpu time[sec] = 0.137787, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.60552, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            14958.7      7012.58      3426.45      3628.89      497.246      23646.6      5656.15      233.775
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.832614, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.08534, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.935002, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00179744   0.00180006   0.00145394
      low eigenvalue method done, cpu time[sec] = 0.94439, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0018   0.00145         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000101   0.00145     0.999
         *Z       ---       ---  4.93e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00145183
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1      0.99985  0.000150273  0.000128078  1.54026e-05  7.18754e-07  2.42854e-06  1.06758e-07  3.66882e-06   1.6496e-08  1.07368e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.94368, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 2000 K
            Well    Collision, 1/sec
              W1         2.71671e+09
      global relaxation matrix dimension = 255
      setting global matrices ... done, cpu time[sec] = 0.136685, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.60066, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
              11219      5259.43      2569.84      2721.67      372.935        17735      4242.11      175.331
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.807913, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.08511, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.910019, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00168986   0.00169212   0.00133816
      low eigenvalue method done, cpu time[sec] = 0.919427, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00169   0.00134         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.43e-05   0.00134     0.999
         *Z       ---       ---  4.93e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00133637
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999862  0.000138322  0.000118291  1.35912e-05  6.62838e-07  2.15885e-06  9.72854e-08  3.63366e-06  1.65872e-08  1.07371e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.911, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 2000 K
            Well    Collision, 1/sec
              W1         3.39588e+09
      global relaxation matrix dimension = 255
      setting global matrices ... done, cpu time[sec] = 0.137521, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.60757, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             8975.2      4207.55      2055.87      2177.33      298.348        14188      3393.69      140.265
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.811777, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.085267, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.914238, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00160692   0.00160893   0.00125054
      low eigenvalue method done, cpu time[sec] = 0.923698, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00161   0.00125         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   8.9e-05   0.00125     0.999
         *Z       ---       ---  4.93e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00124898
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999871  0.000129277  0.000110794  1.23067e-05  6.21335e-07  1.96862e-06  9.04097e-08  3.59593e-06  1.66701e-08  1.07373e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.9244, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 2000 K
            Well    Collision, 1/sec
              W1         4.07506e+09
      global relaxation matrix dimension = 255
      setting global matrices ... done, cpu time[sec] = 0.137116, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.6039, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            7479.33      3506.29      1713.23      1814.44      248.623      11823.3      2828.08      116.888
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.812734, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.084817, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.914488, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00153965   0.00154147   0.00118057
      low eigenvalue method done, cpu time[sec] = 0.924223, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00154   0.00118         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.47e-05   0.00118     0.999
         *Z       ---       ---  4.93e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00117918
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999878  0.000122052  0.000104755   1.1331e-05  5.88588e-07  1.82434e-06  8.50751e-08  3.55791e-06  1.67461e-08  1.07376e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.91862, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 2000 K
            Well    Collision, 1/sec
              W1         4.75424e+09
      global relaxation matrix dimension = 255
      setting global matrices ... done, cpu time[sec] = 0.137124, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.59995, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            6410.86      3005.39      1468.48      1555.24      213.106      10134.3      2424.07      100.189
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.812552, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.085289, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.914853, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00148321   0.00148488   0.00112265
      low eigenvalue method done, cpu time[sec] = 0.925114, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00148   0.00112         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.12e-05   0.00112     0.999
         *Z       ---       ---  4.93e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00112139
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999884   0.00011607  9.97243e-05  1.05556e-05  5.61694e-07   1.7096e-06  8.07521e-08  3.52053e-06  1.68162e-08  1.07378e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.91615, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 2000 K
            Well    Collision, 1/sec
              W1         5.43342e+09
      global relaxation matrix dimension = 255
      setting global matrices ... done, cpu time[sec] = 0.136862, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.6082, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             5609.5      2629.72      1284.92      1360.83      186.467      8867.49      2121.06      87.6657
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.812848, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.084553, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.914446, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00143471   0.00143625   0.00107344
      low eigenvalue method done, cpu time[sec] = 0.924257, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00144   0.00107         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.82e-05   0.00107     0.999
         *Z       ---       ---  4.93e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00107229
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999889  0.000110989  9.54298e-05  9.91888e-06  5.38976e-07  1.61526e-06  7.71399e-08   3.4842e-06  1.68812e-08   1.0738e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.92333, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2100 K
      Energy reference = 75160 1/cm
      Energy step      = 362 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -59.2 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.005938
         W1 Well: collisional kernel bandwidth = 44
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.196003
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.090538
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.077477
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.356433
         W1 Well: minimal relaxation eigenvalue = 0.0361236
         W1 Well: maximal relaxation eigenvalue = 1.03614
         W1 Well:       grid size = 253
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -16426 1/cm
         B1 Barrier:        grid size = 208
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -136 1/cm
         B2 Barrier:        grid size = 208
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = -136 1/cm
         B3 Barrier:        grid size = 221
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4842 1/cm
         B4 Barrier:        grid size = 225
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6290 1/cm
         B5 Barrier: nonpositive number of states at -23666 1/cm => truncating
         B5 Barrier:        grid size = 273
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23666 1/cm
         B6 Barrier:        grid size = 204
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1311 1/cm
         B7 Barrier:        grid size = 195
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4569 1/cm
         B8 Barrier:        grid size = 162
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16515 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.04427, elapsed time[sec] = 0
      B5 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 253
      MasterEquation::Barrier::truncate: real weight = 1.25127e+29
      MasterEquation::Barrier::truncate: effective weight = 2.06384e+26
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -16426 -16426 3.05e+07 2.73e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -136 2.87e+18
         B2   -136 1.41e+18
         B3  -4842 7.23e+17
         B4  -6290 7.63e+17
         B5 -16426 1.05e+17
         B6   1312 4.69e+18
         B7   4570 1.16e+18
         B8  16516  5.2e+16
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  1.81e-15  3.49e-15  9.68e-16  3.61e-16  3.53e-21  5.31e-14   1.6e-12  9.59e-08
          R  5.51e+14         1      1.92     0.533     0.199  1.95e-06      29.2       882  5.28e+07
         P1  2.87e+14     0.521         1     0.278     0.104  1.01e-06      15.2       459  2.75e+07
         P2  1.03e+15      1.88       3.6         1     0.373  3.65e-06      54.8  1.65e+03  9.91e+07
         P3  2.77e+15      5.03      9.66      2.68         1  9.79e-06       147  4.43e+03  2.65e+08
         P4  2.83e+20  5.13e+05  9.87e+05  2.74e+05  1.02e+05         1   1.5e+07  4.53e+08  2.71e+13
         P5  1.88e+13    0.0342    0.0657    0.0182   0.00681  6.66e-08         1      30.2  1.81e+06
         P6  6.25e+11   0.00113   0.00218  0.000604  0.000225  2.21e-09    0.0331         1  5.99e+04
         P7  1.04e+07  1.89e-08  3.64e-08  1.01e-08  3.77e-09  3.69e-14  5.53e-07  1.67e-05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  1.73e-17  3.32e-17   9.2e-18  3.43e-18  3.36e-23  5.05e-16  1.52e-14  9.12e-10
          R  5.79e+16         1      1.92     0.533     0.199  1.95e-06      29.2       882  5.28e+07
         P1  3.01e+16     0.521         1     0.278     0.104  1.01e-06      15.2       459  2.75e+07
         P2  1.09e+17      1.88       3.6         1     0.373  3.65e-06      54.8  1.65e+03  9.91e+07
         P3  2.91e+17      5.03      9.66      2.68         1  9.79e-06       147  4.43e+03  2.65e+08
         P4  2.97e+22  5.13e+05  9.87e+05  2.74e+05  1.02e+05         1   1.5e+07  4.53e+08  2.71e+13
         P5  1.98e+15    0.0342    0.0657    0.0182   0.00681  6.66e-08         1      30.2  1.81e+06
         P6  6.56e+13   0.00113   0.00218  0.000604  0.000225  2.21e-09    0.0331         1  5.99e+04
         P7   1.1e+09  1.89e-08  3.64e-08  1.01e-08  3.77e-09  3.69e-14  5.53e-07  1.67e-05         1
   MasterEquation::set:  done, cpu time[sec] = 1.05736, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 2100 K
            Well    Collision, 1/sec
              W1         1.31603e+08
      global relaxation matrix dimension = 253
      setting global matrices ... done, cpu time[sec] = 0.135452, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.53435, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             239897       117698      60372.2      63697.9      8790.56       391834      96478.8      4340.38
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.79418, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.082874, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.893758, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00371101   0.00372444   0.00361556
      low eigenvalue method done, cpu time[sec] = 0.903068, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00372    0.0036         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   0.00022    0.0036     0.998
         *Z       ---       ---  3.25e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00360254
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999375  0.000624568  0.000498905  9.66714e-05   3.3509e-06  1.69445e-05  5.84079e-07  9.18573e-06  4.89931e-08  5.11006e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.82475, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 2100 K
            Well    Collision, 1/sec
              W1          3.9481e+08
      global relaxation matrix dimension = 253
      setting global matrices ... done, cpu time[sec] = 0.13442, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.55662, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            79965.8      39232.6      20124.1      21232.6      2930.19       130611      32159.6      1446.79
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.790147, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.082122, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.889056, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00324702   0.00325683   0.00301883
      low eigenvalue method done, cpu time[sec] = 0.898373, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00326   0.00301         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000188   0.00301     0.998
         *Z       ---       ---  3.25e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00300974
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999478  0.000521796  0.000431347  6.79431e-05  2.59644e-06  1.08506e-05  4.17184e-07  9.44772e-06  4.91762e-08  5.11011e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.84053, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 2100 K
            Well    Collision, 1/sec
              W1         6.58016e+08
      global relaxation matrix dimension = 253
      setting global matrices ... done, cpu time[sec] = 0.134706, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.564, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            47979.5      23539.6      12074.4      12739.6      1758.11      78366.8      19295.8      868.076
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.795009, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.082585, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.894592, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00301551   0.00302376   0.00273084
      low eigenvalue method done, cpu time[sec] = 0.904153, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00302   0.00272         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000172   0.00272     0.999
         *Z       ---       ---  3.25e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0027234
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999528  0.000472154  0.000395139  5.65889e-05   2.3055e-06  8.90465e-06   3.5931e-07   9.5422e-06  4.93318e-08  5.11015e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.85514, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 2100 K
            Well    Collision, 1/sec
              W1         9.21223e+08
      global relaxation matrix dimension = 253
      setting global matrices ... done, cpu time[sec] = 0.133974, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.55949, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            34271.1        16814       8624.6       9099.7      1255.79      55976.3      13782.7      620.054
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.79507, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.082482, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.894688, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00285901   0.00286628   0.00254033
      low eigenvalue method done, cpu time[sec] = 0.904579, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00287   0.00253         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000161   0.00253     0.999
         *Z       ---       ---  3.25e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00253389
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999561  0.000439298  0.000370154  4.98892e-05  2.12881e-06  7.82966e-06  3.25864e-07  9.57975e-06  4.94734e-08  5.11019e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.84762, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 2100 K
            Well    Collision, 1/sec
              W1         1.18443e+09
      global relaxation matrix dimension = 253
      setting global matrices ... done, cpu time[sec] = 0.135163, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.56331, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            26655.3      13077.5      6708.02      7077.54      976.729      43537.1      10719.9      482.264
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.79566, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.082412, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.895061, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00274056   0.00274713   0.00239849
      low eigenvalue method done, cpu time[sec] = 0.904343, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00275   0.00239         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000153   0.00239     0.999
         *Z       ---       ---  3.25e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00239275
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999585   0.00041483  0.000351087  4.52857e-05  2.00348e-06  7.11455e-06  3.02893e-07  9.58989e-06  4.96052e-08  5.11023e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.85257, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 2100 K
            Well    Collision, 1/sec
              W1         1.31603e+09
      global relaxation matrix dimension = 253
      setting global matrices ... done, cpu time[sec] = 0.133804, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.56582, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            23989.7      11769.8      6037.22      6369.79      879.056      39183.4      9647.88      434.038
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.790241, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.082512, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.889407, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00269059   0.00269689   0.00233929
      low eigenvalue method done, cpu time[sec] = 0.898906, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0027   0.00233         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   0.00015   0.00233     0.999
         *Z       ---       ---  3.25e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00233383
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999595  0.000404615  0.000343021  4.34556e-05   1.9525e-06  6.83459e-06  2.93721e-07  9.58874e-06  4.96681e-08  5.11026e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.84886, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 2100 K
            Well    Collision, 1/sec
              W1         1.97405e+09
      global relaxation matrix dimension = 253
      setting global matrices ... done, cpu time[sec] = 0.13486, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.56981, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            15993.2      7846.52      4024.81      4246.53      586.037      26122.3      6431.92      289.359
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.799249, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.081932, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.897857, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00249717   0.00250245   0.00211377
      low eigenvalue method done, cpu time[sec] = 0.90789, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0025   0.00211         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000137   0.00211     0.999
         *Z       ---       ---  3.25e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00210931
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999634   0.00036569  0.000311767  3.69429e-05  1.76417e-06  5.85389e-06  2.60686e-07  9.54964e-06  4.99598e-08  5.11036e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.86325, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 2100 K
            Well    Collision, 1/sec
              W1         2.63207e+09
      global relaxation matrix dimension = 253
      setting global matrices ... done, cpu time[sec] = 0.134841, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.56832, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            11994.9      5884.89      3018.61       3184.9      439.528      19591.7      4823.94      217.019
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.795854, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.082965, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.895564, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00235944   0.00236406   0.00195684
      low eigenvalue method done, cpu time[sec] = 0.905831, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00236   0.00195         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000128   0.00195     0.999
         *Z       ---       ---  3.25e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00195302
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999661  0.000338594  0.000289576  3.28094e-05  1.63759e-06   5.2404e-06  2.39201e-07  9.48377e-06  5.02212e-08  5.11047e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.86061, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 2100 K
            Well    Collision, 1/sec
              W1         3.29008e+09
      global relaxation matrix dimension = 253
      setting global matrices ... done, cpu time[sec] = 0.134666, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.56436, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             9595.9      4707.91      2414.89      2547.92      351.622      15673.4      3859.15      173.615
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.799605, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.082748, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.899503, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00225273   0.00225687   0.00183743
      low eigenvalue method done, cpu time[sec] = 0.909471, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00226   0.00183         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000122   0.00183     0.999
         *Z       ---       ---  3.25e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00183406
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999682  0.000317969  0.000272476  2.98648e-05  1.54314e-06  4.80559e-06  2.23529e-07  9.40806e-06   5.0459e-08  5.11058e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.85954, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 2100 K
            Well    Collision, 1/sec
              W1          3.9481e+09
      global relaxation matrix dimension = 253
      setting global matrices ... done, cpu time[sec] = 0.134551, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.56733, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            7996.58      3923.26      2012.41      2123.26      293.019      13061.1      3215.96      144.679
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.798401, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.082451, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.897622, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00216581   0.00216958   0.00174162
      low eigenvalue method done, cpu time[sec] = 0.90756, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00217   0.00174         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000116   0.00174     0.999
         *Z       ---       ---  3.25e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00173859
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999699  0.000301417  0.000258635  2.76195e-05  1.46829e-06  4.47447e-06  2.11318e-07  9.32906e-06  5.06775e-08  5.11068e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.86121, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 2100 K
            Well    Collision, 1/sec
              W1         4.60611e+09
      global relaxation matrix dimension = 253
      setting global matrices ... done, cpu time[sec] = 0.135493, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.56615, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            6854.21      3362.79      1724.92      1819.94      251.159      11195.3      2756.54      124.011
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.798029, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.081981, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.896763, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00209263   0.00209611   0.00166198
      low eigenvalue method done, cpu time[sec] = 0.906718, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0021   0.00166         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000112   0.00166     0.999
         *Z       ---       ---  3.25e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00165923
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999712  0.000287659  0.000247056  2.58289e-05  1.40658e-06  4.21021e-06  2.01386e-07  9.24967e-06  5.08794e-08  5.11079e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.85916, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 2100 K
            Well    Collision, 1/sec
              W1         5.26413e+09
      global relaxation matrix dimension = 253
      setting global matrices ... done, cpu time[sec] = 0.135188, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.57195, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            5997.44      2942.45      1509.31      1592.45      219.764      9795.86      2411.97      108.509
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.794927, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.082478, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.894181, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00202953   0.00203277   0.00159411
      low eigenvalue method done, cpu time[sec] = 0.904451, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00203   0.00159         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000108   0.00159     0.999
         *Z       ---       ---  3.25e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00159157
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999724  0.000275929  0.000237136  2.43545e-05  1.35427e-06  3.99224e-06  1.93061e-07  9.17129e-06  5.10669e-08   5.1109e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.86346, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2200 K
      Energy reference = 77940 1/cm
      Energy step      = 379 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -57 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.006254
         W1 Well: collisional kernel bandwidth = 44
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.193708
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.090156
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.092947
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.357916
         W1 Well: minimal relaxation eigenvalue = 0.0344683
         W1 Well: maximal relaxation eigenvalue = 1.04564
         W1 Well:       grid size = 251
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -17188 1/cm
         B1 Barrier:        grid size = 206
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -133 1/cm
         B2 Barrier:        grid size = 206
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = -133 1/cm
         B3 Barrier:        grid size = 218
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4681 1/cm
         B4 Barrier:        grid size = 222
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6197 1/cm
         B5 Barrier: nonpositive number of states at -23253 1/cm => truncating
         B5 Barrier:        grid size = 267
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23252 1/cm
         B6 Barrier:        grid size = 202
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1382 1/cm
         B7 Barrier:        grid size = 194
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4414 1/cm
         B8 Barrier:        grid size = 162
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16542 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.05575, elapsed time[sec] = 0
      B5 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 251
      MasterEquation::Barrier::truncate: real weight = 1.04826e+29
      MasterEquation::Barrier::truncate: effective weight = 1.81018e+26
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -17188 -17188 2.11e+07 3.61e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -133 3.92e+18
         B2   -133 2.01e+18
         B3  -4681 1.08e+18
         B4  -6197 1.14e+18
         B5 -17188 1.58e+17
         B6   1383 6.61e+18
         B7   4415 1.67e+18
         B8  16543 8.16e+16
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  9.89e-16  1.93e-15  6.03e-16  2.38e-16  4.12e-21  2.65e-14  7.27e-13  3.09e-08
          R  1.01e+15         1      1.95      0.61      0.24  4.16e-06      26.8       735  3.13e+07
         P1  5.19e+14     0.514         1     0.313     0.123  2.14e-06      13.8       377  1.61e+07
         P2  1.66e+15      1.64      3.19         1     0.394  6.82e-06      43.9   1.2e+03  5.13e+07
         P3  4.21e+15      4.16       8.1      2.54         1  1.73e-05       112  3.06e+03   1.3e+08
         P4  2.43e+20   2.4e+05  4.68e+05  1.47e+05  5.77e+04         1  6.44e+06  1.77e+08  7.52e+12
         P5  3.77e+13    0.0373    0.0727    0.0228   0.00897  1.55e-07         1      27.4  1.17e+06
         P6  1.38e+12   0.00136   0.00265   0.00083  0.000327  5.66e-09    0.0365         1  4.26e+04
         P7  3.23e+07   3.2e-08  6.22e-08  1.95e-08  7.68e-09  1.33e-13  8.56e-07  2.35e-05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  6.57e-18  1.28e-17  4.01e-18  1.58e-18  2.73e-23  1.76e-16  4.83e-15  2.06e-10
          R  1.52e+17         1      1.95      0.61      0.24  4.16e-06      26.8       735  3.13e+07
         P1  7.82e+16     0.514         1     0.313     0.123  2.14e-06      13.8       377  1.61e+07
         P2  2.49e+17      1.64      3.19         1     0.394  6.82e-06      43.9   1.2e+03  5.13e+07
         P3  6.33e+17      4.16       8.1      2.54         1  1.73e-05       112  3.06e+03   1.3e+08
         P4  3.66e+22   2.4e+05  4.68e+05  1.47e+05  5.77e+04         1  6.44e+06  1.77e+08  7.52e+12
         P5  5.68e+15    0.0373    0.0727    0.0228   0.00897  1.55e-07         1      27.4  1.17e+06
         P6  2.07e+14   0.00136   0.00265   0.00083  0.000327  5.66e-09    0.0365         1  4.26e+04
         P7  4.86e+09   3.2e-08  6.22e-08  1.95e-08  7.68e-09  1.33e-13  8.56e-07  2.35e-05         1
   MasterEquation::set:  done, cpu time[sec] = 1.06949, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 2200 K
            Well    Collision, 1/sec
              W1         1.27691e+08
      global relaxation matrix dimension = 251
      setting global matrices ... done, cpu time[sec] = 0.133447, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.51836, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             254841       130628      70332.9      73945.1      10273.1       429456       108663      5298.67
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.779413, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.08866, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.884563, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00500945   0.00503509   0.00511369
      low eigenvalue method done, cpu time[sec] = 0.894443, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00504   0.00509         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000293   0.00509     0.997
         *Z       ---       ---  2.18e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00508768
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.998678   0.00132217   0.00105961  0.000200759  7.10083e-06  3.51358e-05  1.22656e-06  2.14498e-05   1.3272e-07  2.09339e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.79272, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 2200 K
            Well    Collision, 1/sec
              W1         3.83073e+08
      global relaxation matrix dimension = 251
      setting global matrices ... done, cpu time[sec] = 0.132759, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.53293, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
              84947      43542.7      23444.3      24648.4      3424.37       143152      36221.1      1766.22
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.773848, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.081065, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.871421, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00443481   0.00445402   0.00432605
      low eigenvalue method done, cpu time[sec] = 0.881033, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00445   0.00431         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000252   0.00431     0.998
         *Z       ---       ---  2.18e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00430742
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.998881    0.0011194  0.000927065  0.000143254  5.59897e-06  2.29198e-05  8.93027e-07  2.20656e-05  1.33198e-07   2.0934e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.79256, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 2200 K
            Well    Collision, 1/sec
              W1         6.38454e+08
      global relaxation matrix dimension = 251
      setting global matrices ... done, cpu time[sec] = 0.13336, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.53305, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            50968.2      26125.6      14066.6        14789      2054.62      85891.1      21732.6      1059.73
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.776147, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.081264, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.873847, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00414483   0.00416119   0.00394149
      low eigenvalue method done, cpu time[sec] = 0.883055, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00416   0.00393         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000232   0.00393     0.998
         *Z       ---       ---  2.18e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00392602
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1      0.99898   0.00102028  0.000854961  0.000120298  5.01577e-06  1.89906e-05  7.76587e-07  2.23075e-05  1.33599e-07  2.09342e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.79611, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 2200 K
            Well    Collision, 1/sec
              W1         8.93836e+08
      global relaxation matrix dimension = 251
      setting global matrices ... done, cpu time[sec] = 0.132998, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.54091, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            36405.9      18661.1      10047.6      10563.6      1467.59      61350.8      15523.3      756.952
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.78002, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.082959, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.879477, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00394753    0.0039621   0.00368537
      low eigenvalue method done, cpu time[sec] = 0.888719, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00396   0.00367         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000219   0.00367     0.998
         *Z       ---       ---  2.18e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00367184
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999046  0.000954227  0.000804805   0.00010668  4.65983e-06  1.68098e-05  7.08984e-07  2.24199e-05  1.33963e-07  2.09344e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.80888, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 2200 K
            Well    Collision, 1/sec
              W1         1.14922e+09
      global relaxation matrix dimension = 251
      setting global matrices ... done, cpu time[sec] = 0.132667, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.53827, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            28315.7      14514.2      7814.77      8216.12      1141.46      47717.3      12073.7      588.741
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.777373, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.081004, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.87478, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    0.0037975   0.00381078   0.00349374
      low eigenvalue method done, cpu time[sec] = 0.88403, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00381   0.00348         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000209   0.00348     0.998
         *Z       ---       ---  2.18e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00348158
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999095  0.000904783  0.000766309   9.7285e-05  4.40638e-06  1.53537e-05  6.62384e-07  2.24685e-05    1.343e-07  2.09345e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.80009, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 2200 K
            Well    Collision, 1/sec
              W1         1.27691e+09
      global relaxation matrix dimension = 251
      setting global matrices ... done, cpu time[sec] = 0.132588, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.54103, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            25484.1      13062.8      7033.29      7394.51      1027.31      42945.6      10866.3      529.867
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.778758, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.091864, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.876552, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00373402   0.00374678   0.00341351
      low eigenvalue method done, cpu time[sec] = 0.886206, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00375    0.0034         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000205    0.0034     0.998
         *Z       ---       ---  2.18e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0034019
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999116  0.000884075  0.000749966  9.35406e-05    4.303e-06  1.47823e-05  6.43733e-07  2.24781e-05  1.34462e-07  2.09346e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.80492, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 2200 K
            Well    Collision, 1/sec
              W1         1.91536e+09
      global relaxation matrix dimension = 251
      setting global matrices ... done, cpu time[sec] = 0.133123, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.56004, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            16989.4      8708.53      4688.86      4929.67      684.874      28630.4      7244.21      353.244
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.780064, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.080849, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.867052, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00348722   0.00349806   0.00310642
      low eigenvalue method done, cpu time[sec] = 0.877021, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0035    0.0031         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000189    0.0031     0.998
         *Z       ---       ---  2.18e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0030968
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999195  0.000804787  0.000686311  8.01663e-05   3.9196e-06  1.27734e-05  5.76306e-07  2.24441e-05  1.35208e-07   2.0935e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.81703, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 2200 K
            Well    Collision, 1/sec
              W1         2.55382e+09
      global relaxation matrix dimension = 251
      setting global matrices ... done, cpu time[sec] = 0.133075, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.55737, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            12742.1       6531.4      3516.64      3697.26      513.655      21472.8      5433.16      264.933
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.778713, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.080936, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.865582, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00331038   0.00331996    0.0028913
      low eigenvalue method done, cpu time[sec] = 0.874819, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00332   0.00288         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000177   0.00288     0.999
         *Z       ---       ---  2.18e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00288296
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999251  0.000749215  0.000640785  7.16312e-05  3.66037e-06  1.15098e-05  5.32206e-07  2.23411e-05  1.35877e-07  2.09354e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.81071, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 2200 K
            Well    Collision, 1/sec
              W1         3.19227e+09
      global relaxation matrix dimension = 251
      setting global matrices ... done, cpu time[sec] = 0.133197, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.55587, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            10193.6      5225.12      2813.32       2957.8      410.924      17178.2      4346.53      211.947
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.77597, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.081388, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.863254, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00317269   0.00318135   0.00272674
      low eigenvalue method done, cpu time[sec] = 0.872937, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00318   0.00272         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000169   0.00272     0.999
         *Z       ---       ---  2.18e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00271933
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999293  0.000706692  0.000605508  6.55245e-05  3.46601e-06  1.06103e-05  4.99892e-07  2.22092e-05  1.36487e-07  2.09358e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.80733, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 2200 K
            Well    Collision, 1/sec
              W1         3.83073e+09
      global relaxation matrix dimension = 251
      setting global matrices ... done, cpu time[sec] = 0.133127, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.55431, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             8494.7      4354.27      2344.43      2464.84      342.437      14315.2      3622.11      176.622
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.778576, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.081424, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.866211, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    0.0030601   0.00306804   0.00259415
      low eigenvalue method done, cpu time[sec] = 0.875472, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00307   0.00259         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000161   0.00259     0.999
         *Z       ---       ---  2.18e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00258744
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999328  0.000672416  0.000576825  6.08514e-05  3.31134e-06  9.92272e-06  4.74619e-07  2.20649e-05  1.37048e-07  2.09363e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.80891, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 2200 K
            Well    Collision, 1/sec
              W1         4.46918e+09
      global relaxation matrix dimension = 251
      setting global matrices ... done, cpu time[sec] = 0.134088, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.55632, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            7281.17      3732.23      2009.51      2112.72      293.517      12270.2      3104.66       151.39
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.777129, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.081411, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.864595, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00296497   0.00297234   0.00248354
      low eigenvalue method done, cpu time[sec] = 0.873805, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00297   0.00248         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000156   0.00248     0.999
         *Z       ---       ---  2.18e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00247739
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999356  0.000643817  0.000552737  5.71128e-05  3.18338e-06  9.37225e-06  4.53994e-07  2.19158e-05  1.37569e-07  2.09367e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.80981, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 2200 K
            Well    Collision, 1/sec
              W1         5.10764e+09
      global relaxation matrix dimension = 251
      setting global matrices ... done, cpu time[sec] = 0.132492, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.55384, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            6371.03       3265.7      1758.32      1848.63      256.828      10736.4      2716.58      132.467
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.779882, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.081381, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.867182, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00288271    0.0028896   0.00238896
      low eigenvalue method done, cpu time[sec] = 0.876435, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00289   0.00238         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   0.00015   0.00238     0.999
         *Z       ---       ---  2.18e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00238326
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999381  0.000619355  0.000532031  5.40257e-05  3.07456e-06  8.91689e-06  4.36651e-07  2.17657e-05  1.38053e-07  2.09371e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.80814, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2300 K
      Energy reference = 80720 1/cm
      Energy step      = 397 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -54.7 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.00599
         W1 Well: collisional kernel bandwidth = 43
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.178166
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.086979
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.083268
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.350872
         W1 Well: minimal relaxation eigenvalue = 0.0330684
         W1 Well: maximal relaxation eigenvalue = 1.05403
         W1 Well:       grid size = 248
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -17736 1/cm
         B1 Barrier:        grid size = 204
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -268 1/cm
         B2 Barrier:        grid size = 203
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 128 1/cm
         B3 Barrier:        grid size = 215
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4635 1/cm
         B4 Barrier:        grid size = 219
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6222 1/cm
         B5 Barrier: nonpositive number of states at -23691 1/cm => truncating
         B5 Barrier:        grid size = 263
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23691 1/cm
         B6 Barrier:        grid size = 200
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1319 1/cm
         B7 Barrier:        grid size = 192
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4495 1/cm
         B8 Barrier:        grid size = 162
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16405 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.02372, elapsed time[sec] = 0
      B5 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 248
      MasterEquation::Barrier::truncate: real weight = 9.12336e+28
      MasterEquation::Barrier::truncate: effective weight = 1.65029e+26
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -17736 -17736 1.61e+07 4.76e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -268  5.3e+18
         B2    129 2.83e+18
         B3  -4635  1.6e+18
         B4  -6222 1.68e+18
         B5 -17736 2.34e+17
         B6   1320  9.2e+18
         B7   4496 2.39e+18
         B8  16406 1.26e+17
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  5.23e-16  1.03e-15  3.61e-16  1.49e-16  4.35e-21  1.29e-14  3.24e-13  1.01e-08
          R  1.91e+15         1      1.97      0.69     0.285  8.32e-06      24.7       620  1.94e+07
         P1  9.69e+14     0.507         1      0.35     0.145  4.22e-06      12.5       314  9.82e+06
         P2  2.77e+15      1.45      2.86         1     0.414  1.21e-05      35.8       899  2.81e+07
         P3   6.7e+15       3.5      6.91      2.42         1  2.92e-05      86.5  2.17e+03  6.79e+07
         P4   2.3e+20   1.2e+05  2.37e+05  8.29e+04  3.43e+04         1  2.97e+06  7.45e+07  2.33e+12
         P5  7.75e+13    0.0405    0.0799     0.028    0.0116  3.37e-07         1      25.1  7.85e+05
         P6  3.08e+12   0.00161   0.00318   0.00111   0.00046  1.34e-08    0.0398         1  3.12e+04
         P7  9.87e+07  5.16e-08  1.02e-07  3.56e-08  1.47e-08   4.3e-13  1.27e-06   3.2e-05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  2.73e-18  5.39e-18  1.88e-18  7.79e-19  2.27e-23  6.74e-17  1.69e-15  5.29e-11
          R  3.66e+17         1      1.97      0.69     0.285  8.32e-06      24.7       620  1.94e+07
         P1  1.86e+17     0.507         1      0.35     0.145  4.22e-06      12.5       314  9.82e+06
         P2  5.31e+17      1.45      2.86         1     0.414  1.21e-05      35.8       899  2.81e+07
         P3  1.28e+18       3.5      6.91      2.42         1  2.92e-05      86.5  2.17e+03  6.79e+07
         P4   4.4e+22   1.2e+05  2.37e+05  8.29e+04  3.43e+04         1  2.97e+06  7.45e+07  2.33e+12
         P5  1.48e+16    0.0405    0.0799     0.028    0.0116  3.37e-07         1      25.1  7.85e+05
         P6  5.91e+14   0.00161   0.00318   0.00111   0.00046  1.34e-08    0.0398         1  3.12e+04
         P7  1.89e+10  5.16e-08  1.02e-07  3.56e-08  1.47e-08   4.3e-13  1.27e-06   3.2e-05         1
   MasterEquation::set:  done, cpu time[sec] = 1.03676, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 2300 K
            Well    Collision, 1/sec
              W1         1.24061e+08
      global relaxation matrix dimension = 248
      setting global matrices ... done, cpu time[sec] = 0.129736, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.46766, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             269150       143914      81319.2      85212.1        11913       467346       121330      6388.26
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.753929, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.080596, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.840353, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00687942   0.00693087   0.00746586
      low eigenvalue method done, cpu time[sec] = 0.85009, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00693   0.00741         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000405   0.00741     0.996
         *Z       ---       ---  1.47e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00741053
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.997431   0.00256861   0.00206612  0.000382025  1.38269e-05  6.68592e-05  2.36599e-06  4.58813e-05   3.2647e-07  7.52937e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.68801, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 2300 K
            Well    Collision, 1/sec
              W1         3.72183e+08
      global relaxation matrix dimension = 248
      setting global matrices ... done, cpu time[sec] = 0.128976, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.49073, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            89716.6      47971.4      27106.4        28404      3970.98       155782      40443.3      2129.42
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.753851, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.079539, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.83932, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00615645   0.00619586   0.00639113
      low eigenvalue method done, cpu time[sec] = 0.848492, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0062   0.00635         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000352   0.00635     0.997
         *Z       ---       ---  1.47e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00635054
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.997799    0.0022012   0.00182693  0.000276513   1.1082e-05  4.43934e-05  1.75431e-06   4.7197e-05  3.27604e-07  7.52942e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.70838, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 2300 K
            Well    Collision, 1/sec
              W1         6.20306e+08
      global relaxation matrix dimension = 248
      setting global matrices ... done, cpu time[sec] = 0.129055, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.48947, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
              53830      28782.8      16263.8      17042.4      2382.59      93469.2        24266      1277.65
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.755405, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.079081, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.840453, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00578837   0.00582235   0.00586145
      low eigenvalue method done, cpu time[sec] = 0.849927, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00582   0.00583         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000326   0.00583     0.997
         *Z       ---       ---  1.47e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00582729
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1      0.99798   0.00201984   0.00169518  0.000234062  1.00101e-05  3.71215e-05  1.53955e-06  4.77501e-05  3.28548e-07  7.52948e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.7087, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 2300 K
            Well    Collision, 1/sec
              W1         8.68428e+08
      global relaxation matrix dimension = 248
      setting global matrices ... done, cpu time[sec] = 0.129678, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.49784, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
              38450      20559.2        11617      12173.2      1701.85      66763.7      17332.8      912.609
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.75648, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.079127, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.841703, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00553649   0.00556702   0.00550654
      low eigenvalue method done, cpu time[sec] = 0.850874, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00557   0.00548         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000309   0.00548     0.997
         *Z       ---       ---  1.47e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00547639
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.998102   0.00189821   0.00160287  0.000208749  9.35316e-06  3.30683e-05  1.41436e-06  4.80341e-05  3.29399e-07  7.52953e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.71968, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 2300 K
            Well    Collision, 1/sec
              W1         1.11655e+09
      global relaxation matrix dimension = 248
      setting global matrices ... done, cpu time[sec] = 0.131228, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.50517, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            29905.5      15990.5      9035.46      9468.01      1323.66      51927.3      13481.1      709.807
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.751932, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.079726, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.837872, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00534412   0.00537216    0.0052398
      low eigenvalue method done, cpu time[sec] = 0.846989, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00537   0.00521         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000295   0.00521     0.997
         *Z       ---       ---  1.47e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00521249
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.998193   0.00180674   0.00153165  0.000191221  8.88373e-06   3.0353e-05  1.32779e-06  4.81829e-05  3.30187e-07  7.52959e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.72343, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 2300 K
            Well    Collision, 1/sec
              W1         1.24061e+09
      global relaxation matrix dimension = 248
      setting global matrices ... done, cpu time[sec] = 0.130276, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.50401, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
              26915      14391.4      8131.92      8521.21       1191.3      46734.6        12133      638.826
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.758112, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.079139, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.843415, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    0.0052625   0.00528953    0.0051278
      low eigenvalue method done, cpu time[sec] = 0.852637, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00529    0.0051         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   0.00029    0.0051     0.997
         *Z       ---       ---  1.47e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00510163
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.998232   0.00176831   0.00150132  0.000184218   8.6918e-06  2.92851e-05  1.29306e-06  4.82256e-05  3.30563e-07  7.52962e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.72816, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 2300 K
            Well    Collision, 1/sec
              W1         1.86092e+09
      global relaxation matrix dimension = 248
      setting global matrices ... done, cpu time[sec] = 0.129998, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.50617, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            17943.3      9594.28      5421.28      5680.81      794.197      31156.4      8088.65      425.884
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.783306, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.079588, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.868718, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00494386   0.00496712   0.00469725
      low eigenvalue method done, cpu time[sec] = 0.878189, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00497   0.00468         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000268   0.00468     0.998
         *Z       ---       ---  1.47e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00467529
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.998379   0.00162053    0.0013826  0.000159113  7.97744e-06  2.55181e-05   1.1671e-06  4.82584e-05  3.32299e-07  7.52976e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.75512, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 2300 K
            Well    Collision, 1/sec
              W1         2.48122e+09
      global relaxation matrix dimension = 248
      setting global matrices ... done, cpu time[sec] = 0.129373, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.49826, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            13457.5      7195.71      4065.96      4260.61      595.648      23367.3      6066.49      319.413
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.75036, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.079817, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.836251, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00471419   0.00473493   0.00439377
      low eigenvalue method done, cpu time[sec] = 0.845449, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00473   0.00437         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000253   0.00437     0.998
         *Z       ---       ---  1.47e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00437455
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.998484   0.00151629   0.00129712  0.000143007  7.49178e-06  2.31368e-05  1.08429e-06  4.81326e-05  3.33854e-07   7.5299e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.7139, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 2300 K
            Well    Collision, 1/sec
              W1         3.10153e+09
      global relaxation matrix dimension = 248
      setting global matrices ... done, cpu time[sec] = 0.130245, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.49486, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
              10766      5756.57      3252.77      3408.48      476.518      18693.8      4853.19       255.53
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.753692, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.079171, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.838857, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00453455   0.00455344   0.00416052
      low eigenvalue method done, cpu time[sec] = 0.848057, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00455   0.00414         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000241   0.00414     0.998
         *Z       ---       ---  1.47e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00414328
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.998564   0.00143613   0.00123054  0.000131435  7.12605e-06  2.14347e-05  1.02336e-06  4.79355e-05  3.35272e-07  7.53003e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.7143, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 2300 K
            Well    Collision, 1/sec
              W1         3.72183e+09
      global relaxation matrix dimension = 248
      setting global matrices ... done, cpu time[sec] = 0.129364, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.50142, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            8971.66      4797.14      2710.64       2840.4      397.098      15578.2      4044.33      212.942
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.751367, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.079477, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.836653, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00438708   0.00440453   0.00397182
      low eigenvalue method done, cpu time[sec] = 0.845796, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0044   0.00396         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000232   0.00396     0.998
         *Z       ---       ---  1.47e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0039561
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.998629   0.00137125   0.00117617  0.000122549  6.83391e-06  2.01293e-05  9.75537e-07  4.77035e-05   3.3658e-07  7.53017e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.71722, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 2300 K
            Well    Collision, 1/sec
              W1         4.34214e+09
      global relaxation matrix dimension = 248
      setting global matrices ... done, cpu time[sec] = 0.129223, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.49934, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
               7690      4111.83       2323.4      2434.63       340.37      13352.7      3466.57      182.522
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.750069, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.079559, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.835684, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00426209   0.00427836   0.00381386
      low eigenvalue method done, cpu time[sec] = 0.844914, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00428    0.0038         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000224    0.0038     0.998
         *Z       ---       ---  1.47e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00379937
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.998683   0.00131692   0.00113035  0.000115418  6.59143e-06   1.9081e-05  9.36389e-07  4.74541e-05  3.37794e-07  7.53031e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.71475, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 2300 K
            Well    Collision, 1/sec
              W1         4.96245e+09
      global relaxation matrix dimension = 248
      setting global matrices ... done, cpu time[sec] = 0.130853, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.5034, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            6728.75      3597.85      2032.98       2130.3      297.824      11683.6      3033.24      159.707
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.753571, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.079223, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.83876, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00415368   0.00416898   0.00367838
      low eigenvalue method done, cpu time[sec] = 0.847959, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00417   0.00366         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000217   0.00366     0.998
         *Z       ---       ---  1.47e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0036649
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1      0.99873   0.00127031   0.00109084  0.000109515  6.38462e-06  1.82115e-05  9.03381e-07  4.71967e-05  3.38927e-07  7.53045e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.72343, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2400 K
      Energy reference = 83500 1/cm
      Energy step      = 414 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -52.4 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.005831
         W1 Well: collisional kernel bandwidth = 43
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.185417
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.085946
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.094686
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.34162
         W1 Well: minimal relaxation eigenvalue = 0.0317444
         W1 Well: maximal relaxation eigenvalue = 1.06474
         W1 Well:       grid size = 246
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -18344 1/cm
         B1 Barrier:        grid size = 202
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -128 1/cm
         B2 Barrier:        grid size = 202
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = -128 1/cm
         B3 Barrier:        grid size = 213
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4681 1/cm
         B4 Barrier:        grid size = 217
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6338 1/cm
         B5 Barrier: nonpositive number of states at -23726 1/cm => truncating
         B5 Barrier:        grid size = 259
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23725 1/cm
         B6 Barrier:        grid size = 199
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1114 1/cm
         B7 Barrier:        grid size = 191
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4426 1/cm
         B8 Barrier:        grid size = 162
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16431 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.02517, elapsed time[sec] = 0
      B5 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 246
      MasterEquation::Barrier::truncate: real weight = 8.20324e+28
      MasterEquation::Barrier::truncate: effective weight = 1.54739e+26
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -18344 -18344 1.18e+07 6.22e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -128 7.08e+18
         B2   -128 3.94e+18
         B3  -4681 2.34e+18
         B4  -6338 2.44e+18
         B5 -18344 3.43e+17
         B6   1115 1.27e+19
         B7   4427 3.36e+18
         B8  16432 1.91e+17
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  2.87e-16  5.74e-16  2.22e-16   9.6e-17  4.51e-21  6.56e-15  1.52e-13  3.58e-09
          R  3.48e+15         1         2     0.772     0.334  1.57e-05      22.8       529  1.25e+07
         P1  1.74e+15       0.5         1     0.386     0.167  7.86e-06      11.4       265  6.23e+06
         P2  4.51e+15       1.3      2.59         1     0.433  2.03e-05      29.6       686  1.61e+07
         P3  1.04e+16      2.99      5.98      2.31         1   4.7e-05      68.4  1.58e+03  3.73e+07
         P4  2.22e+20  6.37e+04  1.27e+05  4.92e+04  2.13e+04         1  1.45e+06  3.37e+07  7.93e+11
         P5  1.52e+14    0.0438    0.0875    0.0338    0.0146  6.88e-07         1      23.2  5.45e+05
         P6  6.58e+12   0.00189   0.00378   0.00146  0.000631  2.97e-08    0.0432         1  2.35e+04
         P7  2.79e+08  8.03e-08   1.6e-07   6.2e-08  2.68e-08  1.26e-12  1.83e-06  4.25e-05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  1.22e-18  2.45e-18  9.45e-19  4.09e-19  1.92e-23   2.8e-17  6.48e-16  1.52e-11
          R  8.17e+17         1         2     0.772     0.334  1.57e-05      22.8       529  1.25e+07
         P1  4.09e+17       0.5         1     0.386     0.167  7.86e-06      11.4       265  6.23e+06
         P2  1.06e+18       1.3      2.59         1     0.433  2.03e-05      29.6       686  1.61e+07
         P3  2.44e+18      2.99      5.98      2.31         1   4.7e-05      68.4  1.58e+03  3.73e+07
         P4   5.2e+22  6.37e+04  1.27e+05  4.92e+04  2.13e+04         1  1.45e+06  3.37e+07  7.93e+11
         P5  3.58e+16    0.0438    0.0875    0.0338    0.0146  6.88e-07         1      23.2  5.45e+05
         P6  1.54e+15   0.00189   0.00378   0.00146  0.000631  2.97e-08    0.0432         1  2.35e+04
         P7  6.56e+10  8.03e-08   1.6e-07   6.2e-08  2.68e-08  1.26e-12  1.83e-06  4.25e-05         1
   MasterEquation::set:  done, cpu time[sec] = 1.03827, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 2400 K
            Well    Collision, 1/sec
              W1         1.20683e+08
      global relaxation matrix dimension = 246
      setting global matrices ... done, cpu time[sec] = 0.128962, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.44501, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             282777       157493      93368.6      97533.1      13716.3       505305       134413      7615.15
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.728608, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.080571, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.815041, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00919116   0.00928868    0.0105857
      low eigenvalue method done, cpu time[sec] = 0.824096, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00929    0.0105         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000545    0.0105     0.995
         *Z       ---       ---  1.02e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0104748
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.995363   0.00463672   0.00374419  0.000674491  2.50676e-05  0.000118408  4.24958e-06  9.09661e-05  7.37946e-07  2.41729e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.6343, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 2400 K
            Well    Collision, 1/sec
              W1         3.62048e+08
      global relaxation matrix dimension = 246
      setting global matrices ... done, cpu time[sec] = 0.127543, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.46056, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
              94259      52497.8      31122.9        32511       4572.1       168435      44804.2      2538.38
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.738092, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.077281, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.821219, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00831118   0.00838752   0.00916603
      low eigenvalue method done, cpu time[sec] = 0.830708, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00839   0.00908         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000478   0.00908     0.995
         *Z       ---       ---  1.02e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00908277
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.995979   0.00402053    0.0033441  0.000495925  2.04025e-05  7.99616e-05    3.206e-06  9.35804e-05  7.40415e-07  2.41731e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.6555, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 2400 K
            Well    Collision, 1/sec
              W1         6.03413e+08
      global relaxation matrix dimension = 246
      setting global matrices ... done, cpu time[sec] = 0.127544, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.46672, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            56555.4      31498.7      18673.7      19506.6      2743.26       101061      26882.5      1523.03
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.734885, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.077741, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.818474, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00785767   0.00792427   0.00845802
      low eigenvalue method done, cpu time[sec] = 0.827575, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00792   0.00839         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000445   0.00839     0.996
         *Z       ---       ---  1.02e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00838708
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.996287   0.00371258   0.00312065  0.000423077  1.85717e-05  6.74455e-05  2.83776e-06  9.47388e-05  7.42451e-07  2.41733e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.65764, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 2400 K
            Well    Collision, 1/sec
              W1         8.44779e+08
      global relaxation matrix dimension = 246
      setting global matrices ... done, cpu time[sec] = 0.127949, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.49388, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            40396.7        22499      13338.4      13933.3      1959.47      72186.4      19201.8      1087.88
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.736139, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.07754, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.819559, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00754543   0.00760577   0.00798073
      low eigenvalue method done, cpu time[sec] = 0.828666, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00761   0.00792         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000422   0.00792     0.996
         *Z       ---       ---  1.02e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00791754
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.996495   0.00350473   0.00296294  0.000379387  1.74453e-05  6.04424e-05  2.62234e-06  9.53753e-05  7.44278e-07  2.41734e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.68617, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 2400 K
            Well    Collision, 1/sec
              W1         1.08614e+09
      global relaxation matrix dimension = 246
      setting global matrices ... done, cpu time[sec] = 0.127272, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.47812, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            31419.7      17499.3      10374.3        10837      1524.03        56145      14934.7      846.128
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.740433, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.077893, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.824214, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00730593   0.00736171   0.00762041
      low eigenvalue method done, cpu time[sec] = 0.833334, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00736   0.00756         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000405   0.00756     0.996
         *Z       ---       ---  1.02e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00756278
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.996652    0.0033477   0.00284065  0.000349013  1.66379e-05   5.5737e-05  2.47292e-06  9.57462e-05  7.45967e-07  2.41736e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.67602, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 2400 K
            Well    Collision, 1/sec
              W1         1.20683e+09
      global relaxation matrix dimension = 246
      setting global matrices ... done, cpu time[sec] = 0.12813, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.47671, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            28277.7      15749.3      9336.86      9753.31      1371.63      50530.5      13441.3      761.515
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.737498, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.077849, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.821334, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00720404   0.00725796   0.00746869
      low eigenvalue method done, cpu time[sec] = 0.830414, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00726   0.00741         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000398   0.00741     0.996
         *Z       ---       ---  1.02e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00741333
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.996718   0.00328154   0.00278839  0.000336848  1.63071e-05  5.38826e-05  2.41287e-06  9.58684e-05  7.46771e-07  2.41737e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.67237, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 2400 K
            Well    Collision, 1/sec
              W1         1.81024e+09
      global relaxation matrix dimension = 246
      setting global matrices ... done, cpu time[sec] = 0.127822, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.47739, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            18851.8      10499.6      6224.57      6502.21       914.42        33687      8960.85      507.677
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.737827, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.077704, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.821367, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00680468   0.00685161   0.00688311
      low eigenvalue method done, cpu time[sec] = 0.830649, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00685   0.00684         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000371   0.00684     0.997
         *Z       ---       ---  1.02e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00683606
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.996974   0.00302601   0.00258294  0.000293087  1.50718e-05  4.73218e-05  2.19439e-06  9.61136e-05  7.50482e-07  2.41741e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.67207, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 2400 K
            Well    Collision, 1/sec
              W1         2.41365e+09
      global relaxation matrix dimension = 246
      setting global matrices ... done, cpu time[sec] = 0.128603, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.4723, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            14138.9      7874.67      4668.43      4876.66      685.815      25265.2      6720.64      380.757
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.736348, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.078172, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.820788, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00651521   0.00655743   0.00646795
      low eigenvalue method done, cpu time[sec] = 0.829851, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00656   0.00643         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000351   0.00643     0.997
         *Z       ---       ---  1.02e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00642639
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.997155   0.00284467   0.00243405  0.000264869  1.42279e-05  4.31554e-05  2.05011e-06  9.60279e-05  7.53805e-07  2.41745e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.66672, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 2400 K
            Well    Collision, 1/sec
              W1         3.01707e+09
      global relaxation matrix dimension = 246
      setting global matrices ... done, cpu time[sec] = 0.126921, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.48497, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            11311.1      6299.73      3734.74      3901.33      548.652      20212.2      5376.51      304.606
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.735608, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.077736, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.819094, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00628781   0.00632653   0.00614743
      low eigenvalue method done, cpu time[sec] = 0.828395, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00633   0.00611         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000336   0.00611     0.997
         *Z       ---       ---  1.02e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00610987
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.997295   0.00270456   0.00231751  0.000244517  1.35897e-05  4.01666e-05  1.94355e-06  9.57853e-05  7.56838e-07  2.41749e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.6777, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 2400 K
            Well    Collision, 1/sec
              W1         3.62048e+09
      global relaxation matrix dimension = 246
      setting global matrices ... done, cpu time[sec] = 0.127593, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.48372, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             9425.9      5249.78      3112.29       3251.1       457.21      16843.5      4480.42      253.838
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.7346, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.078077, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.81909, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00610047   0.00613645   0.00588715
      low eigenvalue method done, cpu time[sec] = 0.82832, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00614   0.00585         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000323   0.00585     0.997
         *Z       ---       ---  1.02e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0058527
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.997409   0.00259072   0.00222197  0.000228838  1.30783e-05   3.7867e-05  1.85965e-06  9.54601e-05  7.59637e-07  2.41754e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.67741, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 2400 K
            Well    Collision, 1/sec
              W1         4.22389e+09
      global relaxation matrix dimension = 246
      setting global matrices ... done, cpu time[sec] = 0.126934, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.47858, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            8079.35      4499.81      2667.67      2786.66      391.894      14437.3      3840.36      217.576
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.736002, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.077654, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.819517, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    0.0059412   0.00597494    0.0056686
      low eigenvalue method done, cpu time[sec] = 0.828635, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00597   0.00564         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000313   0.00564     0.997
         *Z       ---       ---  1.02e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00563665
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.997505   0.00249509   0.00214117  0.000216222  1.26524e-05  3.60154e-05  1.79077e-06   9.5089e-05  7.62241e-07  2.41758e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.67034, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 2400 K
            Well    Collision, 1/sec
              W1         4.82731e+09
      global relaxation matrix dimension = 246
      setting global matrices ... done, cpu time[sec] = 0.127728, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.47382, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            7069.43      3937.33      2334.21      2438.33      342.907      12632.6      3360.32      190.379
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.738172, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.078031, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.822317, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    0.0058027   0.00583455   0.00548062
      low eigenvalue method done, cpu time[sec] = 0.831401, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00583   0.00545         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000304   0.00545     0.997
         *Z       ---       ---  1.02e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00545075
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.997587    0.0024128   0.00207129   0.00020575  1.22883e-05  3.44758e-05  1.73254e-06  9.46923e-05  7.64676e-07  2.41762e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.66984, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2500 K
      Energy reference = 86280 1/cm
      Energy step      = 431 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -50.1 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.005701
         W1 Well: collisional kernel bandwidth = 43
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.183959
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.085842
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.093609
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.342842
         W1 Well: minimal relaxation eigenvalue = 0.0303305
         W1 Well: maximal relaxation eigenvalue = 1.08055
         W1 Well:       grid size = 245
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -19315 1/cm
         B1 Barrier:        grid size = 201
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -351 1/cm
         B2 Barrier:        grid size = 200
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 80 1/cm
         B3 Barrier:        grid size = 211
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4660 1/cm
         B4 Barrier:        grid size = 215
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6385 1/cm
         B5 Barrier: nonpositive number of states at -23625 1/cm => truncating
         B5 Barrier:        grid size = 255
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23624 1/cm
         B6 Barrier:        grid size = 197
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1372 1/cm
         B7 Barrier:        grid size = 190
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4389 1/cm
         B8 Barrier:        grid size = 162
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16458 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.02449, elapsed time[sec] = 0
      B5 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 245
      MasterEquation::Barrier::truncate: real weight = 7.58482e+28
      MasterEquation::Barrier::truncate: effective weight = 1.48949e+26
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -19315 -19315 7.01e+06 8.09e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -351 9.37e+18
         B2     81 5.43e+18
         B3  -4660 3.38e+18
         B4  -6385 3.52e+18
         B5 -19315 4.97e+17
         B6   1373 1.72e+19
         B7   4390 4.69e+18
         B8  16458 2.85e+17
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  1.69e-16  3.42e-16  1.44e-16  6.51e-17  4.75e-21  3.58e-15   7.7e-14   1.4e-09
          R  5.93e+15         1      2.02     0.856     0.386  2.82e-05      21.2       457  8.28e+06
         P1  2.93e+15     0.494         1     0.423     0.191  1.39e-05      10.5       225  4.09e+06
         P2  6.93e+15      1.17      2.37         1     0.451  3.29e-05      24.8       534  9.68e+06
         P3  1.54e+16      2.59      5.24      2.22         1  7.29e-05        55  1.18e+03  2.14e+07
         P4  2.11e+20  3.55e+04  7.19e+04  3.04e+04  1.37e+04         1  7.54e+05  1.62e+07  2.94e+11
         P5  2.79e+14    0.0471    0.0954    0.0403    0.0182  1.33e-06         1      21.5   3.9e+05
         P6   1.3e+13   0.00219   0.00443   0.00187  0.000846  6.17e-08    0.0465         1  1.81e+04
         P7  7.16e+08  1.21e-07  2.44e-07  1.03e-07  4.66e-08   3.4e-12  2.56e-06  5.51e-05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  5.87e-19  1.19e-18  5.03e-19  2.27e-19  1.65e-23  1.25e-17  2.68e-16  4.86e-12
          R   1.7e+18         1      2.02     0.856     0.386  2.82e-05      21.2       457  8.28e+06
         P1  8.41e+17     0.494         1     0.423     0.191  1.39e-05      10.5       225  4.09e+06
         P2  1.99e+18      1.17      2.37         1     0.451  3.29e-05      24.8       534  9.68e+06
         P3  4.41e+18      2.59      5.24      2.22         1  7.29e-05        55  1.18e+03  2.14e+07
         P4  6.05e+22  3.55e+04  7.19e+04  3.04e+04  1.37e+04         1  7.54e+05  1.62e+07  2.94e+11
         P5  8.02e+16    0.0471    0.0954    0.0403    0.0182  1.33e-06         1      21.5   3.9e+05
         P6  3.73e+15   0.00219   0.00443   0.00187  0.000846  6.17e-08    0.0465         1  1.81e+04
         P7  2.06e+11  1.21e-07  2.44e-07  1.03e-07  4.66e-08   3.4e-12  2.56e-06  5.51e-05         1
   MasterEquation::set:  done, cpu time[sec] = 1.03745, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 2500 K
            Well    Collision, 1/sec
              W1         1.17529e+08
      global relaxation matrix dimension = 245
      setting global matrices ... done, cpu time[sec] = 0.127079, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.4382, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             295689       171305       106516       110940      15688.9       543149       147847      8984.51
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.726348, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.0777, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.810036, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    0.0118064    0.0119745    0.0141984
      low eigenvalue method done, cpu time[sec] = 0.819042, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0     0.012     0.014         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000691     0.014     0.993
         *Z       ---       ---  7.48e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0139996
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.992104   0.00789598   0.00639332   0.00113086  4.28815e-05  0.000198076  7.20693e-06  0.000169276  1.54925e-06    7.024e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.61921, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 2500 K
            Well    Collision, 1/sec
              W1         3.52586e+08
      global relaxation matrix dimension = 245
      setting global matrices ... done, cpu time[sec] = 0.126359, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.43911, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
              98563      57101.6      35505.3      36979.9      5229.63       181050      49282.3      2994.84
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.729899, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.077692, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.813527, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    0.0107643    0.0108983    0.0124109
      low eigenvalue method done, cpu time[sec] = 0.822606, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0109    0.0123         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000611    0.0123     0.994
         *Z       ---       ---  7.48e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0122587
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.993086    0.0069141   0.00576037  0.000840335  3.53908e-05  0.000135838  5.52352e-06  0.000174041  1.55427e-06  7.02405e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.62263, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 2500 K
            Well    Collision, 1/sec
              W1         5.87643e+08
      global relaxation matrix dimension = 245
      setting global matrices ... done, cpu time[sec] = 0.126693, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.44539, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            59137.8        34261      21303.2        22188      3137.78       108630      29569.4       1796.9
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.723299, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.077109, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.80624, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    0.0102245    0.0103426    0.0115139
      low eigenvalue method done, cpu time[sec] = 0.815248, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0103    0.0114         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000571    0.0114     0.994
         *Z       ---       ---  7.48e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0113828
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1      0.99358   0.00642009   0.00540291  0.000721523  3.24405e-05  0.000115483  4.92734e-06  0.000176241  1.55836e-06  7.02409e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.62207, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 2500 K
            Well    Collision, 1/sec
              W1           8.227e+08
      global relaxation matrix dimension = 245
      setting global matrices ... done, cpu time[sec] = 0.126502, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.45197, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            42241.3      24472.1      15216.6      15848.5      2241.27      77592.7        21121       1283.5
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.733062, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.077081, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.816117, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    0.0098513   0.00995903    0.0109064
      low eigenvalue method done, cpu time[sec] = 0.825107, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00996    0.0108         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000544    0.0108     0.995
         *Z       ---       ---  7.48e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0107887
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.993915     0.006085   0.00514902  0.000650043  3.06199e-05  0.000104058  4.57758e-06  0.000177513  1.56202e-06  7.02414e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.63878, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 2500 K
            Well    Collision, 1/sec
              W1         1.05776e+09
      global relaxation matrix dimension = 245
      setting global matrices ... done, cpu time[sec] = 0.127065, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.46193, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            32854.3      19033.9      11835.1      12326.6      1743.21      60349.9      16427.4      998.279
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.725041, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.076716, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.80773, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00956409   0.00966427    0.0104462
      low eigenvalue method done, cpu time[sec] = 0.816736, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00966    0.0103         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000523    0.0103     0.995
         *Z       ---       ---  7.48e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0103382
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.994169   0.00583087   0.00495122  0.000600221  2.93116e-05  9.63626e-05  4.33443e-06  0.000178305   1.5654e-06  7.02419e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.64041, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 2500 K
            Well    Collision, 1/sec
              W1         1.17529e+09
      global relaxation matrix dimension = 245
      setting global matrices ... done, cpu time[sec] = 0.126509, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.45975, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            29568.9      17130.5      10651.6        11094      1568.89      54314.9      14784.7      898.451
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.728902, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.077032, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.812173, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00944166   0.00953871    0.0102519
      low eigenvalue method done, cpu time[sec] = 0.82121, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00954    0.0101         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000515    0.0101     0.995
         *Z       ---       ---  7.48e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0101479
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.994276   0.00572355   0.00486646  0.000580233  2.87746e-05  9.33249e-05  4.23656e-06  0.000178586    1.567e-06  7.02421e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.64264, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 2500 K
            Well    Collision, 1/sec
              W1         1.76293e+09
      global relaxation matrix dimension = 245
      setting global matrices ... done, cpu time[sec] = 0.126269, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.4613, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            19712.6      11420.3      7101.06      7395.99      1045.93      36209.9      9856.46      598.968
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.727766, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.07717, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.8108, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00896021   0.00904554   0.00949958
      low eigenvalue method done, cpu time[sec] = 0.820127, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00905   0.00941         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000481   0.00941     0.995
         *Z       ---       ---  7.48e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00941019
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.994693   0.00530748    0.0045318  0.000508143  2.67638e-05  8.25497e-05  3.87956e-06  0.000179312   1.5744e-06  7.02432e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.64229, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 2500 K
            Well    Collision, 1/sec
              W1         2.35057e+09
      global relaxation matrix dimension = 245
      setting global matrices ... done, cpu time[sec] = 0.126708, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.45863, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            14784.4      8565.24       5325.8      5546.99      784.445      27157.4      7392.35      449.226
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.726287, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.077087, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.809065, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00860962   0.00868698   0.00896352
      low eigenvalue method done, cpu time[sec] = 0.818026, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00869   0.00888         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000457   0.00888     0.996
         *Z       ---       ---  7.48e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00888389
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.994989   0.00501064   0.00428787   0.00046148  2.53842e-05  7.56805e-05   3.6429e-06  0.000179409  1.58102e-06  7.02444e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.63761, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 2500 K
            Well    Collision, 1/sec
              W1         2.93821e+09
      global relaxation matrix dimension = 245
      setting global matrices ... done, cpu time[sec] = 0.127422, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.46294, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            11827.6      6852.19      4260.64      4437.59      627.556        21726      5913.88      359.381
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.722159, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.077772, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.806083, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00833321   0.00840462   0.00854802
      low eigenvalue method done, cpu time[sec] = 0.815164, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0084   0.00848         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000438   0.00848     0.996
         *Z       ---       ---  7.48e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00847557
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1      0.99522   0.00478035   0.00409608  0.000427717  2.43374e-05  7.07373e-05  3.46756e-06  0.000179195  1.58706e-06  7.02455e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.64107, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 2500 K
            Well    Collision, 1/sec
              W1         3.52586e+09
      global relaxation matrix dimension = 245
      setting global matrices ... done, cpu time[sec] = 0.126928, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.46825, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             9856.3      5710.16      3550.53      3697.99      522.963        18105      4928.23      299.484
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.726976, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.076837, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.809632, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00810482   0.00817151   0.00820953
      low eigenvalue method done, cpu time[sec] = 0.818689, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00817   0.00814         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000423   0.00814     0.996
         *Z       ---       ---  7.48e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00814268
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.995407   0.00459259   0.00393828  0.000401638  2.34959e-05   6.6924e-05  3.32911e-06   0.00017881  1.59265e-06  7.02467e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.64895, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 2500 K
            Well    Collision, 1/sec
              W1          4.1135e+09
      global relaxation matrix dimension = 245
      setting global matrices ... done, cpu time[sec] = 0.126156, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.4667, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            8448.25      4894.42      3043.31      3169.71      448.254      15518.5       4224.2        256.7
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.728284, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.076864, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.811005, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00791013   0.00797296   0.00792449
      low eigenvalue method done, cpu time[sec] = 0.820738, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00797   0.00786         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   0.00041   0.00786     0.996
         *Z       ---       ---  7.48e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00786218
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.995566   0.00443439    0.0038044  0.000380605  2.27934e-05  6.38462e-05  3.21518e-06  0.000178322  1.59785e-06  7.02478e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.64816, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 2500 K
            Well    Collision, 1/sec
              W1         4.70114e+09
      global relaxation matrix dimension = 245
      setting global matrices ... done, cpu time[sec] = 0.12646, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.46308, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            7392.22      4282.62       2662.9       2773.5      392.222      13578.7      3696.17      224.613
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.731776, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.077271, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.815194, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00774045   0.00780002   0.00767872
      low eigenvalue method done, cpu time[sec] = 0.824112, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0078   0.00762         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000399   0.00762     0.996
         *Z       ---       ---  7.48e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0076202
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.995702    0.0042979    0.0036883  0.000363111  2.21912e-05  6.12818e-05  3.11866e-06  0.000177773  1.60272e-06   7.0249e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.64767, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2600 K
      Energy reference = 89061 1/cm
      Energy step      = 448 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -47.8 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.005318
         W1 Well: collisional kernel bandwidth = 42
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.179311
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.084254
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.091162
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.337158
         W1 Well: minimal relaxation eigenvalue = 0.0293149
         W1 Well: maximal relaxation eigenvalue = 1.0932
         W1 Well:       grid size = 243
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -19803 1/cm
         B1 Barrier:        grid size = 199
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -91 1/cm
         B2 Barrier:        grid size = 199
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = -91 1/cm
         B3 Barrier:        grid size = 210
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -5019 1/cm
         B4 Barrier:        grid size = 213
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6363 1/cm
         B5 Barrier: nonpositive number of states at -23387 1/cm => truncating
         B5 Barrier:        grid size = 251
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23387 1/cm
         B6 Barrier:        grid size = 196
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1252 1/cm
         B7 Barrier:        grid size = 189
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4388 1/cm
         B8 Barrier:        grid size = 162
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16484 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.00958, elapsed time[sec] = 0
      B5 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 243
      MasterEquation::Barrier::truncate: real weight = 7.1877e+28
      MasterEquation::Barrier::truncate: effective weight = 1.46718e+26
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -19803 -19803 5.37e+06 1.05e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -91 1.23e+19
         B2    -91  7.4e+18
         B3  -5019 4.83e+18
         B4  -6363 5.01e+18
         B5 -19803 7.13e+17
         B6   1253 2.32e+19
         B7   4389 6.46e+18
         B8  16485  4.2e+17
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  9.46e-17  1.94e-16   8.9e-17  4.18e-17  4.57e-21  1.87e-15  3.76e-14  5.37e-10
          R  1.06e+16         1      2.05     0.941     0.441  4.83e-05      19.8       398  5.68e+06
         P1  5.15e+15     0.488         1     0.459     0.215  2.35e-05      9.66       194  2.77e+06
         P2  1.12e+16      1.06      2.18         1     0.469  5.13e-05        21       423  6.03e+06
         P3  2.39e+16      2.27      4.65      2.13         1  0.000109      44.9       901  1.29e+07
         P4  2.19e+20  2.07e+04  4.25e+04  1.95e+04  9.15e+03         1   4.1e+05  8.24e+06  1.18e+11
         P5  5.34e+14    0.0505     0.104    0.0475    0.0223  2.44e-06         1      20.1  2.87e+05
         P6  2.66e+13   0.00252   0.00516   0.00237   0.00111  1.21e-07    0.0498         1  1.43e+04
         P7  1.86e+09  1.76e-07  3.61e-07  1.66e-07  7.78e-08   8.5e-12  3.49e-06  7.01e-05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  2.99e-19  6.13e-19  2.81e-19  1.32e-19  1.44e-23  5.92e-18  1.19e-16   1.7e-12
          R  3.35e+18         1      2.05     0.941     0.441  4.83e-05      19.8       398  5.68e+06
         P1  1.63e+18     0.488         1     0.459     0.215  2.35e-05      9.66       194  2.77e+06
         P2  3.55e+18      1.06      2.18         1     0.469  5.13e-05        21       423  6.03e+06
         P3  7.58e+18      2.27      4.65      2.13         1  0.000109      44.9       901  1.29e+07
         P4  6.93e+22  2.07e+04  4.25e+04  1.95e+04  9.15e+03         1   4.1e+05  8.24e+06  1.18e+11
         P5  1.69e+17    0.0505     0.104    0.0475    0.0223  2.44e-06         1      20.1  2.87e+05
         P6  8.41e+15   0.00252   0.00516   0.00237   0.00111  1.21e-07    0.0498         1  1.43e+04
         P7  5.89e+11  1.76e-07  3.61e-07  1.66e-07  7.78e-08   8.5e-12  3.49e-06  7.01e-05         1
   MasterEquation::set:  done, cpu time[sec] = 1.02262, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 2600 K
            Well    Collision, 1/sec
              W1         1.14576e+08
      global relaxation matrix dimension = 243
      setting global matrices ... done, cpu time[sec] = 0.124989, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.39084, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             307864       185294       120797       125465      17836.8       580720       161573      10501.2
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.714222, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.076572, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.797317, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    0.0154392    0.0157476    0.0198996
      low eigenvalue method done, cpu time[sec] = 0.806605, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0157    0.0195         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000928    0.0195      0.99
         *Z       ---       ---  5.39e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0195113
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.987395    0.0126048    0.0102568   0.00175598  6.90142e-05  0.000310741  1.14866e-05  0.000296441  3.04768e-06  1.86909e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.05243, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 2600 K
            Well    Collision, 1/sec
              W1         3.43728e+08
      global relaxation matrix dimension = 243
      setting global matrices ... done, cpu time[sec] = 0.124048, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.4221, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             102621      61764.7      40265.8      41821.8      5945.59       193573      53857.5      3500.41
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.711069, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.076025, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.792994, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0     0.014204    0.0144545    0.0175683
      low eigenvalue method done, cpu time[sec] = 0.802321, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0145    0.0173         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000827    0.0173     0.991
         *Z       ---       ---  5.39e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.017265
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.988846    0.0111536   0.00931815   0.00132791    5.773e-05  0.000216409  8.94226e-06  0.000304586  3.05715e-06   1.8691e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.5802, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 2600 K
            Well    Collision, 1/sec
              W1          5.7288e+08
      global relaxation matrix dimension = 243
      setting global matrices ... done, cpu time[sec] = 0.124061, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.41772, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            61572.7      37058.8      24159.5      25093.1      3567.35       116144      32314.5      2100.24
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.711324, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.075908, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.793093, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    0.0135562    0.0137791    0.0163842
      low eigenvalue method done, cpu time[sec] = 0.802191, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0138    0.0161         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000776    0.0161     0.992
         *Z       ---       ---  5.39e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.01612
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.989586     0.010414   0.00878193   0.00114924  5.32757e-05  0.000185447  8.03877e-06  0.000308493  3.06482e-06  1.86911e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.57471, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 2600 K
            Well    Collision, 1/sec
              W1         8.02031e+08
      global relaxation matrix dimension = 243
      setting global matrices ... done, cpu time[sec] = 0.124529, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.4301, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            43980.5      26470.6      17256.8      17923.6      2548.11      82960.1      23081.8      1500.17
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.713468, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.075604, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.794927, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    0.0131056    0.0133105    0.0155776
      low eigenvalue method done, cpu time[sec] = 0.804265, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0133    0.0153         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000741    0.0153     0.992
         *Z       ---       ---  5.39e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0153386
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.990091   0.00990917   0.00839864   0.00104094  5.05192e-05  0.000168016   7.5073e-06   0.00031084  3.07165e-06  1.86912e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.58882, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 2600 K
            Well    Collision, 1/sec
              W1         1.03118e+09
      global relaxation matrix dimension = 243
      setting global matrices ... done, cpu time[sec] = 0.124903, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.43441, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            34207.1      20588.2      13421.9      13940.6      1981.86      64524.5      17952.5       1166.8
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.715096, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.075611, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.796718, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    0.0127575    0.0129491     0.014964
      low eigenvalue method done, cpu time[sec] = 0.805796, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0129    0.0147         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000715    0.0147     0.993
         *Z       ---       ---  5.39e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0147434
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.990475   0.00952464   0.00809869  0.000965107  4.85336e-05  0.000156245  7.13697e-06  0.000312374  3.07792e-06  1.86913e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.5962, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 2600 K
            Well    Collision, 1/sec
              W1         1.14576e+09
      global relaxation matrix dimension = 243
      setting global matrices ... done, cpu time[sec] = 0.124157, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.43497, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            30786.4      18529.4      12079.7      12546.5      1783.68        58072      16157.3      1050.12
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.713838, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.075537, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.795184, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    0.0126088    0.0127948    0.0147045
      low eigenvalue method done, cpu time[sec] = 0.804153, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0128    0.0145         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000704    0.0145     0.993
         *Z       ---       ---  5.39e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0144914
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.990638   0.00936182   0.00796982  0.000934601  4.77172e-05  0.000151591  6.98767e-06  0.000312943  3.08091e-06  1.86914e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.59401, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 2600 K
            Well    Collision, 1/sec
              W1         1.71864e+09
      global relaxation matrix dimension = 243
      setting global matrices ... done, cpu time[sec] = 0.124219, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.43145, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            20524.2      12352.9      8053.17      8364.35      1189.12      38714.7      10771.5      700.081
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.711961, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.076116, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.793968, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    0.0120217    0.0121869    0.0136955
      low eigenvalue method done, cpu time[sec] = 0.802874, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0122    0.0135         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   0.00066    0.0135     0.993
         *Z       ---       ---  5.39e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0135105
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.991272   0.00872812   0.00745887  0.000824167  4.46522e-05  0.000135041  6.44178e-06  0.000314604  3.09463e-06  1.86917e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.58968, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 2600 K
            Well    Collision, 1/sec
              W1         2.29152e+09
      global relaxation matrix dimension = 243
      setting global matrices ... done, cpu time[sec] = 0.124935, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.43608, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            15393.2       9264.7      6039.87      6273.27      891.838        29036      8078.63      525.061
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.71051, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.076051, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.792833, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    0.0115921     0.011743     0.012973
      low eigenvalue method done, cpu time[sec] = 0.8026, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0117    0.0128         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000629    0.0128     0.994
         *Z       ---       ---  5.39e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0128068
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.991726   0.00827356   0.00708434  0.000752315  4.25406e-05   0.00012445  6.07852e-06  0.000315152  3.10691e-06   1.8692e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.59515, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 2600 K
            Well    Collision, 1/sec
              W1          2.8644e+09
      global relaxation matrix dimension = 243
      setting global matrices ... done, cpu time[sec] = 0.124084, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.43429, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            12314.5      7411.76       4831.9      5018.61       713.47      23228.8      6462.91      420.049
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.715797, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.075873, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.79742, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    0.0112521    0.0113922    0.0124108
      low eigenvalue method done, cpu time[sec] = 0.806421, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0114    0.0123         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000605    0.0123     0.994
         *Z       ---       ---  5.39e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0122587
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.992081   0.00791943   0.00678861  0.000700129   4.0933e-05  0.000116804  5.80855e-06  0.000315132  3.11812e-06  1.86923e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.5959, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 2600 K
            Well    Collision, 1/sec
              W1         3.43728e+09
      global relaxation matrix dimension = 243
      setting global matrices ... done, cpu time[sec] = 0.124432, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.43973, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            10262.1      6176.47      4026.58      4182.18      594.559      19357.3      5385.75      350.041
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.71524, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.07552, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.796387, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    0.0109703    0.0111018    0.0119514
      low eigenvalue method done, cpu time[sec] = 0.805295, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0111    0.0118         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000585    0.0118     0.994
         *Z       ---       ---  5.39e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0118102
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1      0.99237   0.00762972   0.00654443  0.000659694  3.96369e-05  0.000110891  5.59481e-06  0.000314788  3.12848e-06  1.86926e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.59983, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 2600 K
            Well    Collision, 1/sec
              W1         4.01016e+09
      global relaxation matrix dimension = 243
      setting global matrices ... done, cpu time[sec] = 0.124811, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.43883, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             8796.1      5294.12      3451.36      3584.72      509.622        16592      4616.36      300.035
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.714501, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.075475, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.795733, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    0.0107294    0.0108539    0.0115634
      low eigenvalue method done, cpu time[sec] = 0.80467, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0109    0.0114         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000568    0.0114     0.994
         *Z       ---       ---  5.39e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0114313
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.992615    0.0073849   0.00633666  0.000626997  3.85522e-05  0.000106107  5.41851e-06  0.000314244  3.13815e-06  1.86928e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.59962, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 2600 K
            Well    Collision, 1/sec
              W1         4.58304e+09
      global relaxation matrix dimension = 243
      setting global matrices ... done, cpu time[sec] = 0.124268, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.43487, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            7696.59      4632.35      3019.94      3136.63      445.919        14518      4039.32      262.531
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.715102, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.0754, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.796234, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0     0.010519    0.0106375    0.0112282
      low eigenvalue method done, cpu time[sec] = 0.805531, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0106    0.0111         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000554    0.0111     0.994
         *Z       ---       ---  5.39e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0111035
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.992827   0.00717316   0.00615601  0.000599741  3.76203e-05  0.000102113  5.26884e-06  0.000313571  3.14722e-06  1.86931e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.59585, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2700 K
      Energy reference = 91841 1/cm
      Energy step      = 466 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -45.5 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.005794
         W1 Well: collisional kernel bandwidth = 42
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.17683
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.082967
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.090799
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.332426
         W1 Well: minimal relaxation eigenvalue = 0.0283209
         W1 Well: maximal relaxation eigenvalue = 1.10879
         W1 Well:       grid size = 241
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -20464 1/cm
         B1 Barrier:        grid size = 198
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -427 1/cm
         B2 Barrier:        grid size = 197
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 38 1/cm
         B3 Barrier:        grid size = 207
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4621 1/cm
         B4 Barrier:        grid size = 211
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6485 1/cm
         B5 Barrier: nonpositive number of states at -23261 1/cm => truncating
         B5 Barrier:        grid size = 247
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23261 1/cm
         B6 Barrier:        grid size = 194
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1436 1/cm
         B7 Barrier:        grid size = 187
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4698 1/cm
         B8 Barrier:        grid size = 162
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16349 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.999722, elapsed time[sec] = 0
      B5 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 241
      MasterEquation::Barrier::truncate: real weight = 6.95045e+28
      MasterEquation::Barrier::truncate: effective weight = 1.47575e+26
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -20464 -20464 3.69e+06 1.34e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -427  1.6e+19
         B2     39    1e+19
         B3  -4621 6.83e+18
         B4  -6485 7.07e+18
         B5 -20464 1.01e+18
         B6   1437  3.1e+19
         B7   4699  8.8e+18
         B8  16349  6.1e+17
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  5.51e-17  1.14e-16  5.66e-17  2.75e-17  4.38e-21  1.02e-15  1.92e-14   2.2e-10
          R  1.81e+16         1      2.08      1.03     0.499  7.95e-05      18.5       349  3.99e+06
         P1  8.73e+15     0.482         1     0.495      0.24  3.83e-05      8.93       168  1.92e+06
         P2  1.77e+16     0.973      2.02         1     0.486  7.74e-05        18       340  3.89e+06
         P3  3.63e+16         2      4.16      2.06         1  0.000159      37.1       699     8e+06
         P4  2.28e+20  1.26e+04  2.61e+04  1.29e+04  6.28e+03         1  2.33e+05  4.39e+06  5.03e+10
         P5  9.78e+14    0.0539     0.112    0.0554    0.0269  4.29e-06         1      18.8  2.15e+05
         P6   5.2e+13   0.00286   0.00595   0.00294   0.00143  2.28e-07    0.0531         1  1.14e+04
         P7  4.54e+09   2.5e-07   5.2e-07  2.57e-07  1.25e-07  1.99e-11  4.64e-06  8.74e-05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1   1.6e-19  3.33e-19  1.65e-19  8.01e-20  1.27e-23  2.97e-18   5.6e-17  6.41e-13
          R  6.24e+18         1      2.08      1.03     0.499  7.95e-05      18.5       349  3.99e+06
         P1     3e+18     0.482         1     0.495      0.24  3.83e-05      8.93       168  1.92e+06
         P2  6.07e+18     0.973      2.02         1     0.486  7.74e-05        18       340  3.89e+06
         P3  1.25e+19         2      4.16      2.06         1  0.000159      37.1       699     8e+06
         P4  7.85e+22  1.26e+04  2.61e+04  1.29e+04  6.28e+03         1  2.33e+05  4.39e+06  5.03e+10
         P5  3.36e+17    0.0539     0.112    0.0554    0.0269  4.29e-06         1      18.8  2.15e+05
         P6  1.79e+16   0.00286   0.00595   0.00294   0.00143  2.28e-07    0.0531         1  1.14e+04
         P7  1.56e+12   2.5e-07   5.2e-07  2.57e-07  1.25e-07  1.99e-11  4.64e-06  8.74e-05         1
   MasterEquation::set:  done, cpu time[sec] = 1.013, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 2700 K
            Well    Collision, 1/sec
              W1         1.11805e+08
      global relaxation matrix dimension = 241
      setting global matrices ... done, cpu time[sec] = 0.123233, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.37279, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             319285       199400       136234       141125      20163.6       617855       175522        12168
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.696208, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.075832, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.778037, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    0.0197121    0.0202482    0.0270616
      low eigenvalue method done, cpu time[sec] = 0.787204, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0202    0.0263         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   0.00121    0.0263     0.987
         *Z       ---       ---  4.01e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0263485
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1      0.98077    0.0192295    0.0156844   0.00264997  0.000105919   0.00046456  1.74596e-05   0.00049376  5.66064e-06  4.60045e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.51033, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 2700 K
            Well    Collision, 1/sec
              W1         3.35414e+08
      global relaxation matrix dimension = 241
      setting global matrices ... done, cpu time[sec] = 0.122917, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.37815, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             106428      66466.7      45411.5      47041.7      6721.19       205952      58507.2      4055.98
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.696552, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.074529, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.776926, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    0.0182575    0.0186991    0.0240692
      low eigenvalue method done, cpu time[sec] = 0.785741, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0187    0.0235         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   0.00109    0.0235     0.988
         *Z       ---       ---  4.01e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0235035
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.982847    0.0171531    0.0143558   0.00201678  8.97746e-05  0.000328627  1.38043e-05  0.000506973  5.67755e-06  4.60047e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.51472, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 2700 K
            Well    Collision, 1/sec
              W1         5.59024e+08
      global relaxation matrix dimension = 241
      setting global matrices ... done, cpu time[sec] = 0.121769, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.39102, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
              63857        39880      27246.9        28225      4032.72       123571      35104.3      2433.59
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.697507, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.074733, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.77824, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    0.0174932    0.0178894    0.0225454
      low eigenvalue method done, cpu time[sec] = 0.787294, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0179     0.022         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   0.00102     0.022     0.989
         *Z       ---       ---  4.01e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0220484
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.983909    0.0160912    0.0135887   0.00175417  8.33718e-05  0.000283753  1.25001e-05  0.000513467  5.69113e-06   4.6005e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.52791, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 2700 K
            Well    Collision, 1/sec
              W1         7.82633e+08
      global relaxation matrix dimension = 241
      setting global matrices ... done, cpu time[sec] = 0.12253, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.38585, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            45612.1      28485.7      19462.1      20160.7      2880.51      88264.9      25074.5      1738.28
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.699752, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.074285, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.77961, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    0.0169602    0.0173266    0.0215043
      low eigenvalue method done, cpu time[sec] = 0.788383, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0173    0.0211         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000979    0.0211     0.989
         *Z       ---       ---  4.01e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0210516
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.984636    0.0153637    0.0130371   0.00159497  7.93987e-05  0.000258411  1.17309e-05   0.00051748  5.70316e-06  4.60053e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.52319, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 2700 K
            Well    Collision, 1/sec
              W1         1.00624e+09
      global relaxation matrix dimension = 241
      setting global matrices ... done, cpu time[sec] = 0.122618, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.39413, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            35476.1      22155.6      15137.2      15680.6       2240.4      68650.5      19502.4      1351.99
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.700212, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.075125, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.781105, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    0.0165474    0.0168916    0.0207103
      low eigenvalue method done, cpu time[sec] = 0.789886, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0169    0.0203         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000946    0.0203      0.99
         *Z       ---       ---  4.01e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0202901
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.985192     0.014808    0.0126038   0.00148339  7.65301e-05  0.000241259  1.11938e-05  0.000520188   5.7142e-06  4.60055e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.53352, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 2700 K
            Well    Collision, 1/sec
              W1         1.11805e+09
      global relaxation matrix dimension = 241
      setting global matrices ... done, cpu time[sec] = 0.121968, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.40258, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            31928.5        19940      13623.4      14112.5      2016.36      61785.5      17552.2       1216.8
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.698103, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.074382, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.778928, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    0.0163707    0.0167057    0.0203738
      low eigenvalue method done, cpu time[sec] = 0.787692, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0167      0.02         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000932      0.02      0.99
         *Z       ---       ---  4.01e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.019967
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.985428    0.0145722    0.0124171   0.00143847   7.5349e-05  0.000234466  1.09769e-05  0.000521222  5.71944e-06  4.60057e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.56751, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 2700 K
            Well    Collision, 1/sec
              W1         1.67707e+09
      global relaxation matrix dimension = 241
      setting global matrices ... done, cpu time[sec] = 0.122054, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.39702, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            21285.7      13293.3       9082.3      9408.34      1344.24      41190.3      11701.4      811.197
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.69801, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.074368, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.778504, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    0.0156716    0.0159717    0.0190623
      low eigenvalue method done, cpu time[sec] = 0.787438, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0     0.016    0.0187         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000877    0.0187     0.991
         *Z       ---       ---  4.01e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0187057
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.986348    0.0136517    0.0116742   0.00127562  7.09036e-05  0.000210257  1.01823e-05  0.000524468  5.74352e-06  4.60063e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.53338, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 2700 K
            Well    Collision, 1/sec
              W1         2.23609e+09
      global relaxation matrix dimension = 241
      setting global matrices ... done, cpu time[sec] = 0.121992, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.39804, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            15964.2      9970.01      6811.72      7056.25      1008.18      30892.7      8776.08      608.398
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.69811, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.07446, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.778628, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    0.0151581     0.015434    0.0181194
      low eigenvalue method done, cpu time[sec] = 0.787369, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0154    0.0178         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000838    0.0178     0.991
         *Z       ---       ---  4.01e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0177969
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.987012    0.0129884    0.0111268    0.0011694  6.78298e-05  0.000194711  9.65182e-06  0.000525873  5.76503e-06   4.6007e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.53474, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 2700 K
            Well    Collision, 1/sec
              W1         2.79512e+09
      global relaxation matrix dimension = 241
      setting global matrices ... done, cpu time[sec] = 0.122264, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.40039, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            12771.4         7976      5449.38         5645      806.543      24714.2      7020.86      486.718
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.696257, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.074558, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.776934, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    0.0147505     0.015008    0.0173834
      low eigenvalue method done, cpu time[sec] = 0.785666, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0     0.015    0.0171         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000808    0.0171     0.991
         *Z       ---       ---  4.01e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0170863
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1      0.98753    0.0124698    0.0106928   0.00109209  6.54825e-05  0.000183457  9.25645e-06   0.00052632  5.78467e-06  4.60077e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.53445, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 2700 K
            Well    Collision, 1/sec
              W1         3.35414e+09
      global relaxation matrix dimension = 241
      setting global matrices ... done, cpu time[sec] = 0.12229, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.40088, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            10642.8      6646.67      4541.15      4704.17      672.119      20595.2      5850.72      405.598
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.699993, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.074778, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.781032, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    0.0144118    0.0146547    0.0167803
      low eigenvalue method done, cpu time[sec] = 0.789955, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0147    0.0165         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000782    0.0165     0.992
         *Z       ---       ---  4.01e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0165033
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.987956    0.0120444    0.0103334   0.00103208  6.35851e-05  0.000174732  8.94269e-06  0.000526204  5.80284e-06  4.60083e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.53861, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 2700 K
            Well    Collision, 1/sec
              W1         3.91317e+09
      global relaxation matrix dimension = 241
      setting global matrices ... done, cpu time[sec] = 0.122424, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.40374, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            9122.42      5697.15      3892.41      4032.15      576.102        17653       5014.9      347.656
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.695562, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.074578, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.77605, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    0.0141217    0.0143525    0.0162699
      low eigenvalue method done, cpu time[sec] = 0.78501, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0144     0.016         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000761     0.016     0.992
         *Z       ---       ---  4.01e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0160094
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.988316    0.0116839    0.0100267  0.000983463  6.19935e-05  0.000167658  8.68333e-06  0.000525731   5.8198e-06   4.6009e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.53915, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 2700 K
            Well    Collision, 1/sec
              W1         4.47219e+09
      global relaxation matrix dimension = 241
      setting global matrices ... done, cpu time[sec] = 0.122053, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.40073, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            7982.12         4985      3405.86      3528.13       504.09      15446.4      4388.04      304.199
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.697773, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.074103, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.777513, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    0.0138678    0.0140882    0.0158279
      low eigenvalue method done, cpu time[sec] = 0.786568, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0141    0.0156         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000743    0.0156     0.992
         *Z       ---       ---  4.01e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0155812
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.988629    0.0113714   0.00975936  0.000942873  6.06232e-05  0.000161742  8.46274e-06  0.000525023  5.83572e-06  4.60097e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.53646, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2800 K
      Energy reference = 94621 1/cm
      Energy step      = 483 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -43.1 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.005863
         W1 Well: collisional kernel bandwidth = 42
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.17821
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.082905
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.092368
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.330488
         W1 Well: minimal relaxation eigenvalue = 0.027379
         W1 Well: maximal relaxation eigenvalue = 1.131
         W1 Well:       grid size = 240
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -21299 1/cm
         B1 Barrier:        grid size = 196
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -46 1/cm
         B2 Barrier:        grid size = 196
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = -46 1/cm
         B3 Barrier:        grid size = 206
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4876 1/cm
         B4 Barrier:        grid size = 209
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6325 1/cm
         B5 Barrier: nonpositive number of states at -23231 1/cm => truncating
         B5 Barrier:        grid size = 244
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23231 1/cm
         B6 Barrier:        grid size = 193
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1402 1/cm
         B7 Barrier:        grid size = 187
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4299 1/cm
         B8 Barrier:        grid size = 162
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16374 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.0024, elapsed time[sec] = 0
      B5 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 240
      MasterEquation::Barrier::truncate: real weight = 6.84327e+28
      MasterEquation::Barrier::truncate: effective weight = 1.506e+26
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -21299 -21299 2.25e+06 1.72e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -46 2.07e+19
         B2    -46 1.34e+19
         B3  -4876 9.57e+18
         B4  -6325 9.89e+18
         B5 -21299 1.42e+18
         B6   1403  4.1e+19
         B7   4300 1.19e+19
         B8  16375 8.76e+17
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  3.32e-17  6.97e-17   3.7e-17  1.86e-17  4.19e-21  5.78e-16  1.02e-14  9.55e-11
          R  3.01e+16         1       2.1      1.11      0.56  0.000126      17.4       309  2.88e+06
         P1  1.43e+16     0.476         1      0.53     0.266  6.01e-05      8.28       147  1.37e+06
         P2   2.7e+16     0.897      1.89         1     0.503  0.000113      15.6       277  2.58e+06
         P3  5.38e+16      1.79      3.75      1.99         1  0.000225      31.1       552  5.14e+06
         P4  2.39e+20  7.92e+03  1.66e+04  8.83e+03  4.44e+03         1  1.38e+05  2.45e+06  2.28e+10
         P5  1.73e+15    0.0574     0.121     0.064    0.0322  7.25e-06         1      17.7  1.65e+05
         P6  9.76e+13   0.00324    0.0068   0.00361   0.00181  4.09e-07    0.0564         1  9.32e+03
         P7  1.05e+10  3.47e-07  7.31e-07  3.87e-07  1.95e-07  4.39e-11  6.05e-06  0.000107         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  9.02e-20   1.9e-19  1.01e-19  5.05e-20  1.14e-23  1.57e-18  2.79e-17   2.6e-13
          R  1.11e+19         1       2.1      1.11      0.56  0.000126      17.4       309  2.88e+06
         P1  5.27e+18     0.476         1      0.53     0.266  6.01e-05      8.28       147  1.37e+06
         P2  9.95e+18     0.897      1.89         1     0.503  0.000113      15.6       277  2.58e+06
         P3  1.98e+19      1.79      3.75      1.99         1  0.000225      31.1       552  5.14e+06
         P4  8.78e+22  7.92e+03  1.66e+04  8.83e+03  4.44e+03         1  1.38e+05  2.45e+06  2.28e+10
         P5  6.37e+17    0.0574     0.121     0.064    0.0322  7.25e-06         1      17.7  1.65e+05
         P6  3.59e+16   0.00324    0.0068   0.00361   0.00181  4.09e-07    0.0564         1  9.32e+03
         P7  3.85e+12  3.47e-07  7.31e-07  3.87e-07  1.95e-07  4.39e-11  6.05e-06  0.000107         1
   MasterEquation::set:  done, cpu time[sec] = 1.01529, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 2800 K
            Well    Collision, 1/sec
              W1         1.09198e+08
      global relaxation matrix dimension = 240
      setting global matrices ... done, cpu time[sec] = 0.122802, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.35546, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             329949       213575       152858       157839      22674.5       654429       189639        13988
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.687813, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.074697, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.768769, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    0.0246587    0.0255489    0.0358728
      low eigenvalue method done, cpu time[sec] = 0.777576, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0255    0.0346         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   0.00155    0.0346     0.983
         *Z       ---       ---  3.05e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0346305
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.971968    0.0280322    0.0229733    0.0037628  0.000156132  0.000667117  2.54963e-05  0.000786156  9.98915e-06  1.05636e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.48151, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 2800 K
            Well    Collision, 1/sec
              W1         3.27593e+08
      global relaxation matrix dimension = 240
      setting global matrices ... done, cpu time[sec] = 0.122291, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.36837, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             109983      71191.8      50952.5        52613      7558.16       218143        63213      4662.66
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.688135, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.073784, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.767695, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    0.0229989    0.0237432    0.0321636
      low eigenvalue method done, cpu time[sec] = 0.776748, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0237    0.0312         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   0.00139    0.0312     0.984
         *Z       ---       ---  3.05e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0311614
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.974776    0.0252241    0.0211687   0.00290901  0.000133861  0.000478388  2.04363e-05  0.000806435  1.00177e-05  1.05637e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.49507, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 2800 K
            Well    Collision, 1/sec
              W1         5.45989e+08
      global relaxation matrix dimension = 240
      setting global matrices ... done, cpu time[sec] = 0.120937, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.3818, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            65989.9      42715.1      30571.5      31567.8       4534.9       130886      37927.8      2797.59
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.689079, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.074022, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.769333, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    0.0221185    0.0227918    0.0302568
      low eigenvalue method done, cpu time[sec] = 0.778283, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0228    0.0294         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   0.00132    0.0294     0.985
         *Z       ---       ---  3.05e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0293682
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.976227    0.0237725    0.0201175   0.00254829   0.00012503  0.000415974  1.86299e-05  0.000816657  1.00405e-05  1.05637e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.50604, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 2800 K
            Well    Collision, 1/sec
              W1         7.64385e+08
      global relaxation matrix dimension = 240
      setting global matrices ... done, cpu time[sec] = 0.121265, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.39507, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            47135.6      30510.8      21836.8      22548.4      3239.21      93489.8      27091.3      1998.28
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.692803, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.074148, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.773103, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    0.0215018    0.0221279    0.0289477
      low eigenvalue method done, cpu time[sec] = 0.781829, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0221    0.0281         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   0.00126    0.0281     0.986
         *Z       ---       ---  3.05e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0281333
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.977227     0.022773    0.0193577   0.00232814  0.000119541  0.000380652  1.75627e-05  0.000823131  1.00606e-05  1.05638e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.52484, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 2800 K
            Well    Collision, 1/sec
              W1          9.8278e+08
      global relaxation matrix dimension = 240
      setting global matrices ... done, cpu time[sec] = 0.121951, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.39041, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            36661.1      23730.6      16984.2      17537.7      2519.39      72714.3        21071      1554.22
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.687603, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.074905, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.76857, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    0.0210226    0.0216136    0.0279462
      low eigenvalue method done, cpu time[sec] = 0.777245, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0216    0.0272         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   0.00122    0.0272     0.986
         *Z       ---       ---  3.05e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0271864
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.977994    0.0220065    0.0187583    0.0021732  0.000115572  0.000356701  1.68164e-05  0.000827617   1.0079e-05  1.05638e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.51573, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 2800 K
            Well    Collision, 1/sec
              W1         1.09198e+09
      global relaxation matrix dimension = 240
      setting global matrices ... done, cpu time[sec] = 0.122376, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.38511, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            32994.9      21357.5      15285.8      15783.9      2267.45      65442.9      18963.9       1398.8
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.689644, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.07378, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.769256, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    0.0208172    0.0213934    0.0275209
      low eigenvalue method done, cpu time[sec] = 0.777933, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0214    0.0268         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   0.00121    0.0268     0.987
         *Z       ---       ---  3.05e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0267838
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.978319    0.0216805    0.0184995   0.00211067  0.000113936  0.000347204  1.65148e-05   0.00082937  1.00877e-05  1.05639e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.51149, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 2800 K
            Well    Collision, 1/sec
              W1         1.63797e+09
      global relaxation matrix dimension = 240
      setting global matrices ... done, cpu time[sec] = 0.121847, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.38862, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            21996.6      14238.4      10190.5      10522.6      1511.63      43628.6      12642.6      932.531
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.690299, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.073871, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.769701, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    0.0200018     0.020522    0.0258583
      low eigenvalue method done, cpu time[sec] = 0.778765, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0205    0.0252         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   0.00114    0.0252     0.987
         *Z       ---       ---  3.05e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0252065
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.979596    0.0204038     0.017466   0.00188325  0.000107765  0.000313292  1.54076e-05  0.000835149  1.01278e-05   1.0564e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.51464, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 2800 K
            Well    Collision, 1/sec
              W1         2.18396e+09
      global relaxation matrix dimension = 240
      setting global matrices ... done, cpu time[sec] = 0.121828, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.39316, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            16497.5      10678.8      7642.88      7891.94      1133.72      32721.4      9481.95      699.398
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.688731, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.073704, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.768384, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    0.0194006    0.0198817    0.0246582
      low eigenvalue method done, cpu time[sec] = 0.777243, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0199    0.0241         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   0.00109    0.0241     0.988
         *Z       ---       ---  3.05e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0240648
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1      0.98052    0.0194796    0.0167007   0.00173426  0.000103485  0.000291448  1.46662e-05   0.00083804  1.01636e-05  1.05641e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.51823, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 2800 K
            Well    Collision, 1/sec
              W1         2.72994e+09
      global relaxation matrix dimension = 240
      setting global matrices ... done, cpu time[sec] = 0.121573, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.38923, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
              13198      8543.01       6114.3      6313.55       906.98      26177.1      7585.56      559.519
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.688146, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.07371, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.767667, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    0.0189219    0.0193732    0.0237184
      low eigenvalue method done, cpu time[sec] = 0.7763, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0194    0.0232         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   0.00105    0.0232     0.988
         *Z       ---       ---  3.05e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0231689
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.981246    0.0187544    0.0160918   0.00162545  0.000100207  0.000275597  1.41124e-05  0.000839399  1.01962e-05  1.05643e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.51271, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 2800 K
            Well    Collision, 1/sec
              W1         3.27593e+09
      global relaxation matrix dimension = 240
      setting global matrices ... done, cpu time[sec] = 0.121269, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.39043, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            10998.3      7119.18      5095.25       5261.3      755.816      21814.3       6321.3      466.266
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.692501, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.074506, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.772966, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    0.0185232    0.0189505    0.0229464
      low eigenvalue method done, cpu time[sec] = 0.781712, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0     0.019    0.0224         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   0.00102    0.0224     0.989
         *Z       ---       ---  3.05e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0224317
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.981842    0.0181577    0.0155859   0.00154076  9.75516e-05  0.000263282   1.3672e-05  0.000839839  1.02265e-05  1.05644e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.5192, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 2800 K
            Well    Collision, 1/sec
              W1         3.82192e+09
      global relaxation matrix dimension = 240
      setting global matrices ... done, cpu time[sec] = 0.121421, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.39372, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            9427.13      6102.15      4367.36      4509.68      647.843        18698      5418.26      399.656
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.688864, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.074042, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.768738, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0     0.018181    0.0185884    0.0222916
      low eigenvalue method done, cpu time[sec] = 0.77736, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0186    0.0218         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000996    0.0218     0.989
         *Z       ---       ---  3.05e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0218055
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.982349    0.0176508    0.0151531     0.001472  9.53195e-05   0.00025328  1.33073e-05  0.000839685  1.02547e-05  1.05646e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.51786, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 2800 K
            Well    Collision, 1/sec
              W1         4.36791e+09
      global relaxation matrix dimension = 240
      setting global matrices ... done, cpu time[sec] = 0.121039, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.39189, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            8248.74      5339.38      3821.44      3945.97      566.862      16360.7      4740.98      349.699
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.690208, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.073811, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.76992, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    0.0178808    0.0182713    0.0217234
      low eigenvalue method done, cpu time[sec] = 0.779027, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0183    0.0213         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000973    0.0213     0.989
         *Z       ---       ---  3.05e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0212616
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.982789    0.0172105     0.014775   0.00141449  9.33943e-05    0.0002449  1.29965e-05  0.000839128  1.02813e-05  1.05647e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.51718, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2900 K
      Energy reference = 97401 1/cm
      Energy step      = 500 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -40.7 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.005578
         W1 Well: collisional kernel bandwidth = 42
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.175512
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.081183
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.090413
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.325574
         W1 Well: minimal relaxation eigenvalue = 0.0265859
         W1 Well: maximal relaxation eigenvalue = 1.1564
         W1 Well:       grid size = 239
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -22098 1/cm
         B1 Barrier:        grid size = 195
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -98 1/cm
         B2 Barrier:        grid size = 195
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = -98 1/cm
         B3 Barrier:        grid size = 205
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -5098 1/cm
         B4 Barrier:        grid size = 208
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6598 1/cm
         B5 Barrier: nonpositive number of states at -23099 1/cm => truncating
         B5 Barrier:        grid size = 241
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23098 1/cm
         B6 Barrier:        grid size = 192
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1401 1/cm
         B7 Barrier:        grid size = 186
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4401 1/cm
         B8 Barrier:        grid size = 162
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16401 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.989378, elapsed time[sec] = 0
      B5 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 239
      MasterEquation::Barrier::truncate: real weight = 6.8442e+28
      MasterEquation::Barrier::truncate: effective weight = 1.55922e+26
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -22098 -22098 1.37e+06 2.19e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -98 2.65e+19
         B2    -98 1.78e+19
         B3  -5098 1.33e+19
         B4  -6598 1.37e+19
         B5 -22098 1.98e+18
         B6   1402 5.38e+19
         B7   4402 1.59e+19
         B8  16402 1.24e+18
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  2.02e-17   4.3e-17  2.43e-17  1.26e-17  3.93e-21  3.32e-16  5.56e-15  4.28e-11
          R  4.95e+16         1      2.13       1.2     0.623  0.000194      16.4       275  2.12e+06
         P1  2.32e+16      0.47         1     0.565     0.293  9.13e-05      7.71       129  9.96e+05
         P2  4.12e+16     0.832      1.77         1     0.518  0.000162      13.6       229  1.76e+06
         P3  7.94e+16       1.6      3.42      1.93         1  0.000312      26.3       442   3.4e+06
         P4  2.55e+20  5.15e+03   1.1e+04  6.19e+03  3.21e+03         1  8.44e+04  1.42e+06  1.09e+10
         P5  3.02e+15     0.061      0.13    0.0733     0.038  1.18e-05         1      16.8  1.29e+05
         P6   1.8e+14   0.00363   0.00773   0.00437   0.00226  7.06e-07    0.0596         1   7.7e+03
         P7  2.33e+10  4.72e-07     1e-06  5.67e-07  2.94e-07  9.17e-11  7.74e-06   0.00013         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  5.29e-20  1.13e-19  6.36e-20   3.3e-20  1.03e-23  8.68e-19  1.46e-17  1.12e-13
          R  1.89e+19         1      2.13       1.2     0.623  0.000194      16.4       275  2.12e+06
         P1  8.88e+18      0.47         1     0.565     0.293  9.13e-05      7.71       129  9.96e+05
         P2  1.57e+19     0.832      1.77         1     0.518  0.000162      13.6       229  1.76e+06
         P3  3.03e+19       1.6      3.42      1.93         1  0.000312      26.3       442   3.4e+06
         P4  9.73e+22  5.15e+03   1.1e+04  6.19e+03  3.21e+03         1  8.44e+04  1.42e+06  1.09e+10
         P5  1.15e+18     0.061      0.13    0.0733     0.038  1.18e-05         1      16.8  1.29e+05
         P6  6.87e+16   0.00363   0.00773   0.00437   0.00226  7.06e-07    0.0596         1   7.7e+03
         P7  8.92e+12  4.72e-07     1e-06  5.67e-07  2.94e-07  9.17e-11  7.74e-06   0.00013         1
   MasterEquation::set:  done, cpu time[sec] = 1.00223, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 2900 K
            Well    Collision, 1/sec
              W1          1.0674e+08
      global relaxation matrix dimension = 239
      setting global matrices ... done, cpu time[sec] = 0.121319, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.35078, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             339860       227772       170691       175713      25373.6       690327       203870      15963.3
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.68332, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.073321, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.762656, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    0.0304953    0.0319468    0.0472247
      low eigenvalue method done, cpu time[sec] = 0.771319, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0319    0.0451         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   0.00197    0.0451     0.977
         *Z       ---       ---  2.35e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0450951
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.960737     0.039263    0.0323037   0.00516239  0.000221245  0.000919158  3.57757e-05   0.00120161  1.68457e-05  2.27959e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.46596, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 2900 K
            Well    Collision, 1/sec
              W1          3.2022e+08
      global relaxation matrix dimension = 239
      setting global matrices ... done, cpu time[sec] = 0.120161, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.36134, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             113287      75924.1        56897      58570.9      8457.87       230109      67956.7      5321.12
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.684111, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.073159, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.763137, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    0.0286162    0.0298456    0.0426372
      low eigenvalue method done, cpu time[sec] = 0.771856, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0298    0.0409         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   0.00179    0.0409     0.979
         *Z       ---       ---  2.35e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0408937
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.964395    0.0356049    0.0299546   0.00403926  0.000191833  0.000668393   2.9072e-05   0.00123135  1.68918e-05  2.27961e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.47659, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 2900 K
            Well    Collision, 1/sec
              W1           5.337e+08
      global relaxation matrix dimension = 239
      setting global matrices ... done, cpu time[sec] = 0.120631, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.36788, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            67971.9      45554.5      34138.2      35142.6      5074.72       138065        40774      3192.67
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.68273, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.073253, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.762191, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0     0.027612     0.028732    0.0402612
      low eigenvalue method done, cpu time[sec] = 0.771205, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0287    0.0387         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   0.00169    0.0387      0.98
         *Z       ---       ---  2.35e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.038703
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.966302    0.0336975    0.0285723   0.00355956  0.000180156  0.000585218  2.66743e-05   0.00124666  1.69282e-05  2.27962e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.48284, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 2900 K
            Well    Collision, 1/sec
              W1          7.4718e+08
      global relaxation matrix dimension = 239
      setting global matrices ... done, cpu time[sec] = 0.120924, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.36422, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            48551.4      32538.9      24384.4      25101.8       3624.8      98618.2      29124.3      2280.48
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.682875, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.072997, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.761731, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    0.0269059    0.0279528    0.0386239
      low eigenvalue method done, cpu time[sec] = 0.770589, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0     0.028    0.0372         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   0.00163    0.0372     0.981
         *Z       ---       ---  2.35e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0371876
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.967622    0.0323781    0.0275678   0.00326557  0.000172887   0.00053804  2.52554e-05   0.00125655  1.69603e-05  2.27963e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.47936, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 2900 K
            Well    Collision, 1/sec
              W1          9.6066e+08
      global relaxation matrix dimension = 239
      setting global matrices ... done, cpu time[sec] = 0.119996, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.3737, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            37762.2        25308      18965.7      19523.6      2819.29        76703      22652.2      1773.71
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.684495, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.07339, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.763627, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    0.0263559    0.0273479    0.0373679
      low eigenvalue method done, cpu time[sec] = 0.772219, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0273     0.036         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   0.00158     0.036     0.982
         *Z       ---       ---  2.35e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0360218
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.968637    0.0313631    0.0267725    0.0030581  0.000167621  0.000505991  2.42615e-05   0.00126354  1.69896e-05  2.27964e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.48919, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 2900 K
            Well    Collision, 1/sec
              W1          1.0674e+09
      global relaxation matrix dimension = 239
      setting global matrices ... done, cpu time[sec] = 0.120318, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.37871, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
              33986      22777.2      17069.1      17571.3      2537.36      69032.7        20387      1596.33
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.679678, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.073302, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.759124, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    0.0261196    0.0270887    0.0368336
      low eigenvalue method done, cpu time[sec] = 0.7679, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0271    0.0355         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   0.00156    0.0355     0.982
         *Z       ---       ---  2.35e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0355251
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.969069    0.0309306    0.0264283   0.00297423  0.000165448  0.000493268  2.38594e-05   0.00126632  1.70035e-05  2.27965e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.48952, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 2900 K
            Well    Collision, 1/sec
              W1          1.6011e+09
      global relaxation matrix dimension = 239
      setting global matrices ... done, cpu time[sec] = 0.120089, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.37777, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            22657.3      15184.8      11379.4      11714.2      1691.57      46021.8      13591.3      1064.22
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.681502, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.072922, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.760577, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0      0.02518    0.0260609    0.0347399
      low eigenvalue method done, cpu time[sec] = 0.769476, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0261    0.0336         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   0.00148    0.0336     0.983
         *Z       ---       ---  2.35e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0335736
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.970768    0.0292315    0.0250489   0.00266847  0.000157237  0.000447746  2.23808e-05    0.0012758  1.70671e-05  2.27968e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.4905, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 2900 K
            Well    Collision, 1/sec
              W1          2.1348e+09
      global relaxation matrix dimension = 239
      setting global matrices ... done, cpu time[sec] = 0.12039, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.38545, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
              16993      11388.6      8534.55      8785.64      1268.68      34516.4      10193.5      798.167
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.682394, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.073437, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.76167, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    0.0244847    0.0253039    0.0332232
      low eigenvalue method done, cpu time[sec] = 0.770428, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0253    0.0322         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   0.00142    0.0322     0.984
         *Z       ---       ---  2.35e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0321549
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.972004    0.0279964    0.0240229   0.00246749  0.000151524  0.000418342  2.13882e-05   0.00128098  1.71238e-05  2.27971e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.49945, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 2900 K
            Well    Collision, 1/sec
              W1          2.6685e+09
      global relaxation matrix dimension = 239
      setting global matrices ... done, cpu time[sec] = 0.120409, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.38531, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            13594.4      9110.89      6827.64      7028.51      1014.94      27613.1       8154.8      638.534
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.681211, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.072951, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.760004, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    0.0239298    0.0247016    0.0320325
      low eigenvalue method done, cpu time[sec] = 0.769274, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0247     0.031         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   0.00137     0.031     0.984
         *Z       ---       ---  2.35e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0310382
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.972976    0.0270241    0.0232036   0.00232034   0.00014714  0.000396955   2.0645e-05   0.00128383  1.71756e-05  2.27974e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.49833, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 2900 K
            Well    Collision, 1/sec
              W1          3.2022e+09
      global relaxation matrix dimension = 239
      setting global matrices ... done, cpu time[sec] = 0.120143, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.38541, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            11328.7      7592.41       5689.7      5857.09      845.787      23010.9      6795.67      532.112
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.681358, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.073093, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.76001, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    0.0234665    0.0242002     0.031052
      low eigenvalue method done, cpu time[sec] = 0.76884, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0242    0.0301         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   0.00133    0.0301     0.985
         *Z       ---       ---  2.35e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0301168
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.973778    0.0262218     0.022521   0.00220556  0.000143579  0.000380305  2.00528e-05   0.00128528  1.72235e-05  2.27977e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.49807, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 2900 K
            Well    Collision, 1/sec
              W1          3.7359e+09
      global relaxation matrix dimension = 239
      setting global matrices ... done, cpu time[sec] = 0.120244, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.38613, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            9710.28      6507.78      4876.88      5020.37      724.961      19723.6      5824.86      456.096
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.681489, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.073427, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.761134, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    0.0230681    0.0237699    0.0302188
      low eigenvalue method done, cpu time[sec] = 0.769782, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0238    0.0293         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0    0.0013    0.0293     0.985
         *Z       ---       ---  2.35e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0293324
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.974461    0.0255389    0.0219356    0.0021122  0.000140581  0.000366758  1.95615e-05   0.00128579  1.72682e-05   2.2798e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.49898, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 2900 K
            Well    Collision, 1/sec
              W1          4.2696e+09
      global relaxation matrix dimension = 239
      setting global matrices ... done, cpu time[sec] = 0.120651, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.38519, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            8496.49      5694.31      4267.27      4392.82      634.341      17258.2      5096.75      399.084
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.685346, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.073321, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.764646, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    0.0227182    0.0233928    0.0294947
      low eigenvalue method done, cpu time[sec] = 0.773269, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0234    0.0286         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   0.00127    0.0286     0.986
         *Z       ---       ---  2.35e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0286496
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.975056    0.0249444    0.0214232   0.00203398   0.00013799   0.00035539  1.91423e-05   0.00128566  1.73104e-05  2.27983e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.50174, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 3000 K
      Energy reference = 100181 1/cm
      Energy step      = 517 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -38.3 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.005913
         W1 Well: collisional kernel bandwidth = 42
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.174801
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.080373
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.090478
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.32439
         W1 Well: minimal relaxation eigenvalue = 0.0259277
         W1 Well: maximal relaxation eigenvalue = 1.1866
         W1 Well:       grid size = 238
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -22864 1/cm
         B1 Barrier:        grid size = 194
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -116 1/cm
         B2 Barrier:        grid size = 194
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = -116 1/cm
         B3 Barrier:        grid size = 203
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4769 1/cm
         B4 Barrier:        grid size = 206
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6320 1/cm
         B5 Barrier: nonpositive number of states at -23899 1/cm => truncating
         B5 Barrier:        grid size = 240
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23899 1/cm
         B6 Barrier:        grid size = 191
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1434 1/cm
         B7 Barrier:        grid size = 185
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4536 1/cm
         B8 Barrier:        grid size = 162
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16427 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.985209, elapsed time[sec] = 0
      B5 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 238
      MasterEquation::Barrier::truncate: real weight = 6.93933e+28
      MasterEquation::Barrier::truncate: effective weight = 1.63464e+26
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -22864 -22864  8.3e+05 2.77e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -116 3.37e+19
         B2   -116 2.34e+19
         B3  -4769 1.83e+19
         B4  -6320 1.88e+19
         B5 -22864 2.73e+18
         B6   1435 7.01e+19
         B7   4537 2.11e+19
         B8  16428 1.75e+18
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  1.25e-17   2.7e-17  1.61e-17  8.61e-18  3.64e-21  1.94e-16  3.09e-15  1.99e-11
          R  7.99e+16         1      2.15      1.29     0.689  0.000291      15.5       247  1.59e+06
         P1  3.71e+16     0.464         1     0.599      0.32  0.000135      7.19       115  7.38e+05
         P2  6.19e+16     0.775      1.67         1     0.534  0.000225        12       191  1.23e+06
         P3  1.16e+17      1.45      3.13      1.87         1  0.000422      22.5       359  2.31e+06
         P4  2.75e+20  3.44e+03  7.41e+03  4.44e+03  2.37e+03         1  5.33e+04   8.5e+05  5.47e+09
         P5  5.16e+15    0.0645     0.139    0.0833    0.0444  1.87e-05         1      15.9  1.03e+05
         P6  3.24e+14   0.00405   0.00873   0.00523   0.00279  1.18e-06    0.0628         1  6.44e+03
         P7  5.02e+10  6.29e-07  1.35e-06  8.11e-07  4.33e-07  1.83e-10  9.74e-06  0.000155         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  3.22e-20  6.94e-20  4.16e-20  2.22e-20  9.36e-24  4.99e-19  7.95e-18  5.12e-14
          R  3.11e+19         1      2.15      1.29     0.689  0.000291      15.5       247  1.59e+06
         P1  1.44e+19     0.464         1     0.599      0.32  0.000135      7.19       115  7.38e+05
         P2  2.41e+19     0.775      1.67         1     0.534  0.000225        12       191  1.23e+06
         P3  4.51e+19      1.45      3.13      1.87         1  0.000422      22.5       359  2.31e+06
         P4  1.07e+23  3.44e+03  7.41e+03  4.44e+03  2.37e+03         1  5.33e+04   8.5e+05  5.47e+09
         P5     2e+18    0.0645     0.139    0.0833    0.0444  1.87e-05         1      15.9  1.03e+05
         P6  1.26e+17   0.00405   0.00873   0.00523   0.00279  1.18e-06    0.0628         1  6.44e+03
         P7  1.95e+13  6.29e-07  1.35e-06  8.11e-07  4.33e-07  1.83e-10  9.74e-06  0.000155         1
   MasterEquation::set:  done, cpu time[sec] = 0.998305, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 3000 K
            Well    Collision, 1/sec
              W1         1.04418e+08
      global relaxation matrix dimension = 238
      setting global matrices ... done, cpu time[sec] = 0.12032, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.32101, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             349024       241948       189757       194770      28264.7       725451       218163      18095.5
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.678053, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.072607, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.756388, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    0.0371844    0.0394945    0.0615368
      low eigenvalue method done, cpu time[sec] = 0.765295, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0395     0.058         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   0.00251     0.058     0.971
         *Z       ---       ---  1.84e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0579696
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R       1.1
         P1       1.1
         P2       1.1
         P3       1.1
         P4       1.1
         P5       1.1
         P6       1.1
         P7       1.1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.946947    0.0530533    0.0438115   0.00684085  0.000302798   0.00122091  4.84684e-05   0.00177081  2.72736e-05  4.65277e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.42801, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 3000 K
            Well    Collision, 1/sec
              W1         3.13254e+08
      global relaxation matrix dimension = 238
      setting global matrices ... done, cpu time[sec] = 0.119571, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.34456, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             116341      80649.2      63252.2      64923.4      9421.58       241817      72720.9      6031.83
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.669512, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.072568, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.74776, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    0.0350778    0.0370566    0.0558936
      low eigenvalue method done, cpu time[sec] = 0.756409, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0371    0.0529         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   0.00229    0.0529     0.973
         *Z       ---       ---  1.84e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0529349
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R       1.1
         P1       1.1
         P2       1.1
         P3       1.1
         P4       1.1
         P5       1.1
         P6       1.1
         P7       1.1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.951554    0.0484456    0.0408565   0.00540852  0.000265394  0.000900305  3.99199e-05   0.00181266  2.73447e-05  4.65279e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.44584, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 3000 K
            Well    Collision, 1/sec
              W1          5.2209e+08
      global relaxation matrix dimension = 238
      setting global matrices ... done, cpu time[sec] = 0.120501, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.34813, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            69804.7      48389.5      37951.3      38954.1      5652.95       145090      43632.6       3619.1
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.674591, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.07257, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.75292, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    0.0339461    0.0357601    0.0529549
      low eigenvalue method done, cpu time[sec] = 0.761614, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0358    0.0503         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   0.00217    0.0503     0.975
         *Z       ---       ---  1.84e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0502917
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R       1.1
         P1       1.1
         P2       1.1
         P3       1.1
         P4       1.1
         P5       1.1
         P6       1.1
         P7       1.1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.953973    0.0460266    0.0391021   0.00479245  0.000250523  0.000793614  3.68556e-05   0.00183458  2.74006e-05  4.65282e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.45337, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 3000 K
            Well    Collision, 1/sec
              W1         7.30926e+08
      global relaxation matrix dimension = 238
      setting global matrices ... done, cpu time[sec] = 0.119521, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.34397, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            49860.5        34564      27108.1      27824.3      4037.82       103636      31166.1      2585.07
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.672429, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.072964, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.751317, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0     0.033148    0.0348513    0.0509239
      low eigenvalue method done, cpu time[sec] = 0.760072, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0349    0.0485         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   0.00209    0.0485     0.975
         *Z       ---       ---  1.84e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0484563
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R       1.1
         P1       1.1
         P2       1.1
         P3       1.1
         P4       1.1
         P5       1.1
         P6       1.1
         P7       1.1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.955653    0.0443468     0.037821   0.00441366  0.000241249  0.000732958  3.50389e-05   0.00184897  2.74495e-05  4.65284e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.44652, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 3000 K
            Well    Collision, 1/sec
              W1         9.39762e+08
      global relaxation matrix dimension = 238
      setting global matrices ... done, cpu time[sec] = 0.120021, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.35607, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            38780.4      26883.1      21084.1      21641.1      3140.53      80605.7      24240.3      2010.61
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.67192, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.072308, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.75003, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    0.0325251     0.034145    0.0493623
      low eigenvalue method done, cpu time[sec] = 0.758692, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0341     0.047         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   0.00203     0.047     0.976
         *Z       ---       ---  1.84e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0470403
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.956949    0.0430509    0.0368032   0.00414577  0.000234521  0.000691679  3.37646e-05   0.00185932  2.74942e-05  4.65286e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.45747, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 3000 K
            Well    Collision, 1/sec
              W1         1.04418e+09
      global relaxation matrix dimension = 238
      setting global matrices ... done, cpu time[sec] = 0.121085, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.35773, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            34902.4      24194.8      18975.7        19477      2826.47      72545.1      21816.3      1809.55
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.675237, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.072251, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.753216, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    0.0322571     0.033842    0.0486972
      low eigenvalue method done, cpu time[sec] = 0.761868, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0338    0.0464         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   0.00201    0.0464     0.977
         *Z       ---       ---  1.84e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0464359
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.957502    0.0424978    0.0363618   0.00403732  0.000231741  0.000675272  3.32485e-05   0.00186348  2.75152e-05  4.65288e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.46288, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 3000 K
            Well    Collision, 1/sec
              W1         1.56627e+09
      global relaxation matrix dimension = 238
      setting global matrices ... done, cpu time[sec] = 0.119288, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.35017, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            23268.2      16129.8      12650.4      12984.7      1884.32      48363.4      14544.2      1206.37
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.669669, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.072712, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.748247, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    0.0311892    0.0326392    0.0460851
      low eigenvalue method done, cpu time[sec] = 0.756982, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0326    0.0441         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   0.00191    0.0441     0.978
         *Z       ---       ---  1.84e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0440548
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.959681    0.0403187    0.0345874   0.00364118  0.000221221  0.000616467  3.13477e-05   0.00187806  2.76118e-05  4.65293e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.44841, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 3000 K
            Well    Collision, 1/sec
              W1         2.08836e+09
      global relaxation matrix dimension = 238
      setting global matrices ... done, cpu time[sec] = 0.119782, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.35572, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            17451.2      12097.4      9487.83      9738.51      1413.24      36272.6      10908.1      904.774
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.67324, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.072756, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.751781, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    0.0303969    0.0317517    0.0441873
      low eigenvalue method done, cpu time[sec] = 0.760504, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0318    0.0423         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   0.00183    0.0423     0.979
         *Z       ---       ---  1.84e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0423174
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.961271    0.0387286    0.0332619   0.00338004  0.000213882  0.000578378  3.00684e-05   0.00188649  2.76978e-05  4.65299e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.45858, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 3000 K
            Well    Collision, 1/sec
              W1         2.61045e+09
      global relaxation matrix dimension = 238
      setting global matrices ... done, cpu time[sec] = 0.119931, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.36523, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            13960.9      9677.91      7590.26      7790.81      1130.59      29018.1      8726.51      723.819
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.677143, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.072925, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.755689, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0     0.029763    0.0310446    0.0426938
      low eigenvalue method done, cpu time[sec] = 0.764424, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0     0.031    0.0409         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   0.00177    0.0409     0.979
         *Z       ---       ---  1.84e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0409457
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.962527    0.0374732    0.0322001   0.00318841  0.000208236  0.000550613  2.91087e-05   0.00189158  2.77762e-05  4.65305e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.4718, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 3000 K
            Well    Collision, 1/sec
              W1         3.13254e+09
      global relaxation matrix dimension = 238
      setting global matrices ... done, cpu time[sec] = 0.119775, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.37098, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            11634.1      8064.92      6325.22      6492.34      942.158      24181.7      7272.09      603.183
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.674438, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.073572, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.75383, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    0.0292328    0.0304551    0.0414617
      low eigenvalue method done, cpu time[sec] = 0.762745, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0305    0.0398         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   0.00173    0.0398      0.98
         *Z       ---       ---  1.84e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0398111
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.963565    0.0364348     0.031313   0.00303866  0.000203642  0.000528957  2.83425e-05    0.0018946  2.78487e-05   4.6531e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.47589, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 3000 K
            Well    Collision, 1/sec
              W1         3.65463e+09
      global relaxation matrix dimension = 238
      setting global matrices ... done, cpu time[sec] = 0.121038, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.3682, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             9972.1      6912.79      5421.61      5564.87      807.564      20727.2      6233.22      517.014
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.676513, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.072285, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.754412, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    0.0287762    0.0299489     0.040413
      low eigenvalue method done, cpu time[sec] = 0.763682, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0299    0.0388         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   0.00169    0.0388      0.98
         *Z       ---       ---  1.84e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0388432
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.964451     0.035549    0.0305507   0.00291666  0.000199767  0.000511309  2.77059e-05   0.00189625  2.79166e-05  4.65316e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.47696, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 3000 K
            Well    Collision, 1/sec
              W1         4.17672e+09
      global relaxation matrix dimension = 238
      setting global matrices ... done, cpu time[sec] = 0.120002, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.3652, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            8725.59      6048.69      4743.91      4869.26      706.618      18136.3      5454.07      452.387
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.671878, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.072603, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.750121, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    0.0283746    0.0295048    0.0395001
      low eigenvalue method done, cpu time[sec] = 0.759023, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0295     0.038         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   0.00165     0.038     0.981
         *Z       ---       ---  1.84e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0379991
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.965224    0.0347765     0.029882   0.00281428  0.000196412  0.000496477  2.71619e-05   0.00189693  2.79804e-05  4.65322e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.46794, elapsed time[sec] = 0
rate calculation done, cpu time[sec] = 4929.52, elapsed time[sec] = 96
