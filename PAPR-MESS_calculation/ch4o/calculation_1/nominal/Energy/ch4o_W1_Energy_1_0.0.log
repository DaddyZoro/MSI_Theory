Model::init:  starts
   Model::ExponentialKernel::ExponentialKernel:  ... done
   Model::LennardJonesCollision::LennardJonesCollision:  ... done
   WELL: W1
   Model::RRHO::RRHO:  starts
      Model::new_core:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.002149, elapsed time[sec] = 0
      Model::new_core:  done, cpu time[sec] = 0.005689, elapsed time[sec] = 0
      1-th ROTOR:
      Model::HinderedRotor::HinderedRotor:  starts
         Model::HinderedRotor::_read:  starts
         Model::HinderedRotor::_read:  done, cpu time[sec] = 0.002422, elapsed time[sec] = 0
         Model::HinderedRotor::_init: WARNING: potential second derivative at the minimum is negative, assuming zero
         effective rotational constant[1/cm]  = 27.3382
         analytic  frequency at minimum[1/cm] = 0
         numerical frequency at minimum[1/cm] = 0
         minimum energy[kcal/mol]             = 0
         maximum energy[kcal/mol]             = 0
         maximum frequency[1/cm]              = 0
         ground energy [kcal/mol]             = 0
         highest energy level [kcal/mol]      = 19462.6
         number of levels                     = 999
         10 lowest excited states [kcal/mol] relative to the ground: 0.0782 0.0782 0.313 0.313 0.703 0.703 1.25 1.25 1.95
         Statistical Weight (*** - deep tunneling regime):
          T, K        Quantum             PG             PI  ***
           100        2.82615        2.82615        2.82615
           200        3.99678        3.99678        3.99678
           300        4.89503        4.89503        4.89503
           400         5.6523         5.6523         5.6523
           500        6.31946        6.31946        6.31946
           600        6.92262        6.92262        6.92262
           700        7.47729        7.47729        7.47729
           800        7.99355        7.99355        7.99355
           900        8.47844        8.47844        8.47844
          1000        8.93707        8.93707        8.93707
      Model::HinderedRotor::HinderedRotor:  done, cpu time[sec] = 1.73575, elapsed time[sec] = 0
      ground state energy, kcal/mol:   -90.2506
      interpolating states number/density starts
         core state contribution ... done, cpu time[sec] = 0.173358, elapsed time[sec] = 0
         vibrational modes contribution ... done, cpu time[sec] = 0.051329, elapsed time[sec] = 0
         hindered rotors contribution starts
            Model::HinderedRotor::set:  starts
            Model::HinderedRotor::set:  done, cpu time[sec] = 0.000762, elapsed time[sec] = 0
         hindered rotors contribution done, cpu time[sec] = 0.486904, elapsed time[sec] = 0
         effective power exponent at 690.248 kcal/mol = 11.4574
      interpolating states number/density done, cpu time[sec] = 2.33236, elapsed time[sec] = 0
   Model::RRHO::RRHO:  done, cpu time[sec] = 4.11439, elapsed time[sec] = 0
   BIMOLECULAR: R
   Model::Bimolecular::Bimolecular:  starts
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: linear
               rotational constant[1/cm]:         18.6633
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.001878, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.003666, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.006783, elapsed time[sec] = 0
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:         9.55015        9.55009        4.77506
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.001441, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.003196, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.006765, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 0.019712, elapsed time[sec] = 0
   BIMOLECULAR: P1
   Model::Bimolecular::Bimolecular:  starts
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:         19.7111        11.2504        7.16236
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.001486, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.003245, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.006072, elapsed time[sec] = 0
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:         27.4886        14.3446        9.42584
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.001432, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.003191, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.006086, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 0.017945, elapsed time[sec] = 0
   BIMOLECULAR: P2
   Model::Bimolecular::Bimolecular:  starts
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: linear
               rotational constant[1/cm]:         60.4042
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.001376, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.003121, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.005795, elapsed time[sec] = 0
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:          9.3775        1.21307        1.07412
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.001926, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.003653, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.006558, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 0.017455, elapsed time[sec] = 0
   BIMOLECULAR: P3
   Model::Bimolecular::Bimolecular:  starts
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: linear
               rotational constant[1/cm]:         60.4042
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.001377, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.003089, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.005774, elapsed time[sec] = 0
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:         9.70353        1.21666        1.08111
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.001432, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.003381, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.006264, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 0.017111, elapsed time[sec] = 0
   BIMOLECULAR: P4
   Model::Bimolecular::Bimolecular:  starts
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: linear
               rotational constant[1/cm]:         60.4042
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.00134, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.003086, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.005754, elapsed time[sec] = 0
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:         9.46633        1.30142        1.14413
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.001403, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.003115, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.006133, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 0.01693, elapsed time[sec] = 0
   BIMOLECULAR: P5
   Model::Bimolecular::Bimolecular:  starts
      Model::AtomicFragment::AtomicFragment:  ... done
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:         6.45642       0.996004        0.86988
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.00199, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.003774, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.00674, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 0.011662, elapsed time[sec] = 0
   BIMOLECULAR: P6
   Model::Bimolecular::Bimolecular:  starts
      Model::AtomicFragment::AtomicFragment:  ... done
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:         5.24335        0.93381       0.927142
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.001429, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.003144, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.006075, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 0.010927, elapsed time[sec] = 0
   BARRIER: B1
   Model::ReadSpecies::ReadSpecies: ... done, cpu time[sec] = 0.074677, elapsed time[sec] = 0
   BARRIER: B2
   Model::ReadSpecies::ReadSpecies: ... done, cpu time[sec] = 0.040685, elapsed time[sec] = 0
   BARRIER: B3
   Model::VarBarrier::VarBarrier:  starts
      1-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.000221, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.000472, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -22.6613
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.013227, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.003704, elapsed time[sec] = 0
            effective power exponent at 622.659 kcal/mol = 11.9685
         interpolating states number/density done, cpu time[sec] = 0.071784, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.073182, elapsed time[sec] = 0
      2-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.2e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 2e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -19.4076
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001382, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000472, elapsed time[sec] = 0
            effective power exponent at 619.406 kcal/mol = 11.9694
         interpolating states number/density done, cpu time[sec] = 0.016506, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.01657, elapsed time[sec] = 0
      3-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 2e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -16.4142
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001377, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000473, elapsed time[sec] = 0
            effective power exponent at 616.412 kcal/mol = 11.9705
         interpolating states number/density done, cpu time[sec] = 0.016406, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.016474, elapsed time[sec] = 0
      4-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 2.7e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -13.678
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.002001, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000563, elapsed time[sec] = 0
            effective power exponent at 613.676 kcal/mol = 11.9714
         interpolating states number/density done, cpu time[sec] = 0.020522, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.02064, elapsed time[sec] = 0
      5-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.3e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 2.8e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -11.2049
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001356, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000484, elapsed time[sec] = 0
            effective power exponent at 611.203 kcal/mol = 11.9723
         interpolating states number/density done, cpu time[sec] = 0.016252, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.016372, elapsed time[sec] = 0
      6-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 2.3e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 3.7e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -9.00049
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001362, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000466, elapsed time[sec] = 0
            effective power exponent at 608.998 kcal/mol = 11.9731
         interpolating states number/density done, cpu time[sec] = 0.016213, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.01634, elapsed time[sec] = 0
      7-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.9e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -7.06773
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.00136, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000467, elapsed time[sec] = 0
            effective power exponent at 607.066 kcal/mol = 11.9737
         interpolating states number/density done, cpu time[sec] = 0.016141, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.016206, elapsed time[sec] = 0
      8-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.2e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.9e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -5.40945
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001347, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000437, elapsed time[sec] = 0
            effective power exponent at 605.407 kcal/mol = 11.974
         interpolating states number/density done, cpu time[sec] = 0.016068, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.016134, elapsed time[sec] = 0
      9-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.7e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -4.05137
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001351, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000455, elapsed time[sec] = 0
            effective power exponent at 604.049 kcal/mol = 11.974
         interpolating states number/density done, cpu time[sec] = 0.016113, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.016179, elapsed time[sec] = 0
      10-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 2.6e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -2.98779
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001344, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000454, elapsed time[sec] = 0
            effective power exponent at 602.986 kcal/mol = 11.9739
         interpolating states number/density done, cpu time[sec] = 0.016046, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.016156, elapsed time[sec] = 0
      11-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.8e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -2.23584
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001351, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000453, elapsed time[sec] = 0
            effective power exponent at 602.234 kcal/mol = 11.9738
         interpolating states number/density done, cpu time[sec] = 0.016044, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.016111, elapsed time[sec] = 0
      12-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 2.5e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -1.76409
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001342, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000449, elapsed time[sec] = 0
            effective power exponent at 601.762 kcal/mol = 11.9738
         interpolating states number/density done, cpu time[sec] = 0.015984, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.016093, elapsed time[sec] = 0
      13-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.8e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -1.54966
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.00135, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000455, elapsed time[sec] = 0
            effective power exponent at 601.548 kcal/mol = 11.974
         interpolating states number/density done, cpu time[sec] = 0.016022, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.016087, elapsed time[sec] = 0
      14-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 2.6e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -1.6097
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001344, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000486, elapsed time[sec] = 0
            effective power exponent at 601.608 kcal/mol = 11.9746
         interpolating states number/density done, cpu time[sec] = 0.016026, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.016136, elapsed time[sec] = 0
      15-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 2.7e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -1.85844
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.00134, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000475, elapsed time[sec] = 0
            effective power exponent at 601.856 kcal/mol = 11.9754
         interpolating states number/density done, cpu time[sec] = 0.015995, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.016119, elapsed time[sec] = 0
      16-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.3e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 2e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -2.25586
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001347, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000467, elapsed time[sec] = 0
            effective power exponent at 602.254 kcal/mol = 11.9765
         interpolating states number/density done, cpu time[sec] = 0.016067, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.016135, elapsed time[sec] = 0
      17-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 2.8e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -2.76478
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.00135, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000451, elapsed time[sec] = 0
            effective power exponent at 602.763 kcal/mol = 11.978
         interpolating states number/density done, cpu time[sec] = 0.015986, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.016102, elapsed time[sec] = 0
      Model::EckartTunnel::EckartTunnel:  ... done
      interpolating states number/density ... done, cpu time[sec] = 1.32825, elapsed time[sec] = 1
      effective power exponent at 601.548 kcal/mol = 12.1579
      Constituent transition states partition functions
       T, K            1            2            3            4            5            6            7            8            9           10           11           12           13           14           15           16           17          Min
        100  3.90851e+23  3.05117e+16  8.82979e+09      9323.49    0.0370366  5.69093e-07   3.4347e-11  8.25406e-15  8.99826e-18  4.31673e-20  9.95766e-22  9.42125e-23  3.25854e-23  4.49365e-23  1.59917e-22  1.20344e-21  1.58791e-20  3.25853e-23
        200  4.74443e+13  1.32405e+10  7.11895e+06      7303.75      14.5603    0.0571085  0.000444429  6.90781e-06   2.2911e-07  1.59579e-08   2.4425e-09  7.58546e-10  4.51416e-10  5.37634e-10  1.02897e-09  2.86948e-09  1.06195e-08  4.51416e-10
        300  3.42099e+10  1.45681e+08       960377      9718.32      153.373      3.80009     0.148805   0.00925157  0.000956035  0.000162449  4.68096e-05  2.16894e-05   1.5566e-05  1.78004e-05  2.79599e-05  5.66189e-05  0.000138903   1.5566e-05
        400  1.19567e+09  1.99087e+07       459672      14594.6      647.271      40.2374      3.52783     0.437917    0.0798183     0.021197   0.00839753   0.00476942   0.00377863   0.00426111   0.00610409     0.010613    0.0213749   0.00377863
        500  1.97909e+08  7.47751e+06       366526      23109.1      1904.36      205.421      29.1834         5.48      1.40343     0.487441     0.234093     0.150591     0.127051     0.142683     0.194232     0.309627     0.556692      0.12705
        600  7.12397e+07  4.65261e+06       376964      37555.9      4677.31      728.298      142.671      35.2855      11.3336      4.70886      2.57331      1.80142      1.58842      1.78363      2.35302      3.54995       5.9344      1.58826
        700  3.98103e+07  3.84656e+06       446495      61693.5      10320.9      2088.69      514.634      154.919      58.4907       27.623       16.563      12.3266      11.2316      12.6303      16.3181      23.7079      37.6861      11.2266
        800  2.91324e+07   3.7782e+06       574567       101491      21189.1      5220.36       1527.7      532.884      227.126      118.089      75.9278      59.1877      55.3113      62.3214      79.3361      112.156      171.842       55.239
        900  2.53862e+07  4.14125e+06       777326       166256      41247.9      11844.4       3962.9      1550.26      726.116      406.859      276.234      223.279      212.875      240.329      302.589      418.986       624.19      212.262
       1000  2.48831e+07  4.87863e+06  1.08405e+06       270280      77001.1      24998.7      9311.41      3992.88      2016.92      1199.89      850.963      708.129      686.138      776.027      968.725      1319.68      1922.94      682.556
       1100  2.64619e+07  6.03232e+06  1.53927e+06       435181       138864      49855.4      20277.3       9374.7      5037.66      3147.57      2313.41      1971.51      1935.84      2192.89      2718.59      3654.94      5230.94      1919.88
       1200  2.98122e+07   7.7076e+06   2.2076e+06       693199       243163      94955.1      41563.7      20461.6        11578      7535.95      5706.13      4960.29       4924.8      5586.19      6885.95      9156.96      12911.8      4866.74
       1300  3.50062e+07  1.00695e+07  3.18087e+06  1.09177e+06       414995       174026      81070.3      42093.4      24883.1      16766.7      13019.4      11509.1      11534.2      13097.8      16067.6      21170.3      29478.5      11353.6
       1400  4.23545e+07  1.33522e+07  4.58797e+06  1.69982e+06       692254       308624       151675        82438      50597.4      35121.3      27867.1      24990.6      25245.9      28695.1      35055.3      45823.5      63123.6      24749.4
       1500  5.23704e+07  1.78764e+07  6.60797e+06  2.61623e+06  1.13123e+06       531879       273831       154861      98197.4      69940.8      56542.8      51340.1        52223      59403.9      72307.7      93870.2       128107      50986.5
       1600  6.57789e+07  2.40742e+07  9.48734e+06  3.98125e+06  1.81429e+06       893760       479280       280652       183119       133402       109627       100625       102971       117205       142208       183501       248385       100130
       1700  8.35518e+07  3.25215e+07  1.35624e+07  5.99168e+06  2.86022e+06  1.46833e+06       816282       492930       329848       245128       204372       189391       194829       221878       268440       344531       462986       188722
       1800  1.06962e+08  4.39799e+07  1.92885e+07  8.92067e+06  4.43819e+06  2.36363e+06  1.35686e+06       842134       576329       435957       368170       344086       355613       405162       488927       624511       833818       343202
       1900  1.37654e+08  5.94494e+07   2.7277e+07  1.31437e+07  6.78613e+06  3.73501e+06   2.2067e+06  1.40364e+06       980144       753276       643497       605970       628863       716746       862915  1.09746e+06  1.45678e+06       604809
       2000   1.7774e+08  8.02353e+07  3.83428e+07  1.91721e+07  1.02349e+07  5.80288e+06  3.51851e+06  2.28817e+06  1.62706e+06  1.26845e+06  1.09485e+06  1.03803e+06  1.08124e+06  1.23271e+06  1.48096e+06  1.87612e+06  2.47736e+06  1.03647e+06

   Model::VarBarrier::VarBarrier:  done, cpu time[sec] = 1.69396, elapsed time[sec] = 1
   BARRIER: B4
   Model::VarBarrier::VarBarrier:  starts
      1-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.2e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 2.6e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -21.8779
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001365, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000448, elapsed time[sec] = 0
            effective power exponent at 621.876 kcal/mol = 11.973
         interpolating states number/density done, cpu time[sec] = 0.017206, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.017298, elapsed time[sec] = 0
      2-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.8e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -18.8158
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001358, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.00046, elapsed time[sec] = 0
            effective power exponent at 618.814 kcal/mol = 11.973
         interpolating states number/density done, cpu time[sec] = 0.016173, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.016241, elapsed time[sec] = 0
      3-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.7e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -16.0339
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001351, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000448, elapsed time[sec] = 0
            effective power exponent at 616.032 kcal/mol = 11.973
         interpolating states number/density done, cpu time[sec] = 0.016151, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.016217, elapsed time[sec] = 0
      4-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.7e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -13.5322
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001351, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000467, elapsed time[sec] = 0
            effective power exponent at 613.53 kcal/mol = 11.9729
         interpolating states number/density done, cpu time[sec] = 0.016099, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.016165, elapsed time[sec] = 0
      5-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.5e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 2.2e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -11.3135
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.00134, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000446, elapsed time[sec] = 0
            effective power exponent at 611.311 kcal/mol = 11.9725
         interpolating states number/density done, cpu time[sec] = 0.01599, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.01606, elapsed time[sec] = 0
      6-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.6e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -9.39794
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001342, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000442, elapsed time[sec] = 0
            effective power exponent at 609.396 kcal/mol = 11.972
         interpolating states number/density done, cpu time[sec] = 0.015963, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.016026, elapsed time[sec] = 0
      7-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.7e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -7.79112
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001338, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000456, elapsed time[sec] = 0
            effective power exponent at 607.789 kcal/mol = 11.9714
         interpolating states number/density done, cpu time[sec] = 0.015959, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.016028, elapsed time[sec] = 0
      8-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.6e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -6.49595
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001335, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.00046, elapsed time[sec] = 0
            effective power exponent at 606.494 kcal/mol = 11.9706
         interpolating states number/density done, cpu time[sec] = 0.01584, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.015906, elapsed time[sec] = 0
      9-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.7e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -5.53243
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001329, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000457, elapsed time[sec] = 0
            effective power exponent at 605.53 kcal/mol = 11.9698
         interpolating states number/density done, cpu time[sec] = 0.015848, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.015915, elapsed time[sec] = 0
      10-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.7e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -4.86054
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001326, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000442, elapsed time[sec] = 0
            effective power exponent at 604.858 kcal/mol = 11.9691
         interpolating states number/density done, cpu time[sec] = 0.015829, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.015897, elapsed time[sec] = 0
      11-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.7e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -4.47456
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.00132, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000441, elapsed time[sec] = 0
            effective power exponent at 604.472 kcal/mol = 11.9684
         interpolating states number/density done, cpu time[sec] = 0.015906, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.015972, elapsed time[sec] = 0
      12-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.7e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -4.40594
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001325, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000455, elapsed time[sec] = 0
            effective power exponent at 604.404 kcal/mol = 11.9683
         interpolating states number/density done, cpu time[sec] = 0.015814, elapsed time[sec] = 1
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.01588, elapsed time[sec] = 1
      13-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.7e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -4.57463
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.00132, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000427, elapsed time[sec] = 0
            effective power exponent at 604.572 kcal/mol = 11.9685
         interpolating states number/density done, cpu time[sec] = 0.01576, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.015826, elapsed time[sec] = 0
      14-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.6e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -4.93202
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001321, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000445, elapsed time[sec] = 0
            effective power exponent at 604.93 kcal/mol = 11.9692
         interpolating states number/density done, cpu time[sec] = 0.015817, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.015881, elapsed time[sec] = 0
      15-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.6e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -5.43522
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001321, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000428, elapsed time[sec] = 0
            effective power exponent at 605.433 kcal/mol = 11.9702
         interpolating states number/density done, cpu time[sec] = 0.015828, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.01589, elapsed time[sec] = 0
      16-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 4.5e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -6.04421
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001328, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000464, elapsed time[sec] = 0
            effective power exponent at 606.042 kcal/mol = 11.9715
         interpolating states number/density done, cpu time[sec] = 0.015865, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.015956, elapsed time[sec] = 0
      Model::EckartTunnel::EckartTunnel:  ... done
      interpolating states number/density ... done, cpu time[sec] = 1.4823, elapsed time[sec] = 1
      effective power exponent at 604.404 kcal/mol = 12.2165
      Constituent transition states partition functions
       T, K            1            2            3            4            5            6            7            8            9           10           11           12           13           14           15           16          Min
        100  1.11763e+12       223936     0.185945  6.36018e-07  9.07387e-12  5.96093e-16  1.85463e-19  2.77448e-22  2.20277e-24  7.60156e-26  1.10796e-26  7.98346e-27   1.8962e-26  1.16602e-25  1.49342e-24  3.26249e-23  7.98345e-27
        200  9.38289e+07      39693.5      34.8125    0.0627104  0.000232989  1.87016e-06  3.28565e-08  1.27135e-09  1.13643e-10  2.12422e-11  8.18303e-12   7.0253e-12  1.09568e-11  2.75644e-11  1.00242e-10  4.77296e-10  7.02523e-12
        300  6.32003e+06      33876.1      298.673      4.28808     0.100497   0.00396007  0.000264757  3.01283e-05  6.01963e-06  1.97624e-06  1.05568e-06  9.66276e-07  1.31928e-06  2.48671e-06  6.00912e-06  1.74325e-05  9.65923e-07
        400  2.16563e+06      41250.6      1150.14      46.4593      2.72399     0.236928    0.0308063    0.0060002   0.00179162  0.000780535   0.00049258  0.000467839  0.000601019  0.000987244    0.0019595   0.00447307  0.000466779
        500   1.4162e+06      57738.1      3210.72      241.013      24.4602      3.41597     0.661137     0.177638    0.0675118    0.0348961    0.0243981    0.0237742     0.029557    0.0448976    0.0795572     0.158033    0.0236197
        600  1.27589e+06      86435.1      7616.29      863.909      126.318      24.1718      6.09496      2.02863     0.905643     0.525046     0.393651     0.391048      0.47677     0.689237      1.13548      2.06149     0.386115
        700  1.37387e+06       133833      16387.5      2496.35      473.671      113.476      34.5536      13.3988      6.71107      4.22492      3.33259       3.3607      4.04622      5.65489      8.85794      15.1051      3.29464
        800   1.6448e+06       210487      32996.7      6271.64      1446.87      410.222      143.881      62.5602      34.1598      22.8806      18.7569      19.1427      22.8487      31.1607      47.0425      76.6085      18.6302
        900  2.10236e+06       332770      63236.1      14279.8      3835.57      1239.79      485.378      230.694      134.715      94.6987      80.0083      82.4454      97.7846      130.906      192.133      302.035       79.687
       1000  2.80018e+06       525557       116524      30209.5      9165.51      3290.47      1406.72      717.952      442.392      323.236      279.779      290.578      342.963      452.477      649.485      992.852      279.107
       1100  3.82756e+06       826062       207829      60337.4      20227.9      7914.04      3636.15       1967.2      1266.62      955.178      843.287      881.527      1036.38      1351.23       1904.8      2846.42      842.065
       1200  5.31607e+06  1.28922e+06       360457       115019      41910.5      17617.3      8595.88      4882.09      3260.68      2524.49      2265.75      2381.29      2790.51      3602.71      5002.98      7336.45      2263.75
       1300  7.45235e+06  1.99508e+06       610021       210889      82466.4      36839.3      18913.9      11193.7      7711.33      6104.52      5555.43      5865.21      6854.11      8775.81        12033      17366.4       5552.4
       1400  1.04964e+07  3.05894e+06  1.01001e+06       374033       155407      73145.9      39232.3        24053        17016      13729.2      12643.2      13399.5        15621      19858.2      26933.7      38344.1      12638.8
       1500  1.48064e+07  4.64495e+06  1.63947e+06       644514       282268       139018      77446.4      48958.3      35441.2      29070.2      27045.8      28757.7      33454.1      42264.5      56783.4      79886.7      27039.5
       1600  2.08709e+07  6.98426e+06  2.61358e+06  1.08269e+06       496566       254476       146559      95166.5      70292.7      58492.2      54905.7        58546      67977.4      85409.9       113800       158446      54895.8
       1700  2.93513e+07   1.0399e+07  4.09779e+06  1.77794e+06       849385       450846       267391       177789       133674       112652       106575       113919       132044       165098       218363       301245       106556
       1800  4.11358e+07  1.53337e+07   6.3268e+06  2.86053e+06  1.41712e+06       776084       472475       320840       245068       208865       198969       213137       246660       307062       403463       552054       198924
       1900  5.74084e+07   2.2396e+07  9.62961e+06   4.5176e+06  2.31206e+06  1.30218e+06       811539       561582       435059       374536       358996       385281       445242       552092       721140       979485       358875
       2000  7.97366e+07  3.24089e+07  1.44623e+07  7.01437e+06  3.69673e+06  2.13529e+06  1.35912e+06       956627       750585       652033       628440       675575       779687       963344   1.2516e+06   1.6887e+06       628120

   Model::VarBarrier::VarBarrier:  done, cpu time[sec] = 1.76832, elapsed time[sec] = 2
   BARRIER: B5
   Model::RRHO::RRHO:  starts
      Model::new_core:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.4e-05, elapsed time[sec] = 0
      Model::new_core:  done, cpu time[sec] = 2.1e-05, elapsed time[sec] = 0
      Model::EckartTunnel::EckartTunnel:  ... done
      ground state energy, kcal/mol:   -0.195851
      interpolating states number/density starts
         core state contribution ... done, cpu time[sec] = 0.001463, elapsed time[sec] = 0
         vibrational modes contribution ... done, cpu time[sec] = 0.000506, elapsed time[sec] = 0
         tunneling contribution ... done, cpu time[sec] = 7.10426, elapsed time[sec] = 7
         effective power exponent at 669.903 kcal/mol = 13.426
      interpolating states number/density done, cpu time[sec] = 7.12312, elapsed time[sec] = 7
   Model::RRHO::RRHO:  done, cpu time[sec] = 7.12322, elapsed time[sec] = 7
   BARRIER: B6
   Model::ReadSpecies::ReadSpecies: ... done, cpu time[sec] = 0.000979, elapsed time[sec] = 0
   BARRIER: B7
   Model::ReadSpecies::ReadSpecies: ... done, cpu time[sec] = 0.000933, elapsed time[sec] = 0
   BIMOLECULAR: P7
   Model::Bimolecular::Bimolecular:  starts
      Model::AtomicFragment::AtomicFragment:  ... done
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:         5.47873        5.47873        5.47873
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 2.2e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 3e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 6.1e-05, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 0.000106, elapsed time[sec] = 0
   BARRIER: B8
   Model::RRHO::RRHO:  starts
      Model::new_core:  starts
         Model::PhaseSpaceTheory::PhaseSpaceTheory:  starts
            molecular geometry will be used to estimate rotational constants
            rotational configuration: nonlinear
            rotational constants[1/cm]:         5.47873        5.47873        5.47873
            TST level: E
         Model::PhaseSpaceTheory::PhaseSpaceTheory:  done, cpu time[sec] = 5.3e-05, elapsed time[sec] = 0
      Model::new_core:  done, cpu time[sec] = 0.000119, elapsed time[sec] = 0
      ground state energy, kcal/mol:   47.9656
      interpolating states number/density starts
         core state contribution ... done, cpu time[sec] = 0.003674, elapsed time[sec] = 0
         vibrational modes contribution ... done, cpu time[sec] = 0.000575, elapsed time[sec] = 0
         effective power exponent at 552.034 kcal/mol = 10.6123
      interpolating states number/density done, cpu time[sec] = 0.019285, elapsed time[sec] = 0
   Model::RRHO::RRHO:  done, cpu time[sec] = 0.019448, elapsed time[sec] = 0
   checking input ... done
   setting connectivity ... done
   checking connectivity ... done
   setting dissociation limit ... done
   setting maximum barrier height ... done
   partition functions (relative to the ground level, units - 1/cm3):
     T\Q           W1           OH          CH3          CH2          H2O           H2     cis-HCOH           H2   trans-HCOH           H2         H2CO            H        CH2OH            H         CH3O            o          CH4           B1           B2           B3           B4           B5           B6           B7           B8
     100  1.97336e+28  1.11806e+26  1.79604e+26   1.2706e+26  1.20995e+26  3.09408e+23  9.07788e+27  3.09408e+23  8.88203e+27  3.09408e+23    4.226e+27  3.80284e+23  1.41451e+28  3.80284e+23  1.04337e+28  1.20275e+25  8.05078e+25  1.02816e+30  3.90845e+30  1.47525e+35  6.97811e+37 5.12326e+128  6.66948e+29  2.86822e+29  6.30386e+29
     200  2.23564e+29  7.62333e+26  1.46726e+27  1.01653e+27  9.67966e+26  1.75028e+24  7.26953e+28  1.75028e+24  7.11008e+28  1.75028e+24  3.38185e+28  1.07561e+24  1.21889e+29  1.07561e+24  8.41759e+28   3.4019e+25  6.44206e+26  2.65947e+31  6.23677e+31  1.08314e+30  2.15615e+30  1.52798e+59  8.88053e+30  3.66779e+30  8.00719e+30
     300  9.41744e+29   2.3228e+27   5.2604e+27  3.43512e+27  3.26835e+27   4.8232e+24  2.48522e+29   4.8232e+24  2.42385e+29   4.8232e+24  1.14827e+29  1.97601e+24  4.86817e+29  1.97601e+24  2.97918e+29   6.2497e+25  2.18681e+27  1.82852e+32  2.59538e+32  1.44208e+30  1.73256e+30  1.89702e+39  4.41749e+31  1.66476e+31  3.56174e+31
     400  2.74251e+30  5.05886e+27  1.36172e+28  8.18855e+27  7.76803e+27  9.90107e+24  6.13453e+29  9.90107e+24  5.94872e+29  9.90107e+24   2.7863e+29  3.04227e+24   1.4458e+30  3.04227e+24  7.82149e+29  9.62204e+25  5.31893e+27  7.43446e+32  6.76087e+32   3.1193e+30  3.38436e+30  5.81364e+32  1.53178e+32  5.25536e+31  1.04946e+32
     500   6.7088e+30   9.1848e+27   2.9582e+28  1.61907e+28  1.52765e+28  1.72965e+25  1.28796e+30  1.72965e+25  1.23988e+30  1.72965e+25    5.706e+29   4.2517e+24  3.66252e+30   4.2517e+24  1.77798e+30  1.34472e+26  1.09838e+28  2.27531e+33  1.40935e+33  6.99392e+30  7.25794e+30    2.174e+31  4.38422e+32  1.38727e+32   2.5148e+32
     600  1.48929e+31  1.48864e+28  5.75744e+28  2.85247e+28  2.67121e+28  2.72848e+25  2.45857e+30  2.72848e+25  2.34862e+30  2.72848e+25  1.05862e+30  5.58901e+24  8.37682e+30  5.58901e+24  3.71377e+30  1.76768e+26  2.06944e+28  5.83137e+33  2.59752e+33  1.53859e+31   1.5531e+31  1.56572e+31  1.10962e+33  3.28769e+32  5.35043e+32
     700  3.10526e+31  2.23336e+28  1.03869e+29  4.64933e+28  4.31306e+28  4.01168e+25  4.40321e+30  4.01168e+25   4.1744e+30  4.01168e+25  1.84194e+30  7.04296e+24  1.77967e+31  7.04296e+24  7.32198e+30  2.22753e+26  3.68096e+28  1.32406e+34  4.44573e+33  3.28489e+31  3.24865e+31  2.00151e+31  2.57036e+33  7.23031e+32   1.0547e+33
     800  6.18672e+31  3.16898e+28  1.77211e+29  7.16682e+28  6.57497e+28  5.60287e+25  7.52441e+30  5.60287e+25  7.08144e+30  5.60287e+25  3.06214e+30  8.60484e+24  3.57037e+31  8.60484e+24  1.38193e+31  2.72152e+26  6.29237e+28  2.75326e+34  7.26034e+33  6.79296e+31  6.61031e+31  3.04639e+31  5.55986e+33  1.50225e+33   1.9708e+33
     900  1.18917e+32  4.31186e+28  2.89608e+29  1.05938e+29  9.59741e+28  7.52507e+25  1.23926e+31  7.52507e+25  1.15823e+31  7.52507e+25  4.91733e+30  1.02677e+25  6.83675e+31  1.02677e+25  2.51777e+31  3.24744e+26   1.0442e+29  5.35429e+34  1.14977e+34  1.36146e+32  1.30791e+32  4.96309e+31  1.13781e+34  2.98133e+33  3.53766e+33
    1000  2.21835e+32  5.67887e+28  4.57314e+29  1.51557e+29  1.35425e+29  9.80136e+25  1.98016e+31  9.80136e+25  1.83853e+31  9.80136e+25  7.67995e+30  1.20256e+25  1.25901e+32  1.20256e+25  4.45239e+31  3.80344e+26  1.69248e+29  9.87598e+34  1.78334e+34  2.64867e+32  2.51886e+32  8.31132e+31  2.22341e+34  5.69316e+33   6.1512e+33
    1100  4.03237e+32  7.28764e+28   7.0205e+29  2.11192e+29  1.85967e+29  1.24554e+26  3.08377e+31  1.24554e+26  2.84544e+31  1.24554e+26  1.17192e+31  1.38738e+25  2.24222e+32  1.38738e+25  7.67157e+31  4.38799e+26  2.68985e+29  1.74488e+35  2.72616e+34  5.01139e+32  4.72857e+32  1.40422e+32  4.17722e+34  1.05163e+34  1.04174e+34
    1200  7.16278e+32  9.15662e+28  1.05248e+30  2.87967e+29  2.49743e+29  1.55119e+26  4.69659e+31  1.55119e+26  4.30822e+31  1.55119e+26  1.75283e+31  1.58081e+25  3.87856e+32  1.58081e+25  1.29162e+32  4.99976e+26  4.20283e+29   2.9743e+35  4.12339e+34  9.23956e+32  8.66602e+32  2.37075e+32  7.58498e+34  1.88656e+34   1.7249e+34
    1300  1.24607e+33  1.13052e+29    1.546e+30  3.85517e+29  3.29195e+29  1.89964e+26  7.01353e+31  1.89964e+26  6.39799e+31  1.89964e+26  2.57585e+31  1.78247e+25  6.53851e+32  1.78247e+25  2.12965e+32  5.63757e+26  6.46803e+29  4.91797e+35  6.18545e+34  1.66316e+33  1.55283e+33  3.97869e+32  1.33665e+35   3.2971e+34  2.80008e+34
    1400  2.12665e+33  1.37535e+29  2.23088e+30  5.08038e+29  4.27102e+29  2.29356e+26  1.02907e+32  2.29356e+26  9.33855e+31  2.29356e+26  3.72593e+31  1.99205e+25   1.0772e+33  1.99205e+25  3.44505e+32  6.30041e+26  9.81784e+29  7.92117e+35  9.21487e+34  2.92799e+33  2.72427e+33  6.61788e+32  2.29366e+35  5.62797e+34   4.4655e+34
    1500  3.56581e+33  1.65225e+29  3.16878e+30  6.60342e+29  5.46603e+29  2.73576e+26  1.48608e+32  2.73576e+26  1.34194e+32  2.73576e+26   5.3127e+31  2.20925e+25  1.73819e+33  2.20925e+25  5.47579e+32  6.98737e+26  1.47141e+30  1.24691e+36  1.36433e+35  5.04957e+33  4.68567e+33   1.0892e+33  3.84301e+35  9.40249e+34  7.00752e+34
    1600  5.88104e+33  1.96339e+29  4.43778e+30  8.47909e+29  6.91231e+29  3.22912e+26  2.11513e+32  3.22912e+26  1.90113e+32  3.22912e+26  7.47631e+31  2.43382e+25  2.75236e+33  2.43382e+25  8.56291e+32  7.69763e+26  2.17922e+30  1.92344e+36  2.00816e+35  8.54299e+33  7.91062e+33  1.77228e+33   6.3014e+35  1.54022e+35  1.08347e+35
    1700  9.55077e+33  2.31102e+29  6.13586e+30  1.07695e+30  8.64943e+29  3.77663e+26  2.97068e+32  3.77663e+26  2.65843e+32  3.77663e+26  1.03942e+32  2.66552e+25  4.28362e+33  2.66552e+25  1.31889e+33  8.43044e+26  3.19172e+30  2.91389e+36  2.93879e+35  1.41969e+34  1.31235e+34  2.84985e+33  1.01312e+36  2.47765e+35  1.65232e+35
    1800  1.52866e+34  2.69743e+29  8.38503e+30  1.35448e+30  1.07215e+30   4.3814e+26  4.12136e+32   4.3814e+26  3.67296e+32   4.3814e+26  1.42893e+32  2.90413e+25  6.56161e+33  2.90413e+25  2.00279e+33  9.18514e+26  4.62568e+30  4.34318e+36  4.27578e+35  2.32007e+34  2.14159e+34  4.52832e+33  1.59976e+36  3.91921e+35  2.48767e+35
    1900  2.41341e+34    3.125e+29   1.1336e+31  1.68836e+30  1.31777e+30  5.04659e+26  5.65308e+32  5.04659e+26  5.01844e+32  5.04659e+26  1.94391e+32  3.14948e+25  9.90424e+33  3.14948e+25  3.00115e+33   9.9611e+26  6.63727e+30   6.3789e+36  6.18455e+35  3.73235e+34  3.44092e+34  7.11085e+33   2.4845e+36  6.10341e+35  3.70051e+35
    2000  3.76117e+34  3.59614e+29  1.51739e+31  2.08737e+30  1.60722e+30  5.77547e+26  7.67243e+32  5.77547e+26  6.78607e+32  5.77547e+26  2.61867e+32  3.40136e+25  1.47468e+34  3.40136e+25  4.44133e+33  1.07578e+27  9.43368e+30  9.24376e+36  8.89218e+35   5.9162e+34  5.44811e+34  1.10376e+34  3.79973e+36  9.36743e+35  5.44256e+35
   partition functions (relative to 0 kcal/mol, units - 1/cm3):
     T\Q           W1           B1           B2           B3           B4           B5           B6           B7           B8
     100 3.42725e+225  1.02816e+30  1.82422e+29  3.59409e+38  2.97017e+47 1.37269e+129  2.66912e+20     0.948966  9.38107e-76
     200 9.31689e+127  2.65947e+31   1.3474e+31   5.3462e+31   1.4067e+35   2.5011e+59  1.77655e+26  6.67151e+15   3.0889e-22
     300  5.25428e+95  1.82852e+32  9.34454e+31  1.94043e+31  2.80781e+33  2.63481e+39  3.25537e+28  2.48065e+21   0.00040664
     400  5.59864e+79  7.43446e+32  3.14247e+32  2.19148e+31  8.64445e+32  7.43797e+32  6.85118e+29  2.24136e+24       651820
     500  1.88188e+70  2.27531e+33   7.6354e+32   3.3271e+31  6.11818e+32  2.64767e+31  5.78559e+30  1.76233e+26   2.7229e+11
     600  1.11242e+64  5.83137e+33  1.55861e+33  5.64385e+31  6.25229e+32  1.84524e+31  3.01222e+31  4.01325e+27  1.80785e+15
     700  4.66878e+59  1.32406e+34  2.86953e+33  1.00078e+32  7.71401e+32  2.30412e+31  1.16805e+32    4.443e+28  1.11633e+18
     800   2.7953e+56  2.75326e+34  4.94984e+33  1.80053e+32  1.05646e+33  3.44579e+31  3.71834e+32   3.1024e+29  1.55319e+20
     900  9.78971e+53  5.35429e+34  8.17953e+33  3.23822e+32  1.53628e+33  5.53746e+31  1.02773e+33  1.58057e+30  7.96585e+21
    1000  1.17491e+52  9.87598e+34  1.31263e+34  5.77697e+32  2.31264e+33  9.17219e+31  2.55416e+33  6.41678e+30  2.02406e+23
    1100  3.43911e+50  1.74488e+35  2.06328e+34  1.01822e+33  3.54893e+33  1.53585e+32  5.84183e+33    2.197e+31  3.07609e+24
    1200  1.95761e+49   2.9743e+35  3.19407e+34  1.76961e+33  5.49845e+33  2.57368e+32  1.24971e+34  6.59133e+31  3.17068e+25
    1300  1.85281e+48  4.91797e+35  4.88644e+34  3.03006e+33  8.54709e+33  4.29205e+32  2.52998e+34  1.77997e+32   2.4184e+26
    1400  2.60764e+47  7.92117e+35  7.40326e+34  5.11068e+33  1.32752e+34  7.10056e+32  4.88948e+34  4.41176e+32  1.45279e+27
    1500  5.02891e+46  1.24691e+36  1.11222e+35  8.49252e+33  2.05451e+34  1.16317e+33  9.08149e+34  1.01832e+33  7.19572e+27
    1600  1.25008e+46  1.92344e+36  1.65812e+35  1.39085e+34  3.16247e+34  1.88489e+33  1.62959e+35   2.2134e+33  3.04163e+28
    1700  3.82275e+45  2.91389e+36  2.45402e+35  2.24601e+34  4.83576e+34  3.01995e+33  2.83696e+35  4.56984e+33  1.12662e+29
    1800  1.38699e+45  4.34318e+36  3.60641e+35  3.57809e+34  7.33977e+34  4.78317e+33  4.80794e+35  9.02403e+33  3.73294e+29
    1900  5.80323e+44   6.3789e+36  5.26331e+35  5.62641e+34  1.10527e+35  7.48943e+33  7.95467e+35  1.71386e+34  1.12469e+30
    2000  2.73722e+44  9.24376e+36   7.6289e+35  8.73733e+34  1.65081e+35  1.15951e+34  1.28785e+36  3.14487e+34  3.12202e+30
   tunneling partition function correction factors & high pressure effective energy shifts (D), kcal/mol:
     T\B           B1            D           B2            D           B3            D           B4            D           B5            D           B6            D           B7            D           B8            D
     100            1           -0            1           -0  5.85098e+06     -3.09647  2.80256e+09      -4.3229 4.82099e+100     -46.0694            1           -0            1           -0            1           -0
     200            1           -0            1           -0      5.22548    -0.657183      10.5281    -0.935588  1.78989e+30     -27.6854            1           -0            1           -0            1           -0
     300            1           -0            1           -0      1.84823    -0.366176      2.24851    -0.483048  6.34587e+09     -13.4559            1           -0            1           -0            1           -0
     400            1           -0            1           -0      1.38767    -0.260424      1.52963    -0.337842      744.397     -5.25618            1           -0            1           -0            1           -0
     500            1           -0            1           -0      1.22677    -0.203078      1.30161    -0.261913      12.1512     -2.48144            1           -0            1           -0            1           -0
     600            1           -0            1           -0      1.14989     -0.16653      1.19686    -0.214262       4.1017     -1.68284            1           -0            1           -0            1           -0
     700            1           -0            1           -0      1.10671    -0.141037       1.1392    -0.181292      2.57296      -1.3146            1           -0            1           -0            1           -0
     800            1           -0            1           -0      1.07989    -0.122182      1.10381    -0.157022      1.98861     -1.09286            1           -0            1           -0            1           -0
     900            1           -0            1           -0      1.06204    -0.107644      1.08044    -0.138367      1.69225    -0.940844            1           -0            1           -0            1           -0
    1000            1           -0            1           -0      1.04954   -0.0960815      1.06415     -0.12356      1.51736    -0.828601            1           -0            1           -0            1           -0
    1100            1           -0            1           -0      1.04044   -0.0866584      1.05234     -0.11151      1.40393     -0.74163            1           -0            1           -0            1           -0
    1200            1           -0            1           -0      1.03361   -0.0788278      1.04349    -0.101508      1.32547    -0.671912            1           -0            1           -0            1           -0
    1300            1           -0            1           -0      1.02835   -0.0722153      1.03668   -0.0930686      1.26859    -0.614589            1           -0            1           -0            1           -0
    1400            1           -0            1           -0      1.02421    -0.066556      1.03134   -0.0858502      1.22585    -0.566517            1           -0            1           -0            1           -0
    1500            1           -0            1           -0       1.0209   -0.0616567      1.02707   -0.0796042      1.19281    -0.525558            1           -0            1           -0            1           -0
    1600            1           -0            1           -0      1.01821   -0.0573734      1.02359   -0.0741457      1.16669      -0.4902            1           -0            1           -0            1           -0
    1700            1           -0            1           -0      1.01599   -0.0535964      1.02074    -0.069334      1.14565    -0.459342            1           -0            1           -0            1           -0
    1800            1           -0            1           -0      1.01414   -0.0502407      1.01836   -0.0650602      1.12842    -0.432157            1           -0            1           -0            1           -0
    1900            1           -0            1           -0      1.01259   -0.0472394      1.01635   -0.0612384      1.11412    -0.408014            1           -0            1           -0            1           -0
    2000            1           -0            1           -0      1.01127    -0.044539      1.01465   -0.0578005      1.10211     -0.38642            1           -0            1           -0            1           -0
Model::init:  done, cpu time[sec] = 15.1029, elapsed time[sec] = 10
rate calculation starts
   MasterEquation::set:  starts
      Temperature      = 300 K
      Energy reference = 37628 1/cm
      Energy step      = 50 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.9 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.000168
         W1 Well: collisional kernel bandwidth = 60
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.021393
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.025039
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 7.49674
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 26.649
         W1 Well: minimal relaxation eigenvalue = 0.0718866
         W1 Well: maximal relaxation eigenvalue = 1.42787
         W1 Well:       grid size = 1384
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31572 1/cm
         B1 Barrier:        grid size = 753
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -22 1/cm
         B2 Barrier:        grid size = 749
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 177 1/cm
         B3 Barrier:        grid size = 845
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4622 1/cm
         B4 Barrier:        grid size = 877
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6222 1/cm
         B5 Barrier: nonpositive number of states at -23572 1/cm => truncating
         B5 Barrier:        grid size = 1224
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23572 1/cm
         B6 Barrier:        grid size = 723
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1478 1/cm
         B7 Barrier:        grid size = 659
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4677 1/cm
         B8 Barrier:        grid size = 418
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16727 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 34.3663, elapsed time[sec] = 1
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31572 -23572 3.47e+05 2.66e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -22 7.68e+15
         B2    178 1.62e+15
         B3  -4622 4.61e+14
         B4  -6222 5.45e+14
         B5 -23572 6.37e+13
         B6   1478 6.52e+15
         B7   4678  8.3e+14
         B8  16728 5.59e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  1.88e+44  5.68e+44  5.78e+35  2.47e+32  5.58e-06  3.24e+48  2.62e+55  1.47e+81
          R  5.32e-45         1      3.02  3.07e-09  1.31e-12  2.97e-50  1.72e+04  1.39e+11  7.83e+36
         P1  1.76e-45     0.331         1  1.02e-09  4.34e-13  9.82e-51   5.7e+03  4.61e+10  2.59e+36
         P2  1.73e-36  3.25e+08  9.83e+08         1  0.000427  9.66e-42  5.61e+12  4.53e+19  2.55e+45
         P3  4.05e-33  7.62e+11   2.3e+12  2.34e+03         1  2.26e-38  1.31e+16  1.06e+23  5.97e+48
         P4  1.79e+05  3.37e+49  1.02e+50  1.04e+41  4.42e+37         1  5.81e+53  4.69e+60  2.64e+86
         P5  3.09e-49   5.8e-05  0.000175  1.78e-13  7.62e-17  1.72e-54         1  8.08e+06  4.54e+32
         P6  3.82e-56  7.18e-12  2.17e-11  2.21e-20  9.42e-24  2.13e-61  1.24e-07         1  5.62e+25
         P7  6.79e-82  1.28e-37  3.86e-37  3.92e-46  1.68e-49  3.79e-87   2.2e-33  1.78e-26         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1   4.3e+40   1.3e+41  1.32e+32  5.64e+28  1.28e-09  7.41e+44  5.99e+51  3.37e+77
          R  2.33e-41         1      3.02  3.07e-09  1.31e-12  2.97e-50  1.72e+04  1.39e+11  7.83e+36
         P1  7.69e-42     0.331         1  1.02e-09  4.34e-13  9.82e-51   5.7e+03  4.61e+10  2.59e+36
         P2  7.56e-33  3.25e+08  9.83e+08         1  0.000427  9.66e-42  5.61e+12  4.53e+19  2.55e+45
         P3  1.77e-29  7.62e+11   2.3e+12  2.34e+03         1  2.26e-38  1.31e+16  1.06e+23  5.97e+48
         P4  7.83e+08  3.37e+49  1.02e+50  1.04e+41  4.42e+37         1  5.81e+53  4.69e+60  2.64e+86
         P5  1.35e-45   5.8e-05  0.000175  1.78e-13  7.62e-17  1.72e-54         1  8.08e+06  4.54e+32
         P6  1.67e-52  7.18e-12  2.17e-11  2.21e-20  9.42e-24  2.13e-61  1.24e-07         1  5.62e+25
         P7  2.97e-78  1.28e-37  3.86e-37  3.92e-46  1.68e-49  3.79e-87   2.2e-33  1.78e-26         1
   MasterEquation::set:  done, cpu time[sec] = 34.3731, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 300 K
            Well    Collision, 1/sec
              W1         4.71313e+08
      global relaxation matrix dimension = 1384
      setting global matrices ... done, cpu time[sec] = 1.21696, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 33.8268, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            18336.7      3877.81      1101.96       1301.1       152.28      15588.1      1982.11      13.3559
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.923067, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.063389, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.987143, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -9.27947e-10   9.2918e-52  1.25174e-59
      low eigenvalue method done, cpu time[sec] = 0.990973, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.29e-52  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.68e-53  2.22e-16         1
         *Z       ---       ---  5.53e+75
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16 -5.06713e-47 -2.89079e-47 -1.56859e-48 -8.15125e-47 -1.87347e-48  7.30472e-50 -2.84881e-54 -1.92044e-69

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 41.1037, elapsed time[sec] = 3
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 300 K
            Well    Collision, 1/sec
              W1         1.41394e+09
      global relaxation matrix dimension = 1384
      setting global matrices ... done, cpu time[sec] = 0.04069, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 33.9458, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            6112.24       1292.6      367.319      433.701        50.76      5196.04      660.705      4.45196
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.924302, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.061712, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.986708, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.65948e-11  3.09727e-52  3.02242e-60
      low eigenvalue method done, cpu time[sec] = 0.989398, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0   3.1e-52  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.23e-53  2.22e-16         1
         *Z       ---       ---  5.53e+75
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16 -1.14815e-46 -5.55571e-47 -1.18264e-48 -3.49109e-47 -9.20367e-49  4.21567e-50  1.42914e-55  1.94694e-69

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 39.9466, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 300 K
            Well    Collision, 1/sec
              W1         2.35656e+09
      global relaxation matrix dimension = 1384
      setting global matrices ... done, cpu time[sec] = 0.040702, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 33.5569, elapsed time[sec] = 2
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            3667.34      775.563      220.392      260.221       30.456      3117.62      396.423      2.67117
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.923639, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.061613, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.985959, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.07236e-10  1.85836e-52  1.44483e-60
      low eigenvalue method done, cpu time[sec] = 0.988634, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.86e-52  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.34e-53  2.22e-16         1
         *Z       ---       ---  5.53e+75
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16  5.75193e-47   3.4487e-47  1.93929e-48  3.90577e-47  6.29651e-49 -4.96092e-50 -1.69784e-54 -5.24811e-69

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 39.6278, elapsed time[sec] = 3
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 300 K
            Well    Collision, 1/sec
              W1         3.29919e+09
      global relaxation matrix dimension = 1384
      setting global matrices ... done, cpu time[sec] = 0.040619, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 33.2989, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2619.53      553.974      157.423      185.872      21.7543      2226.87      283.159      1.90798
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.923241, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.061809, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.985769, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.43999e-10   1.3274e-52  8.64883e-61
      low eigenvalue method done, cpu time[sec] = 0.988458, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.33e-52  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.54e-54  2.22e-16         1
         *Z       ---       ---  5.53e+75
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16   1.5144e-47  1.62886e-47   1.4154e-48  2.12301e-47  5.36523e-49 -1.09903e-49  3.13754e-55  1.49478e-68

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 39.3652, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 300 K
            Well    Collision, 1/sec
              W1         4.24181e+09
      global relaxation matrix dimension = 1384
      setting global matrices ... done, cpu time[sec] = 0.04058, elapsed time[sec] = 1
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 33.2863, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2037.41      430.868       122.44      144.567        16.92      1732.01      220.235      1.48399
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.923742, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.061671, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.986107, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.04029e-10  1.03242e-52   5.8161e-61
      low eigenvalue method done, cpu time[sec] = 0.988784, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.03e-52  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.42e-54  2.22e-16         1
         *Z       ---       ---  5.53e+75
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16  6.43924e-47  2.51215e-47  7.19646e-49  1.12817e-48  1.58212e-49  3.06823e-50 -4.06107e-55 -1.06233e-68

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 39.3488, elapsed time[sec] = 3
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 300 K
            Well    Collision, 1/sec
              W1         4.71313e+09
      global relaxation matrix dimension = 1384
      setting global matrices ... done, cpu time[sec] = 0.040397, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 33.2909, elapsed time[sec] = 2
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1833.67      387.781      110.196       130.11       15.228      1558.81      198.211      1.33559
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.924003, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.061609, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.98635, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.44346e-11   9.2918e-53  4.90843e-61
      low eigenvalue method done, cpu time[sec] = 0.989039, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.29e-53  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.68e-54  2.22e-16         1
         *Z       ---       ---  5.53e+75
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16  -3.3577e-47 -5.67239e-48 -3.27032e-49 -1.03989e-48  -9.8605e-50 -1.04296e-49  -7.4989e-55  1.84013e-68

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 39.3578, elapsed time[sec] = 3
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 300 K
            Well    Collision, 1/sec
              W1         7.06969e+09
      global relaxation matrix dimension = 1384
      setting global matrices ... done, cpu time[sec] = 0.040948, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 32.7423, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1222.45      258.521      73.4639      86.7403       10.152      1039.21      132.141     0.890392
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.923873, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.061652, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.986217, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   4.2983e-11  6.19454e-53  2.51051e-61
      low eigenvalue method done, cpu time[sec] = 0.988906, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.19e-53  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.45e-54  2.22e-16         1
         *Z       ---       ---  5.53e+75
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16  8.69576e-48 -1.29886e-48 -5.22182e-50  3.41788e-48  1.48669e-49  1.22866e-50   -3.794e-55  -1.3073e-69

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 38.8114, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 300 K
            Well    Collision, 1/sec
              W1         9.42625e+09
      global relaxation matrix dimension = 1384
      setting global matrices ... done, cpu time[sec] = 0.040794, elapsed time[sec] = 1
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 33.4537, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            916.836      193.891      55.0979      65.0552        7.614      779.405      99.1057     0.667794
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.924119, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.061656, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.986484, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -5.9284e-12   4.6459e-53  1.53561e-61
      low eigenvalue method done, cpu time[sec] = 0.98917, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.65e-53  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.34e-54  2.22e-16         1
         *Z       ---       ---  5.53e+75
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16  3.63862e-47  6.92299e-48  2.60625e-49  3.19555e-48  4.43119e-50  1.01684e-49  2.62592e-55   1.1256e-68

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 39.5235, elapsed time[sec] = 3
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 300 K
            Well    Collision, 1/sec
              W1         1.17828e+10
      global relaxation matrix dimension = 1384
      setting global matrices ... done, cpu time[sec] = 0.040497, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 33.4165, elapsed time[sec] = 2
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            733.469      155.113      44.0783      52.0442       6.0912      623.524      79.2846     0.534235
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.923208, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.061681, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.985574, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.13279e-12  3.71672e-53  1.04008e-61
      low eigenvalue method done, cpu time[sec] = 0.988253, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.72e-53  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.67e-54  2.22e-16         1
         *Z       ---       ---  5.53e+75
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16 -3.71106e-47 -1.49096e-47 -5.77675e-49 -6.33071e-48  -1.1382e-49 -2.01735e-51 -9.99918e-55  2.58267e-68

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 39.4813, elapsed time[sec] = 3
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 300 K
            Well    Collision, 1/sec
              W1         1.41394e+10
      global relaxation matrix dimension = 1384
      setting global matrices ... done, cpu time[sec] = 0.040492, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 33.4248, elapsed time[sec] = 2
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            611.224       129.26      36.7319      43.3701        5.076      519.604      66.0705     0.445196
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.924498, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.061816, elapsed time[sec] = 1
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.98702, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -7.21588e-14  3.09727e-53  7.52703e-62
      low eigenvalue method done, cpu time[sec] = 0.989732, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0   3.1e-53  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.23e-54  2.22e-16         1
         *Z       ---       ---  5.53e+75
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16 -4.11088e-48  1.83358e-49 -8.77328e-50 -2.14676e-48 -5.25141e-50 -2.62052e-50  2.36059e-55 -3.12659e-68

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 39.4921, elapsed time[sec] = 3
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 300 K
            Well    Collision, 1/sec
              W1         1.64959e+10
      global relaxation matrix dimension = 1384
      setting global matrices ... done, cpu time[sec] = 0.040484, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 33.4143, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            523.906      110.795      31.4845      37.1744      4.35086      445.374      56.6318     0.381596
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.923627, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.061616, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.985941, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   -2.223e-11   2.6548e-53  5.70745e-62
      low eigenvalue method done, cpu time[sec] = 0.988629, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.65e-53  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.91e-54  2.22e-16         1
         *Z       ---       ---  5.53e+75
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16  1.00139e-47  4.66152e-49  1.93467e-50  2.69729e-49 -1.12327e-52  4.20703e-50   -7.649e-55 -8.94359e-69

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 39.4846, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 300 K
            Well    Collision, 1/sec
              W1         1.88525e+10
      global relaxation matrix dimension = 1384
      setting global matrices ... done, cpu time[sec] = 0.040791, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 33.4209, elapsed time[sec] = 2
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            458.418      96.9454      27.5489      32.5276        3.807      389.703      49.5529     0.333897
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.924125, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.061624, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.986438, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.33497e-11  2.32295e-53  4.48057e-62
      low eigenvalue method done, cpu time[sec] = 0.989116, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.32e-53  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.67e-54  2.22e-16         1
         *Z       ---       ---  5.53e+75
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16 -2.71352e-47  -1.0704e-47 -2.56629e-49 -3.39886e-48 -1.02742e-49 -4.49266e-51  1.01674e-54 -1.69017e-68

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 39.4869, elapsed time[sec] = 3
   MasterEquation::set:  starts
      Temperature      = 310 K
      Energy reference = 38323 1/cm
      Energy step      = 52 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.9 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.000222
         W1 Well: collisional kernel bandwidth = 60
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.017705
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.02342
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 7.347
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 23.8077
         W1 Well: minimal relaxation eigenvalue = 0.0707042
         W1 Well: maximal relaxation eigenvalue = 5.17206
         W1 Well:       grid size = 1345
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31617 1/cm
         B1 Barrier:        grid size = 737
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -1 1/cm
         B2 Barrier:        grid size = 733
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 206 1/cm
         B3 Barrier:        grid size = 826
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4629 1/cm
         B4 Barrier:        grid size = 856
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6189 1/cm
         B5 Barrier: nonpositive number of states at -23141 1/cm => truncating
         B5 Barrier:        grid size = 1182
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23141 1/cm
         B6 Barrier:        grid size = 709
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1454 1/cm
         B7 Barrier:        grid size = 647
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4678 1/cm
         B8 Barrier:        grid size = 415
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16742 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 31.3877, elapsed time[sec] = 1
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31617 -23141 4.75e+05 2.96e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -1 8.97e+15
         B2    207 1.94e+15
         B3  -4629 5.55e+14
         B4  -6189 6.53e+14
         B5 -23141 7.68e+13
         B6   1455 7.76e+15
         B7   4679 1.01e+15
         B8  16743 7.27e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  1.27e+42   3.7e+42     8e+33  4.39e+30  1.67e-06  1.78e+46  8.85e+52  7.75e+77
          R  7.89e-43         1      2.92  6.31e-09  3.47e-12  1.32e-48   1.4e+04  6.99e+10  6.12e+35
         P1   2.7e-43     0.343         1  2.16e-09  1.19e-12  4.51e-49  4.81e+03  2.39e+10   2.1e+35
         P2  1.25e-34  1.58e+08  4.62e+08         1  0.000549  2.09e-40  2.22e+12  1.11e+19   9.7e+43
         P3  2.28e-31  2.88e+11  8.42e+11  1.82e+03         1   3.8e-37  4.05e+15  2.02e+22  1.77e+47
         P4  5.99e+05  7.59e+47  2.22e+48  4.79e+39  2.63e+36         1  1.07e+52  5.31e+58  4.65e+83
         P5  5.62e-47  7.12e-05  0.000208   4.5e-13  2.47e-16  9.38e-53         1  4.98e+06  4.36e+31
         P6  1.13e-53  1.43e-11  4.18e-11  9.03e-20  4.96e-23  1.88e-59  2.01e-07         1  8.76e+24
         P7  1.29e-78  1.63e-36  4.77e-36  1.03e-44  5.66e-48  2.15e-84  2.29e-32  1.14e-25         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  3.02e+38   8.8e+38   1.9e+30  1.05e+27  3.97e-10  4.23e+42  2.11e+49  1.85e+74
          R  3.32e-39         1      2.92  6.31e-09  3.47e-12  1.32e-48   1.4e+04  6.99e+10  6.12e+35
         P1  1.14e-39     0.343         1  2.16e-09  1.19e-12  4.51e-49  4.81e+03  2.39e+10   2.1e+35
         P2  5.25e-31  1.58e+08  4.62e+08         1  0.000549  2.09e-40  2.22e+12  1.11e+19   9.7e+43
         P3  9.57e-28  2.88e+11  8.42e+11  1.82e+03         1   3.8e-37  4.05e+15  2.02e+22  1.77e+47
         P4  2.52e+09  7.59e+47  2.22e+48  4.79e+39  2.63e+36         1  1.07e+52  5.31e+58  4.65e+83
         P5  2.36e-43  7.12e-05  0.000208   4.5e-13  2.47e-16  9.38e-53         1  4.98e+06  4.36e+31
         P6  4.75e-50  1.43e-11  4.18e-11  9.03e-20  4.96e-23  1.88e-59  2.01e-07         1  8.76e+24
         P7  5.42e-75  1.63e-36  4.77e-36  1.03e-44  5.66e-48  2.15e-84  2.29e-32  1.14e-25         1
   MasterEquation::set:  done, cpu time[sec] = 31.3938, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 310 K
            Well    Collision, 1/sec
              W1         4.60454e+08
      global relaxation matrix dimension = 1345
      setting global matrices ... done, cpu time[sec] = 1.22113, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 31.2045, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            19753.2      4269.58      1222.88      1438.11      169.216        17103      2218.23      16.0081
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.84255, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.056869, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.900062, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.02535e-11  1.04131e-50  1.80954e-57
      low eigenvalue method done, cpu time[sec] = 0.90662, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.04e-50 -8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.36e-52 -8.88e-16         1
         *Z       ---       ---  1.33e+74
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -8.88178e-16 -2.53444e-45 -7.66701e-46  6.08116e-48  2.53579e-46  7.37759e-48  2.72341e-48  5.00921e-53  -1.2088e-68

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 38.3821, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 310 K
            Well    Collision, 1/sec
              W1         1.38136e+09
      global relaxation matrix dimension = 1345
      setting global matrices ... done, cpu time[sec] = 0.038988, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 30.4667, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            6584.38      1423.19      407.626       479.37      56.4054      5701.01      739.411      5.33602
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.841841, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.057027, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.899517, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   1.9306e-10  3.47103e-51  4.52767e-58
      low eigenvalue method done, cpu time[sec] = 0.90592, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.47e-51 -8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.45e-52 -8.88e-16         1
         *Z       ---       ---  1.33e+74
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -8.88178e-16  7.93664e-46  5.11249e-46 -1.53101e-47 -4.07416e-46 -1.40362e-47 -2.71642e-48 -1.39397e-53 -3.36417e-67

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 36.4421, elapsed time[sec] = 3
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 310 K
            Well    Collision, 1/sec
              W1         2.30227e+09
      global relaxation matrix dimension = 1345
      setting global matrices ... done, cpu time[sec] = 0.039028, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 30.6992, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            3950.63      853.916      244.575      287.622      33.8432       3420.6      443.647      3.20161
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.841317, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.056999, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.898977, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.29181e-11  2.08262e-51  2.19816e-58
      low eigenvalue method done, cpu time[sec] = 0.905277, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.08e-51 -8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.47e-52 -8.88e-16         1
         *Z       ---       ---  1.33e+74
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -8.88178e-16  1.25592e-45  4.95836e-46  3.38821e-49 -1.79725e-46 -4.16915e-48 -2.94066e-51  7.61126e-56 -3.40113e-67

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 36.6747, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 310 K
            Well    Collision, 1/sec
              W1         3.22318e+09
      global relaxation matrix dimension = 1345
      setting global matrices ... done, cpu time[sec] = 0.038993, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 30.5148, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2821.88       609.94      174.697      205.444      24.1737      2443.29       316.89      2.28687
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.84011, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.057243, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.898034, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.56636e-10  1.48758e-51  1.32872e-58
      low eigenvalue method done, cpu time[sec] = 0.904253, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.49e-51 -8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.05e-52 -8.88e-16         1
         *Z       ---       ---  1.33e+74
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -8.88178e-16  2.91605e-46   3.4895e-46  1.08098e-47   1.1333e-46  2.69468e-48 -2.82585e-48 -1.92138e-53  3.68404e-67

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 36.4891, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 310 K
            Well    Collision, 1/sec
              W1         4.14409e+09
      global relaxation matrix dimension = 1345
      setting global matrices ... done, cpu time[sec] = 0.039014, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 30.5996, elapsed time[sec] = 2
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2194.79      474.398      135.875       159.79      18.8018      1900.34       246.47      1.77867
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.839303, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.05695, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.896904, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.88105e-11  1.15701e-51  8.99812e-59
      low eigenvalue method done, cpu time[sec] = 0.903068, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.16e-51 -8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.18e-53 -8.88e-16         1
         *Z       ---       ---  1.33e+74
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -8.88178e-16  3.76712e-46  8.09411e-47 -4.77836e-48 -3.56498e-47 -9.91941e-49  9.75484e-49 -5.03058e-54 -4.07567e-68

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 36.5742, elapsed time[sec] = 3
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 310 K
            Well    Collision, 1/sec
              W1         4.60454e+09
      global relaxation matrix dimension = 1345
      setting global matrices ... done, cpu time[sec] = 0.039152, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 30.6263, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1975.32      426.958      122.288      143.811      16.9216       1710.3      221.823      1.60081
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.839111, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.056857, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.896645, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.62622e-11  1.04131e-51  7.61556e-59
      low eigenvalue method done, cpu time[sec] = 0.902791, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.04e-51 -8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.36e-53 -8.88e-16         1
         *Z       ---       ---  1.33e+74
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -8.88178e-16  3.91762e-46  1.73063e-46   3.6114e-48 -3.59928e-47  2.59468e-49  2.35573e-48  1.87893e-53 -1.11318e-66

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 36.5982, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 310 K
            Well    Collision, 1/sec
              W1         6.90681e+09
      global relaxation matrix dimension = 1345
      setting global matrices ... done, cpu time[sec] = 0.038741, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 30.7252, elapsed time[sec] = 2
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1316.88      284.639      81.5251       95.874      11.2811       1140.2      147.882       1.0672
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.838463, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.056847, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.895979, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.88259e-11  6.94206e-52  3.93617e-59
      low eigenvalue method done, cpu time[sec] = 0.902078, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.94e-52 -8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.91e-53 -8.88e-16         1
         *Z       ---       ---  1.33e+74
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -8.88178e-16  3.97641e-46  2.38772e-46  7.14829e-48  5.91666e-47  1.77559e-48 -4.05723e-49  6.87258e-54  3.45449e-67

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 36.6963, elapsed time[sec] = 3
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 310 K
            Well    Collision, 1/sec
              W1         9.20908e+09
      global relaxation matrix dimension = 1345
      setting global matrices ... done, cpu time[sec] = 0.039143, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 30.6529, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            987.658      213.479      61.1438      71.9055      8.46081      855.151      110.912     0.800403
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.838436, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.057015, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.89611, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.89718e-11  5.20654e-52  2.42428e-59
      low eigenvalue method done, cpu time[sec] = 0.902179, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.21e-52 -8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.68e-53 -8.88e-16         1
         *Z       ---       ---  1.33e+74
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -8.88178e-16  -5.3098e-46 -1.36952e-46 -1.86199e-48  3.79132e-47   6.4328e-49 -2.43417e-48 -1.02447e-53  1.14712e-66

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 36.6285, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 310 K
            Well    Collision, 1/sec
              W1         1.15114e+10
      global relaxation matrix dimension = 1345
      setting global matrices ... done, cpu time[sec] = 0.038871, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 30.6973, elapsed time[sec] = 2
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            790.126      170.783      48.9151      57.5244      6.76865      684.121      88.7293     0.640323
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.837438, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.057031, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.895132, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   2.6826e-12  4.16523e-52   1.6502e-59
      low eigenvalue method done, cpu time[sec] = 0.901203, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.17e-52 -8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.94e-53 -8.88e-16         1
         *Z       ---       ---  1.33e+74
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -8.88178e-16 -7.91745e-47 -1.15765e-46 -3.87666e-48 -3.26974e-48  -2.1983e-52 -9.15415e-49 -1.17485e-53 -1.51682e-67

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 36.6679, elapsed time[sec] = 3
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 310 K
            Well    Collision, 1/sec
              W1         1.38136e+10
      global relaxation matrix dimension = 1345
      setting global matrices ... done, cpu time[sec] = 0.038816, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 30.6591, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            658.438      142.319      40.7626       47.937      5.64054      570.101      73.9411     0.533602
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.837508, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.057143, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.895333, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.39747e-11  3.47103e-52  1.19883e-59
      low eigenvalue method done, cpu time[sec] = 0.901398, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.47e-52 -8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.45e-53 -8.88e-16         1
         *Z       ---       ---  1.33e+74
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -8.88178e-16  6.98177e-47 -4.09032e-47  1.20864e-48  4.50259e-47  7.87502e-49  1.59804e-48 -1.38949e-53 -1.83008e-67

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 36.8542, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 310 K
            Well    Collision, 1/sec
              W1         1.61159e+10
      global relaxation matrix dimension = 1345
      setting global matrices ... done, cpu time[sec] = 0.039016, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 30.6881, elapsed time[sec] = 2
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            564.376      121.988      34.9393      41.0889      4.83475      488.658      63.3781     0.457373
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.838063, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.057008, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.895726, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.28596e-11  2.97517e-52  9.11813e-60
      low eigenvalue method done, cpu time[sec] = 0.901779, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.98e-52 -8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   2.1e-53 -8.88e-16         1
         *Z       ---       ---  1.33e+74
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -8.88178e-16  1.71815e-46  7.52746e-47  3.48266e-48  4.74376e-47  1.33836e-48 -3.67725e-49  7.33646e-54 -1.24329e-66

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 36.6631, elapsed time[sec] = 3
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 310 K
            Well    Collision, 1/sec
              W1         1.84182e+10
      global relaxation matrix dimension = 1345
      setting global matrices ... done, cpu time[sec] = 0.039282, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 30.6839, elapsed time[sec] = 2
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            493.829      106.739      30.5719      35.9528      4.23041      427.575      55.4558     0.400202
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.838432, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.057074, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.896174, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.66331e-11  2.60327e-52  7.17614e-60
      low eigenvalue method done, cpu time[sec] = 0.902258, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   2.6e-52 -8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.84e-53 -8.88e-16         1
         *Z       ---       ---  1.33e+74
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -8.88178e-16 -3.06173e-47 -9.22334e-48 -1.97125e-49  2.19565e-48  8.93155e-50  1.24057e-48  4.52507e-54 -2.08536e-67

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 36.6584, elapsed time[sec] = 3
   MasterEquation::set:  starts
      Temperature      = 320 K
      Energy reference = 39018 1/cm
      Energy step      = 53 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.8 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.000218
         W1 Well: collisional kernel bandwidth = 60
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.017405
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.023366
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 4.05308
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 23.3462
         W1 Well: minimal relaxation eigenvalue = 0.069713
         W1 Well: maximal relaxation eigenvalue = 1.49726
         W1 Well:       grid size = 1332
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31578 1/cm
         B1 Barrier:        grid size = 737
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -43 1/cm
         B2 Barrier:        grid size = 733
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 169 1/cm
         B3 Barrier:        grid size = 823
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4600 1/cm
         B4 Barrier:        grid size = 853
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6190 1/cm
         B5 Barrier: nonpositive number of states at -23151 1/cm => truncating
         B5 Barrier:        grid size = 1173
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23151 1/cm
         B6 Barrier:        grid size = 708
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1494 1/cm
         B7 Barrier:        grid size = 648
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4674 1/cm
         B8 Barrier:        grid size = 420
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16758 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 27.61, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31578 -23151 4.71e+05 3.28e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -43 1.04e+16
         B2    170 2.31e+15
         B3  -4600 6.66e+14
         B4  -6190  7.8e+14
         B5 -23151 9.23e+13
         B6   1495 9.21e+15
         B7   4675 1.22e+15
         B8  16759 9.38e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  1.19e+40  3.37e+40  1.48e+32  1.03e+29  5.49e-07  1.38e+44  4.36e+50   6.7e+74
          R  8.39e-41         1      2.83  1.24e-08  8.62e-12  4.61e-47  1.16e+04  3.66e+10  5.62e+34
         P1  2.97e-41     0.354         1  4.39e-09  3.05e-12  1.63e-47   4.1e+03   1.3e+10  1.99e+34
         P2  6.77e-33  8.07e+07  2.28e+08         1  0.000695  3.72e-39  9.34e+11  2.95e+18  4.53e+42
         P3  9.74e-30  1.16e+11  3.28e+11  1.44e+03         1  5.35e-36  1.34e+15  4.25e+21  6.52e+45
         P4  1.82e+06  2.17e+46  6.13e+46  2.69e+38  1.87e+35         1  2.51e+50  7.94e+56  1.22e+81
         P5  7.25e-45  8.64e-05  0.000244  1.07e-12  7.44e-16  3.98e-51         1  3.16e+06  4.85e+30
         P6  2.29e-51  2.73e-11  7.72e-11  3.38e-19  2.35e-22  1.26e-57  3.16e-07         1  1.53e+24
         P7  1.49e-75  1.78e-35  5.03e-35  2.21e-43  1.53e-46  8.21e-82  2.06e-31  6.52e-25         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  2.88e+36  8.13e+36  3.57e+28  2.48e+25  1.33e-10  3.33e+40  1.05e+47  1.62e+71
          R  3.48e-37         1      2.83  1.24e-08  8.62e-12  4.61e-47  1.16e+04  3.66e+10  5.62e+34
         P1  1.23e-37     0.354         1  4.39e-09  3.05e-12  1.63e-47   4.1e+03   1.3e+10  1.99e+34
         P2   2.8e-29  8.07e+07  2.28e+08         1  0.000695  3.72e-39  9.34e+11  2.95e+18  4.53e+42
         P3  4.03e-26  1.16e+11  3.28e+11  1.44e+03         1  5.35e-36  1.34e+15  4.25e+21  6.52e+45
         P4  7.54e+09  2.17e+46  6.13e+46  2.69e+38  1.87e+35         1  2.51e+50  7.94e+56  1.22e+81
         P5     3e-41  8.64e-05  0.000244  1.07e-12  7.44e-16  3.98e-51         1  3.16e+06  4.85e+30
         P6  9.49e-48  2.73e-11  7.72e-11  3.38e-19  2.35e-22  1.26e-57  3.16e-07         1  1.53e+24
         P7  6.19e-72  1.78e-35  5.03e-35  2.21e-43  1.53e-46  8.21e-82  2.06e-31  6.52e-25         1
   MasterEquation::set:  done, cpu time[sec] = 27.6165, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 320 K
            Well    Collision, 1/sec
              W1          4.5024e+08
      global relaxation matrix dimension = 1332
      setting global matrices ... done, cpu time[sec] = 1.15923, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 29.3443, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            21230.8       4689.3      1353.38      1585.42       187.52      18714.1      2474.44      19.0694
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.821991, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.0556, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.878218, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.83151e-10  1.09976e-49  1.90876e-55
      low eigenvalue method done, cpu time[sec] = 0.881768, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.1e-49  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.67e-51  2.22e-16         1
         *Z       ---       ---  4.12e+72
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16  1.63967e-44  1.20587e-44  5.62041e-46  3.30898e-45  1.09081e-46 -2.15819e-47  7.09515e-52 -1.52755e-66

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 36.5107, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 320 K
            Well    Collision, 1/sec
              W1         1.35072e+09
      global relaxation matrix dimension = 1332
      setting global matrices ... done, cpu time[sec] = 0.037379, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 29.2482, elapsed time[sec] = 2
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            7076.94       1563.1      451.128      528.473      62.5066      6238.03      824.815      6.35648
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.820461, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.055592, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.876689, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -4.3672e-12  3.66589e-50  4.93875e-56
      low eigenvalue method done, cpu time[sec] = 0.880206, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.67e-50  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.56e-51  2.22e-16         1
         *Z       ---       ---  4.12e+72
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16  8.26405e-45   3.9372e-45   1.0134e-46 -6.14604e-47  5.92061e-48  5.59204e-48 -2.82406e-52  3.92414e-66

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 35.1928, elapsed time[sec] = 3
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 320 K
            Well    Collision, 1/sec
              W1          2.2512e+09
      global relaxation matrix dimension = 1332
      setting global matrices ... done, cpu time[sec] = 0.03733, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 29.3044, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            4246.16       937.86      270.677      317.084       37.504      3742.82      494.889      3.81389
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.819755, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.055627, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.876025, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.18098e-10  2.19953e-50  2.43366e-56
      low eigenvalue method done, cpu time[sec] = 0.879532, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0   2.2e-50  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.53e-51  2.22e-16         1
         *Z       ---       ---  4.12e+72
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16 -2.42767e-45  6.11578e-46 -1.04269e-46 -2.12934e-45 -5.00784e-47 -4.28091e-48 -1.63623e-52 -1.70346e-65

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 35.2505, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 320 K
            Well    Collision, 1/sec
              W1         3.15168e+09
      global relaxation matrix dimension = 1332
      setting global matrices ... done, cpu time[sec] = 0.037334, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 29.3148, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            3032.97        669.9      193.341      226.488      26.7886      2673.44      353.492      2.72421
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.818483, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.055566, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.874683, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.10925e-10   1.5711e-50  1.48507e-56
      low eigenvalue method done, cpu time[sec] = 0.878149, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.57e-50  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.1e-51  2.22e-16         1
         *Z       ---       ---  4.12e+72
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16  5.09091e-45  1.90346e-45  1.05097e-46  1.97983e-45   3.7139e-47  1.45205e-47  1.54866e-52 -2.17265e-65

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 35.2608, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 320 K
            Well    Collision, 1/sec
              W1         4.05216e+09
      global relaxation matrix dimension = 1332
      setting global matrices ... done, cpu time[sec] = 0.037219, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 29.3389, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2358.98      521.034      150.376      176.158      20.8355      2079.34      274.938      2.11883
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.817661, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.055576, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.873863, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.56462e-10  1.22196e-50   1.0126e-56
      low eigenvalue method done, cpu time[sec] = 0.877293, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.22e-50  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.52e-52  2.22e-16         1
         *Z       ---       ---  4.12e+72
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16  3.39008e-45  2.24956e-45  8.03539e-47  9.19917e-46  1.61194e-47  1.08243e-47  3.56165e-52  2.41705e-65

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 35.2811, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 320 K
            Well    Collision, 1/sec
              W1          4.5024e+09
      global relaxation matrix dimension = 1332
      setting global matrices ... done, cpu time[sec] = 0.037207, elapsed time[sec] = 1
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 27.7798, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2123.08       468.93      135.338      158.542       18.752      1871.41      247.444      1.90694
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.821119, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.055585, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.877359, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.06464e-11  1.09977e-50  8.59425e-57
      low eigenvalue method done, cpu time[sec] = 0.880795, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.1e-50  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.67e-52  2.22e-16         1
         *Z       ---       ---  4.12e+72
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16 -4.50498e-46 -1.15424e-45   -1.245e-48  6.69473e-46  9.39021e-48   7.0049e-49  1.70545e-53  3.11106e-65

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 33.7293, elapsed time[sec] = 3
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 320 K
            Well    Collision, 1/sec
              W1         6.75361e+09
      global relaxation matrix dimension = 1332
      setting global matrices ... done, cpu time[sec] = 0.037205, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 27.7865, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1415.39       312.62      90.2256      105.695      12.5013      1247.61      164.963       1.2713
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.819659, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.055556, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.875844, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.94266e-11  7.33179e-51  4.48828e-57
      low eigenvalue method done, cpu time[sec] = 0.879273, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.33e-51  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.11e-52  2.22e-16         1
         *Z       ---       ---  4.12e+72
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16 -3.46842e-45 -3.95127e-46  1.44949e-48  2.99322e-46  4.74976e-48  -1.2554e-47 -3.08746e-52 -2.09546e-65

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 33.7302, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 320 K
            Well    Collision, 1/sec
              W1         9.00481e+09
      global relaxation matrix dimension = 1332
      setting global matrices ... done, cpu time[sec] = 0.037162, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 28.2506, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1061.54      234.465      67.6692      79.2709      9.37599      935.705      123.722     0.953472
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.817504, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.055622, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.873748, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.72945e-11  5.49884e-51  2.78339e-57
      low eigenvalue method done, cpu time[sec] = 0.877137, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0   5.5e-51  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.83e-52  2.22e-16         1
         *Z       ---       ---  4.12e+72
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16  9.09878e-46  6.62434e-46  2.81046e-47  5.90766e-46  1.56972e-47 -1.14468e-47 -1.80791e-52 -1.79393e-65

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 34.312, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 320 K
            Well    Collision, 1/sec
              W1          1.1256e+10
      global relaxation matrix dimension = 1332
      setting global matrices ... done, cpu time[sec] = 0.037342, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 27.8125, elapsed time[sec] = 2
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            849.233      187.572      54.1354      63.4167      7.50079      748.564      98.9778     0.762778
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.817086, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.055588, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.873313, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.57358e-11  4.39908e-51  1.90417e-57
      low eigenvalue method done, cpu time[sec] = 0.876713, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0   4.4e-51  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.07e-52  2.22e-16         1
         *Z       ---       ---  4.12e+72
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16   7.6621e-46  2.13516e-46  2.00017e-47  3.35417e-46  5.58149e-48  9.95006e-48 -1.46737e-52 -3.69941e-65

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 33.7541, elapsed time[sec] = 3
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 320 K
            Well    Collision, 1/sec
              W1         1.35072e+10
      global relaxation matrix dimension = 1332
      setting global matrices ... done, cpu time[sec] = 0.037198, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 27.8334, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            707.694       156.31      45.1128      52.8473      6.25066      623.803      82.4815     0.635648
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.817419, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.055556, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.873601, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.62204e-12   3.6659e-51  1.38871e-57
      low eigenvalue method done, cpu time[sec] = 0.876992, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.67e-51  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.56e-52  2.22e-16         1
         *Z       ---       ---  4.12e+72
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16  4.45982e-46  3.25361e-46  1.92115e-47  4.11869e-46  9.46639e-48 -4.15712e-48  2.72624e-53 -4.85624e-65

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 33.7745, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 320 K
            Well    Collision, 1/sec
              W1         1.57584e+10
      global relaxation matrix dimension = 1332
      setting global matrices ... done, cpu time[sec] = 0.037291, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 27.8453, elapsed time[sec] = 2
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            606.595       133.98      38.6681      45.2977      5.35771      534.688      70.6984     0.544841
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.817541, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.055582, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.87375, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.46976e-11   3.1422e-51  1.05953e-57
      low eigenvalue method done, cpu time[sec] = 0.87712, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.14e-51  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.19e-52  2.22e-16         1
         *Z       ---       ---  4.12e+72
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16 -1.24376e-45 -3.25152e-46 -1.37899e-47 -6.15382e-47 -5.66018e-49 -2.00342e-48 -2.55422e-52 -2.20815e-65

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 33.7896, elapsed time[sec] = 3
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 320 K
            Well    Collision, 1/sec
              W1         1.80096e+10
      global relaxation matrix dimension = 1332
      setting global matrices ... done, cpu time[sec] = 0.03719, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 27.8601, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            530.771      117.233      33.8346      39.6355        4.688      467.852      61.8611     0.476736
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.817163, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.055595, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.873388, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.49973e-11  2.74942e-51   8.3602e-58
      low eigenvalue method done, cpu time[sec] = 0.876784, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.75e-51  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.92e-52  2.22e-16         1
         *Z       ---       ---  4.12e+72
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16 -4.33329e-46 -8.68614e-48 -1.34354e-48 -4.22097e-47 -2.76259e-49 -2.18875e-48   2.5704e-54  6.88438e-65

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 33.8017, elapsed time[sec] = 2
   MasterEquation::set:  starts
      Temperature      = 330 K
      Energy reference = 39713 1/cm
      Energy step      = 55 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.8 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.000196
         W1 Well: collisional kernel bandwidth = 60
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.015397
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.021845
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 1.31764
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 20.4939
         W1 Well: minimal relaxation eigenvalue = 0.0687003
         W1 Well: maximal relaxation eigenvalue = 1.39144
         W1 Well:       grid size = 1296
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31567 1/cm
         B1 Barrier:        grid size = 723
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -52 1/cm
         B2 Barrier:        grid size = 719
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 167 1/cm
         B3 Barrier:        grid size = 806
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4617 1/cm
         B4 Barrier:        grid size = 835
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6212 1/cm
         B5 Barrier: nonpositive number of states at -23207 1/cm => truncating
         B5 Barrier:        grid size = 1144
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23207 1/cm
         B6 Barrier:        grid size = 695
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1487 1/cm
         B7 Barrier:        grid size = 637
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4677 1/cm
         B8 Barrier:        grid size = 418
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16723 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 22.0127, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31567 -23207 4.52e+05 3.63e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -52 1.22e+16
         B2    168 2.74e+15
         B3  -4617 7.97e+14
         B4  -6212  9.3e+14
         B5 -23207 1.11e+14
         B6   1488 1.09e+16
         B7   4678 1.47e+15
         B8  16723  1.2e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  1.43e+38  3.94e+38  3.36e+30  2.91e+27  1.87e-07  1.39e+42  2.87e+48  8.57e+71
          R  6.97e-39         1      2.74  2.34e-08  2.03e-11   1.3e-45  9.67e+03     2e+10  5.97e+33
         P1  2.54e-39     0.365         1  8.53e-09   7.4e-12  4.75e-46  3.52e+03  7.29e+09  2.18e+33
         P2  2.98e-31  4.28e+07  1.17e+08         1  0.000868  5.57e-38  4.13e+11  8.55e+17  2.55e+41
         P3  3.43e-28  4.93e+10  1.35e+11  1.15e+03         1  6.42e-35  4.76e+14  9.85e+20  2.94e+44
         P4  5.35e+06  7.68e+44  2.11e+45   1.8e+37  1.56e+34         1  7.42e+48  1.53e+55  4.59e+78
         P5  7.21e-43  0.000103  0.000284  2.42e-12   2.1e-15  1.35e-49         1  2.07e+06  6.18e+29
         P6  3.49e-49     5e-11  1.37e-10  1.17e-18  1.02e-21  6.52e-56  4.84e-07         1  2.99e+23
         P7  1.17e-72  1.67e-34  4.59e-34  3.92e-42   3.4e-45  2.18e-79  1.62e-30  3.35e-24         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  3.63e+34  9.96e+34  8.49e+26  7.37e+23  4.73e-11  3.51e+38  7.26e+44  2.17e+68
          R  2.75e-35         1      2.74  2.34e-08  2.03e-11   1.3e-45  9.67e+03     2e+10  5.97e+33
         P1     1e-35     0.365         1  8.53e-09   7.4e-12  4.75e-46  3.52e+03  7.29e+09  2.18e+33
         P2  1.18e-27  4.28e+07  1.17e+08         1  0.000868  5.57e-38  4.13e+11  8.55e+17  2.55e+41
         P3  1.36e-24  4.93e+10  1.35e+11  1.15e+03         1  6.42e-35  4.76e+14  9.85e+20  2.94e+44
         P4  2.11e+10  7.68e+44  2.11e+45   1.8e+37  1.56e+34         1  7.42e+48  1.53e+55  4.59e+78
         P5  2.85e-39  0.000103  0.000284  2.42e-12   2.1e-15  1.35e-49         1  2.07e+06  6.18e+29
         P6  1.38e-45     5e-11  1.37e-10  1.17e-18  1.02e-21  6.52e-56  4.84e-07         1  2.99e+23
         P7  4.61e-69  1.67e-34  4.59e-34  3.92e-42   3.4e-45  2.18e-79  1.62e-30  3.35e-24         1
   MasterEquation::set:  done, cpu time[sec] = 22.0191, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 330 K
            Well    Collision, 1/sec
              W1         4.40612e+08
      global relaxation matrix dimension = 1296
      setting global matrices ... done, cpu time[sec] = 1.17115, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 26.1429, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
              22770      5138.03      1493.95      1743.49       207.26      20423.9      2751.75      22.5803
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.749949, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.05151, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.802093, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.79627e-09  1.12654e-48  1.54225e-53
      low eigenvalue method done, cpu time[sec] = 0.804491, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.13e-48 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.74e-50 -4.44e-16         1
         *Z       ---       ---  1.54e+71
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  1.57844e-43  4.92206e-44  4.71757e-45  9.78871e-44  2.20503e-45 -1.29885e-46 -2.40885e-50 -4.10013e-66

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 33.144, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 330 K
            Well    Collision, 1/sec
              W1         1.32184e+09
      global relaxation matrix dimension = 1296
      setting global matrices ... done, cpu time[sec] = 0.03651, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 27.4581, elapsed time[sec] = 2
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            7589.99      1712.68      497.982      581.164      69.0865      6807.98      917.249      7.52678
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.750212, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.051414, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.802274, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.83647e-10  3.75521e-49   4.1196e-54
      low eigenvalue method done, cpu time[sec] = 0.80467, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.76e-49 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.58e-50 -4.44e-16         1
         *Z       ---       ---  1.54e+71
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16 -1.73839e-43 -8.79581e-44  -2.7553e-45 -3.85261e-44 -1.04532e-45  1.15192e-46  2.60369e-51 -4.71365e-64

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 33.3221, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 330 K
            Well    Collision, 1/sec
              W1         2.20306e+09
      global relaxation matrix dimension = 1296
      setting global matrices ... done, cpu time[sec] = 0.036514, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 27.0315, elapsed time[sec] = 2
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            4553.99      1027.61      298.789      348.699      41.4519      4084.79      550.349      4.51607
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.748562, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.051586, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.800819, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.91493e-10  2.25314e-49  2.05944e-54
      low eigenvalue method done, cpu time[sec] = 0.803243, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.25e-49 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.55e-50 -4.44e-16         1
         *Z       ---       ---  1.54e+71
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  2.79903e-44  1.40718e-45 -2.41397e-46 -1.86679e-45  1.97997e-47  2.12237e-46 -1.02709e-51  1.88824e-64

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 32.8932, elapsed time[sec] = 3
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 330 K
            Well    Collision, 1/sec
              W1         3.08429e+09
      global relaxation matrix dimension = 1296
      setting global matrices ... done, cpu time[sec] = 0.036388, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 27.0379, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            3252.85      734.004      213.421       249.07      29.6085       2917.7      393.107      3.22576
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.748418, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.051438, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.800517, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.00996e-11   1.6094e-49  1.26839e-54
      low eigenvalue method done, cpu time[sec] = 0.802872, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.61e-49 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.11e-50 -4.44e-16         1
         *Z       ---       ---  1.54e+71
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16 -1.02494e-43 -3.35033e-44 -1.07367e-45 -5.85523e-45 -2.32633e-46 -1.59281e-46  3.87095e-51 -1.57319e-64

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 32.8972, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 330 K
            Well    Collision, 1/sec
              W1         3.96551e+09
      global relaxation matrix dimension = 1296
      setting global matrices ... done, cpu time[sec] = 0.036251, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 27.0344, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
               2530      570.892      165.994      193.721      23.0288      2269.33       305.75      2.50893
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.749273, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.051462, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.801371, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.40032e-11  1.25176e-49  8.70703e-55
      low eigenvalue method done, cpu time[sec] = 0.803704, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.25e-49 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   8.6e-51 -4.44e-16         1
         *Z       ---       ---  1.54e+71
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  6.85347e-44  2.68858e-44  7.64854e-46  2.44424e-45  2.13145e-46  6.46922e-47  1.83434e-51 -3.05144e-64

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 32.8933, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 330 K
            Well    Collision, 1/sec
              W1         4.40612e+09
      global relaxation matrix dimension = 1296
      setting global matrices ... done, cpu time[sec] = 0.036282, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 27.5403, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
               2277      513.803      149.395      174.349       20.726      2042.39      275.175      2.25803
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.747367, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.051458, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.799491, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.37439e-10  1.12658e-49  7.41038e-55
      low eigenvalue method done, cpu time[sec] = 0.801867, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.13e-49 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.74e-51 -4.44e-16         1
         *Z       ---       ---  1.54e+71
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  -1.6097e-44 -3.33104e-45 -5.07903e-47  1.83993e-45  5.14415e-48 -1.75843e-46  1.43021e-51 -1.71969e-63

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 33.4018, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 330 K
            Well    Collision, 1/sec
              W1         6.60918e+09
      global relaxation matrix dimension = 1296
      setting global matrices ... done, cpu time[sec] = 0.036442, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 27.5755, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
               1518      342.535      99.5965      116.233      13.8173       1361.6       183.45      1.50536
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.748458, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.051451, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.80056, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.51884e-11  7.51057e-50  3.91004e-55
      low eigenvalue method done, cpu time[sec] = 0.802912, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.51e-50 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.16e-51 -4.44e-16         1
         *Z       ---       ---  1.54e+71
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  5.64417e-44  2.00629e-44   3.1869e-46 -5.07638e-45 -1.31955e-46 -2.15469e-46  2.16196e-51  3.23989e-64

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 33.4359, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 330 K
            Well    Collision, 1/sec
              W1         8.81225e+09
      global relaxation matrix dimension = 1296
      setting global matrices ... done, cpu time[sec] = 0.036247, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 27.4708, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             1138.5      256.901      74.6974      87.1746       10.363       1021.2      137.587      1.12902
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.748027, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.051441, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.800107, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.65162e-12  5.63294e-50  2.44155e-55
      low eigenvalue method done, cpu time[sec] = 0.802446, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.63e-50 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.87e-51 -4.44e-16         1
         *Z       ---       ---  1.54e+71
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  1.67098e-44  3.10678e-45  1.89878e-46  6.77851e-46  3.09866e-47  4.85001e-47  2.66753e-51  4.32315e-64

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 33.3327, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 330 K
            Well    Collision, 1/sec
              W1         1.10153e+10
      global relaxation matrix dimension = 1296
      setting global matrices ... done, cpu time[sec] = 0.036326, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 27.1649, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            910.799      205.521      59.7579      69.7397      8.29038      816.957       110.07     0.903214
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.747391, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.051452, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.799477, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0     6.69e-11  4.50636e-50  1.67878e-55
      low eigenvalue method done, cpu time[sec] = 0.801842, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.51e-50 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   3.1e-51 -4.44e-16         1
         *Z       ---       ---  1.54e+71
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  4.64549e-45  8.56826e-46  1.36475e-46  1.94108e-45  4.12799e-47  3.97009e-47 -1.46801e-51 -8.17322e-64

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 33.0241, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 330 K
            Well    Collision, 1/sec
              W1         1.32184e+10
      global relaxation matrix dimension = 1296
      setting global matrices ... done, cpu time[sec] = 0.036207, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 27.5078, elapsed time[sec] = 2
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            758.999      171.268      49.7982      58.1164      6.90865      680.798      91.7249     0.752678
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.747558, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.05147, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.799691, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.32505e-11   3.7553e-50  1.22915e-55
      low eigenvalue method done, cpu time[sec] = 0.802065, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.76e-50 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.58e-51 -4.44e-16         1
         *Z       ---       ---  1.54e+71
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16 -2.56039e-44 -7.55886e-45 -2.51124e-46  -1.1049e-45  -3.2318e-47 -1.01548e-47  3.78514e-51  2.06899e-63

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 33.3718, elapsed time[sec] = 3
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 330 K
            Well    Collision, 1/sec
              W1         1.54214e+10
      global relaxation matrix dimension = 1296
      setting global matrices ... done, cpu time[sec] = 0.036288, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 27.4984, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            650.571      146.801      42.6842      49.8141       5.9217      583.541      78.6214     0.645153
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.748187, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.051441, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.800305, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.42609e-11  3.21883e-50  9.40777e-56
      low eigenvalue method done, cpu time[sec] = 0.802689, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.22e-50 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.21e-51 -4.44e-16         1
         *Z       ---       ---  1.54e+71
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  2.54536e-44  4.13629e-45  1.18066e-46  5.54237e-46  2.52439e-47  1.48828e-46  1.61873e-51 -1.26877e-63

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 33.4637, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 330 K
            Well    Collision, 1/sec
              W1         1.76245e+10
      global relaxation matrix dimension = 1296
      setting global matrices ... done, cpu time[sec] = 0.036376, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 27.5068, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            569.249      128.451      37.3487      43.5873      5.18149      510.598      68.7937     0.564509
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.747734, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.051485, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.799849, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.49477e-11  2.81648e-50  7.44275e-56
      low eigenvalue method done, cpu time[sec] = 0.802204, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.82e-50 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.93e-51 -4.44e-16         1
         *Z       ---       ---  1.54e+71
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16 -1.55801e-44 -6.94112e-45 -1.65307e-46 -9.69683e-46  -2.7676e-47 -5.75414e-47  5.99701e-52 -1.48942e-63

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 33.3679, elapsed time[sec] = 2
   MasterEquation::set:  starts
      Temperature      = 340 K
      Energy reference = 40408 1/cm
      Energy step      = 57 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.7 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.000179
         W1 Well: collisional kernel bandwidth = 59
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.017964
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.020856
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 1.13026
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 19.6546
         W1 Well: minimal relaxation eigenvalue = 0.0676836
         W1 Well: maximal relaxation eigenvalue = 1.53191
         W1 Well:       grid size = 1263
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31583 1/cm
         B1 Barrier:        grid size = 709
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -5 1/cm
         B2 Barrier:        grid size = 706
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 165 1/cm
         B3 Barrier:        grid size = 790
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4622 1/cm
         B4 Barrier:        grid size = 818
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6218 1/cm
         B5 Barrier: nonpositive number of states at -23147 1/cm => truncating
         B5 Barrier:        grid size = 1115
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23147 1/cm
         B6 Barrier:        grid size = 683
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1476 1/cm
         B7 Barrier:        grid size = 627
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4668 1/cm
         B8 Barrier:        grid size = 415
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16752 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 20.9855, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31583 -23147 4.72e+05 4.02e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -5 1.41e+16
         B2    166 3.25e+15
         B3  -4622 9.52e+14
         B4  -6218 1.11e+15
         B5 -23147 1.32e+14
         B6   1477 1.29e+16
         B7   4669 1.77e+15
         B8  16753 1.54e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  2.28e+36  6.07e+36  9.68e+28  1.03e+26  6.88e-08  1.86e+40  2.57e+46  1.65e+69
          R  4.39e-37         1      2.67  4.25e-08  4.54e-11  3.02e-44  8.15e+03  1.13e+10  7.25e+32
         P1  1.65e-37     0.375         1  1.59e-08   1.7e-11  1.13e-44  3.06e+03  4.24e+09  2.72e+32
         P2  1.03e-29  2.35e+07  6.28e+07         1   0.00107  7.11e-37  1.92e+11  2.66e+17  1.71e+40
         P3  9.67e-27   2.2e+10  5.87e+10       935         1  6.65e-34  1.79e+14  2.49e+20   1.6e+43
         P4  1.45e+07  3.31e+43  8.82e+43  1.41e+36   1.5e+33         1   2.7e+47  3.74e+53   2.4e+76
         P5  5.39e-41  0.000123  0.000327  5.21e-12  5.57e-15  3.71e-48         1  1.39e+06  8.89e+28
         P6  3.88e-47  8.85e-11  2.36e-10  3.76e-18  4.02e-21  2.67e-54  7.21e-07         1  6.41e+22
         P7  6.06e-70  1.38e-33  3.68e-33  5.86e-41  6.27e-44  4.17e-77  1.12e-29  1.56e-23         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  5.92e+32  1.58e+33  2.51e+25  2.69e+22  1.79e-11  4.82e+36  6.69e+42  4.29e+65
          R  1.69e-33         1      2.67  4.25e-08  4.54e-11  3.02e-44  8.15e+03  1.13e+10  7.25e+32
         P1  6.34e-34     0.375         1  1.59e-08   1.7e-11  1.13e-44  3.06e+03  4.24e+09  2.72e+32
         P2  3.98e-26  2.35e+07  6.28e+07         1   0.00107  7.11e-37  1.92e+11  2.66e+17  1.71e+40
         P3  3.72e-23   2.2e+10  5.87e+10       935         1  6.65e-34  1.79e+14  2.49e+20   1.6e+43
         P4  5.59e+10  3.31e+43  8.82e+43  1.41e+36   1.5e+33         1   2.7e+47  3.74e+53   2.4e+76
         P5  2.07e-37  0.000123  0.000327  5.21e-12  5.57e-15  3.71e-48         1  1.39e+06  8.89e+28
         P6   1.5e-43  8.85e-11  2.36e-10  3.76e-18  4.02e-21  2.67e-54  7.21e-07         1  6.41e+22
         P7  2.33e-66  1.38e-33  3.68e-33  5.86e-41  6.27e-44  4.17e-77  1.12e-29  1.56e-23         1
   MasterEquation::set:  done, cpu time[sec] = 20.9914, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 340 K
            Well    Collision, 1/sec
              W1         4.31518e+08
      global relaxation matrix dimension = 1263
      setting global matrices ... done, cpu time[sec] = 1.08494, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 26.2029, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            24368.6      5616.78      1645.04       1912.8      228.505      22235.1      3051.15      26.5909
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.693669, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.047922, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.742132, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.15887e-09   1.0881e-47  9.45114e-52
      low eigenvalue method done, cpu time[sec] = 0.74752, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.09e-47  6.66e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.36e-49  6.66e-16         1
         *Z       ---       ---  7.09e+69
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 6.66134e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  6.66134e-16 -1.28463e-42 -7.40087e-43 -8.93053e-46  2.39452e-43  6.70396e-45 -7.00561e-46 -9.94084e-50 -2.43357e-63

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 33.0678, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 340 K
            Well    Collision, 1/sec
              W1         1.29455e+09
      global relaxation matrix dimension = 1263
      setting global matrices ... done, cpu time[sec] = 0.03336, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 25.5742, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            8122.87      1872.26      548.347        637.6      76.1684       7411.7      1017.05      8.86362
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.695014, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.047899, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.743469, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.82211e-10  3.62752e-48  2.60226e-52
      low eigenvalue method done, cpu time[sec] = 0.748839, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.63e-48  6.66e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.46e-49  6.66e-16         1
         *Z       ---       ---  7.09e+69
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 6.66134e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  6.66134e-16  7.66543e-43  1.96992e-43  7.17181e-45 -2.90755e-44  -7.5533e-46  2.09827e-45  1.33228e-50  6.53937e-63

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 31.3705, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 340 K
            Well    Collision, 1/sec
              W1         2.15759e+09
      global relaxation matrix dimension = 1263
      setting global matrices ... done, cpu time[sec] = 0.033199, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 25.5595, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            4873.72      1123.36      329.008       382.56       45.701      4447.02      610.231      5.31817
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.695512, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.047932, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.744007, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.90609e-10  2.17663e-48  1.31913e-52
      low eigenvalue method done, cpu time[sec] = 0.74931, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.18e-48  6.66e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.47e-49  6.66e-16         1
         *Z       ---       ---  7.09e+69
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 6.66134e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  6.66134e-16  1.53736e-42   5.7908e-43  1.69439e-44  1.20504e-43   3.2606e-45  1.49522e-45  1.13635e-50  4.18342e-63

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 31.3558, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 340 K
            Well    Collision, 1/sec
              W1         3.02062e+09
      global relaxation matrix dimension = 1263
      setting global matrices ... done, cpu time[sec] = 0.033422, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 25.5636, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            3481.23      802.397      235.006      273.257      32.6436      3176.44      435.879       3.7987
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.692004, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.047963, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.740534, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.44072e-11  1.55478e-48    8.198e-53
      low eigenvalue method done, cpu time[sec] = 0.745775, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.55e-48  6.66e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.05e-49  6.66e-16         1
         *Z       ---       ---  7.09e+69
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 6.66134e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  6.66134e-16 -7.17476e-44 -6.47741e-44 -2.86924e-45 -2.45772e-44 -9.74675e-46  2.04313e-45  1.01901e-50  4.48153e-63

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 31.3518, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 340 K
            Well    Collision, 1/sec
              W1         3.88366e+09
      global relaxation matrix dimension = 1263
      setting global matrices ... done, cpu time[sec] = 0.033432, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 25.5857, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2707.62      624.087      182.782      212.533      25.3895      2470.57      339.017      2.95454
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.692399, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.047931, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.740888, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.22971e-10   1.2093e-48  5.66487e-53
      low eigenvalue method done, cpu time[sec] = 0.746119, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.21e-48  6.66e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.18e-50  6.66e-16         1
         *Z       ---       ---  7.09e+69
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 6.66134e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  6.66134e-16   6.2888e-43   2.5262e-43  9.88257e-45  8.24338e-44  2.25025e-45  4.20477e-48 -4.36428e-50 -3.86909e-63

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 31.3792, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 340 K
            Well    Collision, 1/sec
              W1         4.31518e+09
      global relaxation matrix dimension = 1263
      setting global matrices ... done, cpu time[sec] = 0.033235, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 25.6918, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2436.86      561.678      164.504       191.28      22.8505      2223.51      305.115      2.65909
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.692465, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.047916, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.740935, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.81786e-11  1.08838e-48  4.83441e-53
      low eigenvalue method done, cpu time[sec] = 0.746159, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.09e-48  6.66e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.37e-50  6.66e-16         1
         *Z       ---       ---  7.09e+69
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 6.66134e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  6.66134e-16 -2.18517e-43 -1.36023e-43 -2.84427e-45 -3.66693e-44 -9.75697e-46 -8.49278e-47 -5.48718e-50  -1.0178e-62

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 31.4834, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 340 K
            Well    Collision, 1/sec
              W1         6.47276e+09
      global relaxation matrix dimension = 1263
      setting global matrices ... done, cpu time[sec] = 0.033469, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 25.7192, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1624.57      374.452      109.669       127.52      15.2337      1482.34       203.41      1.77272
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.692328, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.047892, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.740783, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -9.73214e-11  7.25604e-49  2.57694e-53
      low eigenvalue method done, cpu time[sec] = 0.745984, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.26e-49  6.66e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.91e-50  6.66e-16         1
         *Z       ---       ---  7.09e+69
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 6.66134e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  6.66134e-16  8.89635e-44  5.47209e-44  3.42529e-45  6.05067e-44  1.35504e-45 -6.27849e-46 -2.37773e-50  1.74658e-62

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 31.5112, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 340 K
            Well    Collision, 1/sec
              W1         8.63035e+09
      global relaxation matrix dimension = 1263
      setting global matrices ... done, cpu time[sec] = 0.033018, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 25.7377, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1218.43      280.839       82.252      95.6401      11.4253      1111.75      152.558      1.32954
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.692577, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.047919, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.741059, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.63316e-11  5.44211e-49   1.6202e-53
      low eigenvalue method done, cpu time[sec] = 0.74625, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.44e-49  6.66e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.68e-50  6.66e-16         1
         *Z       ---       ---  7.09e+69
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 6.66134e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  6.66134e-16 -7.28011e-44 -1.30146e-44 -8.70791e-46 -1.53328e-44 -4.24629e-46  4.39029e-46  1.70979e-51   1.0973e-62

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 31.7005, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 340 K
            Well    Collision, 1/sec
              W1         1.07879e+10
      global relaxation matrix dimension = 1263
      setting global matrices ... done, cpu time[sec] = 0.033373, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 25.7703, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            974.744      224.671      65.8016      76.5121      9.14021      889.404      122.046      1.06363
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.692423, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.047889, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.740869, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.06761e-11  4.35373e-49   1.1197e-53
      low eigenvalue method done, cpu time[sec] = 0.746035, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.35e-49  6.66e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.95e-50  6.66e-16         1
         *Z       ---       ---  7.09e+69
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 6.66134e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  6.66134e-16  2.80712e-43    5.472e-44  2.39214e-45   1.8203e-44  5.04968e-46    7.539e-46 -4.92753e-51 -2.45529e-62

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 31.5629, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 340 K
            Well    Collision, 1/sec
              W1         1.29455e+10
      global relaxation matrix dimension = 1263
      setting global matrices ... done, cpu time[sec] = 0.033204, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 25.7609, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            812.287      187.226      54.8347        63.76      7.61684       741.17      101.705     0.886362
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.692473, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.047915, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.740945, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.97403e-12  3.62813e-49  8.23064e-54
      low eigenvalue method done, cpu time[sec] = 0.746069, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.63e-49  6.66e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.46e-50  6.66e-16         1
         *Z       ---       ---  7.09e+69
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 6.66134e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  6.66134e-16 -4.50368e-46 -2.26553e-44  6.50061e-46 -1.07417e-45   4.6503e-47  6.05649e-46  2.18068e-50  2.29697e-62

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 31.5526, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 340 K
            Well    Collision, 1/sec
              W1         1.51031e+10
      global relaxation matrix dimension = 1263
      setting global matrices ... done, cpu time[sec] = 0.033332, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 25.808, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            696.246      160.479      47.0012      54.6515      6.52872      635.288      87.1758     0.759739
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.692321, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.047934, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.740816, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.41388e-11  3.10984e-49   6.3199e-54
      low eigenvalue method done, cpu time[sec] = 0.746005, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.11e-49  6.66e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   2.1e-50  6.66e-16         1
         *Z       ---       ---  7.09e+69
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 6.66134e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  6.66134e-16  4.93791e-44  3.55455e-45   4.1166e-46  2.41596e-45  5.45763e-47   6.1154e-46 -4.29749e-50 -1.51764e-62

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 31.7332, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 340 K
            Well    Collision, 1/sec
              W1         1.72607e+10
      global relaxation matrix dimension = 1263
      setting global matrices ... done, cpu time[sec] = 0.033324, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 25.8113, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            609.215       140.42       41.126        47.82      5.71263      555.877      76.2788     0.664772
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.693624, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.047947, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.74213, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.60459e-11  2.72112e-49  5.01324e-54
      low eigenvalue method done, cpu time[sec] = 0.747341, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.72e-49  6.66e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.84e-50  6.66e-16         1
         *Z       ---       ---  7.09e+69
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 6.66134e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  6.66134e-16 -6.22085e-44 -4.38409e-44 -9.01885e-46 -9.63504e-45 -1.79834e-46  8.33671e-47 -3.36432e-50 -3.46507e-62

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 31.6037, elapsed time[sec] = 2
   MasterEquation::set:  starts
      Temperature      = 350 K
      Energy reference = 41103 1/cm
      Energy step      = 58 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.7 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.000201
         W1 Well: collisional kernel bandwidth = 59
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.016024
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.020323
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 1.1902
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 18.9597
         W1 Well: minimal relaxation eigenvalue = 0.0667496
         W1 Well: maximal relaxation eigenvalue = 1.41619
         W1 Well:       grid size = 1253
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31571 1/cm
         B1 Barrier:        grid size = 709
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -19 1/cm
         B2 Barrier:        grid size = 705
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 212 1/cm
         B3 Barrier:        grid size = 788
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4601 1/cm
         B4 Barrier:        grid size = 816
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6225 1/cm
         B5 Barrier: nonpositive number of states at -23103 1/cm => truncating
         B5 Barrier:        grid size = 1107
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23103 1/cm
         B6 Barrier:        grid size = 683
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1488 1/cm
         B7 Barrier:        grid size = 628
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4678 1/cm
         B8 Barrier:        grid size = 420
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16742 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 20.3495, elapsed time[sec] = 1
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31571 -23103 4.88e+05 4.45e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -19 1.63e+16
         B2    213 3.84e+15
         B3  -4601 1.13e+15
         B4  -6225 1.31e+15
         B5 -23103 1.58e+14
         B6   1489 1.51e+16
         B7   4679 2.12e+15
         B8  16743 1.95e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  4.59e+34  1.19e+35  3.42e+27  4.46e+24  2.69e-08  3.19e+38  3.03e+44  4.56e+66
          R  2.18e-35         1       2.6  7.47e-08  9.72e-11  5.87e-43  6.94e+03  6.61e+09  9.94e+31
         P1  8.39e-36     0.385         1  2.87e-08  3.74e-11  2.26e-43  2.67e+03  2.54e+09  3.83e+31
         P2  2.92e-28  1.34e+07  3.48e+07         1    0.0013  7.86e-36   9.3e+10  8.85e+16  1.33e+39
         P3  2.24e-25  1.03e+10  2.67e+10       768         1  6.04e-33  7.15e+13   6.8e+19  1.02e+42
         P4  3.72e+07   1.7e+42  4.43e+42  1.27e+35  1.66e+32         1  1.18e+46  1.13e+52  1.69e+74
         P5  3.14e-39  0.000144  0.000374  1.08e-11   1.4e-14  8.45e-47         1  9.52e+05  1.43e+28
         P6   3.3e-45  1.51e-10  3.93e-10  1.13e-17  1.47e-20  8.88e-53  1.05e-06         1   1.5e+22
         P7  2.19e-67  1.01e-32  2.61e-32  7.51e-40  9.78e-43   5.9e-75  6.99e-29  6.65e-23         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  1.22e+31  3.16e+31  9.09e+23  1.18e+21  7.14e-12  8.46e+34  8.05e+40  1.21e+63
          R  8.21e-32         1       2.6  7.47e-08  9.72e-11  5.87e-43  6.94e+03  6.61e+09  9.94e+31
         P1  3.16e-32     0.385         1  2.87e-08  3.74e-11  2.26e-43  2.67e+03  2.54e+09  3.83e+31
         P2   1.1e-24  1.34e+07  3.48e+07         1    0.0013  7.86e-36   9.3e+10  8.85e+16  1.33e+39
         P3  8.45e-22  1.03e+10  2.67e+10       768         1  6.04e-33  7.15e+13   6.8e+19  1.02e+42
         P4   1.4e+11   1.7e+42  4.43e+42  1.27e+35  1.66e+32         1  1.18e+46  1.13e+52  1.69e+74
         P5  1.18e-35  0.000144  0.000374  1.08e-11   1.4e-14  8.45e-47         1  9.52e+05  1.43e+28
         P6  1.24e-41  1.51e-10  3.93e-10  1.13e-17  1.47e-20  8.88e-53  1.05e-06         1   1.5e+22
         P7  8.26e-64  1.01e-32  2.61e-32  7.51e-40  9.78e-43   5.9e-75  6.99e-29  6.65e-23         1
   MasterEquation::set:  done, cpu time[sec] = 20.3559, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 350 K
            Well    Collision, 1/sec
              W1          4.2291e+08
      global relaxation matrix dimension = 1253
      setting global matrices ... done, cpu time[sec] = 1.08218, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 25.799, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            26018.2      6124.13      1807.14      2093.82      251.327        24150      3373.67      31.1472
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.677351, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.046833, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.726454, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -1.3526e-09   1.0314e-46  4.63627e-50
      low eigenvalue method done, cpu time[sec] = 0.731249, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.03e-46         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.88e-48         0         1
         *Z       ---       ---   3.9e+68
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0 -1.33878e-42 -1.13146e-42 -2.27222e-44  8.98231e-44   5.1449e-45 -1.03812e-44  1.01504e-49  7.25616e-62

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 32.5927, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 350 K
            Well    Collision, 1/sec
              W1         1.26873e+09
      global relaxation matrix dimension = 1253
      setting global matrices ... done, cpu time[sec] = 0.033419, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 25.7575, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            8672.73      2041.38      602.382       697.94      83.7757      8050.01      1124.56      10.3824
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.677615, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.046884, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.726772, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -6.28286e-10  3.44065e-47  1.31391e-50
      low eigenvalue method done, cpu time[sec] = 0.731553, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.44e-47         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   2.3e-48         0         1
         *Z       ---       ---   3.9e+68
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0 -5.03144e-42 -2.62819e-43 -3.60669e-44 -9.12831e-43 -1.92778e-44 -1.92575e-44 -8.43376e-49  1.67486e-62

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 31.4648, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 350 K
            Well    Collision, 1/sec
              W1         2.11455e+09
      global relaxation matrix dimension = 1253
      setting global matrices ... done, cpu time[sec] = 0.033332, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 25.7871, elapsed time[sec] = 2
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            5203.64      1224.83      361.429      418.764      50.2654      4830.01      674.735      6.22944
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.677232, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.046842, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.726356, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.07984e-11    2.065e-47  6.75052e-51
      low eigenvalue method done, cpu time[sec] = 0.731266, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.07e-47         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.38e-48         0         1
         *Z       ---       ---   3.9e+68
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0 -2.93824e-42 -8.24778e-43  1.11653e-44  9.19611e-43  2.05889e-44  -7.7789e-45 -1.98162e-49 -2.43803e-61

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 31.4887, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 350 K
            Well    Collision, 1/sec
              W1         2.96037e+09
      global relaxation matrix dimension = 1253
      setting global matrices ... done, cpu time[sec] = 0.033356, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 25.9346, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            3716.89      874.876      258.164      299.117      35.9039         3450      481.954       4.4496
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.677397, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.04683, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.726496, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.96816e-10  1.47525e-47  4.23215e-51
      low eigenvalue method done, cpu time[sec] = 0.73124, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.48e-47         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.85e-49         0         1
         *Z       ---       ---   3.9e+68
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0 -2.84499e-42 -2.12035e-42 -7.70953e-44 -1.09931e-42 -2.60229e-44  2.06328e-44  1.82165e-49 -1.59403e-61

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 31.7128, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 350 K
            Well    Collision, 1/sec
              W1         3.80619e+09
      global relaxation matrix dimension = 1253
      setting global matrices ... done, cpu time[sec] = 0.033175, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 25.2874, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2890.91      680.459      200.794      232.647      27.9252      2683.34      374.853       3.4608
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.678617, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.04687, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.727742, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.02936e-11  1.14754e-47  2.94337e-51
      low eigenvalue method done, cpu time[sec] = 0.732599, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.15e-47         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.66e-49         0         1
         *Z       ---       ---   3.9e+68
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0 -1.15545e-42 -7.93696e-43 -2.03277e-44 -1.49038e-43 -4.35971e-45  1.56889e-45  2.87864e-49   9.7565e-62

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 31.0653, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 350 K
            Well    Collision, 1/sec
              W1          4.2291e+09
      global relaxation matrix dimension = 1253
      setting global matrices ... done, cpu time[sec] = 0.033152, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 25.2491, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2601.82      612.413      180.714      209.382      25.1327         2415      337.367      3.11472
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.676614, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.046899, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.725785, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.81394e-12  1.03283e-47  2.51859e-51
      low eigenvalue method done, cpu time[sec] = 0.730697, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.03e-47         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.89e-49         0         1
         *Z       ---       ---   3.9e+68
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.29947e-42  5.97025e-43  5.42175e-44  8.63341e-43  1.95435e-44  -7.5182e-45  1.86654e-49 -4.69543e-62

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 31.0238, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 350 K
            Well    Collision, 1/sec
              W1         6.34365e+09
      global relaxation matrix dimension = 1253
      setting global matrices ... done, cpu time[sec] = 0.032969, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 25.2818, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1734.55      408.275      120.476      139.588      16.7551         1610      224.912      2.07648
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.676833, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.046871, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.725996, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.83254e-11  6.88649e-48  1.35604e-51
      low eigenvalue method done, cpu time[sec] = 0.730775, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.89e-48         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   4.6e-49         0         1
         *Z       ---       ---   3.9e+68
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0 -1.16279e-42  -2.6197e-43  1.35728e-44  4.23001e-43  9.18866e-45 -4.46721e-45  2.14686e-50 -1.28138e-60

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 31.0574, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 350 K
            Well    Collision, 1/sec
              W1         8.45821e+09
      global relaxation matrix dimension = 1253
      setting global matrices ... done, cpu time[sec] = 0.033176, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 25.2366, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1300.91      306.206      90.3572      104.691      12.5664       1207.5      168.684      1.55736
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.676941, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.046798, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.725999, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.99511e-11  5.16529e-48  8.58406e-52
      low eigenvalue method done, cpu time[sec] = 0.730582, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.17e-48         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.45e-49         0         1
         *Z       ---       ---   3.9e+68
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.91857e-42  9.20886e-43  1.89473e-44  1.55927e-43  4.61139e-45 -6.28949e-45  2.77867e-51 -2.00394e-61

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 31.0107, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 350 K
            Well    Collision, 1/sec
              W1         1.05728e+10
      global relaxation matrix dimension = 1253
      setting global matrices ... done, cpu time[sec] = 0.033061, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 25.5983, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1040.73      244.965      72.2858      83.7528      10.0531      966.001      134.947      1.24589
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.678418, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.046796, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.727448, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.14558e-11  4.13246e-48  5.96242e-52
      low eigenvalue method done, cpu time[sec] = 0.732264, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.13e-48         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.76e-49         0         1
         *Z       ---       ---   3.9e+68
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0 -6.34146e-43  1.58038e-43  -1.2966e-46 -5.09569e-44 -5.96484e-46 -2.26028e-45 -2.92435e-49  2.91215e-61

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 31.3773, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 350 K
            Well    Collision, 1/sec
              W1         1.26873e+10
      global relaxation matrix dimension = 1253
      setting global matrices ... done, cpu time[sec] = 0.033175, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 24.1666, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            867.273      204.138      60.2382       69.794      8.37757      805.001      112.456      1.03824
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.676687, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.04678, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.725744, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.23173e-12  3.44385e-48   4.4003e-52
      low eigenvalue method done, cpu time[sec] = 0.730439, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.44e-48         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   2.3e-49         0         1
         *Z       ---       ---   3.9e+68
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.34005e-42  4.93955e-43  1.66372e-44  1.47007e-43  3.72994e-45  7.98433e-45  4.29882e-49  3.32539e-61

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 29.9413, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 350 K
            Well    Collision, 1/sec
              W1         1.48019e+10
      global relaxation matrix dimension = 1253
      setting global matrices ... done, cpu time[sec] = 0.033178, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 24.2008, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            743.377      174.975      51.6327      59.8234      7.18078      690.001      96.3907     0.889919
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.676667, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.046834, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.725757, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.96365e-12  2.95195e-48  3.38972e-52
      low eigenvalue method done, cpu time[sec] = 0.730296, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.95e-48         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.97e-49         0         1
         *Z       ---       ---   3.9e+68
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0 -7.06845e-43 -5.92729e-43 -5.90735e-45  7.33507e-44  1.31767e-45  5.92332e-45  -4.1391e-49   2.7849e-61

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 29.9752, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 350 K
            Well    Collision, 1/sec
              W1         1.69164e+10
      global relaxation matrix dimension = 1253
      setting global matrices ... done, cpu time[sec] = 0.033099, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 24.1923, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            650.455      153.103      45.1786      52.3455      6.28318      603.751      84.3419      0.77868
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.676761, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.04686, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.725912, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.59546e-11  2.58302e-48  2.69617e-52
      low eigenvalue method done, cpu time[sec] = 0.730234, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.58e-48         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.72e-49         0         1
         *Z       ---       ---   3.9e+68
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0 -1.78353e-43  7.78803e-44  1.83177e-45  2.79366e-44  5.52885e-46 -6.53897e-45 -2.99071e-49 -1.38817e-60

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 29.965, elapsed time[sec] = 2
   MasterEquation::set:  starts
      Temperature      = 360 K
      Energy reference = 41798 1/cm
      Energy step      = 60 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.6 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.000204
         W1 Well: collisional kernel bandwidth = 59
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.014126
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.019263
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 1.1241
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 17.312
         W1 Well: minimal relaxation eigenvalue = 0.0658428
         W1 Well: maximal relaxation eigenvalue = 1.5019
         W1 Well:       grid size = 1223
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31582 1/cm
         B1 Barrier:        grid size = 697
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -22 1/cm
         B2 Barrier:        grid size = 694
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 157 1/cm
         B3 Barrier:        grid size = 774
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4642 1/cm
         B4 Barrier:        grid size = 800
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6202 1/cm
         B5 Barrier: nonpositive number of states at -23602 1/cm => truncating
         B5 Barrier:        grid size = 1090
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23602 1/cm
         B6 Barrier:        grid size = 672
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1477 1/cm
         B7 Barrier:        grid size = 618
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4717 1/cm
         B8 Barrier:        grid size = 418
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16717 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 18.6303, elapsed time[sec] = 1
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31582 -23602 3.39e+05 4.91e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -22 1.88e+16
         B2    158 4.53e+15
         B3  -4642 1.35e+15
         B4  -6202 1.55e+15
         B5 -23602 1.87e+14
         B6   1478 1.78e+16
         B7   4718 2.53e+15
         B8  16718 2.47e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  1.13e+33  2.87e+33  1.44e+26  2.26e+23  1.09e-08  6.76e+36  4.51e+42  1.73e+64
          R  8.82e-34         1      2.53  1.27e-07  1.99e-10  9.66e-42  5.97e+03  3.98e+09  1.52e+31
         P1  3.48e-34     0.395         1  5.02e-08  7.86e-11  3.81e-42  2.35e+03  1.57e+09  6.01e+30
         P2  6.94e-27  7.87e+06  1.99e+07         1   0.00157   7.6e-35  4.69e+10  3.13e+16   1.2e+38
         P3  4.43e-24  5.02e+09  1.27e+10       638         1  4.85e-32  2.99e+13     2e+19  7.64e+40
         P4  9.14e+07  1.04e+41  2.62e+41  1.32e+34  2.06e+31         1  6.18e+44  4.12e+50  1.58e+72
         P5  1.48e-37  0.000168  0.000425  2.13e-11  3.34e-14  1.62e-45         1  6.68e+05  2.55e+27
         P6  2.22e-43  2.51e-10  6.36e-10  3.19e-17     5e-20  2.42e-51   1.5e-06         1  3.82e+21
         P7  5.79e-65  6.57e-32  1.66e-31  8.35e-39  1.31e-41  6.34e-73  3.92e-28  2.61e-22         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  3.11e+29  7.87e+29  3.95e+22  6.19e+19     3e-12  1.85e+33  1.24e+39  4.73e+60
          R  3.22e-30         1      2.53  1.27e-07  1.99e-10  9.66e-42  5.97e+03  3.98e+09  1.52e+31
         P1  1.27e-30     0.395         1  5.02e-08  7.86e-11  3.81e-42  2.35e+03  1.57e+09  6.01e+30
         P2  2.53e-23  7.87e+06  1.99e+07         1   0.00157   7.6e-35  4.69e+10  3.13e+16   1.2e+38
         P3  1.62e-20  5.02e+09  1.27e+10       638         1  4.85e-32  2.99e+13     2e+19  7.64e+40
         P4  3.33e+11  1.04e+41  2.62e+41  1.32e+34  2.06e+31         1  6.18e+44  4.12e+50  1.58e+72
         P5   5.4e-34  0.000168  0.000425  2.13e-11  3.34e-14  1.62e-45         1  6.68e+05  2.55e+27
         P6  8.08e-40  2.51e-10  6.36e-10  3.19e-17     5e-20  2.42e-51   1.5e-06         1  3.82e+21
         P7  2.11e-61  6.57e-32  1.66e-31  8.35e-39  1.31e-41  6.34e-73  3.92e-28  2.61e-22         1
   MasterEquation::set:  done, cpu time[sec] = 18.6367, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 360 K
            Well    Collision, 1/sec
              W1          4.1475e+08
      global relaxation matrix dimension = 1223
      setting global matrices ... done, cpu time[sec] = 1.02514, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 22.709, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            27716.5      6659.74      1980.75      2287.02      275.797        26170      3720.33      36.3031
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.63549, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.043535, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.679548, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.25402e-10  9.57732e-46  1.82111e-48
      low eigenvalue method done, cpu time[sec] = 0.68364, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.58e-46         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.31e-47         0         1
         *Z       ---       ---   2.5e+67
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  3.79339e-41  2.52816e-41   1.7588e-42  3.17135e-41  7.00495e-43  6.47948e-44  6.33555e-47  3.49987e-61

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 29.504, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 360 K
            Well    Collision, 1/sec
              W1         1.24425e+09
      global relaxation matrix dimension = 1223
      setting global matrices ... done, cpu time[sec] = 0.031314, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 22.6743, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            9238.85      2219.91      660.249      762.341      91.9325      8723.35      1240.11       12.101
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.635667, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.043469, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.67967, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.24181e-10  3.20313e-46  5.30589e-49
      low eigenvalue method done, cpu time[sec] = 0.684202, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0   3.2e-46         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.11e-47         0         1
         *Z       ---       ---   2.5e+67
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.27643e-41  8.00304e-42  3.19969e-43   8.6169e-43  4.03964e-44  8.40908e-44  -1.6491e-48 -1.40625e-60

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 28.3881, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 360 K
            Well    Collision, 1/sec
              W1         2.07375e+09
      global relaxation matrix dimension = 1223
      setting global matrices ... done, cpu time[sec] = 0.03145, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 22.6932, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            5543.31      1331.95      396.149      457.405      55.1595      5234.01      744.066      7.26061
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.634709, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.043508, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.67874, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.70708e-10  1.92438e-46  2.76182e-49
      low eigenvalue method done, cpu time[sec] = 0.682804, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.92e-46         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.27e-47         0         1
         *Z       ---       ---   2.5e+67
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0 -4.21173e-41 -1.58064e-41 -4.30841e-43 -4.19736e-42 -1.16186e-43 -7.65869e-44  3.10313e-48  3.81123e-60

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 28.4083, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 360 K
            Well    Collision, 1/sec
              W1         2.90325e+09
      global relaxation matrix dimension = 1223
      setting global matrices ... done, cpu time[sec] = 0.031371, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 22.7267, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            3959.51      951.391      282.964      326.718      39.3996      3738.58      531.475      5.18615
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.635205, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.043485, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.679203, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -8.55726e-11  1.37558e-46  1.74638e-49
      low eigenvalue method done, cpu time[sec] = 0.683374, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.38e-46         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.06e-48         0         1
         *Z       ---       ---   2.5e+67
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0   1.3637e-41  1.45247e-41  5.39945e-43  5.99538e-42  1.39663e-43 -9.39698e-44   9.7012e-49  3.17888e-60

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 28.443, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 360 K
            Well    Collision, 1/sec
              W1         3.73275e+09
      global relaxation matrix dimension = 1223
      setting global matrices ... done, cpu time[sec] = 0.031396, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 22.6798, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            3079.62      739.971      220.083      254.114      30.6442      2907.78       413.37      4.03367
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.635001, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.043467, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.679003, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.41971e-10  1.07042e-46  1.22229e-49
      low eigenvalue method done, cpu time[sec] = 0.683122, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.07e-46         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.05e-48         0         1
         *Z       ---       ---   2.5e+67
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.10561e-41  2.13247e-42  4.92936e-44 -7.44815e-43 -6.93906e-45  9.19697e-44  3.70244e-48  9.47252e-61

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 28.3986, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 360 K
            Well    Collision, 1/sec
              W1          4.1475e+09
      global relaxation matrix dimension = 1223
      setting global matrices ... done, cpu time[sec] = 0.030955, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 22.676, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2771.65      665.974      198.075      228.702      27.5797         2617      372.033      3.63031
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.635076, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.043456, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.679066, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.44013e-10  9.63555e-47  1.04864e-49
      low eigenvalue method done, cpu time[sec] = 0.683134, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.64e-47         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.34e-48         0         1
         *Z       ---       ---   2.5e+67
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.02321e-41   3.7417e-42  1.06956e-43  1.00577e-43  1.37467e-44  3.44462e-44 -3.47453e-48 -9.12258e-61

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 28.3917, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 360 K
            Well    Collision, 1/sec
              W1         6.22124e+09
      global relaxation matrix dimension = 1223
      setting global matrices ... done, cpu time[sec] = 0.031185, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 22.753, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1847.77      443.983       132.05      152.468      18.3865      1744.67      248.022       2.4202
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.634604, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.043476, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.678598, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.70099e-11   6.4278e-47   5.7023e-50
      low eigenvalue method done, cpu time[sec] = 0.682862, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.43e-47         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.23e-48         0         1
         *Z       ---       ---   2.5e+67
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  -1.5222e-41 -5.76152e-42 -2.23191e-43 -1.16025e-42 -3.66064e-44  7.36165e-45  2.07382e-49 -1.22337e-59

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 28.4609, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 360 K
            Well    Collision, 1/sec
              W1         8.29499e+09
      global relaxation matrix dimension = 1223
      setting global matrices ... done, cpu time[sec] = 0.031229, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 22.7843, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1385.83      332.987      99.0373      114.351      13.7899       1308.5      186.016      1.81515
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.634706, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.04344, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.678674, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.63017e-11  4.82265e-47  3.63425e-50
      low eigenvalue method done, cpu time[sec] = 0.682592, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.82e-47         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.18e-48         0         1
         *Z       ---       ---   2.5e+67
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0 -5.00501e-42 -2.13351e-42 -7.76096e-44 -8.97026e-43 -1.56425e-44  1.80425e-44  4.27058e-49 -4.90498e-60

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 28.496, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 360 K
            Well    Collision, 1/sec
              W1         1.03687e+10
      global relaxation matrix dimension = 1223
      setting global matrices ... done, cpu time[sec] = 0.031133, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 22.8021, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1108.66       266.39      79.2299      91.4809      11.0319       1046.8      148.813      1.45212
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.634415, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.043513, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.678461, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.91476e-11  3.85907e-47  2.53714e-50
      low eigenvalue method done, cpu time[sec] = 0.682486, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.86e-47         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.54e-48         0         1
         *Z       ---       ---   2.5e+67
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0 -1.11902e-41 -2.98898e-42 -5.25616e-44  3.49422e-43 -2.07835e-45 -4.78578e-44  3.83682e-49 -6.88458e-60

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 28.5187, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 360 K
            Well    Collision, 1/sec
              W1         1.24425e+10
      global relaxation matrix dimension = 1223
      setting global matrices ... done, cpu time[sec] = 0.031038, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 22.8145, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            923.885      221.991      66.0249      76.2341      9.19325      872.335      124.011       1.2101
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.633854, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.043517, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.677903, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -6.32266e-13  3.21646e-47  1.87992e-50
      low eigenvalue method done, cpu time[sec] = 0.682102, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.22e-47         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.12e-48         0         1
         *Z       ---       ---   2.5e+67
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0 -6.64365e-42 -1.39543e-42 -5.66039e-44 -4.50859e-43 -1.48496e-44 -3.76214e-44  2.26838e-48 -1.16634e-59

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 28.529, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 360 K
            Well    Collision, 1/sec
              W1         1.45162e+10
      global relaxation matrix dimension = 1223
      setting global matrices ... done, cpu time[sec] = 0.03135, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 22.8427, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            791.901      190.278      56.5928      65.3435      7.87993      747.716      106.295      1.03723
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.63491, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.043475, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.678917, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.54214e-11  2.75733e-47  1.45291e-50
      low eigenvalue method done, cpu time[sec] = 0.682696, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.76e-47         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.82e-48         0         1
         *Z       ---       ---   2.5e+67
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.05893e-41   2.1999e-42  2.19006e-44 -4.62332e-43 -8.65599e-45  3.55487e-44 -8.68737e-49  8.46589e-60

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 28.5608, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 360 K
            Well    Collision, 1/sec
              W1           1.659e+10
      global relaxation matrix dimension = 1223
      setting global matrices ... done, cpu time[sec] = 0.031105, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 22.7531, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            692.914      166.493      49.5187      57.1756      6.89494      654.251      93.0082     0.907576
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.634787, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.043463, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.678773, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.37462e-11  2.41292e-47  1.15881e-50
      low eigenvalue method done, cpu time[sec] = 0.682873, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.41e-47         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.59e-48         0         1
         *Z       ---       ---   2.5e+67
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.41873e-42  7.59353e-43    6.337e-45  2.17142e-46 -8.07905e-46 -2.36808e-44 -4.32532e-48  1.39041e-60

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 28.4667, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 370 K
      Energy reference = 42493 1/cm
      Energy step      = 62 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.5 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.000177
         W1 Well: collisional kernel bandwidth = 58
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.014733
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.018411
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 1.2127
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 16.2556
         W1 Well: minimal relaxation eigenvalue = 0.0649544
         W1 Well: maximal relaxation eigenvalue = 1.8998
         W1 Well:       grid size = 1195
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31597 1/cm
         B1 Barrier:        grid size = 686
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -38 1/cm
         B2 Barrier:        grid size = 682
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 209 1/cm
         B3 Barrier:        grid size = 760
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4626 1/cm
         B4 Barrier:        grid size = 785
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6176 1/cm
         B5 Barrier: nonpositive number of states at -23103 1/cm => truncating
         B5 Barrier:        grid size = 1058
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23103 1/cm
         B6 Barrier:        grid size = 662
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1449 1/cm
         B7 Barrier:        grid size = 610
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4673 1/cm
         B8 Barrier:        grid size = 415
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16763 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 17.717, elapsed time[sec] = 1
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31597 -23103 4.88e+05 5.42e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -38 2.17e+16
         B2    210 5.32e+15
         B3  -4626  1.6e+15
         B4  -6176 1.84e+15
         B5 -23103 2.22e+14
         B6   1450 2.08e+16
         B7   4674 3.01e+15
         B8  16763  3.1e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  3.41e+31  8.45e+31  7.18e+24  1.34e+22  4.66e-09  1.76e+35  8.42e+40  8.82e+61
          R  2.93e-32         1      2.48   2.1e-07  3.93e-10  1.37e-40  5.17e+03  2.47e+09  2.59e+30
         P1  1.18e-32     0.404         1   8.5e-08  1.59e-10  5.52e-41  2.09e+03  9.96e+08  1.04e+30
         P2  1.39e-25  4.75e+06  1.18e+07         1   0.00187   6.5e-34  2.46e+10  1.17e+16  1.23e+37
         P3  7.46e-23  2.54e+09   6.3e+09       535         1  3.48e-31  1.31e+13  6.27e+18  6.58e+39
         P4  2.14e+08  7.31e+39  1.81e+40  1.54e+33  2.88e+30         1  3.78e+43  1.81e+49  1.89e+70
         P5  5.67e-36  0.000194  0.000479  4.07e-11  7.61e-14  2.65e-44         1  4.78e+05  5.01e+26
         P6  1.19e-41  4.05e-10     1e-09  8.53e-17  1.59e-19  5.54e-50  2.09e-06         1  1.05e+21
         P7  1.13e-62  3.87e-31  9.58e-31  8.14e-38  1.52e-40  5.29e-71     2e-27  9.54e-22         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  9.64e+27  2.39e+28  2.03e+21  3.79e+18  1.32e-12  4.98e+31  2.38e+37  2.49e+58
          R  1.04e-28         1      2.48   2.1e-07  3.93e-10  1.37e-40  5.17e+03  2.47e+09  2.59e+30
         P1  4.19e-29     0.404         1   8.5e-08  1.59e-10  5.52e-41  2.09e+03  9.96e+08  1.04e+30
         P2  4.93e-22  4.75e+06  1.18e+07         1   0.00187   6.5e-34  2.46e+10  1.17e+16  1.23e+37
         P3  2.64e-19  2.54e+09   6.3e+09       535         1  3.48e-31  1.31e+13  6.27e+18  6.58e+39
         P4  7.58e+11  7.31e+39  1.81e+40  1.54e+33  2.88e+30         1  3.78e+43  1.81e+49  1.89e+70
         P5  2.01e-32  0.000194  0.000479  4.07e-11  7.61e-14  2.65e-44         1  4.78e+05  5.01e+26
         P6   4.2e-38  4.05e-10     1e-09  8.53e-17  1.59e-19  5.54e-50  2.09e-06         1  1.05e+21
         P7  4.01e-59  3.87e-31  9.58e-31  8.14e-38  1.52e-40  5.29e-71     2e-27  9.54e-22         1
   MasterEquation::set:  done, cpu time[sec] = 17.7231, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 370 K
            Well    Collision, 1/sec
              W1         4.06999e+08
      global relaxation matrix dimension = 1195
      setting global matrices ... done, cpu time[sec] = 0.996827, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 21.949, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            29462.1      7224.02      2166.34       2492.9      301.988      28288.8      4092.14      42.1117
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.585662, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.041155, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.627319, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.57019e-09  9.07945e-45  5.86911e-47
      low eigenvalue method done, cpu time[sec] = 0.631509, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.08e-45  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   5.9e-46  4.44e-16         1
         *Z       ---       ---  1.87e+66
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  4.44089e-16 -5.80951e-42  8.77187e-41  3.12733e-42  9.53969e-41  1.98853e-42  1.13935e-42  2.05536e-47  6.37976e-60

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 28.5943, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 370 K
            Well    Collision, 1/sec
              W1           1.221e+09
      global relaxation matrix dimension = 1195
      setting global matrices ... done, cpu time[sec] = 0.030127, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 21.4192, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            9820.69      2408.01      722.113      830.966      100.663      9429.59      1364.05      14.0372
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.585603, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.041173, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.627292, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.72576e-10  3.06174e-45  1.75597e-47
      low eigenvalue method done, cpu time[sec] = 0.63114, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.06e-45  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.99e-46  4.44e-16         1
         *Z       ---       ---  1.87e+66
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  4.44089e-16  9.02004e-42 -2.70212e-41  9.27835e-43  9.90379e-42  2.83708e-43   7.8825e-43  5.38713e-49  1.19892e-59

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 27.0836, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 370 K
            Well    Collision, 1/sec
              W1         2.03499e+09
      global relaxation matrix dimension = 1195
      setting global matrices ... done, cpu time[sec] = 0.030174, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 21.4654, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            5892.41       1444.8      433.268      498.579      60.3977      5657.75      818.428      8.42234
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.585465, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.041157, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.627135, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.60488e-10  1.84546e-45  9.25642e-48
      low eigenvalue method done, cpu time[sec] = 0.631178, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.85e-45  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.2e-46  4.44e-16         1
         *Z       ---       ---  1.87e+66
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  4.44089e-16  2.73317e-40  1.03744e-40  3.77554e-42   3.4907e-41  9.08391e-43  1.01235e-44 -2.04718e-47 -9.72708e-60

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 27.1231, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 370 K
            Well    Collision, 1/sec
              W1         2.84899e+09
      global relaxation matrix dimension = 1195
      setting global matrices ... done, cpu time[sec] = 0.030164, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 21.4685, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            4208.87         1032      309.477      356.128      43.1412      4041.25      584.591      6.01596
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.585465, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.041203, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.627181, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.21899e-11  1.32164e-45  5.90216e-48
      low eigenvalue method done, cpu time[sec] = 0.631049, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.32e-45  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.58e-47  4.44e-16         1
         *Z       ---       ---  1.87e+66
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  4.44089e-16  4.13489e-41 -2.56944e-41 -1.18513e-42 -2.13251e-41 -4.32579e-43 -2.19215e-43 -1.77555e-47  2.93803e-59

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 27.1288, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 370 K
            Well    Collision, 1/sec
              W1         3.66299e+09
      global relaxation matrix dimension = 1195
      setting global matrices ... done, cpu time[sec] = 0.030024, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 21.4621, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            3273.56      802.669      240.704      276.989      33.5543       3143.2      454.682      4.67908
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.585689, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.041214, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.62741, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.78199e-10  1.02973e-45  4.15657e-48
      low eigenvalue method done, cpu time[sec] = 0.631407, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.03e-45  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.69e-47  4.44e-16         1
         *Z       ---       ---  1.87e+66
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  4.44089e-16  1.35362e-40  6.14294e-41  1.28212e-42  5.52527e-42  1.98277e-43 -3.38764e-43 -2.09676e-47  6.90422e-59

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 27.1176, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 370 K
            Well    Collision, 1/sec
              W1         4.06999e+09
      global relaxation matrix dimension = 1195
      setting global matrices ... done, cpu time[sec] = 0.030195, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 21.4285, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2946.21      722.402      216.634       249.29      30.1988      2828.88      409.214      4.21117
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.584906, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.041221, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.626645, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.09662e-10  9.27382e-46  3.57529e-48
      low eigenvalue method done, cpu time[sec] = 0.63046, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.27e-46  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.02e-47  4.44e-16         1
         *Z       ---       ---  1.87e+66
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  4.44089e-16 -8.59813e-41 -2.46749e-41 -8.99194e-43 -9.27149e-42 -2.20091e-43 -3.58076e-44  1.84326e-47    2.124e-59

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 27.0893, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 370 K
            Well    Collision, 1/sec
              W1         6.10498e+09
      global relaxation matrix dimension = 1195
      setting global matrices ... done, cpu time[sec] = 0.030265, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 21.4594, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1964.14      481.601      144.423      166.193      20.1326      1885.92      272.809      2.80745
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.584904, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.04116, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.626563, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.89011e-11   6.1967e-46  1.96326e-48
      low eigenvalue method done, cpu time[sec] = 0.630706, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   6.2e-46  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.03e-47  4.44e-16         1
         *Z       ---       ---  1.87e+66
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  4.44089e-16 -2.58322e-41  7.41499e-42 -2.05299e-43 -1.65318e-42 -3.98824e-44 -2.21455e-43 -2.72198e-47  9.58029e-59

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 27.1185, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 370 K
            Well    Collision, 1/sec
              W1         8.13998e+09
      global relaxation matrix dimension = 1195
      setting global matrices ... done, cpu time[sec] = 0.029989, elapsed time[sec] = 1
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 21.4516, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             1473.1      361.201      108.317      124.645      15.0994      1414.44      204.607      2.10558
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.585247, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.041139, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.626886, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -7.33186e-12  4.65378e-46  1.25968e-48
      low eigenvalue method done, cpu time[sec] = 0.630206, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.65e-46  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.02e-47  4.44e-16         1
         *Z       ---       ---  1.87e+66
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  4.44089e-16  4.71368e-41  2.51436e-41  8.56882e-43  8.13221e-42  2.12761e-43 -2.96395e-43  7.94872e-48  1.32313e-58

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 27.1133, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 370 K
            Well    Collision, 1/sec
              W1          1.0175e+10
      global relaxation matrix dimension = 1195
      setting global matrices ... done, cpu time[sec] = 0.029791, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 21.4726, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1178.48      288.961      86.6535      99.7159      12.0795      1131.55      163.686      1.68447
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.584763, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.041173, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.626439, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -8.51334e-11  3.72637e-46  8.83856e-49
      low eigenvalue method done, cpu time[sec] = 0.630324, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.73e-46  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.42e-47  4.44e-16         1
         *Z       ---       ---  1.87e+66
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  4.44089e-16 -8.84306e-41 -2.66154e-41 -6.04862e-43 -2.61076e-42  -8.9267e-44 -2.36867e-44 -7.14377e-48  8.71686e-59

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 27.1283, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 370 K
            Well    Collision, 1/sec
              W1           1.221e+10
      global relaxation matrix dimension = 1195
      setting global matrices ... done, cpu time[sec] = 0.02992, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 21.4846, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            982.069      240.801      72.2113      83.0966      10.0663      942.959      136.405      1.40372
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.585917, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.041151, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.627569, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.28892e-11  3.10731e-46  6.57524e-49
      low eigenvalue method done, cpu time[sec] = 0.631165, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.11e-46  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.02e-47  4.44e-16         1
         *Z       ---       ---  1.87e+66
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  4.44089e-16 -4.16147e-42  2.09803e-43 -2.91489e-43 -5.29021e-42 -1.28052e-43 -4.38494e-43 -3.66355e-48  -1.9267e-58

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 27.1449, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 370 K
            Well    Collision, 1/sec
              W1          1.4245e+10
      global relaxation matrix dimension = 1195
      setting global matrices ... done, cpu time[sec] = 0.029821, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 21.5099, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            841.774      206.401      61.8954      71.2256      8.62824       808.25      116.918      1.20319
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.585121, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.041174, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.626805, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -9.7294e-12   2.6647e-46   5.0984e-49
      low eigenvalue method done, cpu time[sec] = 0.630562, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.66e-46  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.73e-47  4.44e-16         1
         *Z       ---       ---  1.87e+66
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  4.44089e-16  5.37166e-41  8.90926e-42  1.27418e-43 -8.42636e-43 -2.45812e-45  4.72176e-43  1.99006e-47  1.65268e-60

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 27.1719, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 370 K
            Well    Collision, 1/sec
              W1           1.628e+10
      global relaxation matrix dimension = 1195
      setting global matrices ... done, cpu time[sec] = 0.03012, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 21.5539, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            736.552        180.6      54.1585      62.3224      7.54971      707.219      102.304      1.05279
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.585026, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.04113, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.626659, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.24567e-11  2.33251e-46  4.07758e-49
      low eigenvalue method done, cpu time[sec] = 0.63041, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.33e-46  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.52e-47  4.44e-16         1
         *Z       ---       ---  1.87e+66
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  4.44089e-16  2.95511e-41  1.08092e-41  2.37667e-43 -1.53521e-43  1.89245e-44 -4.16737e-44 -1.36615e-47 -2.18834e-59

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 27.2144, elapsed time[sec] = 2
   MasterEquation::set:  starts
      Temperature      = 380 K
      Energy reference = 43188 1/cm
      Energy step      = 63 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.5 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.000159
         W1 Well: collisional kernel bandwidth = 59
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.014906
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.01861
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 3.17601
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 16.171
         W1 Well: minimal relaxation eigenvalue = 0.0641203
         W1 Well: maximal relaxation eigenvalue = 1.68652
         W1 Well:       grid size = 1187
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31593 1/cm
         B1 Barrier:        grid size = 686
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -29 1/cm
         B2 Barrier:        grid size = 683
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 158 1/cm
         B3 Barrier:        grid size = 759
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4628 1/cm
         B4 Barrier:        grid size = 784
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6203 1/cm
         B5 Barrier: nonpositive number of states at -23151 1/cm => truncating
         B5 Barrier:        grid size = 1053
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23151 1/cm
         B6 Barrier:        grid size = 662
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1482 1/cm
         B7 Barrier:        grid size = 611
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4695 1/cm
         B8 Barrier:        grid size = 420
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16728 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 19.5934, elapsed time[sec] = 1
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31593 -23151 4.71e+05 5.98e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -29 2.49e+16
         B2    159 6.24e+15
         B3  -4628 1.89e+15
         B4  -6203 2.16e+15
         B5 -23151 2.63e+14
         B6   1483 2.43e+16
         B7   4696 3.58e+15
         B8  16729 3.88e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  1.25e+30  3.03e+30  4.23e+23  9.35e+20   2.1e-09  5.63e+33  1.96e+39  6.02e+59
          R  8.01e-31         1      2.42  3.39e-07  7.49e-10  1.68e-39  4.51e+03  1.57e+09  4.83e+29
         P1  3.31e-31     0.413         1   1.4e-07  3.09e-10  6.95e-40  1.86e+03  6.47e+08  1.99e+29
         P2  2.36e-24  2.95e+06  7.15e+06         1   0.00221  4.96e-33  1.33e+10  4.62e+15  1.42e+36
         P3  1.07e-21  1.34e+09  3.24e+09       453         1  2.25e-30  6.02e+12  2.09e+18  6.44e+38
         P4  4.76e+08  5.94e+38  1.44e+39  2.01e+32  4.45e+29         1  2.68e+42  9.31e+47  2.87e+68
         P5  1.78e-34  0.000222  0.000538  7.52e-11  1.66e-13  3.73e-43         1  3.48e+05  1.07e+26
         P6  5.11e-40  6.38e-10  1.55e-09  2.16e-16  4.77e-19  1.07e-48  2.87e-06         1  3.08e+20
         P7  1.66e-60  2.07e-30  5.02e-30  7.03e-37  1.55e-39  3.49e-69  9.34e-27  3.25e-21         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  3.59e+26   8.7e+26  1.22e+20  2.69e+17  6.05e-13  1.62e+30  5.63e+35  1.73e+56
          R  2.78e-27         1      2.42  3.39e-07  7.49e-10  1.68e-39  4.51e+03  1.57e+09  4.83e+29
         P1  1.15e-27     0.413         1   1.4e-07  3.09e-10  6.95e-40  1.86e+03  6.47e+08  1.99e+29
         P2  8.21e-21  2.95e+06  7.15e+06         1   0.00221  4.96e-33  1.33e+10  4.62e+15  1.42e+36
         P3  3.72e-18  1.34e+09  3.24e+09       453         1  2.25e-30  6.02e+12  2.09e+18  6.44e+38
         P4  1.65e+12  5.94e+38  1.44e+39  2.01e+32  4.45e+29         1  2.68e+42  9.31e+47  2.87e+68
         P5  6.18e-31  0.000222  0.000538  7.52e-11  1.66e-13  3.73e-43         1  3.48e+05  1.07e+26
         P6  1.78e-36  6.38e-10  1.55e-09  2.16e-16  4.77e-19  1.07e-48  2.87e-06         1  3.08e+20
         P7  5.77e-57  2.07e-30  5.02e-30  7.03e-37  1.55e-39  3.49e-69  9.34e-27  3.25e-21         1
   MasterEquation::set:  done, cpu time[sec] = 19.5994, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 380 K
            Well    Collision, 1/sec
              W1         3.99626e+08
      global relaxation matrix dimension = 1187
      setting global matrices ... done, cpu time[sec] = 0.989171, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 21.2766, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            31253.2      7817.33      2364.42      2711.92      329.974        30505      4490.13      48.6294
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.581368, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.040548, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.623953, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.91529e-09  9.23977e-44  1.57765e-45
      low eigenvalue method done, cpu time[sec] = 0.627753, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.24e-44  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.92e-45  2.22e-16         1
         *Z       ---       ---  1.61e+65
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16 -8.12887e-40 -1.08725e-39 -4.81451e-41 -6.21456e-40 -1.41352e-41  3.52577e-42 -1.25535e-45  1.05523e-58

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 27.9085, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 380 K
            Well    Collision, 1/sec
              W1         1.19888e+09
      global relaxation matrix dimension = 1187
      setting global matrices ... done, cpu time[sec] = 0.030322, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 21.1585, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            10417.7      2605.78      788.139      903.975      109.991      10168.3      1496.71      16.2098
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.581547, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.040505, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.624106, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.04296e-10  3.17681e-44  4.84174e-46
      low eigenvalue method done, cpu time[sec] = 0.62839, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.18e-44  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.04e-45  2.22e-16         1
         *Z       ---       ---  1.61e+65
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16 -2.29743e-39 -8.60327e-40 -2.42221e-41 -2.67734e-40 -7.40595e-42 -3.64811e-42  2.38767e-46 -2.65162e-58

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 26.8108, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 380 K
            Well    Collision, 1/sec
              W1         1.99813e+09
      global relaxation matrix dimension = 1187
      setting global matrices ... done, cpu time[sec] = 0.030525, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 21.1789, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            6250.63      1563.47      472.883      542.385      65.9948         6101      898.025      9.72588
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.580123, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.040482, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.622683, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.72679e-10  1.92965e-44  2.58368e-46
      low eigenvalue method done, cpu time[sec] = 0.626727, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.93e-44  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.24e-45  2.22e-16         1
         *Z       ---       ---  1.61e+65
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16 -1.17901e-39 -3.87435e-40 -1.05487e-41 -8.23944e-41  -2.6668e-42 -3.46459e-42  1.44132e-46 -5.63794e-58

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 26.823, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 380 K
            Well    Collision, 1/sec
              W1         2.79738e+09
      global relaxation matrix dimension = 1187
      setting global matrices ... done, cpu time[sec] = 0.03017, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 21.188, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            4464.74      1116.76      337.774      387.418      47.1391      4357.86      641.447      6.94706
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.580372, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.040509, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.622931, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.41562e-11  1.38809e-44  1.66085e-46
      low eigenvalue method done, cpu time[sec] = 0.626808, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.39e-44  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   8.9e-46  2.22e-16         1
         *Z       ---       ---  1.61e+65
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16   3.3975e-40  2.28926e-40  4.68987e-42  1.77989e-41  6.07215e-43 -1.84596e-42 -3.84546e-47 -8.59249e-59

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 26.8377, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 380 K
            Well    Collision, 1/sec
              W1         3.59663e+09
      global relaxation matrix dimension = 1187
      setting global matrices ... done, cpu time[sec] = 0.030471, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 21.1462, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            3472.57      868.593      262.713      301.325      36.6638      3389.44      498.903      5.40327
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.579842, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.040513, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.6224, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.52976e-12  1.08471e-44  1.17674e-46
      low eigenvalue method done, cpu time[sec] = 0.62667, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.08e-44  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.96e-46  2.22e-16         1
         *Z       ---       ---  1.61e+65
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16 -3.58017e-40 -2.23373e-40 -5.40093e-42 -4.68675e-41 -1.28563e-42  4.74766e-43  4.69649e-47  7.05122e-58

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 26.8027, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 380 K
            Well    Collision, 1/sec
              W1         3.99626e+09
      global relaxation matrix dimension = 1187
      setting global matrices ... done, cpu time[sec] = 0.030365, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 21.1609, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            3125.32      781.733      236.442      271.192      32.9974       3050.5      449.013      4.86294
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.579861, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.040489, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.622415, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.81483e-11  9.78025e-45  1.01474e-46
      low eigenvalue method done, cpu time[sec] = 0.626403, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.78e-45  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.27e-46  2.22e-16         1
         *Z       ---       ---  1.61e+65
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16  1.23022e-40 -9.23261e-41 -3.98543e-42 -1.97914e-41 -6.49504e-43  3.48994e-42  2.76872e-47   4.1368e-59

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 26.8153, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 380 K
            Well    Collision, 1/sec
              W1         5.99438e+09
      global relaxation matrix dimension = 1187
      setting global matrices ... done, cpu time[sec] = 0.030329, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 21.1803, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2083.54      521.156      157.628      180.795      21.9983      2033.67      299.342      3.24196
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.579656, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.040493, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.622206, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.62192e-11  6.56087e-45  5.62583e-47
      low eigenvalue method done, cpu time[sec] = 0.625762, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.56e-45  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.21e-46  2.22e-16         1
         *Z       ---       ---  1.61e+65
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16  6.47282e-40  1.93597e-40  5.39558e-42  5.25293e-41  1.43867e-42  5.44397e-43 -6.52111e-47  -3.1332e-57

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 26.8319, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 380 K
            Well    Collision, 1/sec
              W1         7.99251e+09
      global relaxation matrix dimension = 1187
      setting global matrices ... done, cpu time[sec] = 0.03039, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 21.2643, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1562.66      390.867      118.221      135.596      16.4987      1525.25      224.506      2.43147
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.57942, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.040465, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.62196, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.07479e-11  4.93878e-45   3.6337e-47
      low eigenvalue method done, cpu time[sec] = 0.625739, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.94e-45  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.17e-46  2.22e-16         1
         *Z       ---       ---  1.61e+65
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16  1.69256e-40 -9.15256e-42 -4.11491e-43  9.28913e-42  1.95839e-43  6.33398e-43  3.68163e-47  5.68708e-58

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 26.9182, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 380 K
            Well    Collision, 1/sec
              W1         9.99064e+09
      global relaxation matrix dimension = 1187
      setting global matrices ... done, cpu time[sec] = 0.030439, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 21.2717, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1250.13      312.693      94.5767      108.477       13.199       1220.2      179.605      1.94518
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.579159, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.040509, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.621713, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.96052e-12  3.96076e-45  2.56239e-47
      low eigenvalue method done, cpu time[sec] = 0.625531, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.96e-45  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.54e-46  2.22e-16         1
         *Z       ---       ---  1.61e+65
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16  1.47432e-40  1.11715e-41 -2.69371e-43 -1.58538e-42 -1.18152e-44  4.30704e-43 -2.74016e-47  1.76295e-58

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 26.9238, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 380 K
            Well    Collision, 1/sec
              W1         1.19888e+10
      global relaxation matrix dimension = 1187
      setting global matrices ... done, cpu time[sec] = 0.030384, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 21.2751, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1041.77      260.578      78.8139      90.3975      10.9991      1016.83      149.671      1.62098
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.57866, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.04052, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.621202, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.23966e-11  3.30649e-45  1.91383e-47
      low eigenvalue method done, cpu time[sec] = 0.625313, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.31e-45  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.12e-46  2.22e-16         1
         *Z       ---       ---  1.61e+65
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16   9.0555e-41  5.56912e-41  2.48073e-42  3.41323e-41  7.48048e-43  3.32448e-43  5.34082e-47   2.8691e-57

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 26.9275, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 380 K
            Well    Collision, 1/sec
              W1         1.39869e+10
      global relaxation matrix dimension = 1187
      setting global matrices ... done, cpu time[sec] = 0.030416, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 21.285, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            892.947      223.352      67.5548      77.4836      9.42782      871.571      128.289      1.38941
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.579097, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.040468, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.621603, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.07303e-11  2.83795e-45  1.48883e-47
      low eigenvalue method done, cpu time[sec] = 0.625542, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.84e-45  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.82e-46  2.22e-16         1
         *Z       ---       ---  1.61e+65
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16  -3.1123e-40 -1.12595e-40 -3.21086e-42 -2.35656e-41 -6.71163e-43  1.80661e-43  8.14352e-47 -4.24892e-58

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 26.9382, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 380 K
            Well    Collision, 1/sec
              W1          1.5985e+10
      global relaxation matrix dimension = 1187
      setting global matrices ... done, cpu time[sec] = 0.031402, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 21.3758, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            781.329      195.433      59.1104      67.7981      8.24934      762.625      112.253      1.21574
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.579044, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.040507, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.621602, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -7.06156e-11  2.48583e-45  1.19403e-47
      low eigenvalue method done, cpu time[sec] = 0.625468, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.49e-45  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.59e-46  2.22e-16         1
         *Z       ---       ---  1.61e+65
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16 -3.24613e-40 -6.70703e-41 -2.15954e-42 -5.61237e-42 -2.56787e-43  -2.0877e-42  -7.4994e-47  9.98424e-58

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 27.0325, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 390 K
      Energy reference = 43883 1/cm
      Energy step      = 65 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.4 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.00019
         W1 Well: collisional kernel bandwidth = 58
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.013126
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.017378
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 5.02324
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 14.983
         W1 Well: minimal relaxation eigenvalue = 0.0632832
         W1 Well: maximal relaxation eigenvalue = 1.48901
         W1 Well:       grid size = 1161
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31581 1/cm
         B1 Barrier:        grid size = 676
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -57 1/cm
         B2 Barrier:        grid size = 672
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 202 1/cm
         B3 Barrier:        grid size = 746
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4607 1/cm
         B4 Barrier:        grid size = 771
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6231 1/cm
         B5 Barrier: nonpositive number of states at -23197 1/cm => truncating
         B5 Barrier:        grid size = 1032
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23196 1/cm
         B6 Barrier:        grid size = 652
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1502 1/cm
         B7 Barrier:        grid size = 603
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4688 1/cm
         B8 Barrier:        grid size = 418
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16713 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 20.1903, elapsed time[sec] = 1
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31581 -23196 4.56e+05  6.6e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -57 2.86e+16
         B2    203 7.29e+15
         B3  -4607 2.22e+15
         B4  -6231 2.54e+15
         B5 -23196 3.11e+14
         B6   1503 2.84e+16
         B7   4689 4.25e+15
         B8  16713 4.83e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  5.32e+28  1.26e+29  2.84e+22  7.34e+19  9.71e-10  2.11e+32  5.43e+37  5.23e+57
          R  1.88e-29         1      2.37  5.34e-07  1.38e-09  1.82e-38  3.96e+03  1.02e+09  9.82e+28
         P1  7.91e-30     0.421         1  2.25e-07  5.81e-10  7.68e-39  1.67e+03   4.3e+08  4.14e+28
         P2  3.52e-23  1.87e+06  4.45e+06         1   0.00259  3.42e-32  7.42e+09  1.91e+15  1.84e+35
         P3  1.36e-20  7.25e+08  1.72e+09       387         1  1.32e-29  2.87e+12   7.4e+17  7.12e+37
         P4  1.03e+09  5.48e+37   1.3e+38  2.93e+31  7.57e+28         1  2.17e+41   5.6e+46  5.39e+66
         P5  4.74e-33  0.000252    0.0006  1.35e-10  3.48e-13  4.61e-42         1  2.58e+05  2.48e+25
         P6  1.84e-38   9.8e-10  2.33e-09  5.23e-16  1.35e-18  1.79e-47  3.88e-06         1  9.63e+19
         P7  1.91e-58  1.02e-29  2.42e-29  5.43e-36   1.4e-38  1.86e-67  4.03e-26  1.04e-20         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  1.58e+25  3.75e+25  8.44e+18  2.18e+16  2.88e-13  6.26e+28  1.61e+34  1.55e+54
          R  6.33e-26         1      2.37  5.34e-07  1.38e-09  1.82e-38  3.96e+03  1.02e+09  9.82e+28
         P1  2.66e-26     0.421         1  2.25e-07  5.81e-10  7.68e-39  1.67e+03   4.3e+08  4.14e+28
         P2  1.19e-19  1.87e+06  4.45e+06         1   0.00259  3.42e-32  7.42e+09  1.91e+15  1.84e+35
         P3  4.58e-17  7.25e+08  1.72e+09       387         1  1.32e-29  2.87e+12   7.4e+17  7.12e+37
         P4  3.47e+12  5.48e+37   1.3e+38  2.93e+31  7.57e+28         1  2.17e+41   5.6e+46  5.39e+66
         P5   1.6e-29  0.000252    0.0006  1.35e-10  3.48e-13  4.61e-42         1  2.58e+05  2.48e+25
         P6   6.2e-35   9.8e-10  2.33e-09  5.23e-16  1.35e-18  1.79e-47  3.88e-06         1  9.63e+19
         P7  6.44e-55  1.02e-29  2.42e-29  5.43e-36   1.4e-38  1.86e-67  4.03e-26  1.04e-20         1
   MasterEquation::set:  done, cpu time[sec] = 20.1968, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 390 K
            Well    Collision, 1/sec
              W1         3.92601e+08
      global relaxation matrix dimension = 1161
      setting global matrices ... done, cpu time[sec] = 0.978319, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 20.0458, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            33088.1         8440      2575.48      2944.59      359.827      32818.9      4915.31      55.9167
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.540658, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.037944, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.580606, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -8.11469e-10  1.04307e-42  3.58216e-44
      low eigenvalue method done, cpu time[sec] = 0.58469, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.04e-42 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   6.6e-44 -4.44e-16         1
         *Z       ---       ---  1.56e+64
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16 -9.85374e-39 -4.16308e-39 -8.51738e-41  1.19971e-39  1.84041e-41 -1.37512e-41 -1.80797e-44 -2.14267e-57

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 26.6168, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 390 K
            Well    Collision, 1/sec
              W1          1.1778e+09
      global relaxation matrix dimension = 1161
      setting global matrices ... done, cpu time[sec] = 0.028978, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 20.0049, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            11029.4      2813.33      858.494      981.532      119.942      10939.6      1638.44      18.6389
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.540139, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.038007, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.580148, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -6.25425e-10  3.70167e-43  1.12658e-44
      low eigenvalue method done, cpu time[sec] = 0.583788, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0   3.7e-43 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.34e-44 -4.44e-16         1
         *Z       ---       ---  1.56e+64
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16 -6.84891e-39 -2.65877e-39 -3.72712e-41  3.18481e-40  4.19774e-42  1.27715e-42 -1.51394e-46  3.37559e-57

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 25.609, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 390 K
            Well    Collision, 1/sec
              W1           1.963e+09
      global relaxation matrix dimension = 1161
      setting global matrices ... done, cpu time[sec] = 0.029155, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 20.0168, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            6617.63         1688      515.097      588.919      71.9655      6563.77      983.062      11.1833
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.539797, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.037985, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.579773, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.35428e-10  2.27665e-43  6.08353e-45
      low eigenvalue method done, cpu time[sec] = 0.583176, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.28e-43 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.44e-44 -4.44e-16         1
         *Z       ---       ---  1.56e+64
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16   3.5351e-39  -3.5749e-40 -2.14649e-41 -4.34395e-40  -8.1188e-42  1.53172e-41  1.84034e-45   9.9725e-57

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 25.6214, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 390 K
            Well    Collision, 1/sec
              W1          2.7482e+09
      global relaxation matrix dimension = 1161
      setting global matrices ... done, cpu time[sec] = 0.028973, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 20.0287, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            4726.88      1205.71      367.926      420.656      51.4039      4688.41      702.187       7.9881
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.540189, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.037952, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.580093, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.75498e-11  1.64947e-43  3.94173e-45
      low eigenvalue method done, cpu time[sec] = 0.583921, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.65e-43 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.04e-44 -4.44e-16         1
         *Z       ---       ---  1.56e+64
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  1.83869e-39  5.58821e-40   1.4385e-41  1.38988e-40  3.16482e-42 -7.86034e-42 -4.45262e-49 -3.82636e-57

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 25.628, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 390 K
            Well    Collision, 1/sec
              W1          3.5334e+09
      global relaxation matrix dimension = 1161
      setting global matrices ... done, cpu time[sec] = 0.02886, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 19.9901, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            3676.46      937.778      286.165      327.177      39.9808      3646.54      546.146      6.21297
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.540001, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.038097, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.580102, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.22593e-10  1.29514e-43  2.80938e-45
      low eigenvalue method done, cpu time[sec] = 0.583566, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.3e-43 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   8.2e-45 -4.44e-16         1
         *Z       ---       ---  1.56e+64
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16 -2.75991e-39 -8.40141e-40 -3.16816e-41 -3.22147e-40 -8.08835e-42  6.12242e-43  4.29874e-46 -1.12088e-56

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 25.5912, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 390 K
            Well    Collision, 1/sec
              W1         3.92601e+09
      global relaxation matrix dimension = 1161
      setting global matrices ... done, cpu time[sec] = 0.028886, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 19.9887, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            3308.81          844      257.548      294.459      35.9827      3281.89      491.531      5.59167
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.539491, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.038096, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.579562, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.42539e-11  1.16992e-43  2.42862e-45
      low eigenvalue method done, cpu time[sec] = 0.583064, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.17e-43 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   7.4e-45 -4.44e-16         1
         *Z       ---       ---  1.56e+64
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16   3.4837e-39   1.2453e-39  4.50582e-41  6.00309e-40   1.4723e-41 -1.45962e-43 -1.29105e-45 -1.66956e-56

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 25.587, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 390 K
            Well    Collision, 1/sec
              W1         5.88901e+09
      global relaxation matrix dimension = 1161
      setting global matrices ... done, cpu time[sec] = 0.028759, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 20.0168, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2205.88      562.667      171.699      196.306      23.9885      2187.92      327.687      3.72778
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.539761, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.038112, elapsed time[sec] = 1
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.579869, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.36095e-11  7.89814e-44  1.35925e-45
      low eigenvalue method done, cpu time[sec] = 0.583389, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0   7.9e-44 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0     5e-45 -4.44e-16         1
         *Z       ---       ---  1.56e+64
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  6.18863e-39  1.26431e-39  3.77765e-41  2.22983e-40  7.23038e-42   1.3306e-41 -2.04308e-45  7.73229e-57

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 25.616, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 390 K
            Well    Collision, 1/sec
              W1         7.85201e+09
      global relaxation matrix dimension = 1161
      setting global matrices ... done, cpu time[sec] = 0.028783, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 20.0563, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1654.41          422      128.774       147.23      17.9914      1640.94      245.766      2.79584
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.539258, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.038073, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.579264, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.20568e-11   5.9679e-44  8.83722e-46
      low eigenvalue method done, cpu time[sec] = 0.582669, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.97e-44 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.78e-45 -4.44e-16         1
         *Z       ---       ---  1.56e+64
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16   9.6508e-40  1.15725e-40  6.80441e-42  2.39774e-41  9.64829e-43  2.36071e-42 -7.67258e-46  3.79013e-57

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 25.6603, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 390 K
            Well    Collision, 1/sec
              W1         9.81501e+09
      global relaxation matrix dimension = 1161
      setting global matrices ... done, cpu time[sec] = 0.028976, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 20.0991, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1323.53        337.6      103.019      117.784      14.3931      1312.75      196.612      2.23667
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.53945, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.038129, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.579567, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.54082e-11  4.79823e-44  6.26287e-46
      low eigenvalue method done, cpu time[sec] = 0.582928, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0   4.8e-44 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.04e-45 -4.44e-16         1
         *Z       ---       ---  1.56e+64
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  -1.8092e-40   1.9509e-40 -2.03459e-42 -2.76762e-41 -4.57365e-44 -1.83985e-41 -4.41722e-46 -6.86633e-57

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 25.7014, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 390 K
            Well    Collision, 1/sec
              W1          1.1778e+10
      global relaxation matrix dimension = 1161
      setting global matrices ... done, cpu time[sec] = 0.02896, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 20.0863, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1102.94      281.333      85.8494      98.1532      11.9942      1093.96      163.844      1.86389
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.540051, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.038085, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.580148, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.62141e-12  4.01298e-44  4.69628e-46
      low eigenvalue method done, cpu time[sec] = 0.583508, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.01e-44 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.54e-45 -4.44e-16         1
         *Z       ---       ---  1.56e+64
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  1.16986e-39 -3.16187e-41  1.73662e-43 -3.69097e-41 -5.76358e-43  4.04306e-42 -5.35636e-46 -2.13079e-56

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 25.693, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 390 K
            Well    Collision, 1/sec
              W1          1.3741e+10
      global relaxation matrix dimension = 1161
      setting global matrices ... done, cpu time[sec] = 0.028905, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 20.0513, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            945.375      241.143      73.5852      84.1313      10.2808      937.682      140.437      1.59762
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.539542, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.038048, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.579549, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.87759e-12  3.44914e-44   3.6654e-46
      low eigenvalue method done, cpu time[sec] = 0.582843, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.45e-44 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.18e-45 -4.44e-16         1
         *Z       ---       ---  1.56e+64
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16 -2.74489e-39 -5.84236e-40 -2.08654e-41 -1.47902e-40 -4.13308e-42 -1.81405e-41 -5.30887e-46  4.01783e-56

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 25.6549, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 390 K
            Well    Collision, 1/sec
              W1          1.5704e+10
      global relaxation matrix dimension = 1161
      setting global matrices ... done, cpu time[sec] = 0.028947, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 20.0675, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            827.203          211      64.3871      73.6149      8.99569      820.471      122.883      1.39792
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.540202, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.038058, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.580239, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.93557e-11  3.02453e-44  2.94777e-46
      low eigenvalue method done, cpu time[sec] = 0.584064, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.02e-44 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.91e-45 -4.44e-16         1
         *Z       ---       ---  1.56e+64
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  9.51977e-40  3.92679e-40  4.35661e-42 -3.42372e-41  6.55688e-45 -4.53267e-42  9.39854e-46  8.20094e-57

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 25.6689, elapsed time[sec] = 2
   MasterEquation::set:  starts
      Temperature      = 400 K
      Energy reference = 44578 1/cm
      Energy step      = 67 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.3 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.000192
         W1 Well: collisional kernel bandwidth = 58
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.012707
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.016642
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 1.01559
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 13.9738
         W1 Well: minimal relaxation eigenvalue = 0.0625072
         W1 Well: maximal relaxation eigenvalue = 1.87949
         W1 Well:       grid size = 1137
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31601 1/cm
         B1 Barrier:        grid size = 666
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -43 1/cm
         B2 Barrier:        grid size = 663
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 156 1/cm
         B3 Barrier: nonpositive number of states at -4600 1/cm => truncating
         B3 Barrier:        grid size = 734
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4599 1/cm
         B4 Barrier:        grid size = 758
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6207 1/cm
         B5 Barrier: nonpositive number of states at -23159 1/cm => truncating
         B5 Barrier:        grid size = 1011
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23158 1/cm
         B6 Barrier:        grid size = 643
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1497 1/cm
         B7 Barrier:        grid size = 595
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4712 1/cm
         B8 Barrier:        grid size = 415
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16772 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 15.1715, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31601 -23158 4.68e+05 7.27e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -43 3.27e+16
         B2    157  8.5e+15
         B3  -4599 2.62e+15
         B4  -6207 2.98e+15
         B5 -23158 3.66e+14
         B6   1498  3.3e+16
         B7   4713 5.02e+15
         B8  16773 5.99e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  2.65e+27  6.16e+27  2.17e+21  6.53e+18  4.64e-10  9.26e+30   1.8e+36  5.74e+55
          R  3.78e-28         1      2.33  8.21e-07  2.47e-09  1.75e-37   3.5e+03  6.79e+08  2.17e+28
         P1  1.62e-28     0.429         1  3.52e-07  1.06e-09  7.53e-38   1.5e+03  2.91e+08   9.3e+27
         P2   4.6e-22  1.22e+06  2.84e+06         1   0.00301  2.14e-31  4.27e+09  8.27e+14  2.64e+34
         P3  1.53e-19  4.05e+08  9.44e+08       333         1  7.11e-29  1.42e+12  2.75e+17  8.78e+36
         P4  2.15e+09   5.7e+36  1.33e+37  4.68e+30  1.41e+28         1     2e+40  3.87e+45  1.24e+65
         P5  1.08e-31  0.000286  0.000665  2.34e-10  7.05e-13  5.01e-41         1  1.94e+05  6.19e+24
         P6  5.57e-37  1.47e-09  3.43e-09  1.21e-15  3.64e-18  2.58e-46  5.16e-06         1  3.19e+19
         P7  1.74e-56  4.61e-29  1.07e-28  3.79e-35  1.14e-37  8.09e-66  1.62e-25  3.13e-20         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  8.13e+23  1.89e+24  6.67e+17  2.01e+15  1.43e-13  2.85e+27  5.52e+32  1.76e+52
          R  1.23e-24         1      2.33  8.21e-07  2.47e-09  1.75e-37   3.5e+03  6.79e+08  2.17e+28
         P1  5.28e-25     0.429         1  3.52e-07  1.06e-09  7.53e-38   1.5e+03  2.91e+08   9.3e+27
         P2   1.5e-18  1.22e+06  2.84e+06         1   0.00301  2.14e-31  4.27e+09  8.27e+14  2.64e+34
         P3  4.99e-16  4.05e+08  9.44e+08       333         1  7.11e-29  1.42e+12  2.75e+17  8.78e+36
         P4  7.01e+12   5.7e+36  1.33e+37  4.68e+30  1.41e+28         1     2e+40  3.87e+45  1.24e+65
         P5  3.51e-28  0.000286  0.000665  2.34e-10  7.05e-13  5.01e-41         1  1.94e+05  6.19e+24
         P6  1.81e-33  1.47e-09  3.43e-09  1.21e-15  3.64e-18  2.58e-46  5.16e-06         1  3.19e+19
         P7  5.68e-53  4.61e-29  1.07e-28  3.79e-35  1.14e-37  8.09e-66  1.62e-25  3.13e-20         1
   MasterEquation::set:  done, cpu time[sec] = 15.1777, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 400 K
            Well    Collision, 1/sec
              W1         3.85898e+08
      global relaxation matrix dimension = 1137
      setting global matrices ... done, cpu time[sec] = 0.979408, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 19.0934, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            34965.3       9092.3      2800.04       3191.4      391.625      35230.3      5368.72      64.0322
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.512413, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.035966, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.550263, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.45214e-09  1.28069e-41  6.96639e-43
      low eigenvalue method done, cpu time[sec] = 0.553817, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.28e-41  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.01e-43  2.22e-16         1
         *Z       ---       ---   1.7e+63
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16 -2.83519e-38 -1.79758e-38  -1.3771e-39 -1.46638e-38 -3.63048e-40  2.99207e-41 -3.57311e-44   1.2677e-56

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 25.6348, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 400 K
            Well    Collision, 1/sec
              W1         1.15769e+09
      global relaxation matrix dimension = 1137
      setting global matrices ... done, cpu time[sec] = 0.029228, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 19.0524, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            11655.1      3030.77      933.348       1063.8      130.542      11743.4      1789.57      21.3441
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.511347, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.035957, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.549217, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.49945e-10  4.71509e-42  2.24328e-43
      low eigenvalue method done, cpu time[sec] = 0.551987, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.72e-42  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.95e-43  2.22e-16         1
         *Z       ---       ---   1.7e+63
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16  1.61344e-38  2.42472e-39 -3.74669e-41 -1.47032e-39 -1.74419e-41  9.00482e-41  1.05222e-44 -1.92925e-56

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 24.6181, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 400 K
            Well    Collision, 1/sec
              W1         1.92949e+09
      global relaxation matrix dimension = 1137
      setting global matrices ... done, cpu time[sec] = 0.029061, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 19.0591, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            6993.05      1818.46      560.009       638.28      78.3249      7046.05      1073.74      12.8064
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.511323, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.035941, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.549191, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.30272e-10  2.94141e-42  1.22543e-43
      low eigenvalue method done, cpu time[sec] = 0.552458, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.94e-42  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.84e-43  2.22e-16         1
         *Z       ---       ---   1.7e+63
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16  8.48334e-39  3.36072e-39  1.39256e-40  1.37819e-39  3.48988e-41  5.28884e-41 -1.00632e-44 -1.82854e-56

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 24.6285, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 400 K
            Well    Collision, 1/sec
              W1         2.70128e+09
      global relaxation matrix dimension = 1137
      setting global matrices ... done, cpu time[sec] = 0.028983, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 19.0722, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            4995.04       1298.9      400.006      455.914      55.9464      5032.89      766.959      9.14745
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.511167, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.036224, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.549319, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.67155e-10  2.14848e-42  8.00156e-44
      low eigenvalue method done, cpu time[sec] = 0.552562, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.15e-42  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.34e-43  2.22e-16         1
         *Z       ---       ---   1.7e+63
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16 -4.52537e-38 -1.21601e-38 -3.72829e-40 -3.07352e-39 -8.75493e-41 -7.19607e-41  3.06038e-45 -4.62514e-56

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 24.623, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 400 K
            Well    Collision, 1/sec
              W1         3.47308e+09
      global relaxation matrix dimension = 1137
      setting global matrices ... done, cpu time[sec] = 0.028949, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 19.0813, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            3885.03      1010.26      311.116        354.6      43.5138      3914.47      596.524      7.11468
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.510791, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.036048, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.54876, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.15142e-10  1.69611e-42  5.73609e-44
      low eigenvalue method done, cpu time[sec] = 0.551824, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.7e-42  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.06e-43  2.22e-16         1
         *Z       ---       ---   1.7e+63
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16 -1.36766e-39  3.23924e-39  9.14491e-41  1.48391e-39  3.22575e-41 -6.10656e-41  1.00401e-44  6.25696e-56

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 24.6519, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 400 K
            Well    Collision, 1/sec
              W1         3.85898e+09
      global relaxation matrix dimension = 1137
      setting global matrices ... done, cpu time[sec] = 0.02884, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 19.1115, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            3496.53       909.23      280.004       319.14      39.1625      3523.03      536.872      6.40322
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.510536, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.036067, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.548496, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.19929e-11  1.53535e-42  4.97073e-44
      low eigenvalue method done, cpu time[sec] = 0.551632, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.54e-42  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   9.6e-44  2.22e-16         1
         *Z       ---       ---   1.7e+63
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16   1.5913e-38  7.19804e-39  1.81336e-40  1.46756e-39  4.05477e-41 -2.21448e-42 -2.28833e-45 -2.36954e-55

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 24.6775, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 400 K
            Well    Collision, 1/sec
              W1         5.78846e+09
      global relaxation matrix dimension = 1137
      setting global matrices ... done, cpu time[sec] = 0.028887, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 19.081, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2331.02      606.154       186.67       212.76      26.1083      2348.68      357.914      4.26881
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.51109, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.036074, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.54908, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.12518e-11    1.044e-42    2.808e-44
      low eigenvalue method done, cpu time[sec] = 0.552323, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.04e-42  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.53e-44  2.22e-16         1
         *Z       ---       ---   1.7e+63
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16  1.40474e-38  5.61629e-39  1.30498e-40  7.24975e-40  2.28883e-41  2.64856e-41  2.81622e-45 -1.30719e-55

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 24.6487, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 400 K
            Well    Collision, 1/sec
              W1         7.71795e+09
      global relaxation matrix dimension = 1137
      setting global matrices ... done, cpu time[sec] = 0.028861, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 19.1216, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1748.26      454.615      140.002       159.57      19.5812      1761.51      268.436      3.20161
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.511282, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.036067, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.549259, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -9.87597e-11  7.92246e-43  1.83752e-44
      low eigenvalue method done, cpu time[sec] = 0.552312, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.92e-43  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.95e-44  2.22e-16         1
         *Z       ---       ---   1.7e+63
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16  8.22272e-40  1.30277e-39  4.81579e-41   7.0919e-40   1.4336e-41 -9.35344e-42 -2.69758e-45   9.6445e-56

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 24.6897, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 400 K
            Well    Collision, 1/sec
              W1         9.64744e+09
      global relaxation matrix dimension = 1137
      setting global matrices ... done, cpu time[sec] = 0.028845, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 19.1655, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1398.61      363.692      112.002      127.656       15.665      1409.21      214.749      2.56129
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.510823, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.035945, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.548657, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.07426e-10  6.38815e-43  1.30868e-44
      low eigenvalue method done, cpu time[sec] = 0.551897, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.39e-43  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.99e-44  2.22e-16         1
         *Z       ---       ---   1.7e+63
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16 -8.19055e-40  2.10353e-40 -2.46434e-42 -6.53269e-41 -8.23839e-43  -1.3893e-41 -4.41315e-45   6.1816e-56

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 24.7342, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 400 K
            Well    Collision, 1/sec
              W1         1.15769e+10
      global relaxation matrix dimension = 1137
      setting global matrices ... done, cpu time[sec] = 0.028794, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 19.1565, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1165.51      303.077      93.3348       106.38      13.0542      1174.34      178.957      2.13441
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.510806, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.036116, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.548825, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.24758e-11  5.35394e-43   9.8521e-45
      low eigenvalue method done, cpu time[sec] = 0.551534, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.35e-43  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.35e-44  2.22e-16         1
         *Z       ---       ---   1.7e+63
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16 -1.87768e-40  6.92502e-40  1.64184e-42 -2.31566e-40  -5.2912e-42 -1.51751e-41  2.28901e-46 -1.17052e-55

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 24.7242, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 400 K
            Well    Collision, 1/sec
              W1         1.35064e+10
      global relaxation matrix dimension = 1137
      setting global matrices ... done, cpu time[sec] = 0.028795, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 19.1439, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            999.008       259.78      80.0013      91.1828      11.1893      1006.58      153.392      1.82949
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.510759, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.036038, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.548701, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.33734e-11  4.60907e-43  7.71462e-45
      low eigenvalue method done, cpu time[sec] = 0.551861, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.61e-43  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.88e-44  2.22e-16         1
         *Z       ---       ---   1.7e+63
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16 -4.87379e-39 -1.75456e-39 -5.03799e-41 -2.69498e-40 -8.97478e-42  3.75551e-42 -3.32368e-45  2.34185e-55

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 24.7089, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 400 K
            Well    Collision, 1/sec
              W1         1.54359e+10
      global relaxation matrix dimension = 1137
      setting global matrices ... done, cpu time[sec] = 0.028694, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 19.1534, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            874.132      227.308      70.0011       79.785      9.79061      880.757      134.218       1.6008
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.510784, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.03606, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.548733, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.87593e-12  4.04678e-43  6.22144e-45
      low eigenvalue method done, cpu time[sec] = 0.551349, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.05e-43  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.53e-44  2.22e-16         1
         *Z       ---       ---   1.7e+63
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16  -1.1032e-39 -5.10429e-40 -9.87883e-42 -4.16475e-41 -1.09802e-42  1.60947e-41  7.02997e-45  4.63064e-56

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 24.7115, elapsed time[sec] = 2
   MasterEquation::set:  starts
      Temperature      = 410 K
      Energy reference = 45273 1/cm
      Energy step      = 68 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.3 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.00016
         W1 Well: collisional kernel bandwidth = 58
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.012632
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.016554
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 1.01111
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 13.9843
         W1 Well: minimal relaxation eigenvalue = 0.0617128
         W1 Well: maximal relaxation eigenvalue = 1.4123
         W1 Well:       grid size = 1130
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31567 1/cm
         B1 Barrier:        grid size = 666
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -14 1/cm
         B2 Barrier:        grid size = 663
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 188 1/cm
         B3 Barrier:        grid size = 734
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4638 1/cm
         B4 Barrier:        grid size = 757
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6202 1/cm
         B5 Barrier: nonpositive number of states at -23135 1/cm => truncating
         B5 Barrier:        grid size = 1006
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23134 1/cm
         B6 Barrier:        grid size = 644
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1480 1/cm
         B7 Barrier:        grid size = 597
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4676 1/cm
         B8 Barrier:        grid size = 420
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16712 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 15.1751, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31567 -23134 4.77e+05    8e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -14 3.73e+16
         B2    189  9.9e+15
         B3  -4638 3.08e+15
         B4  -6202  3.5e+15
         B5 -23134 4.31e+14
         B6   1481 3.82e+16
         B7   4677 5.92e+15
         B8  16713 7.39e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  1.56e+26  3.56e+26  1.92e+20  6.67e+17  2.35e-10  4.84e+29  7.17e+34  8.02e+53
          R  6.43e-27         1      2.29  1.24e-06  4.29e-09  1.51e-36  3.11e+03  4.61e+08  5.15e+27
         P1  2.81e-27     0.437         1   5.4e-07  1.87e-09  6.61e-37  1.36e+03  2.01e+08  2.25e+27
         P2   5.2e-21  8.09e+05  1.85e+06         1   0.00347  1.22e-30  2.52e+09  3.73e+14  4.17e+33
         P3   1.5e-18  2.33e+08  5.34e+08       288         1  3.52e-28  7.26e+11  1.07e+17   1.2e+36
         P4  4.25e+09  6.62e+35  1.51e+36  8.18e+29  2.84e+27         1  2.06e+39  3.05e+44  3.41e+63
         P5  2.06e-30  0.000321  0.000735  3.97e-10  1.38e-12  4.86e-40         1  1.48e+05  1.65e+24
         P6   1.4e-35  2.17e-09  4.97e-09  2.68e-15  9.31e-18  3.28e-45  6.76e-06         1  1.12e+19
         P7  1.25e-54  1.94e-28  4.44e-28   2.4e-34  8.32e-37  2.93e-64  6.04e-25  8.94e-20         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  4.82e+22   1.1e+23  5.96e+16  2.07e+14  7.29e-14   1.5e+26  2.22e+31  2.49e+50
          R  2.07e-23         1      2.29  1.24e-06  4.29e-09  1.51e-36  3.11e+03  4.61e+08  5.15e+27
         P1  9.06e-24     0.437         1   5.4e-07  1.87e-09  6.61e-37  1.36e+03  2.01e+08  2.25e+27
         P2  1.68e-17  8.09e+05  1.85e+06         1   0.00347  1.22e-30  2.52e+09  3.73e+14  4.17e+33
         P3  4.83e-15  2.33e+08  5.34e+08       288         1  3.52e-28  7.26e+11  1.07e+17   1.2e+36
         P4  1.37e+13  6.62e+35  1.51e+36  8.18e+29  2.84e+27         1  2.06e+39  3.05e+44  3.41e+63
         P5  6.66e-27  0.000321  0.000735  3.97e-10  1.38e-12  4.86e-40         1  1.48e+05  1.65e+24
         P6   4.5e-32  2.17e-09  4.97e-09  2.68e-15  9.31e-18  3.28e-45  6.76e-06         1  1.12e+19
         P7  4.02e-51  1.94e-28  4.44e-28   2.4e-34  8.32e-37  2.93e-64  6.04e-25  8.94e-20         1
   MasterEquation::set:  done, cpu time[sec] = 15.1816, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 410 K
            Well    Collision, 1/sec
              W1         3.79493e+08
      global relaxation matrix dimension = 1130
      setting global matrices ... done, cpu time[sec] = 0.953499, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 18.7624, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            36882.8      9774.48      3038.61      3452.83      425.441        37739      5850.48      73.0428
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.499911, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.035408, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.537252, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.64774e-10  1.59366e-40  1.16155e-41
      low eigenvalue method done, cpu time[sec] = 0.540434, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.59e-40  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.83e-42  2.22e-16         1
         *Z       ---       ---  2.09e+62
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16 -2.50343e-37  -1.3823e-37 -3.99548e-39  -4.9777e-38  -1.1557e-39  5.48485e-42 -8.19051e-43 -3.63458e-55

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 25.2623, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 410 K
            Well    Collision, 1/sec
              W1         1.13848e+09
      global relaxation matrix dimension = 1130
      setting global matrices ... done, cpu time[sec] = 0.028285, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 18.7477, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            12294.3      3258.16      1012.87      1150.94      141.814      12579.7      1950.16      24.3476
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.499792, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.03534, elapsed time[sec] = 1
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.537026, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.56272e-12  6.07146e-41  3.82585e-42
      low eigenvalue method done, cpu time[sec] = 0.540089, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.07e-41  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.75e-42  2.22e-16         1
         *Z       ---       ---  2.09e+62
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16  5.66734e-38  3.76526e-38  1.27591e-39  6.31101e-39  1.66023e-40  8.99639e-41  5.33819e-44  3.20093e-55

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 24.3012, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 410 K
            Well    Collision, 1/sec
              W1         1.89747e+09
      global relaxation matrix dimension = 1130
      setting global matrices ... done, cpu time[sec] = 0.028155, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 18.7413, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            7376.56       1954.9      607.722      690.566      85.0881       7547.8       1170.1      14.6086
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.499248, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.035352, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.536507, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.71229e-10  3.83728e-41  2.11335e-42
      low eigenvalue method done, cpu time[sec] = 0.539425, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.84e-41  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.37e-42  2.22e-16         1
         *Z       ---       ---  2.09e+62
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16  6.32715e-38  1.88911e-38  6.02675e-40  3.36028e-39  1.21826e-40 -8.19034e-41  2.52975e-44  -4.0673e-56

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 24.2965, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 410 K
            Well    Collision, 1/sec
              W1         2.65645e+09
      global relaxation matrix dimension = 1130
      setting global matrices ... done, cpu time[sec] = 0.028166, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 18.7502, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            5268.97      1396.35      434.087      493.262      60.7772      5391.28      835.782      10.4347
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.49881, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.035343, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.536069, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.10444e-11  2.82381e-41   1.3903e-42
      low eigenvalue method done, cpu time[sec] = 0.539189, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.82e-41  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.74e-42  2.22e-16         1
         *Z       ---       ---  2.09e+62
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16 -3.31968e-38 -3.03457e-39 -4.48923e-40 -5.85461e-39 -1.54082e-40 -3.22763e-40 -3.42394e-44   2.4372e-55

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 24.2984, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 410 K
            Well    Collision, 1/sec
              W1         3.41544e+09
      global relaxation matrix dimension = 1130
      setting global matrices ... done, cpu time[sec] = 0.027984, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 18.7691, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            4098.09      1086.05      337.623      383.648      47.2712      4193.22      650.053      8.11587
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.499257, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.035354, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.536499, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.05103e-10  2.24034e-41   1.0023e-42
      low eigenvalue method done, cpu time[sec] = 0.53965, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.24e-41  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.38e-42  2.22e-16         1
         *Z       ---       ---  2.09e+62
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16  5.95298e-38  2.96744e-38  9.40392e-40  7.62128e-39  2.11229e-40  1.50999e-40 -4.65834e-45  2.10352e-55

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 24.3184, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 410 K
            Well    Collision, 1/sec
              W1         3.79493e+09
      global relaxation matrix dimension = 1130
      setting global matrices ... done, cpu time[sec] = 0.028027, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 18.7583, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            3688.28      977.448      303.861      345.283      42.5441       3773.9      585.048      7.30428
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.499142, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.035304, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.536383, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.11756e-10  2.03193e-41  8.70626e-43
      low eigenvalue method done, cpu time[sec] = 0.539522, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.03e-41  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.25e-42  2.22e-16         1
         *Z       ---       ---  2.09e+62
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16  9.11205e-39 -2.09819e-39 -2.53786e-40 -4.53899e-39 -1.06107e-40   6.3094e-41 -1.54765e-44   1.4639e-54

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 24.3114, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 410 K
            Well    Collision, 1/sec
              W1          5.6924e+09
      global relaxation matrix dimension = 1130
      setting global matrices ... done, cpu time[sec] = 0.027894, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 18.6346, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2458.85      651.632      202.574      230.189      28.3627      2515.93      390.032      4.86952
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.499481, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.035344, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.536723, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -7.89898e-11  1.39087e-41  4.96315e-43
      low eigenvalue method done, cpu time[sec] = 0.539667, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.39e-41  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.58e-43  2.22e-16         1
         *Z       ---       ---  2.09e+62
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16 -6.56644e-39 -1.75255e-39  1.16356e-40  2.67855e-39   5.4556e-41 -6.62413e-42 -4.58553e-45  1.34858e-54

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 24.1921, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 410 K
            Well    Collision, 1/sec
              W1         7.58986e+09
      global relaxation matrix dimension = 1130
      setting global matrices ... done, cpu time[sec] = 0.027906, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 18.8263, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1844.14      488.724      151.931      172.642       21.272      1886.95      292.524      3.65214
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.499087, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.035312, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.536282, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.14115e-11  1.05968e-41  3.26859e-43
      low eigenvalue method done, cpu time[sec] = 0.539405, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.06e-41  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.54e-43  2.22e-16         1
         *Z       ---       ---  2.09e+62
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16 -5.95066e-38 -1.74483e-38 -5.43249e-40 -5.98283e-39 -1.51885e-40 -1.43853e-40  8.51533e-45  5.95304e-55

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 24.3831, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 410 K
            Well    Collision, 1/sec
              W1         9.48733e+09
      global relaxation matrix dimension = 1130
      setting global matrices ... done, cpu time[sec] = 0.027833, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 18.8192, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1475.31      390.979      121.544      138.113      17.0176      1509.56      234.019      2.92171
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.499039, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.035461, elapsed time[sec] = 1
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.536391, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.60309e-11   8.5676e-42  2.33924e-43
      low eigenvalue method done, cpu time[sec] = 0.539528, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.57e-42  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.29e-43  2.22e-16         1
         *Z       ---       ---  2.09e+62
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16  4.12944e-38  5.78486e-39  2.03854e-40  1.54568e-39  5.10417e-41  2.35611e-40  3.96514e-44 -1.21279e-54

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 24.3769, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 410 K
            Well    Collision, 1/sec
              W1         1.13848e+10
      global relaxation matrix dimension = 1130
      setting global matrices ... done, cpu time[sec] = 0.027756, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 18.824, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1229.43      325.816      101.287      115.094      14.1814      1257.97      195.016      2.43476
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.498751, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.035345, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.53599, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.60018e-12  7.19467e-42  1.76793e-43
      low eigenvalue method done, cpu time[sec] = 0.538989, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.19e-42  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.44e-43  2.22e-16         1
         *Z       ---       ---  2.09e+62
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16  2.48705e-38  6.83276e-39  1.33527e-40 -1.61775e-40  5.36484e-42  1.15898e-41  -8.6703e-45 -3.34926e-55

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 24.3786, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 410 K
            Well    Collision, 1/sec
              W1         1.32823e+10
      global relaxation matrix dimension = 1130
      setting global matrices ... done, cpu time[sec] = 0.028011, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 18.8305, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1053.79      279.271      86.8175      98.6523      12.1554      1078.26      167.156      2.08694
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.498705, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.035341, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.535922, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.66981e-11  6.20304e-42  1.38886e-43
      low eigenvalue method done, cpu time[sec] = 0.538836, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   6.2e-42  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.83e-43  2.22e-16         1
         *Z       ---       ---  2.09e+62
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16  1.56706e-38  4.97472e-39  1.18757e-40  8.41784e-40  2.60802e-41 -1.52369e-40 -4.23363e-44 -8.67985e-55

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 24.3823, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 410 K
            Well    Collision, 1/sec
              W1         1.51797e+10
      global relaxation matrix dimension = 1130
      setting global matrices ... done, cpu time[sec] = 0.027796, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 18.8371, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             922.07      244.362      75.9653      86.3208       10.636      943.475      146.262      1.82607
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.498878, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.035351, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.536118, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.05156e-11  5.45282e-42  1.12314e-43
      low eigenvalue method done, cpu time[sec] = 0.539169, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.45e-42  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.37e-43  2.22e-16         1
         *Z       ---       ---  2.09e+62
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16 -1.25584e-38  2.80792e-39  6.49419e-41  1.29767e-39    2.643e-41 -2.13335e-40  2.38843e-44  4.07841e-55

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 24.3875, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 420 K
      Energy reference = 45968 1/cm
      Energy step      = 70 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.2 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.000183
         W1 Well: collisional kernel bandwidth = 58
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.012307
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.015801
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.901881
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 13.0703
         W1 Well: minimal relaxation eigenvalue = 0.060959
         W1 Well: maximal relaxation eigenvalue = 1.59514
         W1 Well:       grid size = 1108
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31591 1/cm
         B1 Barrier:        grid size = 657
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -21 1/cm
         B2 Barrier:        grid size = 654
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 188 1/cm
         B3 Barrier:        grid size = 723
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4641 1/cm
         B4 Barrier:        grid size = 745
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6181 1/cm
         B5 Barrier: nonpositive number of states at -23612 1/cm => truncating
         B5 Barrier:        grid size = 994
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23611 1/cm
         B6 Barrier:        grid size = 636
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1448 1/cm
         B7 Barrier:        grid size = 590
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4668 1/cm
         B8 Barrier:        grid size = 418
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16708 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 14.1469, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31591 -23611 3.37e+05  8.8e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -21 4.25e+16
         B2    189 1.15e+16
         B3  -4641 3.61e+15
         B4  -6181 4.09e+15
         B5 -23611 5.05e+14
         B6   1449 4.42e+16
         B7   4669 6.97e+15
         B8  16709 9.09e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  1.03e+25  2.32e+25  1.88e+19  7.47e+16  1.21e-10  2.86e+28  3.28e+33  1.35e+52
          R  9.72e-26         1      2.25  1.83e-06  7.26e-09  1.18e-35  2.78e+03  3.18e+08  1.31e+27
         P1  4.32e-26     0.444         1  8.12e-07  3.23e-09  5.22e-36  1.24e+03  1.41e+08  5.83e+26
         P2  5.32e-20  5.47e+05  1.23e+06         1   0.00398  6.44e-30  1.52e+09  1.74e+14  7.19e+32
         P3  1.34e-17  1.38e+08   3.1e+08       252         1  1.62e-27  3.83e+11  4.38e+16  1.81e+35
         P4  8.27e+09   8.5e+34  1.91e+35  1.55e+29  6.18e+26         1  2.37e+38  2.71e+43  1.12e+62
         P5  3.49e-29  0.000359  0.000809  6.56e-10  2.61e-12  4.22e-39         1  1.14e+05  4.72e+23
         P6  3.05e-34  3.14e-09  7.07e-09  5.74e-15  2.28e-17  3.69e-44  8.74e-06         1  4.12e+18
         P7  7.41e-53  7.62e-28  1.71e-27  1.39e-33  5.53e-36  8.96e-63  2.12e-24  2.43e-19         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  3.27e+21  7.37e+21  5.98e+15  2.38e+13  3.85e-14  9.11e+24  1.04e+30   4.3e+48
          R  3.06e-22         1      2.25  1.83e-06  7.26e-09  1.18e-35  2.78e+03  3.18e+08  1.31e+27
         P1  1.36e-22     0.444         1  8.12e-07  3.23e-09  5.22e-36  1.24e+03  1.41e+08  5.83e+26
         P2  1.67e-16  5.47e+05  1.23e+06         1   0.00398  6.44e-30  1.52e+09  1.74e+14  7.19e+32
         P3  4.21e-14  1.38e+08   3.1e+08       252         1  1.62e-27  3.83e+11  4.38e+16  1.81e+35
         P4   2.6e+13   8.5e+34  1.91e+35  1.55e+29  6.18e+26         1  2.37e+38  2.71e+43  1.12e+62
         P5   1.1e-25  0.000359  0.000809  6.56e-10  2.61e-12  4.22e-39         1  1.14e+05  4.72e+23
         P6   9.6e-31  3.14e-09  7.07e-09  5.74e-15  2.28e-17  3.69e-44  8.74e-06         1  4.12e+18
         P7  2.33e-49  7.62e-28  1.71e-27  1.39e-33  5.53e-36  8.96e-63  2.12e-24  2.43e-19         1
   MasterEquation::set:  done, cpu time[sec] = 14.1538, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 420 K
            Well    Collision, 1/sec
              W1         3.73366e+08
      global relaxation matrix dimension = 1108
      setting global matrices ... done, cpu time[sec] = 0.915949, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 17.9286, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
              38839      10486.7       3291.7      3729.39      461.352      40344.7       6359.6      83.0103
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.487244, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.033511, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.522621, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.14317e-10  1.91629e-39   1.6961e-40
      low eigenvalue method done, cpu time[sec] = 0.524097, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.92e-39  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.17e-40  2.22e-16         1
         *Z       ---       ---  2.82e+61
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16  6.31247e-37  3.40125e-37  6.61128e-39  1.15486e-37  2.46442e-39  3.16963e-40  2.62659e-43 -4.53675e-55

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 24.3678, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 420 K
            Well    Collision, 1/sec
              W1          1.1201e+09
      global relaxation matrix dimension = 1108
      setting global matrices ... done, cpu time[sec] = 0.026652, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 17.8954, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            12946.3      3495.57      1097.23      1243.13      153.784      13448.2      2119.87      27.6701
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.48608, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.033537, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.521505, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   1.8627e-10  7.51807e-40  5.71018e-41
      low eigenvalue method done, cpu time[sec] = 0.522925, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.52e-40  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.58e-41  2.22e-16         1
         *Z       ---       ---  2.82e+61
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16  5.13953e-38  3.52278e-38   4.5584e-39  7.28948e-38  1.50009e-39 -1.02288e-39  7.93516e-43 -6.19857e-55

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 23.4272, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 420 K
            Well    Collision, 1/sec
              W1         1.86683e+09
      global relaxation matrix dimension = 1108
      setting global matrices ... done, cpu time[sec] = 0.026646, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 17.8737, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             7767.8      2097.34      658.339      745.877      92.2704      8068.93      1271.92      16.6021
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.486044, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.033519, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.521456, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.37111e-10  4.80496e-40  3.18864e-41
      low eigenvalue method done, cpu time[sec] = 0.522837, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   4.8e-40  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.93e-41  2.22e-16         1
         *Z       ---       ---  2.82e+61
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16 -1.49473e-37  4.73413e-38   1.7672e-39  3.16583e-38  6.63148e-40 -3.12632e-39  3.91547e-43 -2.02599e-54

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 23.4028, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 420 K
            Well    Collision, 1/sec
              W1         2.61356e+09
      global relaxation matrix dimension = 1108
      setting global matrices ... done, cpu time[sec] = 0.026493, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 17.917, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            5548.43       1498.1      470.242      532.769      65.9074      5763.52      908.515      11.8586
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.485941, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.033521, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.521306, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.97301e-10  3.55864e-40  2.11312e-41
      low eigenvalue method done, cpu time[sec] = 0.522719, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.56e-40  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.17e-41  2.22e-16         1
         *Z       ---       ---  2.82e+61
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16  2.68209e-37  6.92632e-38  1.96171e-39  1.49508e-38  4.17593e-40  1.49351e-39  6.38906e-44 -1.70329e-55

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 23.4435, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 420 K
            Well    Collision, 1/sec
              W1         3.36029e+09
      global relaxation matrix dimension = 1108
      setting global matrices ... done, cpu time[sec] = 0.026561, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 17.9154, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            4315.44      1165.19      365.744      414.376      51.2613      4482.74      706.622      9.22336
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.485528, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.033488, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.520843, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.83601e-10  2.83549e-40  1.53184e-41
      low eigenvalue method done, cpu time[sec] = 0.52223, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.84e-40  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.73e-41  2.22e-16         1
         *Z       ---       ---  2.82e+61
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16  2.79053e-38  7.01557e-38  1.74072e-39  1.84748e-38  4.24129e-40 -1.42341e-39   9.1002e-44  2.07148e-54

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 23.4438, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 420 K
            Well    Collision, 1/sec
              W1         3.73366e+09
      global relaxation matrix dimension = 1108
      setting global matrices ... done, cpu time[sec] = 0.026428, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 17.9225, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             3883.9      1048.67       329.17      372.939      46.1352      4034.47       635.96      8.30103
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.485513, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.03349, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.520832, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.00099e-10  2.57602e-40  1.33369e-41
      low eigenvalue method done, cpu time[sec] = 0.522288, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.58e-40  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.57e-41  2.22e-16         1
         *Z       ---       ---  2.82e+61
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16 -7.26364e-37 -2.16543e-37 -6.01101e-39 -3.55171e-38 -1.10922e-39 -1.15328e-39    4.408e-44  -6.4444e-54

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 23.4511, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 420 K
            Well    Collision, 1/sec
              W1         5.60049e+09
      global relaxation matrix dimension = 1108
      setting global matrices ... done, cpu time[sec] = 0.026502, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 17.7484, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2589.27      699.114      219.446      248.626      30.7568      2689.64      423.973      5.53402
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.485623, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.03355, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.520995, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.34177e-10  1.77355e-40  7.67125e-42
      low eigenvalue method done, cpu time[sec] = 0.522462, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.77e-40  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.08e-41  2.22e-16         1
         *Z       ---       ---  2.82e+61
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16 -1.12476e-37 -1.31476e-39 -7.66608e-41  -1.9323e-39  -6.9871e-41 -1.38802e-39 -7.93253e-44 -1.82164e-54

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 23.2771, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 420 K
            Well    Collision, 1/sec
              W1         7.46731e+09
      global relaxation matrix dimension = 1108
      setting global matrices ... done, cpu time[sec] = 0.026524, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 17.7628, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1941.95      524.336      164.585      186.469      23.0676      2017.23       317.98      4.15051
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.485562, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.033451, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.520811, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.34902e-11  1.35597e-40    5.084e-42
      low eigenvalue method done, cpu time[sec] = 0.52221, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.36e-40  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.27e-42  2.22e-16         1
         *Z       ---       ---  2.82e+61
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16  5.81508e-38  6.43649e-39  2.94421e-40  5.07946e-39  1.16909e-40 -7.49837e-40  1.25723e-44  1.99835e-53

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 23.286, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 420 K
            Well    Collision, 1/sec
              W1         9.33414e+09
      global relaxation matrix dimension = 1108
      setting global matrices ... done, cpu time[sec] = 0.026614, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 17.7774, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1553.56      419.469      131.668      149.175      18.4541      1613.79      254.384      3.32041
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.485524, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.03353, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.520873, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.73369e-10  1.09894e-40  3.65606e-42
      low eigenvalue method done, cpu time[sec] = 0.522241, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.1e-40  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   6.7e-42  2.22e-16         1
         *Z       ---       ---  2.82e+61
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16 -9.11616e-38 -2.65597e-38 -9.54559e-40 -7.50832e-39 -1.97129e-40 -5.00508e-40 -6.86682e-44 -1.55162e-53

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 23.3015, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 420 K
            Well    Collision, 1/sec
              W1          1.1201e+10
      global relaxation matrix dimension = 1108
      setting global matrices ... done, cpu time[sec] = 0.026512, elapsed time[sec] = 1
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 18.2483, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1294.63      349.557      109.723      124.313      15.3784      1344.82      211.987      2.76701
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.485665, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.033512, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.520995, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -8.85766e-11  9.24454e-41  2.77389e-42
      low eigenvalue method done, cpu time[sec] = 0.522386, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.24e-41  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.64e-42  2.22e-16         1
         *Z       ---       ---  2.82e+61
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16  2.26762e-38 -1.10783e-38  -4.4612e-40 -5.83408e-39 -1.32666e-40  4.96471e-40 -8.54555e-44  6.48668e-54

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 23.7717, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 420 K
            Well    Collision, 1/sec
              W1         1.30678e+10
      global relaxation matrix dimension = 1108
      setting global matrices ... done, cpu time[sec] = 0.026409, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 17.7636, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1109.69       299.62      94.0484      106.554      13.1815       1152.7      181.703      2.37172
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.485471, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.033514, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.520809, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.73606e-12  7.98116e-41  2.18618e-42
      low eigenvalue method done, cpu time[sec] = 0.522188, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.98e-41  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.87e-42  2.22e-16         1
         *Z       ---       ---  2.82e+61
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16 -2.11093e-38  2.08522e-38  4.36489e-40  4.48551e-39  1.06283e-40 -8.64986e-40  8.77673e-44  8.96768e-54

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 23.2922, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 420 K
            Well    Collision, 1/sec
              W1         1.49346e+10
      global relaxation matrix dimension = 1108
      setting global matrices ... done, cpu time[sec] = 0.026322, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 17.7822, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            970.975      262.168      82.2924      93.2346      11.5338      1008.62       158.99      2.07526
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.485431, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.033529, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.520768, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.90549e-11  7.02343e-41  1.77277e-42
      low eigenvalue method done, cpu time[sec] = 0.522147, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.02e-41  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.28e-42  2.22e-16         1
         *Z       ---       ---  2.82e+61
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16 -2.05008e-38  5.23804e-40 -1.03689e-40   -2.356e-39 -6.93568e-41 -2.21438e-40 -1.27719e-43  3.61208e-54

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 23.3113, elapsed time[sec] = 2
   MasterEquation::set:  starts
      Temperature      = 430 K
      Energy reference = 46663 1/cm
      Energy step      = 72 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.1 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.000134
         W1 Well: collisional kernel bandwidth = 57
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.011866
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.015043
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.894666
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 12.3963
         W1 Well: minimal relaxation eigenvalue = 0.0602701
         W1 Well: maximal relaxation eigenvalue = 1.72324
         W1 Well:       grid size = 1087
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31600 1/cm
         B1 Barrier:        grid size = 649
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -64 1/cm
         B2 Barrier:        grid size = 646
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 151 1/cm
         B3 Barrier:        grid size = 712
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4600 1/cm
         B4 Barrier:        grid size = 734
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6184 1/cm
         B5 Barrier: nonpositive number of states at -23105 1/cm => truncating
         B5 Barrier:        grid size = 969
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23104 1/cm
         B6 Barrier:        grid size = 628
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1447 1/cm
         B7 Barrier:        grid size = 583
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4687 1/cm
         B8 Barrier:        grid size = 416
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16711 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 13.462, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31600 -23104 4.87e+05 9.67e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -64 4.84e+16
         B2    152 1.33e+16
         B3  -4600 4.22e+15
         B4  -6184 4.77e+15
         B5 -23104 5.92e+14
         B6   1448  5.1e+16
         B7   4688 8.17e+15
         B8  16712 1.11e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  7.64e+23  1.69e+24  2.02e+18  9.16e+15  6.35e-11  1.91e+27  1.71e+32  2.72e+50
          R  1.31e-24         1      2.21  2.65e-06   1.2e-08  8.32e-35   2.5e+03  2.24e+08  3.57e+26
         P1  5.91e-25     0.451         1   1.2e-06  5.42e-09  3.75e-35  1.13e+03  1.01e+08  1.61e+26
         P2  4.94e-19  3.77e+05  8.36e+05         1   0.00453  3.14e-29  9.44e+08  8.45e+13  1.35e+32
         P3  1.09e-16  8.34e+07  1.85e+08       221         1  6.93e-27  2.08e+11  1.87e+16  2.97e+34
         P4  1.57e+10   1.2e+34  2.66e+34  3.19e+28  1.44e+26         1  3.01e+37  2.69e+42  4.29e+60
         P5  5.24e-28    0.0004  0.000886  1.06e-09   4.8e-12  3.33e-38         1  8.96e+04  1.43e+23
         P6  5.85e-33  4.47e-09  9.89e-09  1.18e-14  5.36e-17  3.71e-43  1.12e-05         1  1.59e+18
         P7  3.67e-51   2.8e-27  6.21e-27  7.43e-33  3.37e-35  2.33e-61  7.01e-24  6.28e-19         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  2.51e+20  5.57e+20  6.66e+14  3.02e+12  2.09e-14  6.29e+23  5.63e+28  8.97e+46
          R  3.98e-21         1      2.21  2.65e-06   1.2e-08  8.32e-35   2.5e+03  2.24e+08  3.57e+26
         P1   1.8e-21     0.451         1   1.2e-06  5.42e-09  3.75e-35  1.13e+03  1.01e+08  1.61e+26
         P2   1.5e-15  3.77e+05  8.36e+05         1   0.00453  3.14e-29  9.44e+08  8.45e+13  1.35e+32
         P3  3.31e-13  8.34e+07  1.85e+08       221         1  6.93e-27  2.08e+11  1.87e+16  2.97e+34
         P4  4.78e+13   1.2e+34  2.66e+34  3.19e+28  1.44e+26         1  3.01e+37  2.69e+42  4.29e+60
         P5  1.59e-24    0.0004  0.000886  1.06e-09   4.8e-12  3.33e-38         1  8.96e+04  1.43e+23
         P6  1.78e-29  4.47e-09  9.89e-09  1.18e-14  5.36e-17  3.71e-43  1.12e-05         1  1.59e+18
         P7  1.12e-47   2.8e-27  6.21e-27  7.43e-33  3.37e-35  2.33e-61  7.01e-24  6.28e-19         1
   MasterEquation::set:  done, cpu time[sec] = 13.4679, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 430 K
            Well    Collision, 1/sec
              W1         3.67496e+08
      global relaxation matrix dimension = 1087
      setting global matrices ... done, cpu time[sec] = 0.886705, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 17.1868, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
              40832      11229.2      3559.81      4021.56      499.435      43046.7      6896.52      94.0063
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.447229, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.0318, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.480795, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.47281e-09   2.1669e-38  2.20385e-39
      low eigenvalue method done, cpu time[sec] = 0.482254, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.17e-38         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.31e-39         0         1
         *Z       ---       ---  4.16e+60
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0 -5.90013e-37 -1.27591e-36 -3.87253e-38 -4.19846e-37 -9.40661e-39 -9.42187e-39 -3.34606e-41  4.15426e-54

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 23.5509, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 430 K
            Well    Collision, 1/sec
              W1         1.10249e+09
      global relaxation matrix dimension = 1087
      setting global matrices ... done, cpu time[sec] = 0.025753, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 17.1503, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            13610.7      3743.06       1186.6      1340.52      166.478      14348.9      2298.84      31.3354
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.446022, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.03182, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.479592, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.14294e-10  8.71889e-39  7.57868e-40
      low eigenvalue method done, cpu time[sec] = 0.48085, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.72e-39         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.25e-40         0         1
         *Z       ---       ---  4.16e+60
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0 -3.60799e-37 -2.61264e-37 -1.38056e-38 -2.44183e-37 -5.38419e-39  7.31094e-39 -1.23476e-42  1.28565e-53

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 22.6353, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 430 K
            Well    Collision, 1/sec
              W1         1.83748e+09
      global relaxation matrix dimension = 1087
      setting global matrices ... done, cpu time[sec] = 0.025602, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 17.1611, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            8166.39      2245.84      711.963      804.312      99.8871      8609.35       1379.3      18.8013
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.446031, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.031815, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.479583, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.85918e-10  5.62662e-39  4.27696e-40
      low eigenvalue method done, cpu time[sec] = 0.481209, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.63e-39         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.39e-40         0         1
         *Z       ---       ---  4.16e+60
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0 -9.36109e-37 -3.71469e-37 -1.16485e-38 -1.47744e-37 -3.40285e-39  3.15895e-39 -3.55569e-42  1.66221e-53

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 22.7943, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 430 K
            Well    Collision, 1/sec
              W1         2.57247e+09
      global relaxation matrix dimension = 1087
      setting global matrices ... done, cpu time[sec] = 0.025359, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 17.1702, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            5833.14      1604.17      508.545      574.509      71.3479      6149.53      985.218      13.4295
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.446025, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.031783, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.479565, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   7.5064e-11  4.19055e-39  2.85467e-40
      low eigenvalue method done, cpu time[sec] = 0.480919, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.19e-39         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.53e-40         0         1
         *Z       ---       ---  4.16e+60
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0 -1.13351e-36 -2.96542e-37 -1.02854e-38  -9.8219e-38 -2.65959e-39  2.85092e-39 -4.55309e-43  7.22504e-54

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 22.6543, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 430 K
            Well    Collision, 1/sec
              W1         3.30747e+09
      global relaxation matrix dimension = 1087
      setting global matrices ... done, cpu time[sec] = 0.025604, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 17.1746, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            4536.88      1247.69      395.535       446.84      55.4928      4782.97       766.28      10.4451
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.445798, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.031731, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.479297, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.04452e-10   3.3516e-39  2.08062e-40
      low eigenvalue method done, cpu time[sec] = 0.480639, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.35e-39         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.02e-40         0         1
         *Z       ---       ---  4.16e+60
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  5.16539e-37  1.46891e-37  5.14513e-39  3.43906e-38  8.03017e-40  -3.4075e-39 -2.78664e-43  4.58091e-53

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 22.6536, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 430 K
            Well    Collision, 1/sec
              W1         3.67496e+09
      global relaxation matrix dimension = 1087
      setting global matrices ... done, cpu time[sec] = 0.025531, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 17.1687, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             4083.2      1122.92      355.981      402.156      49.9435      4304.67      689.652      9.40063
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.446393, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.031813, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.47995, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.53755e-10  3.04941e-39  1.81561e-40
      low eigenvalue method done, cpu time[sec] = 0.481487, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.05e-39         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.84e-40         0         1
         *Z       ---       ---  4.16e+60
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0 -1.09699e-36 -2.80892e-37 -9.98047e-39 -6.50034e-38 -1.79433e-39  3.07949e-40  8.28084e-43  -5.8246e-53

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 22.6515, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 430 K
            Well    Collision, 1/sec
              W1         5.51244e+09
      global relaxation matrix dimension = 1087
      setting global matrices ... done, cpu time[sec] = 0.025563, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 17.1993, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2722.13      748.612      237.321      268.104      33.2957      2869.78      459.768      6.26709
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.445912, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.031804, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.479464, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.07102e-10  2.11029e-39  1.05353e-40
      low eigenvalue method done, cpu time[sec] = 0.480932, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.11e-39         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.27e-40         0         1
         *Z       ---       ---  4.16e+60
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  9.22152e-37  1.44065e-37  1.73796e-39 -3.99814e-38 -5.41927e-40   5.8422e-39 -1.68933e-43 -1.58816e-52

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 22.6802, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 430 K
            Well    Collision, 1/sec
              W1         7.34992e+09
      global relaxation matrix dimension = 1087
      setting global matrices ... done, cpu time[sec] = 0.025753, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 17.2137, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             2041.6      561.459      177.991      201.078      24.9718      2152.34      344.826      4.70031
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.445841, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.031736, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.479324, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.90657e-10   1.6185e-39  7.02555e-41
      low eigenvalue method done, cpu time[sec] = 0.480779, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.62e-39         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.75e-41         0         1
         *Z       ---       ---  4.16e+60
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0 -5.95499e-37 -1.32866e-37 -3.38577e-39   6.4767e-39 -2.24523e-40 -3.45055e-39 -2.92135e-43 -7.87535e-53

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 22.6939, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 430 K
            Well    Collision, 1/sec
              W1          9.1874e+09
      global relaxation matrix dimension = 1087
      setting global matrices ... done, cpu time[sec] = 0.025529, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 17.236, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1633.28      449.167      142.393      160.862      19.9774      1721.87      275.861      3.76025
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.445278, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.031752, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.478761, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.49502e-11  1.31455e-39  5.07641e-41
      low eigenvalue method done, cpu time[sec] = 0.48007, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.31e-39         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.92e-41         0         1
         *Z       ---       ---  4.16e+60
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  -1.1697e-36 -2.71738e-37 -8.15647e-39 -5.01228e-38 -1.57046e-39 -4.32055e-39 -4.67937e-43   3.1553e-53

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 22.7126, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 430 K
            Well    Collision, 1/sec
              W1         1.10249e+10
      global relaxation matrix dimension = 1087
      setting global matrices ... done, cpu time[sec] = 0.025492, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 17.2012, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1361.07      374.306       118.66      134.052      16.6478      1434.89      229.884      3.13354
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.445945, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.031765, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.47951, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.89853e-12   1.1076e-39  3.86636e-41
      low eigenvalue method done, cpu time[sec] = 0.480863, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.11e-39         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.68e-41         0         1
         *Z       ---       ---  4.16e+60
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  9.24933e-37   1.7078e-37  4.73504e-39  1.92166e-38  7.26169e-40  5.30072e-39 -6.79702e-44 -5.89695e-54

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 22.6827, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 430 K
            Well    Collision, 1/sec
              W1         1.28624e+10
      global relaxation matrix dimension = 1087
      setting global matrices ... done, cpu time[sec] = 0.025462, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 17.2059, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1166.63      320.834      101.709      114.902      14.2696      1229.91      197.044      2.68589
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.450435, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.031735, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.483962, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.53399e-11  9.57411e-40  3.05696e-41
      low eigenvalue method done, cpu time[sec] = 0.485209, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.57e-40         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.77e-41         0         1
         *Z       ---       ---  4.16e+60
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.30194e-37 -3.53288e-38   1.7431e-40  7.55289e-39  1.63467e-40  4.09489e-39 -2.99472e-43 -4.63432e-53

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 22.6925, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 430 K
            Well    Collision, 1/sec
              W1         1.46998e+10
      global relaxation matrix dimension = 1087
      setting global matrices ... done, cpu time[sec] = 0.025489, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 17.5316, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             1020.8       280.73      88.9954      100.539      12.4859      1076.17      172.413      2.35016
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.445798, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.031756, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.479311, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.76789e-11  8.43358e-40  2.48569e-41
      low eigenvalue method done, cpu time[sec] = 0.480809, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.43e-40         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.08e-41         0         1
         *Z       ---       ---  4.16e+60
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  8.65853e-38  4.84439e-38  1.21324e-39  1.39022e-38   3.5676e-40 -1.34166e-39 -8.98786e-43  6.90186e-53

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 22.939, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 440 K
      Energy reference = 47358 1/cm
      Energy step      = 73 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.000164
         W1 Well: collisional kernel bandwidth = 57
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.011756
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.014945
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 1.017
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 12.3993
         W1 Well: minimal relaxation eigenvalue = 0.059563
         W1 Well: maximal relaxation eigenvalue = 3.4418
         W1 Well:       grid size = 1082
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31627 1/cm
         B1 Barrier:        grid size = 649
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -18 1/cm
         B2 Barrier:        grid size = 646
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 200 1/cm
         B3 Barrier:        grid size = 712
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4617 1/cm
         B4 Barrier:        grid size = 734
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6223 1/cm
         B5 Barrier: nonpositive number of states at -23233 1/cm => truncating
         B5 Barrier:        grid size = 967
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23232 1/cm
         B6 Barrier:        grid size = 629
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1441 1/cm
         B7 Barrier:        grid size = 585
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4653 1/cm
         B8 Barrier:        grid size = 419
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16771 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 13.585, elapsed time[sec] = 1
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31627 -23232 4.44e+05 1.06e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -18 5.49e+16
         B2    201 1.54e+16
         B3  -4617 4.92e+15
         B4  -6223 5.55e+15
         B5 -23232 6.92e+14
         B6   1442 5.87e+16
         B7   4654 9.56e+15
         B8  16772 1.36e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1   6.5e+22  1.42e+23  2.46e+17  1.26e+15   3.5e-11  1.47e+26  1.04e+31  6.68e+48
          R  1.54e-23         1      2.18  3.78e-06  1.94e-08  5.38e-34  2.26e+03   1.6e+08  1.03e+26
         P1  7.05e-24     0.458         1  1.73e-06  8.88e-09  2.47e-34  1.03e+03  7.33e+07  4.71e+25
         P2  4.07e-18  2.65e+05  5.77e+05         1   0.00513  1.42e-28  5.97e+08  4.23e+13  2.72e+31
         P3  7.94e-16  5.16e+07  1.13e+08       195         1  2.78e-26  1.16e+11  8.26e+15  5.31e+33
         P4  2.86e+10  1.86e+33  4.06e+33  7.03e+27   3.6e+25         1  4.19e+36  2.97e+41  1.91e+59
         P5  6.82e-27  0.000443  0.000967  1.68e-09  8.59e-12  2.38e-37         1  7.09e+04  4.56e+22
         P6  9.61e-32  6.25e-09  1.36e-08  2.36e-14  1.21e-16  3.36e-42  1.41e-05         1  6.42e+17
         P7   1.5e-49  9.73e-27  2.12e-26  3.68e-32  1.88e-34  5.23e-60  2.19e-23  1.56e-18         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  2.17e+19  4.73e+19   8.2e+13   4.2e+11  1.17e-14   4.9e+22  3.47e+27  2.23e+45
          R  4.61e-20         1      2.18  3.78e-06  1.94e-08  5.38e-34  2.26e+03   1.6e+08  1.03e+26
         P1  2.11e-20     0.458         1  1.73e-06  8.88e-09  2.47e-34  1.03e+03  7.33e+07  4.71e+25
         P2  1.22e-14  2.65e+05  5.77e+05         1   0.00513  1.42e-28  5.97e+08  4.23e+13  2.72e+31
         P3  2.38e-12  5.16e+07  1.13e+08       195         1  2.78e-26  1.16e+11  8.26e+15  5.31e+33
         P4  8.57e+13  1.86e+33  4.06e+33  7.03e+27   3.6e+25         1  4.19e+36  2.97e+41  1.91e+59
         P5  2.04e-23  0.000443  0.000967  1.68e-09  8.59e-12  2.38e-37         1  7.09e+04  4.56e+22
         P6  2.88e-28  6.25e-09  1.36e-08  2.36e-14  1.21e-16  3.36e-42  1.41e-05         1  6.42e+17
         P7  4.48e-46  9.73e-27  2.12e-26  3.68e-32  1.88e-34  5.23e-60  2.19e-23  1.56e-18         1
   MasterEquation::set:  done, cpu time[sec] = 13.5913, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 440 K
            Well    Collision, 1/sec
              W1         3.61867e+08
      global relaxation matrix dimension = 1082
      setting global matrices ... done, cpu time[sec] = 0.852517, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 16.957, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            42859.9        12002      3843.49      4329.85      539.768      45844.5      7461.67      106.097
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.444947, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.031469, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.478192, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    2.618e-09  2.24009e-37  2.53168e-38
      low eigenvalue method done, cpu time[sec] = 0.479562, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.24e-37 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.33e-38 -4.44e-16         1
         *Z       ---       ---  6.76e+59
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  4.06238e-35  1.35109e-35  3.09691e-37  1.67284e-36  5.43519e-38  1.63035e-38 -1.41682e-40  1.14292e-52

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 23.2736, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 440 K
            Well    Collision, 1/sec
              W1          1.0856e+09
      global relaxation matrix dimension = 1082
      setting global matrices ... done, cpu time[sec] = 0.025169, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 16.9214, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            14286.6      4000.66      1281.16      1443.28      179.923      15281.5      2487.22      35.3656
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.443935, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.031445, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.477136, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -6.4469e-10  9.21731e-38   8.8846e-39
      low eigenvalue method done, cpu time[sec] = 0.478488, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.22e-38 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.49e-39 -4.44e-16         1
         *Z       ---       ---  6.76e+59
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  5.64507e-36   4.7922e-37   2.0563e-38  1.62791e-37  5.65036e-39  1.68133e-38 -2.18157e-41 -3.21123e-53

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 22.399, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 440 K
            Well    Collision, 1/sec
              W1         1.80933e+09
      global relaxation matrix dimension = 1082
      setting global matrices ... done, cpu time[sec] = 0.0249, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 16.9207, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            8571.98       2400.4      768.697       865.97      107.954      9168.91      1492.33      21.2194
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.443492, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.031495, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.476745, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.31231e-10  5.99988e-38  5.06527e-39
      low eigenvalue method done, cpu time[sec] = 0.478132, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0     6e-38 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.57e-39 -4.44e-16         1
         *Z       ---       ---  6.76e+59
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  4.50592e-36 -2.36803e-38  -1.7044e-39 -1.84691e-37 -3.51393e-39  2.07558e-38 -5.37955e-42  -1.3353e-52

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 22.3966, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 440 K
            Well    Collision, 1/sec
              W1         2.53307e+09
      global relaxation matrix dimension = 1082
      setting global matrices ... done, cpu time[sec] = 0.025317, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 16.9503, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            6122.84      1714.57      549.069       618.55      77.1097      6549.22      1065.95      15.1567
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.443526, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.031862, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.477139, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    4.521e-10  4.49108e-38   3.4043e-39
      low eigenvalue method done, cpu time[sec] = 0.478452, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.49e-38 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.68e-39 -4.44e-16         1
         *Z       ---       ---  6.76e+59
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  4.11189e-36 -2.26189e-37  1.21063e-38 -3.60699e-38  3.79184e-40  2.59613e-38  -4.5847e-42  5.70933e-53

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 22.4293, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 440 K
            Well    Collision, 1/sec
              W1          3.2568e+09
      global relaxation matrix dimension = 1082
      setting global matrices ... done, cpu time[sec] = 0.025067, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 16.9533, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            4762.21      1333.55      427.054      481.095      59.9742      5093.84      829.074      11.7885
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.443738, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.031478, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.476974, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -1.8165e-11  3.60425e-38  2.49426e-39
      low eigenvalue method done, cpu time[sec] = 0.478328, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0   3.6e-38 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.15e-39 -4.44e-16         1
         *Z       ---       ---  6.76e+59
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  3.54966e-36  5.02981e-37  2.19733e-38   1.2306e-37   3.6502e-39   2.9497e-38  1.08778e-42  2.39217e-52

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 22.5829, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 440 K
            Well    Collision, 1/sec
              W1         3.61867e+09
      global relaxation matrix dimension = 1082
      setting global matrices ... done, cpu time[sec] = 0.02508, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 16.9482, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            4285.99       1200.2      384.349      432.985      53.9768      4584.45      746.167      10.6097
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.443559, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.031445, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.476775, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.33472e-10   3.2837e-38  2.18139e-39
      low eigenvalue method done, cpu time[sec] = 0.478125, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.28e-38 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.96e-39 -4.44e-16         1
         *Z       ---       ---  6.76e+59
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16 -3.17101e-37 -1.06381e-37 -3.39169e-39  3.56649e-38  9.16762e-40 -1.09019e-38 -6.78475e-43 -2.36254e-52

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 22.4253, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 440 K
            Well    Collision, 1/sec
              W1           5.428e+09
      global relaxation matrix dimension = 1082
      setting global matrices ... done, cpu time[sec] = 0.025031, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 16.9656, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2857.33      800.132      256.232      288.657      35.9845       3056.3      497.444      7.07312
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.443267, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.03148, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.476485, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.22854e-10  2.28316e-38  1.27667e-39
      low eigenvalue method done, cpu time[sec] = 0.477837, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.28e-38 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.36e-39 -4.44e-16         1
         *Z       ---       ---  6.76e+59
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16 -1.29955e-36 -4.11592e-37 -1.04604e-38 -6.31417e-38 -1.92142e-39 -1.34589e-38  1.09507e-43  7.53648e-52

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 22.4447, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 440 K
            Well    Collision, 1/sec
              W1         7.23734e+09
      global relaxation matrix dimension = 1082
      setting global matrices ... done, cpu time[sec] = 0.025111, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 16.9946, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
               2143      600.099      192.174      216.493      26.9884      2292.23      373.083      5.30484
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.443444, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.03188, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.477052, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.97211e-11  1.75618e-38  8.56545e-40
      low eigenvalue method done, cpu time[sec] = 0.478304, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.76e-38 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.05e-39 -4.44e-16         1
         *Z       ---       ---  6.76e+59
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  3.28774e-36  1.11078e-36  2.75865e-38  9.94625e-38    3.913e-39  9.30871e-39  4.28872e-43 -2.60203e-52

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 22.4731, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 440 K
            Well    Collision, 1/sec
              W1         9.04667e+09
      global relaxation matrix dimension = 1082
      setting global matrices ... done, cpu time[sec] = 0.025162, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 17.4475, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             1714.4      480.079      153.739      173.194      21.5907      1833.78      298.467      4.24387
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.443158, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.031459, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.476381, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.77982e-11  1.42924e-38  6.21812e-40
      low eigenvalue method done, cpu time[sec] = 0.477682, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.43e-38 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.51e-40 -4.44e-16         1
         *Z       ---       ---  6.76e+59
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  2.08857e-36  6.25977e-37  1.80225e-38  1.22399e-37  3.67073e-39  4.44426e-39 -1.22459e-42  2.41824e-52

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 22.9186, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 440 K
            Well    Collision, 1/sec
              W1          1.0856e+10
      global relaxation matrix dimension = 1082
      setting global matrices ... done, cpu time[sec] = 0.024841, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 16.9792, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1428.66      400.066      128.116      144.328      17.9923      1528.15      248.722      3.53656
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.443029, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.031381, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.476163, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.57184e-11  1.20604e-38  4.75388e-40
      low eigenvalue method done, cpu time[sec] = 0.477459, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.21e-38 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.18e-40 -4.44e-16         1
         *Z       ---       ---  6.76e+59
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16 -1.12687e-36 -4.37594e-37 -1.58268e-38 -1.81229e-37  -4.4215e-39  1.21452e-39 -5.55487e-43  1.06874e-52

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 22.4477, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 440 K
            Well    Collision, 1/sec
              W1         1.26653e+10
      global relaxation matrix dimension = 1082
      setting global matrices ... done, cpu time[sec] = 0.024949, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 16.9998, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1224.57      342.914      109.814       123.71      15.4219      1309.84       213.19      3.03134
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.442741, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.031441, elapsed time[sec] = 1
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.47595, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.83651e-11  1.04372e-38  3.77059e-40
      low eigenvalue method done, cpu time[sec] = 0.477198, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.04e-38 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.22e-40 -4.44e-16         1
         *Z       ---       ---  6.76e+59
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  -1.0919e-36  -4.6685e-37 -1.40719e-38  -1.2158e-37 -3.16997e-39  1.28894e-38 -9.06614e-43 -8.23203e-52

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 22.4772, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 440 K
            Well    Collision, 1/sec
              W1         1.44747e+10
      global relaxation matrix dimension = 1082
      setting global matrices ... done, cpu time[sec] = 0.024986, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 17.0021, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             1071.5       300.05      96.0872      108.246      13.4942      1146.11      186.542      2.65242
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.442893, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.031423, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.47606, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.30629e-11  9.20251e-39  3.07427e-40
      low eigenvalue method done, cpu time[sec] = 0.477397, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0   9.2e-39 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.48e-40 -4.44e-16         1
         *Z       ---       ---  6.76e+59
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16 -1.89367e-36 -2.33959e-37 -7.99289e-39 -2.67268e-38 -1.28772e-39 -2.31506e-38  6.95304e-43  3.72504e-52

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 22.4812, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 450 K
      Energy reference = 48053 1/cm
      Energy step      = 75 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.00018
         W1 Well: collisional kernel bandwidth = 57
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.011544
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.014495
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.906391
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 11.7939
         W1 Well: minimal relaxation eigenvalue = 0.0588682
         W1 Well: maximal relaxation eigenvalue = 1.64563
         W1 Well:       grid size = 1062
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31597 1/cm
         B1 Barrier:        grid size = 641
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -22 1/cm
         B2 Barrier:        grid size = 638
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 202 1/cm
         B3 Barrier:        grid size = 703
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4672 1/cm
         B4 Barrier:        grid size = 724
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6247 1/cm
         B5 Barrier: nonpositive number of states at -23197 1/cm => truncating
         B5 Barrier:        grid size = 950
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23197 1/cm
         B6 Barrier:        grid size = 621
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1477 1/cm
         B7 Barrier:        grid size = 578
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4702 1/cm
         B8 Barrier:        grid size = 418
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16703 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 12.8696, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31597 -23197 4.56e+05 1.16e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -22 6.22e+16
         B2    203 1.77e+16
         B3  -4672 5.74e+15
         B4  -6247 6.45e+15
         B5 -23197 8.07e+14
         B6   1478 6.75e+16
         B7   4703 1.12e+16
         B8  16703 1.65e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  6.13e+21  1.32e+22  3.26e+16  1.88e+14  1.97e-11  1.25e+25  7.12e+29  1.92e+47
          R  1.63e-22         1      2.15  5.31e-06  3.06e-08  3.21e-33  2.05e+03  1.16e+08  3.14e+25
         P1  7.58e-23     0.465         1  2.47e-06  1.42e-08  1.49e-33       951   5.4e+07  1.46e+25
         P2  3.07e-17  1.88e+05  4.05e+05         1   0.00577  6.04e-28  3.85e+08  2.19e+13  5.91e+30
         P3  5.32e-15  3.26e+07  7.02e+07       173         1  1.05e-25  6.68e+10  3.79e+15  1.02e+33
         P4  5.09e+10  3.12e+32  6.71e+32  1.66e+27  9.56e+24         1  6.38e+35  3.62e+40  9.78e+57
         P5  7.97e-26  0.000489   0.00105   2.6e-09   1.5e-11  1.57e-36         1  5.68e+04  1.53e+22
         P6   1.4e-30  8.61e-09  1.85e-08  4.57e-14  2.64e-16  2.76e-41  1.76e-05         1   2.7e+17
         P7   5.2e-48  3.19e-26  6.86e-26  1.69e-31  9.77e-34  1.02e-58  6.52e-23   3.7e-18         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  2.09e+18  4.49e+18  1.11e+13  6.39e+10  6.69e-15  4.27e+21  2.42e+26  6.54e+43
          R  4.79e-19         1      2.15  5.31e-06  3.06e-08  3.21e-33  2.05e+03  1.16e+08  3.14e+25
         P1  2.23e-19     0.465         1  2.47e-06  1.42e-08  1.49e-33       951   5.4e+07  1.46e+25
         P2  9.03e-14  1.88e+05  4.05e+05         1   0.00577  6.04e-28  3.85e+08  2.19e+13  5.91e+30
         P3  1.56e-11  3.26e+07  7.02e+07       173         1  1.05e-25  6.68e+10  3.79e+15  1.02e+33
         P4   1.5e+14  3.12e+32  6.71e+32  1.66e+27  9.56e+24         1  6.38e+35  3.62e+40  9.78e+57
         P5  2.34e-22  0.000489   0.00105   2.6e-09   1.5e-11  1.57e-36         1  5.68e+04  1.53e+22
         P6  4.13e-27  8.61e-09  1.85e-08  4.57e-14  2.64e-16  2.76e-41  1.76e-05         1   2.7e+17
         P7  1.53e-44  3.19e-26  6.86e-26  1.69e-31  9.77e-34  1.02e-58  6.52e-23   3.7e-18         1
   MasterEquation::set:  done, cpu time[sec] = 12.8759, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 450 K
            Well    Collision, 1/sec
              W1         3.56462e+08
      global relaxation matrix dimension = 1062
      setting global matrices ... done, cpu time[sec] = 0.833654, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 16.7079, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
              44921      12805.2      4143.23      4654.76      582.427      48737.3      8055.41      119.356
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.419147, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.02995, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.450797, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.27711e-09  2.10106e-36  2.58606e-37
      low eigenvalue method done, cpu time[sec] = 0.452066, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   2.1e-36  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.24e-37  2.22e-16         1
         *Z       ---       ---  1.19e+59
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16 -2.04294e-35 -6.15089e-36  3.38358e-37  7.10588e-36  1.64591e-37  3.20089e-38  5.81771e-40 -1.02646e-51

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 22.9027, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 450 K
            Well    Collision, 1/sec
              W1         1.06939e+09
      global relaxation matrix dimension = 1062
      setting global matrices ... done, cpu time[sec] = 0.024717, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 16.6759, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            14973.7       4268.4      1381.08      1551.59      194.142      16245.8      2685.14      39.7854
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.418522, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.029919, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.450149, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.41426e-10  8.82369e-37  9.25646e-38
      low eigenvalue method done, cpu time[sec] = 0.451392, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.82e-37  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.19e-38  2.22e-16         1
         *Z       ---       ---  1.19e+59
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16   9.0542e-36 -1.14034e-36  3.72587e-38  1.09998e-36  1.98675e-38  3.36934e-38 -2.01367e-40 -1.09625e-51

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 22.0486, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 450 K
            Well    Collision, 1/sec
              W1         1.78231e+09
      global relaxation matrix dimension = 1062
      setting global matrices ... done, cpu time[sec] = 0.024638, elapsed time[sec] = 1
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 16.702, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             8984.2      2561.04      828.647      930.952      116.485      9747.45      1611.08      23.8713
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.417895, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.029888, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.449455, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.27272e-10  5.78958e-37     5.33e-38
      low eigenvalue method done, cpu time[sec] = 0.450741, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.79e-37  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.41e-38  2.22e-16         1
         *Z       ---       ---  1.19e+59
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16  1.18975e-35  1.55127e-36  6.46498e-38  2.97976e-37  8.85433e-39  1.27492e-37 -3.85188e-41  1.03677e-51

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 22.0741, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 450 K
            Well    Collision, 1/sec
              W1         2.49523e+09
      global relaxation matrix dimension = 1062
      setting global matrices ... done, cpu time[sec] = 0.024429, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 16.7136, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            6417.28      1829.31       591.89      664.966      83.2038      6962.47      1150.77      17.0509
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.417933, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.029893, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.449508, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -6.00491e-10  4.35397e-37  3.60654e-38
      low eigenvalue method done, cpu time[sec] = 0.450686, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.35e-37  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.56e-38  2.22e-16         1
         *Z       ---       ---  1.19e+59
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16  2.17209e-36  2.00358e-36  5.65728e-38  8.26569e-37  1.85703e-38 -6.00021e-38 -1.66997e-41 -1.00254e-51

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 22.1535, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 450 K
            Well    Collision, 1/sec
              W1         3.20816e+09
      global relaxation matrix dimension = 1062
      setting global matrices ... done, cpu time[sec] = 0.024531, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 16.1874, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            4991.22       1422.8      460.359      517.196      64.7141      5415.25      895.046      13.2618
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.417919, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.029971, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.449584, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.44918e-11   3.5054e-37  2.65607e-38
      low eigenvalue method done, cpu time[sec] = 0.45086, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.51e-37  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.06e-38  2.22e-16         1
         *Z       ---       ---  1.19e+59
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16 -1.17003e-35 -4.71721e-36 -1.33287e-37  -1.2802e-36 -3.34334e-38 -2.24132e-38 -1.24451e-41  -1.4519e-51

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 21.632, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 450 K
            Well    Collision, 1/sec
              W1         3.56462e+09
      global relaxation matrix dimension = 1062
      setting global matrices ... done, cpu time[sec] = 0.02428, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 16.1712, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             4492.1      1280.52      414.323      465.476      58.2427      4873.73      805.541      11.9356
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.417641, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.029926, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.449267, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.95405e-11  3.19767e-37  2.32796e-38
      low eigenvalue method done, cpu time[sec] = 0.450566, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   3.2e-37  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.88e-38  2.22e-16         1
         *Z       ---       ---  1.19e+59
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16  1.08591e-35    1.872e-36  6.01893e-38  3.12146e-37  9.59321e-39  3.46555e-38  6.26764e-42 -1.57311e-51

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 21.6194, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 450 K
            Well    Collision, 1/sec
              W1         5.34693e+09
      global relaxation matrix dimension = 1062
      setting global matrices ... done, cpu time[sec] = 0.024399, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 16.2942, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2994.73       853.68      276.216      310.317      38.8285      3249.15      537.028      7.95709
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.417824, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.029905, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.449426, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.56507e-10  2.23328e-37  1.37397e-38
      low eigenvalue method done, cpu time[sec] = 0.450644, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.23e-37  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.31e-38  2.22e-16         1
         *Z       ---       ---  1.19e+59
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16  8.33326e-36  2.56335e-36   7.2549e-38   3.9289e-37  1.26746e-38  2.15537e-38  7.51686e-43  2.76021e-51

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 21.8602, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 450 K
            Well    Collision, 1/sec
              W1         7.12924e+09
      global relaxation matrix dimension = 1062
      setting global matrices ... done, cpu time[sec] = 0.024339, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 16.2017, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2246.05       640.26      207.162      232.738      29.1213      2436.86      402.771      5.96782
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.41721, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.02993, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.448826, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.37603e-11  1.72258e-37  9.27363e-39
      low eigenvalue method done, cpu time[sec] = 0.450027, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.72e-37  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.01e-38  2.22e-16         1
         *Z       ---       ---  1.19e+59
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16  1.13951e-35  2.51818e-36   8.8232e-38  6.89278e-37  1.89818e-38  6.23597e-38  2.31927e-42  2.72468e-51

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 21.6421, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 450 K
            Well    Collision, 1/sec
              W1         8.91155e+09
      global relaxation matrix dimension = 1062
      setting global matrices ... done, cpu time[sec] = 0.02413, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 16.1827, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1796.84      512.208      165.729       186.19      23.2971      1949.49      322.217      4.77425
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.417722, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.029877, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.449312, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -9.54702e-11  1.40461e-37  6.76343e-39
      low eigenvalue method done, cpu time[sec] = 0.450529, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.4e-37  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.27e-39  2.22e-16         1
         *Z       ---       ---  1.19e+59
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16  1.14271e-35  1.60775e-36  4.84104e-38  1.37408e-37  6.87035e-39  6.29288e-38 -1.83698e-43  3.05369e-51

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 21.6256, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 450 K
            Well    Collision, 1/sec
              W1         1.06939e+10
      global relaxation matrix dimension = 1062
      setting global matrices ... done, cpu time[sec] = 0.024359, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 16.2093, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1497.37       426.84      138.108      155.159      19.4142      1624.58      268.514      3.97854
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.417574, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.02989, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.449159, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.35245e-11  1.18698e-37  5.19021e-39
      low eigenvalue method done, cpu time[sec] = 0.450381, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.19e-37  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.99e-39  2.22e-16         1
         *Z       ---       ---  1.19e+59
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16 -7.43034e-37  -2.6349e-37 -8.40386e-39  -1.1213e-37 -2.90766e-39  1.69315e-38   6.2543e-42   6.4054e-51

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 21.6532, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 450 K
            Well    Collision, 1/sec
              W1         1.24762e+10
      global relaxation matrix dimension = 1062
      setting global matrices ... done, cpu time[sec] = 0.024182, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 16.2428, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1283.46      365.863      118.378      132.993      16.6408      1392.49      230.155      3.41018
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.417406, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.029875, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.448966, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.83391e-11  1.02839e-37  4.12961e-39
      low eigenvalue method done, cpu time[sec] = 0.450262, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.03e-37  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.05e-39  2.22e-16         1
         *Z       ---       ---  1.19e+59
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16  9.12252e-36  1.55698e-36  4.40998e-38  6.49756e-38  4.97556e-39  7.73901e-38 -5.92512e-42 -9.02528e-51

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 21.6857, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 450 K
            Well    Collision, 1/sec
              W1         1.42585e+10
      global relaxation matrix dimension = 1062
      setting global matrices ... done, cpu time[sec] = 0.024363, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 16.2799, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1123.02       320.13      103.581      116.369      14.5607      1218.43      201.385      2.98391
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.419123, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.029883, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.450692, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.07689e-11  9.07558e-38  3.37606e-39
      low eigenvalue method done, cpu time[sec] = 0.45191, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.08e-38  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.34e-39  2.22e-16         1
         *Z       ---       ---  1.19e+59
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16 -4.21275e-37  1.99895e-37  1.37862e-38  1.72816e-37  3.88909e-39 -1.45289e-38  3.11184e-42 -1.55778e-51

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 21.7252, elapsed time[sec] = 2
   MasterEquation::set:  starts
      Temperature      = 460 K
      Energy reference = 48748 1/cm
      Energy step      = 77 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -87.9 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.000187
         W1 Well: collisional kernel bandwidth = 57
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.011261
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.01404
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.807788
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 11.2804
         W1 Well: minimal relaxation eigenvalue = 0.0581732
         W1 Well: maximal relaxation eigenvalue = 4.72259
         W1 Well:       grid size = 1044
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31640 1/cm
         B1 Barrier:        grid size = 634
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -70 1/cm
         B2 Barrier:        grid size = 631
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 160 1/cm
         B3 Barrier:        grid size = 693
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4613 1/cm
         B4 Barrier:        grid size = 714
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6230 1/cm
         B5 Barrier: nonpositive number of states at -23247 1/cm => truncating
         B5 Barrier:        grid size = 935
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23247 1/cm
         B6 Barrier:        grid size = 614
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1469 1/cm
         B7 Barrier:        grid size = 572
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4703 1/cm
         B8 Barrier:        grid size = 416
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16715 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 12.2585, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31640 -23247 4.39e+05 1.28e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -70 7.04e+16
         B2    161 2.04e+16
         B3  -4613 6.67e+15
         B4  -6230 7.48e+15
         B5 -23247 9.39e+14
         B6   1470 7.74e+16
         B7   4704  1.3e+16
         B8  16716    2e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  6.31e+20  1.34e+21  4.63e+15  2.99e+13  1.11e-11  1.17e+24  5.39e+28  6.35e+45
          R  1.59e-21         1      2.12  7.35e-06  4.75e-08  1.77e-32  1.86e+03  8.54e+07  1.01e+25
         P1  7.47e-22     0.471         1  3.46e-06  2.24e-08  8.32e-33       877  4.02e+07  4.75e+24
         P2  2.16e-16  1.36e+05  2.89e+05         1   0.00647  2.41e-27  2.53e+08  1.16e+13  1.37e+30
         P3  3.34e-14  2.11e+07  4.47e+07       155         1  3.72e-25  3.92e+10   1.8e+15  2.12e+32
         P4  8.97e+10  5.66e+31   1.2e+32  4.16e+26  2.69e+24         1  1.05e+35  4.83e+39   5.7e+56
         P5  8.52e-25  0.000537   0.00114  3.95e-09  2.55e-11   9.5e-36         1  4.59e+04  5.41e+21
         P6  1.86e-29  1.17e-08  2.49e-08   8.6e-14  5.56e-16  2.07e-40  2.18e-05         1  1.18e+17
         P7  1.57e-46  9.92e-26  2.11e-25  7.29e-31  4.71e-33  1.75e-57  1.85e-22  8.48e-18         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  2.22e+17  4.71e+17  1.63e+12  1.05e+10  3.92e-15  4.13e+20   1.9e+25  2.24e+42
          R  4.51e-18         1      2.12  7.35e-06  4.75e-08  1.77e-32  1.86e+03  8.54e+07  1.01e+25
         P1  2.12e-18     0.471         1  3.46e-06  2.24e-08  8.32e-33       877  4.02e+07  4.75e+24
         P2  6.14e-13  1.36e+05  2.89e+05         1   0.00647  2.41e-27  2.53e+08  1.16e+13  1.37e+30
         P3  9.49e-11  2.11e+07  4.47e+07       155         1  3.72e-25  3.92e+10   1.8e+15  2.12e+32
         P4  2.55e+14  5.66e+31   1.2e+32  4.16e+26  2.69e+24         1  1.05e+35  4.83e+39   5.7e+56
         P5  2.42e-21  0.000537   0.00114  3.95e-09  2.55e-11   9.5e-36         1  4.59e+04  5.41e+21
         P6  5.28e-26  1.17e-08  2.49e-08   8.6e-14  5.56e-16  2.07e-40  2.18e-05         1  1.18e+17
         P7  4.47e-43  9.92e-26  2.11e-25  7.29e-31  4.71e-33  1.75e-57  1.85e-22  8.48e-18         1
   MasterEquation::set:  done, cpu time[sec] = 12.2642, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 460 K
            Well    Collision, 1/sec
              W1         3.51267e+08
      global relaxation matrix dimension = 1044
      setting global matrices ... done, cpu time[sec] = 0.803555, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 15.6579, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            47013.3      13638.9      4459.58      4996.79      627.491        51724      8678.11      133.856
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.40203, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.028585, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.432278, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.21617e-10  1.83305e-35  2.42284e-36
      low eigenvalue method done, cpu time[sec] = 0.433438, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.83e-35 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.07e-36 -4.44e-16         1
         *Z       ---       ---  2.24e+58
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  2.12536e-34   7.3608e-35  1.70427e-36  6.68494e-36  2.15371e-37  2.12667e-37  1.08944e-41 -1.52357e-51

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 21.8754, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 460 K
            Well    Collision, 1/sec
              W1          1.0538e+09
      global relaxation matrix dimension = 1044
      setting global matrices ... done, cpu time[sec] = 0.023451, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 15.6315, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            15671.1      4546.29      1486.53       1665.6      209.164      17241.3       2892.7      44.6188
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.402446, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.028454, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.432553, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.52829e-10  7.84583e-36   8.8392e-37
      low eigenvalue method done, cpu time[sec] = 0.433706, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.85e-36 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.56e-37 -4.44e-16         1
         *Z       ---       ---  2.24e+58
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  1.55547e-35  5.69853e-36  3.57371e-38 -4.53851e-38  3.77324e-39  1.65475e-37  2.88873e-40  8.18935e-51

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 21.0498, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 460 K
            Well    Collision, 1/sec
              W1         1.75633e+09
      global relaxation matrix dimension = 1044
      setting global matrices ... done, cpu time[sec] = 0.023224, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 15.6494, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            9402.67      2727.78      891.916      999.357      125.498      10344.8      1735.62      26.7713
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.40066, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.028429, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.430757, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.02043e-10  5.18656e-36  5.13909e-37
      low eigenvalue method done, cpu time[sec] = 0.431909, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.19e-36 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.02e-37 -4.44e-16         1
         *Z       ---       ---  2.24e+58
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  6.22107e-35  5.32672e-36  1.34754e-37  -2.1247e-36 -1.83892e-38  3.99491e-37  2.43194e-41   1.1082e-50

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 21.0721, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 460 K
            Well    Collision, 1/sec
              W1         2.45887e+09
      global relaxation matrix dimension = 1044
      setting global matrices ... done, cpu time[sec] = 0.023235, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 15.6634, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            6716.19      1948.41      637.083      713.826      89.6416      7389.14      1239.73      19.1223
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.400468, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.028448, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.430559, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -8.7429e-11  3.91774e-36  3.50034e-37
      low eigenvalue method done, cpu time[sec] = 0.431702, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.92e-36 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.28e-37 -4.44e-16         1
         *Z       ---       ---  2.24e+58
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16 -5.41391e-35 -2.59329e-35 -5.83572e-37 -4.14049e-36 -1.15953e-37  5.38903e-38   1.4258e-40   6.1854e-51

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 21.0857, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 460 K
            Well    Collision, 1/sec
              W1          3.1614e+09
      global relaxation matrix dimension = 1044
      setting global matrices ... done, cpu time[sec] = 0.023162, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 15.5823, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             5223.7      1515.43      495.509      555.198      69.7212      5747.11      964.234      14.8729
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.399577, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.028467, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.429684, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -7.36513e-11  3.16378e-36  2.59082e-37
      low eigenvalue method done, cpu time[sec] = 0.430815, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.16e-36 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.84e-37 -4.44e-16         1
         *Z       ---       ---  2.24e+58
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  1.18495e-35  9.10473e-36  1.84727e-37  1.48439e-36  3.96748e-38 -1.21993e-37 -2.15769e-41  2.44253e-50

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 21.1546, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 460 K
            Well    Collision, 1/sec
              W1         3.51267e+09
      global relaxation matrix dimension = 1044
      setting global matrices ... done, cpu time[sec] = 0.023088, elapsed time[sec] = 1
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 15.6915, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            4701.33      1363.89      445.958      499.679      62.7491       5172.4      867.811      13.3856
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.402253, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.028433, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.432357, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.72684e-10  2.88953e-36  2.27559e-37
      low eigenvalue method done, cpu time[sec] = 0.433493, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.89e-36 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.68e-37 -4.44e-16         1
         *Z       ---       ---  2.24e+58
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16 -2.21299e-35 -2.97106e-36 -4.94425e-38  1.28846e-36  1.88092e-38  1.89858e-37  7.34245e-41 -9.60128e-51

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 21.1138, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 460 K
            Well    Collision, 1/sec
              W1           5.269e+09
      global relaxation matrix dimension = 1044
      setting global matrices ... done, cpu time[sec] = 0.023263, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 15.6981, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            3134.22      909.259      297.305      333.119      41.8327      3448.27       578.54      8.92375
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.399426, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.028464, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.429543, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.43479e-11   2.0267e-36  1.35418e-37
      low eigenvalue method done, cpu time[sec] = 0.430673, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.03e-36 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.18e-37 -4.44e-16         1
         *Z       ---       ---  2.24e+58
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16 -2.08546e-36  8.45836e-37  -2.9026e-38 -1.32807e-37 -2.44522e-39 -1.46222e-37 -2.39167e-41  1.90571e-51

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 21.1173, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 460 K
            Well    Collision, 1/sec
              W1         7.02534e+09
      global relaxation matrix dimension = 1044
      setting global matrices ... done, cpu time[sec] = 0.023351, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 15.7148, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2350.67      681.944      222.979      249.839      31.3745       2586.2      433.905      6.69281
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.399716, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.028491, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.429863, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.26493e-10  1.56744e-36  9.19394e-38
      low eigenvalue method done, cpu time[sec] = 0.430994, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.57e-36 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.12e-38 -4.44e-16         1
         *Z       ---       ---  2.24e+58
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  1.60239e-36 -1.79625e-36  4.18074e-38  6.82005e-37  1.37887e-38  2.96346e-37 -2.91726e-41  -8.3296e-52

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 21.1342, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 460 K
            Well    Collision, 1/sec
              W1         8.78167e+09
      global relaxation matrix dimension = 1044
      setting global matrices ... done, cpu time[sec] = 0.023306, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 15.6963, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1880.53      545.555      178.383      199.871      25.0996      2068.96      347.124      5.35425
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.399412, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.028428, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.429482, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.52684e-10  1.28053e-36  6.73591e-38
      low eigenvalue method done, cpu time[sec] = 0.430613, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.28e-36 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.45e-38 -4.44e-16         1
         *Z       ---       ---  2.24e+58
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16 -4.31218e-35 -7.18062e-36 -2.61517e-37 -1.33811e-36 -4.38942e-38 -2.43041e-37  4.13803e-41 -8.74194e-51

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 21.1149, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 460 K
            Well    Collision, 1/sec
              W1          1.0538e+10
      global relaxation matrix dimension = 1044
      setting global matrices ... done, cpu time[sec] = 0.023119, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 15.7083, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1567.11      454.629      148.653       166.56      20.9164      1724.13       289.27      4.46188
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.399543, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.02844, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.429661, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.08474e-11  1.08365e-36  5.18824e-38
      low eigenvalue method done, cpu time[sec] = 0.430793, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.08e-36 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   6.3e-38 -4.44e-16         1
         *Z       ---       ---  2.24e+58
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16 -1.84901e-35 -3.58543e-36 -1.45016e-37 -1.09315e-36 -3.12464e-38 -1.84876e-37 -6.96024e-41  7.72049e-50

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 21.2586, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 460 K
            Well    Collision, 1/sec
              W1         1.22943e+10
      global relaxation matrix dimension = 1044
      setting global matrices ... done, cpu time[sec] = 0.023124, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 15.7172, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1343.24      389.682      127.417      142.765      17.9283      1477.83      247.946      3.82446
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.399222, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.02843, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.429295, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.94292e-11  9.39908e-37  4.14088e-38
      low eigenvalue method done, cpu time[sec] = 0.430437, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   9.4e-37 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.47e-38 -4.44e-16         1
         *Z       ---       ---  2.24e+58
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  -4.0377e-35 -1.00703e-35 -3.17173e-37 -2.17999e-36 -6.53587e-38 -1.34787e-37 -3.52453e-41 -2.56527e-50

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 21.1362, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 460 K
            Well    Collision, 1/sec
              W1         1.40507e+10
      global relaxation matrix dimension = 1044
      setting global matrices ... done, cpu time[sec] = 0.023193, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 15.712, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1175.33      340.972      111.489       124.92      15.6873       1293.1      216.953      3.34641
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.399541, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.028456, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.429654, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.25182e-10  8.30224e-37   3.3943e-38
      low eigenvalue method done, cpu time[sec] = 0.430798, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0   8.3e-37 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.83e-38 -4.44e-16         1
         *Z       ---       ---  2.24e+58
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  2.07729e-35  7.49163e-36  2.12822e-37  1.50557e-36  4.21075e-38  1.38367e-37  3.44461e-41  3.01231e-50

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 21.1217, elapsed time[sec] = 2
   MasterEquation::set:  starts
      Temperature      = 470 K
      Energy reference = 49443 1/cm
      Energy step      = 78 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -87.8 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.000169
         W1 Well: collisional kernel bandwidth = 57
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.011172
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.01391
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.781625
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 11.1576
         W1 Well: minimal relaxation eigenvalue = 0.0575798
         W1 Well: maximal relaxation eigenvalue = 1.66215
         W1 Well:       grid size = 1039
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31598 1/cm
         B1 Barrier:        grid size = 634
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -9 1/cm
         B2 Barrier:        grid size = 632
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 146 1/cm
         B3 Barrier:        grid size = 693
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4611 1/cm
         B4 Barrier:        grid size = 714
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6248 1/cm
         B5 Barrier: nonpositive number of states at -23175 1/cm => truncating
         B5 Barrier:        grid size = 931
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23175 1/cm
         B6 Barrier:        grid size = 615
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1473 1/cm
         B7 Barrier:        grid size = 574
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4671 1/cm
         B8 Barrier:        grid size = 419
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16761 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 12.1072, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31598 -23175 4.63e+05  1.4e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -9 7.94e+16
         B2    147 2.34e+16
         B3  -4611 7.75e+15
         B4  -6248 8.66e+15
         B5 -23175 1.09e+15
         B6   1474 8.86e+16
         B7   4672 1.51e+16
         B8  16762 2.42e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  7.32e+19  1.53e+20  7.34e+14  5.29e+12  6.63e-12  1.24e+23  4.66e+27  2.49e+44
          R  1.37e-20         1       2.1     1e-05  7.23e-08  9.06e-32   1.7e+03  6.37e+07   3.4e+24
         P1  6.52e-21     0.477         1  4.78e-06  3.45e-08  4.32e-32       811  3.04e+07  1.62e+24
         P2  1.36e-15  9.97e+04  2.09e+05         1   0.00721  9.04e-27   1.7e+08  6.35e+12  3.39e+29
         P3  1.89e-13  1.38e+07   2.9e+07       139         1  1.25e-24  2.35e+10  8.81e+14   4.7e+31
         P4  1.51e+11   1.1e+31  2.31e+31  1.11e+26  7.97e+23         1  1.88e+34  7.02e+38  3.75e+55
         P5  8.03e-24  0.000588   0.00123   5.9e-09  4.25e-11  5.33e-35         1  3.74e+04     2e+21
         P6  2.15e-28  1.57e-08  3.29e-08  1.57e-13  1.13e-15  1.42e-39  2.67e-05         1  5.34e+16
         P7  4.02e-45  2.94e-25  6.17e-25  2.95e-30  2.13e-32  2.67e-56     5e-22  1.87e-17         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  2.59e+16  5.44e+16   2.6e+11  1.87e+09  2.35e-15  4.41e+19  1.65e+24  8.82e+40
          R  3.85e-17         1       2.1     1e-05  7.23e-08  9.06e-32   1.7e+03  6.37e+07   3.4e+24
         P1  1.84e-17     0.477         1  4.78e-06  3.45e-08  4.32e-32       811  3.04e+07  1.62e+24
         P2  3.84e-12  9.97e+04  2.09e+05         1   0.00721  9.04e-27   1.7e+08  6.35e+12  3.39e+29
         P3  5.33e-10  1.38e+07   2.9e+07       139         1  1.25e-24  2.35e+10  8.81e+14   4.7e+31
         P4  4.25e+14   1.1e+31  2.31e+31  1.11e+26  7.97e+23         1  1.88e+34  7.02e+38  3.75e+55
         P5  2.27e-20  0.000588   0.00123   5.9e-09  4.25e-11  5.33e-35         1  3.74e+04     2e+21
         P6  6.05e-25  1.57e-08  3.29e-08  1.57e-13  1.13e-15  1.42e-39  2.67e-05         1  5.34e+16
         P7  1.13e-41  2.94e-25  6.17e-25  2.95e-30  2.13e-32  2.67e-56     5e-22  1.87e-17         1
   MasterEquation::set:  done, cpu time[sec] = 12.1134, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 470 K
            Well    Collision, 1/sec
              W1         3.46268e+08
      global relaxation matrix dimension = 1039
      setting global matrices ... done, cpu time[sec] = 0.808229, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 15.6068, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            49135.1        14503      4793.04      5356.42      675.038      54803.7      9330.05      149.672
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.394893, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.028194, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.424744, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.12221e-09  1.44632e-34  2.03493e-35
      low eigenvalue method done, cpu time[sec] = 0.426164, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.45e-34  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.33e-36  2.22e-16         1
         *Z       ---       ---  4.59e+57
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16 -2.07045e-34   -6.182e-35 -4.17307e-37  2.62937e-35  5.42419e-37 -8.46352e-37  1.59709e-39  1.77038e-51

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 21.813, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 470 K
            Well    Collision, 1/sec
              W1          1.0388e+09
      global relaxation matrix dimension = 1039
      setting global matrices ... done, cpu time[sec] = 0.023618, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 15.5442, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            16378.4      4834.34      1597.68      1785.47      225.013      18267.9      3110.02      49.8907
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.393473, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.028172, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.423283, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.07837e-10  6.30238e-35  7.56224e-36
      low eigenvalue method done, cpu time[sec] = 0.424648, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   6.3e-35  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.63e-36  2.22e-16         1
         *Z       ---       ---  4.59e+57
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16  -3.9769e-35  5.69436e-35  1.56368e-36  1.46053e-35  3.49501e-37 -1.32712e-36  1.30736e-40  3.64074e-51

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 20.9571, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 470 K
            Well    Collision, 1/sec
              W1         1.73134e+09
      global relaxation matrix dimension = 1039
      setting global matrices ... done, cpu time[sec] = 0.02334, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 15.558, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            9827.02       2900.6      958.609      1071.28      135.008      10960.7      1866.01      29.9344
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.393096, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.028195, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.422929, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.78961e-10   4.1959e-35  4.43802e-36
      low eigenvalue method done, cpu time[sec] = 0.424271, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   4.2e-35  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.42e-36  2.22e-16         1
         *Z       ---       ---  4.59e+57
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16  2.65836e-34  9.48636e-35  3.21609e-36   2.8662e-35  7.63633e-37  7.83099e-37 -2.40698e-40 -3.05925e-51

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 20.9732, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 470 K
            Well    Collision, 1/sec
              W1         2.42388e+09
      global relaxation matrix dimension = 1039
      setting global matrices ... done, cpu time[sec] = 0.023359, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 15.557, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             7019.3      2071.86      684.721      765.203       96.434       7829.1      1332.86      21.3817
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.393362, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.028178, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.423156, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.67261e-10  3.18284e-35  3.04225e-36
      low eigenvalue method done, cpu time[sec] = 0.424329, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.18e-35  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.83e-36  2.22e-16         1
         *Z       ---       ---  4.59e+57
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16  6.04404e-35  2.14774e-35  5.64119e-37  5.99662e-36  1.45892e-37 -3.09405e-37 -5.30646e-40 -5.46444e-51

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 20.9712, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 470 K
            Well    Collision, 1/sec
              W1         3.11641e+09
      global relaxation matrix dimension = 1039
      setting global matrices ... done, cpu time[sec] = 0.023399, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 15.5647, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            5459.45      1611.45       532.56      595.158      75.0042       6089.3      1036.67      16.6302
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.393129, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.028165, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.422927, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.14178e-10  2.57781e-35  2.26278e-36
      low eigenvalue method done, cpu time[sec] = 0.424258, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.58e-35  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.48e-36  2.22e-16         1
         *Z       ---       ---  4.59e+57
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16  1.21758e-34  3.18287e-35  1.06181e-36  8.74419e-36  2.46538e-37  4.35415e-37  1.45501e-40  5.78194e-50

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 20.9789, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 470 K
            Well    Collision, 1/sec
              W1         3.46268e+09
      global relaxation matrix dimension = 1039
      setting global matrices ... done, cpu time[sec] = 0.023515, elapsed time[sec] = 1
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 15.5632, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            4913.51       1450.3      479.304      535.642      67.5038      5480.37      933.005      14.9672
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.393044, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.028159, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.422849, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.06829e-10  2.35709e-35  1.99159e-36
      low eigenvalue method done, cpu time[sec] = 0.424043, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.36e-35  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.36e-36  2.22e-16         1
         *Z       ---       ---  4.59e+57
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16   8.8816e-35  4.07981e-35   1.1001e-36  8.44579e-36  2.34824e-37  1.04291e-38  1.68284e-40 -8.45333e-51

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 20.977, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 470 K
            Well    Collision, 1/sec
              W1         5.19402e+09
      global relaxation matrix dimension = 1039
      setting global matrices ... done, cpu time[sec] = 0.023372, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 15.5742, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            3275.67      966.868      319.536      357.095      45.0025      3653.58      622.003      9.97814
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.392477, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.028184, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.422306, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.75871e-11  1.66011e-35  1.19475e-36
      low eigenvalue method done, cpu time[sec] = 0.42362, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.66e-35  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.56e-37  2.22e-16         1
         *Z       ---       ---  4.59e+57
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16 -1.12231e-34 -3.34857e-35 -8.27718e-37 -3.86884e-36 -1.36641e-37 -1.09382e-37 -5.88309e-42  9.53495e-50

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 20.9899, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 470 K
            Well    Collision, 1/sec
              W1         6.92537e+09
      global relaxation matrix dimension = 1039
      setting global matrices ... done, cpu time[sec] = 0.023169, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 15.6004, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2456.75      725.151      239.652      267.821      33.7519      2740.18      466.502      7.48361
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.392235, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.028306, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.422171, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.30604e-10  1.28729e-35  8.15839e-37
      low eigenvalue method done, cpu time[sec] = 0.423476, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.29e-35  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.41e-37  2.22e-16         1
         *Z       ---       ---  4.59e+57
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16 -3.41227e-35 -4.97247e-36 -2.78167e-37 -1.91296e-36 -5.40032e-38 -2.01154e-37 -9.99105e-41  6.02187e-50

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 21.011, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 470 K
            Well    Collision, 1/sec
              W1         8.65671e+09
      global relaxation matrix dimension = 1039
      setting global matrices ... done, cpu time[sec] = 0.023328, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 15.6098, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             1965.4      580.121      191.722      214.257      27.0015      2192.15      373.202      5.98688
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.392273, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.028163, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.422058, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.14805e-10   1.0536e-35  6.00398e-37
      low eigenvalue method done, cpu time[sec] = 0.42349, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.05e-35  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.07e-37  2.22e-16         1
         *Z       ---       ---  4.59e+57
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16  3.56579e-35  9.21216e-36  1.82588e-37  4.98973e-37  2.71062e-38 -1.77113e-38  1.06466e-40  1.14693e-49

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 21.0186, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 470 K
            Well    Collision, 1/sec
              W1          1.0388e+10
      global relaxation matrix dimension = 1039
      setting global matrices ... done, cpu time[sec] = 0.023365, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 15.6198, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1637.84      483.434      159.768      178.547      22.5013      1826.79      311.002      4.98907
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.392214, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.028215, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.422076, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.13228e-10  8.92856e-36  4.64134e-37
      low eigenvalue method done, cpu time[sec] = 0.423392, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.93e-36  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.14e-37  2.22e-16         1
         *Z       ---       ---  4.59e+57
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16   1.0686e-36 -6.17894e-36 -1.66471e-37  -2.4076e-36 -5.26115e-38  5.67007e-37 -3.77727e-41  -1.4953e-49

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 21.0319, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 470 K
            Well    Collision, 1/sec
              W1         1.21194e+10
      global relaxation matrix dimension = 1039
      setting global matrices ... done, cpu time[sec] = 0.02326, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 15.6137, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1403.86      414.372      136.944      153.041      19.2868      1565.82      266.573      4.27635
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.392318, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.028164, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.422124, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.15928e-10  7.75278e-36  3.71572e-37
      low eigenvalue method done, cpu time[sec] = 0.423358, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.75e-36  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.46e-37  2.22e-16         1
         *Z       ---       ---  4.59e+57
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16  1.95618e-35  5.94819e-36  8.37552e-38 -1.80313e-37  7.97855e-39 -1.60965e-37  2.48988e-41 -1.61386e-49

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 21.0276, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 470 K
            Well    Collision, 1/sec
              W1         1.38507e+10
      global relaxation matrix dimension = 1039
      setting global matrices ... done, cpu time[sec] = 0.023258, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 15.6279, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1228.38      362.575      119.826      133.911      16.8759      1370.09      233.251       3.7418
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.392086, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.028175, elapsed time[sec] = 1
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.421884, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.57771e-11   6.8542e-36  3.05382e-37
      low eigenvalue method done, cpu time[sec] = 0.42311, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.85e-36  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.95e-37  2.22e-16         1
         *Z       ---       ---  4.59e+57
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16  -6.8943e-35 -2.13268e-35 -5.79865e-37 -4.25417e-36 -1.20581e-37   1.5792e-37 -3.28982e-41  8.18411e-50

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 21.0394, elapsed time[sec] = 2
   MasterEquation::set:  starts
      Temperature      = 480 K
      Energy reference = 50138 1/cm
      Energy step      = 80 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -87.7 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.00018
         W1 Well: collisional kernel bandwidth = 56
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.010625
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.012698
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.755937
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 10.5895
         W1 Well: minimal relaxation eigenvalue = 0.0570043
         W1 Well: maximal relaxation eigenvalue = 2.95783
         W1 Well:       grid size = 1022
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31622 1/cm
         B1 Barrier:        grid size = 627
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -21 1/cm
         B2 Barrier:        grid size = 625
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 137 1/cm
         B3 Barrier:        grid size = 685
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4662 1/cm
         B4 Barrier:        grid size = 704
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6182 1/cm
         B5 Barrier: nonpositive number of states at -23622 1/cm => truncating
         B5 Barrier:        grid size = 922
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23622 1/cm
         B6 Barrier:        grid size = 608
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1497 1/cm
         B7 Barrier:        grid size = 568
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4698 1/cm
         B8 Barrier:        grid size = 418
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16698 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 11.5046, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31622 -23622 3.34e+05 1.53e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -21 8.95e+16
         B2    138 2.69e+16
         B3  -4662 8.98e+15
         B4  -6182    1e+16
         B5 -23622 1.27e+15
         B6   1498 1.01e+17
         B7   4699 1.75e+16
         B8  16698 2.91e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  9.01e+18  1.87e+19  1.22e+14  9.73e+11  3.91e-12   1.4e+22  4.33e+26  1.08e+43
          R  1.11e-19         1      2.07  1.35e-05  1.08e-07  4.34e-31  1.56e+03   4.8e+07   1.2e+24
         P1  5.36e-20     0.483         1  6.52e-06  5.21e-08   2.1e-31       752  2.32e+07  5.79e+23
         P2  8.22e-15   7.4e+04  1.53e+05         1     0.008  3.22e-26  1.15e+08  3.56e+12  8.89e+28
         P3  1.03e-12  9.25e+06  1.92e+07       125         1  4.02e-24  1.44e+10  4.45e+14  1.11e+31
         P4  2.56e+11   2.3e+30  4.77e+30  3.11e+25  2.49e+23         1  3.59e+33  1.11e+38  2.76e+54
         P5  7.12e-23  0.000642   0.00133  8.67e-09  6.93e-11  2.79e-34         1  3.08e+04   7.7e+20
         P6  2.31e-27  2.08e-08  4.31e-08  2.81e-13  2.25e-15  9.04e-39  3.24e-05         1   2.5e+16
         P7  9.25e-44  8.33e-25  1.73e-24  1.12e-29     9e-32  3.62e-55   1.3e-21     4e-17         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  3.32e+15  6.87e+15  4.48e+10  3.58e+08  1.44e-15  5.17e+18  1.59e+23  3.98e+39
          R  3.02e-16         1      2.07  1.35e-05  1.08e-07  4.34e-31  1.56e+03   4.8e+07   1.2e+24
         P1  1.46e-16     0.483         1  6.52e-06  5.21e-08   2.1e-31       752  2.32e+07  5.79e+23
         P2  2.23e-11   7.4e+04  1.53e+05         1     0.008  3.22e-26  1.15e+08  3.56e+12  8.89e+28
         P3  2.79e-09  9.25e+06  1.92e+07       125         1  4.02e-24  1.44e+10  4.45e+14  1.11e+31
         P4  6.94e+14   2.3e+30  4.77e+30  3.11e+25  2.49e+23         1  3.59e+33  1.11e+38  2.76e+54
         P5  1.93e-19  0.000642   0.00133  8.67e-09  6.93e-11  2.79e-34         1  3.08e+04   7.7e+20
         P6  6.28e-24  2.08e-08  4.31e-08  2.81e-13  2.25e-15  9.04e-39  3.24e-05         1   2.5e+16
         P7  2.51e-40  8.33e-25  1.73e-24  1.12e-29     9e-32  3.62e-55   1.3e-21     4e-17         1
   MasterEquation::set:  done, cpu time[sec] = 11.511, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 480 K
            Well    Collision, 1/sec
              W1         3.41454e+08
      global relaxation matrix dimension = 1022
      setting global matrices ... done, cpu time[sec] = 0.694818, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 14.9784, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            51284.4      15397.6      5144.16      5734.18      725.147      57975.1      10011.5      166.881
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.378962, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.026909, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.407457, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.23581e-10  1.07032e-33   1.5913e-34
      low eigenvalue method done, cpu time[sec] = 0.408571, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.07e-33         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   6.1e-35         0         1
         *Z       ---       ---  9.91e+56
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.10343e-34  -3.0438e-34 -8.61474e-36 -1.24054e-34  -2.9374e-36  6.10586e-36  1.52797e-38  -2.9795e-50

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 20.9563, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 480 K
            Well    Collision, 1/sec
              W1         1.02436e+09
      global relaxation matrix dimension = 1022
      setting global matrices ... done, cpu time[sec] = 0.074991, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 14.9488, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            17094.8      5132.53      1714.72      1911.39      241.716        19325      3337.17      55.6271
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.378441, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.026948, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.407015, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.22618e-09  4.74395e-34  6.02027e-35
      low eigenvalue method done, cpu time[sec] = 0.40817, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.74e-34         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   2.7e-35         0         1
         *Z       ---       ---  9.91e+56
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0 -2.48682e-34 -4.56041e-35  1.17042e-36  1.30538e-35  1.70955e-37 -3.82019e-38  2.60443e-39   5.0552e-50

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 20.2492, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 480 K
            Well    Collision, 1/sec
              W1         1.70727e+09
      global relaxation matrix dimension = 1022
      setting global matrices ... done, cpu time[sec] = 0.157623, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 14.9511, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            10256.9      3079.52      1028.83      1146.84      145.029        11595       2002.3      33.3762
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.378308, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.026884, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.406805, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.20261e-10  3.17985e-34  3.56544e-35
      low eigenvalue method done, cpu time[sec] = 0.407941, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.18e-34         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.81e-35         0         1
         *Z       ---       ---  9.91e+56
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  -1.2003e-34 -6.35392e-35 -7.26486e-37  1.42734e-36 -1.01558e-38  9.31637e-37     4.86e-39  4.32154e-50

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 20.3424, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 480 K
            Well    Collision, 1/sec
              W1         2.39018e+09
      global relaxation matrix dimension = 1022
      setting global matrices ... done, cpu time[sec] = 0.144156, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 14.9503, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            7326.35      2199.65       734.88      819.168      103.592      8282.16      1430.21      23.8402
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.37769, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.026862, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.406146, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   5.4304e-11  2.42192e-34  2.45942e-35
      low eigenvalue method done, cpu time[sec] = 0.407354, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.42e-34         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.38e-35         0         1
         *Z       ---       ---  9.91e+56
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0 -6.29676e-34 -1.43496e-34 -4.73078e-36  -3.0021e-35 -9.07573e-37 -2.04857e-36  8.79531e-40  5.35944e-50

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 20.3586, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 480 K
            Well    Collision, 1/sec
              W1         3.07309e+09
      global relaxation matrix dimension = 1022
      setting global matrices ... done, cpu time[sec] = 0.116199, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 14.9551, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            5698.27      1710.84      571.573      637.131      80.5718      6441.68      1112.39      18.5424
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.377879, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.026889, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.406372, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.05034e-10  1.96708e-34  1.83804e-35
      low eigenvalue method done, cpu time[sec] = 0.407505, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.97e-34         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.12e-35         0         1
         *Z       ---       ---  9.91e+56
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0 -9.92425e-35 -3.83821e-35  -1.2852e-36 -1.53246e-35 -3.91831e-37 -2.04872e-36 -7.38005e-40    9.046e-50

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 20.2686, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 480 K
            Well    Collision, 1/sec
              W1         3.41454e+09
      global relaxation matrix dimension = 1022
      setting global matrices ... done, cpu time[sec] = 0.179401, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 14.9705, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            5128.44      1539.76      514.416      573.418      72.5147      5797.51      1001.15      16.6881
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.377273, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.026906, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.405779, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.78188e-10  1.80068e-34  1.62103e-35
      low eigenvalue method done, cpu time[sec] = 0.406965, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.8e-34         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.03e-35         0         1
         *Z       ---       ---  9.91e+56
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0 -5.63046e-34 -1.43933e-34 -3.02548e-36 -8.13067e-36 -4.49085e-37  -1.0233e-36 -7.65104e-40  4.14585e-49

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 20.385, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 480 K
            Well    Collision, 1/sec
              W1         5.12181e+09
      global relaxation matrix dimension = 1022
      setting global matrices ... done, cpu time[sec] = 0.14865, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 14.9636, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            3418.96      1026.51      342.944      382.278      48.3431      3865.01      667.433      11.1254
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.376909, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.026873, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.405373, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.13275e-10  1.27336e-34  9.80156e-36
      low eigenvalue method done, cpu time[sec] = 0.406514, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.27e-34         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.26e-36         0         1
         *Z       ---       ---  9.91e+56
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0 -1.43103e-34 -3.09382e-35 -9.65732e-37 -1.99698e-36    -1.11e-37  -1.4269e-36  4.05411e-40 -2.45387e-49

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 20.3927, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 480 K
            Well    Collision, 1/sec
              W1         6.82909e+09
      global relaxation matrix dimension = 1022
      setting global matrices ... done, cpu time[sec] = 0.099528, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 14.9931, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2564.22      769.879      257.208      286.709      36.2573      2898.76      500.575      8.34406
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.376561, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.026874, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.405026, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.48982e-11  9.89935e-35  6.73105e-36
      low eigenvalue method done, cpu time[sec] = 0.40617, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   9.9e-35         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.64e-36         0         1
         *Z       ---       ---  9.91e+56
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0   1.0786e-34   5.0691e-35  1.71254e-36  1.70106e-35  4.36042e-37  4.13269e-37  2.23996e-40  6.08272e-50

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 20.3468, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 480 K
            Well    Collision, 1/sec
              W1         8.53636e+09
      global relaxation matrix dimension = 1022
      setting global matrices ... done, cpu time[sec] = 0.124682, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 14.9976, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2051.38      615.903      205.766      229.367      29.0059         2319       400.46      6.67525
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.376406, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.026885, elapsed time[sec] = 1
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.40486, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.82195e-10  8.11708e-35  4.97542e-36
      low eigenvalue method done, cpu time[sec] = 0.405971, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.12e-35         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.63e-36         0         1
         *Z       ---       ---  9.91e+56
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  5.98698e-35  2.50255e-35  8.06919e-37  7.20683e-36  1.90718e-37    6.755e-37  1.89843e-40  6.75339e-49

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 20.376, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 480 K
            Well    Collision, 1/sec
              W1         1.02436e+10
      global relaxation matrix dimension = 1022
      setting global matrices ... done, cpu time[sec] = 0.124175, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 15.0012, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1709.48      513.253      171.472      191.139      24.1716       1932.5      333.717      5.56271
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.375985, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.026894, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.404473, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.56067e-11  6.88824e-35  3.86005e-36
      low eigenvalue method done, cpu time[sec] = 0.405658, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.89e-35         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.93e-36         0         1
         *Z       ---       ---  9.91e+56
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  3.28225e-34  5.97948e-35  1.82607e-36  8.07414e-36  2.95081e-37  2.15503e-36  6.79389e-41  4.98041e-49

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 20.2861, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 480 K
            Well    Collision, 1/sec
              W1         1.19509e+10
      global relaxation matrix dimension = 1022
      setting global matrices ... done, cpu time[sec] = 0.214341, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 15.0157, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1465.27      439.931      146.976      163.834      20.7185      1656.43      286.043      4.76803
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.376472, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.026869, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.404935, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.25482e-11  5.98771e-35   3.0996e-36
      low eigenvalue method done, cpu time[sec] = 0.406225, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.99e-35         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.41e-36         0         1
         *Z       ---       ---  9.91e+56
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0 -3.98843e-34 -6.37028e-35 -2.22039e-36  -8.8296e-36  -3.4244e-37 -4.36977e-36 -2.23002e-40 -3.01849e-49

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 20.4795, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 480 K
            Well    Collision, 1/sec
              W1         1.36582e+10
      global relaxation matrix dimension = 1022
      setting global matrices ... done, cpu time[sec] = 0.127626, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 15.0035, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1282.11      384.939      128.604      143.354      18.1287      1449.38      250.288      4.17203
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.376473, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.026905, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.404966, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.57504e-11  5.29846e-35  2.55409e-36
      low eigenvalue method done, cpu time[sec] = 0.406105, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0   5.3e-35         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.02e-36         0         1
         *Z       ---       ---  9.91e+56
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.72435e-35  3.27794e-36  3.94876e-39 -1.66458e-36 -3.03255e-38 -1.81092e-37  2.11756e-42 -8.94554e-49

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 20.4103, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 490 K
      Energy reference = 50833 1/cm
      Energy step      = 82 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -87.6 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.015397
         W1 Well: collisional kernel bandwidth = 56
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.109891
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.012315
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.758686
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 10.038
         W1 Well: minimal relaxation eigenvalue = 0.0563797
         W1 Well: maximal relaxation eigenvalue = 1.4616
         W1 Well:       grid size = 1005
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31577 1/cm
         B1 Barrier:        grid size = 620
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -7 1/cm
         B2 Barrier:        grid size = 618
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 156 1/cm
         B3 Barrier:        grid size = 677
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4681 1/cm
         B4 Barrier:        grid size = 696
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6238 1/cm
         B5 Barrier: nonpositive number of states at -23131 1/cm => truncating
         B5 Barrier:        grid size = 902
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23131 1/cm
         B6 Barrier:        grid size = 602
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1468 1/cm
         B7 Barrier:        grid size = 563
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4667 1/cm
         B8 Barrier:        grid size = 416
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16721 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 11.0778, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31577 -23131 4.78e+05 1.68e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -7 1.01e+17
         B2    157 3.08e+16
         B3  -4681 1.04e+16
         B4  -6238 1.16e+16
         B5 -23131 1.47e+15
         B6   1469 1.15e+17
         B7   4667 2.02e+16
         B8  16721  3.5e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  1.23e+18  2.52e+18  2.21e+13  1.96e+11   2.4e-12  1.76e+21  4.51e+25  5.45e+41
          R  8.13e-19         1      2.05   1.8e-05  1.59e-07  1.95e-30  1.43e+03  3.67e+07  4.43e+23
         P1  3.97e-19     0.488         1  8.77e-06  7.76e-08  9.53e-31       699  1.79e+07  2.16e+23
         P2  4.52e-14  5.56e+04  1.14e+05         1   0.00884  1.09e-25  7.97e+07  2.04e+12  2.46e+28
         P3  5.11e-12  6.29e+06  1.29e+07       113         1  1.23e-23  9.02e+09  2.31e+14  2.79e+30
         P4  4.16e+11  5.12e+29  1.05e+30  9.21e+24  8.14e+22         1  7.34e+32  1.88e+37  2.27e+53
         P5  5.67e-22  0.000698   0.00143  1.25e-08  1.11e-10  1.36e-33         1  2.56e+04  3.09e+20
         P6  2.22e-26  2.73e-08  5.59e-08   4.9e-13  4.33e-15  5.32e-38  3.91e-05         1  1.21e+16
         P7  1.84e-42  2.26e-24  4.63e-24  4.06e-29  3.59e-31  4.41e-54  3.24e-21  8.28e-17         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  4.61e+14  9.44e+14  8.28e+09  7.32e+07     9e-16   6.6e+17  1.69e+22  2.04e+38
          R  2.17e-15         1      2.05   1.8e-05  1.59e-07  1.95e-30  1.43e+03  3.67e+07  4.43e+23
         P1  1.06e-15     0.488         1  8.77e-06  7.76e-08  9.53e-31       699  1.79e+07  2.16e+23
         P2  1.21e-10  5.56e+04  1.14e+05         1   0.00884  1.09e-25  7.97e+07  2.04e+12  2.46e+28
         P3  1.37e-08  6.29e+06  1.29e+07       113         1  1.23e-23  9.02e+09  2.31e+14  2.79e+30
         P4  1.11e+15  5.12e+29  1.05e+30  9.21e+24  8.14e+22         1  7.34e+32  1.88e+37  2.27e+53
         P5  1.51e-18  0.000698   0.00143  1.25e-08  1.11e-10  1.36e-33         1  2.56e+04  3.09e+20
         P6  5.92e-23  2.73e-08  5.59e-08   4.9e-13  4.33e-15  5.32e-38  3.91e-05         1  1.21e+16
         P7   4.9e-39  2.26e-24  4.63e-24  4.06e-29  3.59e-31  4.41e-54  3.24e-21  8.28e-17         1
   MasterEquation::set:  done, cpu time[sec] = 11.0843, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 490 K
            Well    Collision, 1/sec
              W1         3.36814e+08
      global relaxation matrix dimension = 1005
      setting global matrices ... done, cpu time[sec] = 0.676961, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 14.532, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            53459.5      16322.5      5513.45      6130.54      777.896        61237      10722.7      185.559
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.359713, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.026858, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.387138, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.57483e-09  7.18728e-33  1.12092e-33
      low eigenvalue method done, cpu time[sec] = 0.388208, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.19e-33         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.05e-34         0         1
         *Z       ---       ---   2.3e+56
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.20317e-33  8.05558e-34  1.21811e-35 -3.19337e-35  4.67734e-38  5.72743e-36  1.10136e-37  7.12808e-49

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 20.1247, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 490 K
            Well    Collision, 1/sec
              W1         1.01044e+09
      global relaxation matrix dimension = 1005
      setting global matrices ... done, cpu time[sec] = 0.423044, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 14.4697, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            17819.8      5440.83      1837.82      2043.51      259.299      20412.3      3574.23      61.8531
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.358531, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.026854, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.385799, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -9.48748e-10  3.23755e-33  4.31446e-34
      low eigenvalue method done, cpu time[sec] = 0.386794, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.24e-33         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.83e-34         0         1
         *Z       ---       ---   2.3e+56
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  6.24848e-34  7.08962e-34  1.82772e-35  2.14673e-34  5.22338e-36 -1.09852e-35 -1.69985e-38 -1.02306e-48

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 19.8381, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 490 K
            Well    Collision, 1/sec
              W1         1.68407e+09
      global relaxation matrix dimension = 1005
      setting global matrices ... done, cpu time[sec] = 0.41128, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 14.4707, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            10691.9       3264.5      1102.69      1226.11      155.579      12247.4      2144.54      37.1118
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.35863, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.026854, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.385902, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -2.2844e-10  2.18427e-33  2.57788e-34
      low eigenvalue method done, cpu time[sec] = 0.387004, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.18e-33         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.23e-34         0         1
         *Z       ---       ---   2.3e+56
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0 -7.20905e-34 -1.39491e-34 -4.39505e-36 -1.83858e-35 -6.76437e-37 -8.13245e-36   5.4087e-39 -2.73724e-50

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 19.8111, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 490 K
            Well    Collision, 1/sec
              W1          2.3577e+09
      global relaxation matrix dimension = 1005
      setting global matrices ... done, cpu time[sec] = 0.424792, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 14.484, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            7637.07      2331.79      787.635      875.792      111.128      8748.15      1531.81      26.5085
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.358245, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.026775, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.385436, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.22327e-10  1.67017e-33  1.78905e-34
      low eigenvalue method done, cpu time[sec] = 0.386478, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.67e-33         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.42e-35         0         1
         *Z       ---       ---   2.3e+56
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0   1.0021e-33  3.38358e-34  7.84717e-36  2.05316e-35  9.86107e-37  6.89156e-36   7.8352e-39  -6.8536e-49

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 19.8709, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 490 K
            Well    Collision, 1/sec
              W1         3.03132e+09
      global relaxation matrix dimension = 1005
      setting global matrices ... done, cpu time[sec] = 0.394611, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 14.492, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            5939.94      1813.61      612.605      681.171      86.4328      6804.11      1191.41      20.6177
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.357805, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.026831, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.38505, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -4.0668e-10  1.36022e-33  1.34327e-34
      low eigenvalue method done, cpu time[sec] = 0.386072, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.36e-33         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.67e-35         0         1
         *Z       ---       ---   2.3e+56
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  9.35398e-34  1.86177e-34  6.42746e-36  2.56566e-35  9.55911e-37  5.25156e-36  2.27157e-39 -1.13824e-48

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 19.8041, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 490 K
            Well    Collision, 1/sec
              W1         3.36814e+09
      global relaxation matrix dimension = 1005
      setting global matrices ... done, cpu time[sec] = 0.439074, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 14.4954, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            5345.95      1632.25      551.345      613.054      77.7896       6123.7      1072.27      18.5559
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.357738, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.026775, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.384926, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   2.2344e-10  1.24652e-33  1.18702e-34
      low eigenvalue method done, cpu time[sec] = 0.38596, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.25e-33         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.03e-35         0         1
         *Z       ---       ---   2.3e+56
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0 -4.35646e-34 -2.55622e-34 -6.98285e-36 -6.19118e-35 -1.62202e-36  7.76433e-36 -2.89514e-40  1.26258e-48

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 19.8564, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 490 K
            Well    Collision, 1/sec
              W1          5.0522e+09
      global relaxation matrix dimension = 1005
      setting global matrices ... done, cpu time[sec] = 0.431678, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 14.4967, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            3563.96      1088.17      367.563      408.703      51.8597      4082.47      714.846      12.3706
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.357382, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.026815, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.384618, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.40364e-10  8.84967e-34  7.23293e-35
      low eigenvalue method done, cpu time[sec] = 0.38561, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.85e-34         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.99e-35         0         1
         *Z       ---       ---   2.3e+56
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  9.39881e-34  2.47353e-34  7.49527e-36  5.25063e-35  1.54681e-36  5.23486e-36  1.08139e-39  1.45827e-48

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 19.8709, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 490 K
            Well    Collision, 1/sec
              W1         6.73627e+09
      global relaxation matrix dimension = 1005
      setting global matrices ... done, cpu time[sec] = 0.413338, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 14.4922, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2672.97      816.125      275.672      306.527      38.8948      3061.85      536.134      9.27796
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.357385, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.026778, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.384577, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.68573e-11  6.89732e-34  4.99472e-35
      low eigenvalue method done, cpu time[sec] = 0.38562, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   6.9e-34         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.89e-35         0         1
         *Z       ---       ---   2.3e+56
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0 -1.91075e-34  7.44344e-35  9.51563e-37  1.68361e-35  3.58704e-37 -4.72195e-36  1.24657e-39 -6.20082e-49

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 19.8563, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 490 K
            Well    Collision, 1/sec
              W1         8.42034e+09
      global relaxation matrix dimension = 1005
      setting global matrices ... done, cpu time[sec] = 0.405714, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 14.4994, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2138.38        652.9      220.538      245.222      31.1158      2449.48      428.908      7.42237
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.357261, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.026794, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.384468, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.40704e-10  5.66576e-34  3.70797e-35
      low eigenvalue method done, cpu time[sec] = 0.385449, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.67e-34         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.19e-35         0         1
         *Z       ---       ---   2.3e+56
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0 -5.33911e-34 -1.29525e-34 -3.66712e-36 -2.20457e-35 -6.73285e-37 -1.13645e-36 -1.41646e-39 -1.74783e-49

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 19.8224, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 490 K
            Well    Collision, 1/sec
              W1         1.01044e+10
      global relaxation matrix dimension = 1005
      setting global matrices ... done, cpu time[sec] = 0.435204, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 14.5264, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1781.98      544.083      183.782      204.351      25.9299      2041.23      357.423      6.18531
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.356936, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.026873, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.384228, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.90624e-12  4.81463e-34  2.88691e-35
      low eigenvalue method done, cpu time[sec] = 0.385197, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.81e-34         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.71e-35         0         1
         *Z       ---       ---   2.3e+56
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  -2.8072e-34 -5.00859e-35 -8.70239e-37  7.17074e-36  5.86407e-38 -1.61763e-36 -3.21339e-40  5.72433e-48

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 19.8964, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 490 K
            Well    Collision, 1/sec
              W1         1.17885e+10
      global relaxation matrix dimension = 1005
      setting global matrices ... done, cpu time[sec] = 0.423348, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 14.5655, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1527.41      466.357      157.527      175.158      22.2256      1749.63      306.363      5.30169
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.356915, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.026882, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.384209, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.50549e-10  4.18977e-34  2.32509e-35
      low eigenvalue method done, cpu time[sec] = 0.38521, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.19e-34         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.36e-35         0         1
         *Z       ---       ---   2.3e+56
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.79633e-34  6.45606e-35  1.74785e-36  9.35528e-36  2.96826e-37 -6.51187e-37 -3.24747e-40  3.40794e-48

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 19.9274, elapsed time[sec] = 2
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 490 K
            Well    Collision, 1/sec
              W1         1.34725e+10
      global relaxation matrix dimension = 1005
      setting global matrices ... done, cpu time[sec] = 0.417592, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 14.519, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1336.49      408.062      137.836      153.264      19.4474      1530.93      268.067      4.63898
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.356776, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.026876, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.384051, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -7.37351e-11   3.7108e-34  1.92082e-35
      low eigenvalue method done, cpu time[sec] = 0.38502, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.71e-34         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.09e-35         0         1
         *Z       ---       ---   2.3e+56
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.58572e-34  4.85707e-35  1.80918e-36  1.09907e-35  3.56964e-37  1.86021e-36  1.80994e-40  5.35433e-48

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 19.7969, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 500 K
      Energy reference = 51528 1/cm
      Energy step      = 83 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -87.5 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.01422
         W1 Well: collisional kernel bandwidth = 56
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.501845
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.01229
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.705836
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 10.1151
         W1 Well: minimal relaxation eigenvalue = 0.0557929
         W1 Well: maximal relaxation eigenvalue = 3.62613
         W1 Well:       grid size = 1002
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31638 1/cm
         B1 Barrier:        grid size = 621
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -15 1/cm
         B2 Barrier:        grid size = 619
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 151 1/cm
         B3 Barrier:        grid size = 677
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4662 1/cm
         B4 Barrier:        grid size = 696
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6240 1/cm
         B5 Barrier: nonpositive number of states at -23255 1/cm => truncating
         B5 Barrier:        grid size = 901
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23254 1/cm
         B6 Barrier:        grid size = 603
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1478 1/cm
         B7 Barrier:        grid size = 564
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4715 1/cm
         B8 Barrier:        grid size = 419
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16751 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 11.577, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31638 -23254 4.37e+05 1.83e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -15 1.13e+17
         B2    152 3.51e+16
         B3  -4662  1.2e+16
         B4  -6240 1.33e+16
         B5 -23254 1.69e+15
         B6   1479 1.31e+17
         B7   4716 2.33e+16
         B8  16751 4.18e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  1.82e+17  3.69e+17  4.31e+12  4.19e+10   1.5e-12  2.41e+20  5.15e+24  3.09e+40
          R  5.49e-18         1      2.03  2.37e-05   2.3e-07  8.26e-30  1.32e+03  2.83e+07   1.7e+23
         P1  2.71e-18     0.493         1  1.17e-05  1.14e-07  4.08e-30       652   1.4e+07  8.38e+22
         P2  2.32e-13  4.23e+04  8.57e+04         1   0.00973  3.49e-25  5.59e+07   1.2e+12  7.18e+27
         P3  2.39e-11  4.34e+06  8.81e+06       103         1  3.59e-23  5.74e+09  1.23e+14  7.38e+29
         P4  6.65e+11  1.21e+29  2.45e+29  2.86e+24  2.79e+22         1   1.6e+32  3.42e+36  2.06e+52
         P5  4.15e-21  0.000756   0.00153  1.79e-08  1.74e-10  6.25e-33         1  2.14e+04  1.29e+20
         P6  1.94e-25  3.53e-08  7.17e-08  8.36e-13  8.14e-15  2.92e-37  4.67e-05         1  6.01e+15
         P7  3.23e-41  5.88e-24  1.19e-23  1.39e-28  1.35e-30  4.86e-53  7.78e-21  1.66e-16         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  6.93e+13   1.4e+14  1.64e+09  1.59e+07  5.72e-16  9.16e+16  1.96e+21  1.18e+37
          R  1.44e-14         1      2.03  2.37e-05   2.3e-07  8.26e-30  1.32e+03  2.83e+07   1.7e+23
         P1  7.12e-15     0.493         1  1.17e-05  1.14e-07  4.08e-30       652   1.4e+07  8.38e+22
         P2   6.1e-10  4.23e+04  8.57e+04         1   0.00973  3.49e-25  5.59e+07   1.2e+12  7.18e+27
         P3  6.27e-08  4.34e+06  8.81e+06       103         1  3.59e-23  5.74e+09  1.23e+14  7.38e+29
         P4  1.75e+15  1.21e+29  2.45e+29  2.86e+24  2.79e+22         1   1.6e+32  3.42e+36  2.06e+52
         P5  1.09e-17  0.000756   0.00153  1.79e-08  1.74e-10  6.25e-33         1  2.14e+04  1.29e+20
         P6   5.1e-22  3.53e-08  7.17e-08  8.36e-13  8.14e-15  2.92e-37  4.67e-05         1  6.01e+15
         P7   8.5e-38  5.88e-24  1.19e-23  1.39e-28  1.35e-30  4.86e-53  7.78e-21  1.66e-16         1
   MasterEquation::set:  done, cpu time[sec] = 11.5837, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 500 K
            Well    Collision, 1/sec
              W1         3.32336e+08
      global relaxation matrix dimension = 1002
      setting global matrices ... done, cpu time[sec] = 0.658874, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 14.2932, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            55658.4      17277.7      5901.43      6546.02      833.364      64588.1      11463.8      205.789
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.358169, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.02557, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.385242, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -9.02152e-10  4.52945e-32   7.3737e-33
      low eigenvalue method done, cpu time[sec] = 0.386222, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.53e-32         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.53e-33         0         1
         *Z       ---       ---  5.68e+55
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.61378e-33  1.11028e-33  3.59845e-35  4.50645e-34  1.06717e-35  -4.6191e-35 -5.02746e-37  2.70283e-49

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 19.8738, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 500 K
            Well    Collision, 1/sec
              W1         9.97009e+08
      global relaxation matrix dimension = 1002
      setting global matrices ... done, cpu time[sec] = 0.410722, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 14.2635, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            18552.8      5759.22      1967.14      2182.01      277.788      21529.4      3821.26      68.5962
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.356064, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.025477, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.383075, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   5.5073e-10  2.07216e-32  2.88608e-33
      low eigenvalue method done, cpu time[sec] = 0.384073, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.07e-32         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.16e-33         0         1
         *Z       ---       ---  5.68e+55
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.96974e-33  1.08135e-33  3.66893e-35  2.68554e-34  7.28452e-36 -5.10595e-36 -5.40697e-38  1.04016e-49

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 19.5791, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 500 K
            Well    Collision, 1/sec
              W1         1.66168e+09
      global relaxation matrix dimension = 1002
      setting global matrices ... done, cpu time[sec] = 0.447229, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 14.2812, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            11131.7      3455.53      1180.29       1309.2      166.673      12917.6      2292.76      41.1577
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.356071, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.02553, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.383119, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.13956e-10  1.40681e-32   1.7393e-33
      low eigenvalue method done, cpu time[sec] = 0.384099, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.41e-32         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.85e-34         0         1
         *Z       ---       ---  5.68e+55
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  3.87004e-33  1.55336e-33   4.5333e-35  3.01967e-34  8.82549e-36 -3.75655e-37  6.48391e-39  5.09177e-48

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 19.6843, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 500 K
            Well    Collision, 1/sec
              W1         2.32635e+09
      global relaxation matrix dimension = 1002
      setting global matrices ... done, cpu time[sec] = 0.395088, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 14.295, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             7951.2      2468.24      843.062      935.145      119.052      9226.87      1637.68      29.3984
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.355849, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.025509, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.38288, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.20529e-10  1.07978e-32  1.21424e-33
      low eigenvalue method done, cpu time[sec] = 0.383843, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.08e-32         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.02e-34         0         1
         *Z       ---       ---  5.68e+55
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  6.02009e-34 -1.73249e-34 -6.57054e-36 -1.64111e-34 -3.44636e-36  1.78154e-35 -2.14334e-38 -9.22277e-49

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 19.5293, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 500 K
            Well    Collision, 1/sec
              W1         2.99103e+09
      global relaxation matrix dimension = 1002
      setting global matrices ... done, cpu time[sec] = 0.523217, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 14.2971, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            6184.26      1919.74      655.715      727.335       92.596      7176.45      1273.75      22.8654
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.35608, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.025521, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.38314, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.96954e-10  8.81738e-33  9.15832e-34
      low eigenvalue method done, cpu time[sec] = 0.384116, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.82e-33         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.92e-34         0         1
         *Z       ---       ---  5.68e+55
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.96613e-33  1.66026e-34  9.46688e-36  7.14812e-35  2.16862e-36  1.53905e-35  5.83537e-39  1.08412e-49

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 19.6259, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 500 K
            Well    Collision, 1/sec
              W1         3.32336e+09
      global relaxation matrix dimension = 1002
      setting global matrices ... done, cpu time[sec] = 0.540508, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 14.2914, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            5565.84      1727.77      590.143      654.602      83.3364      6458.81      1146.38      20.5789
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.35573, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.025542, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.382812, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.56351e-11    8.089e-33  8.10861e-34
      low eigenvalue method done, cpu time[sec] = 0.383775, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.09e-33         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.51e-34         0         1
         *Z       ---       ---  5.68e+55
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  -7.0539e-33 -1.82607e-33 -5.17395e-35 -2.97146e-34  -9.4504e-36 -2.33387e-35  2.06625e-39  -2.6773e-49

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 19.7706, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 500 K
            Well    Collision, 1/sec
              W1         4.98504e+09
      global relaxation matrix dimension = 1002
      setting global matrices ... done, cpu time[sec] = 0.399708, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 14.2996, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            3710.56      1151.84      393.429      436.401      55.5576      4305.87      764.253      13.7192
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.355214, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.025516, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.38229, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.03335e-11  5.76498e-33  4.97822e-34
      low eigenvalue method done, cpu time[sec] = 0.383302, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.76e-33         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.22e-34         0         1
         *Z       ---       ---  5.68e+55
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0 -8.24621e-34 -3.34757e-34 -1.00505e-35 -8.44789e-35 -2.24103e-36  -3.3009e-36  3.13022e-39  5.07508e-48

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 19.6072, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 500 K
            Well    Collision, 1/sec
              W1         6.64672e+09
      global relaxation matrix dimension = 1002
      setting global matrices ... done, cpu time[sec] = 0.446122, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 14.3359, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2782.92      863.884      295.072      327.301      41.6682       3229.4       573.19      10.2894
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.35473, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.025527, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.381808, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.09311e-11  4.50436e-33  3.45645e-34
      low eigenvalue method done, cpu time[sec] = 0.382759, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0   4.5e-33         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.51e-34         0         1
         *Z       ---       ---  5.68e+55
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0 -5.09719e-34 -1.32448e-34 -3.97598e-36 -3.11638e-35 -8.83997e-37   2.2059e-36   2.5546e-39  2.43618e-48

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 19.6477, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 500 K
            Well    Collision, 1/sec
              W1          8.3084e+09
      global relaxation matrix dimension = 1002
      setting global matrices ... done, cpu time[sec] = 0.481389, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 14.3133, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2226.34      691.107      236.057      261.841      33.3345      2583.52      458.552      8.23155
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.355148, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.025509, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.382196, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -7.60898e-11   3.7067e-33  2.57689e-34
      low eigenvalue method done, cpu time[sec] = 0.383169, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.71e-33         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.07e-34         0         1
         *Z       ---       ---  5.68e+55
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  9.14542e-34  1.84697e-34  7.95743e-36  5.26231e-35  1.55813e-36  1.27512e-35 -2.56085e-39  1.04381e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 19.7476, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 500 K
            Well    Collision, 1/sec
              W1         9.97009e+09
      global relaxation matrix dimension = 1002
      setting global matrices ... done, cpu time[sec] = 0.397168, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 14.3373, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1855.28      575.922      196.714      218.201      27.7788      2152.94      382.126      6.85962
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.354504, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.025478, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.381521, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.79377e-11  3.15418e-33  2.01326e-34
      low eigenvalue method done, cpu time[sec] = 0.382495, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.15e-33         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.76e-34         0         1
         *Z       ---       ---  5.68e+55
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0 -2.90094e-33 -5.18475e-34 -1.58177e-35 -6.22607e-35 -2.42766e-36 -1.07366e-35  2.74046e-39  -6.2022e-48

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 19.6347, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 500 K
            Well    Collision, 1/sec
              W1         1.16318e+10
      global relaxation matrix dimension = 1002
      setting global matrices ... done, cpu time[sec] = 0.450541, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 14.338, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1590.24      493.648      168.612      187.029      23.8104      1845.37      327.537      5.87968
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.354392, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.025477, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.381394, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.52446e-11  2.74781e-33  1.62621e-34
      low eigenvalue method done, cpu time[sec] = 0.382331, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.75e-33         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.53e-34         0         1
         *Z       ---       ---  5.68e+55
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0 -3.20413e-34 -1.48678e-34 -3.01775e-36 -1.98219e-35 -6.18598e-37  1.68189e-36  9.97362e-40   2.7455e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 19.679, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 500 K
            Well    Collision, 1/sec
              W1         1.32934e+10
      global relaxation matrix dimension = 1002
      setting global matrices ... done, cpu time[sec] = 0.465165, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 14.3304, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1391.46      431.942      147.536       163.65      20.8341       1614.7      286.595      5.14472
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.354201, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.025543, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.381291, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.48483e-10  2.43586e-33  1.34686e-34
      low eigenvalue method done, cpu time[sec] = 0.382292, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.44e-33         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.36e-34         0         1
         *Z       ---       ---  5.68e+55
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  8.97126e-34  5.77533e-35  3.10448e-36 -1.87742e-36  3.01087e-37  1.59608e-35 -5.98479e-40 -6.32723e-48

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 19.6874, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 510 K
      Energy reference = 52223 1/cm
      Energy step      = 85 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -87.4 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.014313
         W1 Well: collisional kernel bandwidth = 56
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.47124
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.011913
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 4.82662
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 9.69286
         W1 Well: minimal relaxation eigenvalue = 0.0552252
         W1 Well: maximal relaxation eigenvalue = 1.52196
         W1 Well:       grid size = 986
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31587 1/cm
         B1 Barrier:        grid size = 615
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -52 1/cm
         B2 Barrier:        grid size = 612
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 202 1/cm
         B3 Barrier:        grid size = 669
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4641 1/cm
         B4 Barrier:        grid size = 688
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6257 1/cm
         B5 Barrier: nonpositive number of states at -23257 1/cm => truncating
         B5 Barrier:        grid size = 888
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23257 1/cm
         B6 Barrier:        grid size = 597
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1478 1/cm
         B7 Barrier:        grid size = 559
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4708 1/cm
         B8 Barrier:        grid size = 418
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16693 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 15.1598, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31587 -23257 4.36e+05    2e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -52 1.27e+17
         B2    203 4.01e+16
         B3  -4641 1.38e+16
         B4  -6257 1.53e+16
         B5 -23257 1.96e+15
         B6   1478 1.49e+17
         B7   4708 2.68e+16
         B8  16693 4.99e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  2.89e+16  5.81e+16  8.91e+11  9.51e+09  9.57e-13  3.54e+19  6.38e+23  1.96e+39
          R  3.46e-17         1      2.01  3.08e-05  3.29e-07  3.31e-29  1.22e+03   2.2e+07  6.78e+22
         P1  1.72e-17     0.498         1  1.53e-05  1.64e-07  1.65e-29       609   1.1e+07  3.37e+22
         P2  1.12e-12  3.25e+04  6.52e+04         1    0.0107  1.07e-24  3.97e+07  7.16e+11   2.2e+27
         P3  1.05e-10  3.04e+06  6.11e+06      93.7         1  1.01e-22  3.72e+09  6.71e+13  2.06e+29
         P4  1.05e+12  3.02e+28  6.07e+28  9.31e+23  9.94e+21         1   3.7e+31  6.67e+35  2.05e+51
         P5  2.83e-20  0.000818   0.00164  2.52e-08  2.69e-10   2.7e-32         1   1.8e+04  5.54e+19
         P6  1.57e-24  4.54e-08   9.1e-08   1.4e-12  1.49e-14   1.5e-36  5.55e-05         1  3.07e+15
         P7   5.1e-40  1.48e-23  2.96e-23  4.54e-28  4.85e-30  4.88e-52  1.81e-20  3.25e-16         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  1.12e+13  2.25e+13  3.45e+08  3.68e+06  3.71e-16  1.37e+16  2.47e+20  7.59e+35
          R  8.92e-14         1      2.01  3.08e-05  3.29e-07  3.31e-29  1.22e+03   2.2e+07  6.78e+22
         P1  4.44e-14     0.498         1  1.53e-05  1.64e-07  1.65e-29       609   1.1e+07  3.37e+22
         P2   2.9e-09  3.25e+04  6.52e+04         1    0.0107  1.07e-24  3.97e+07  7.16e+11   2.2e+27
         P3  2.71e-07  3.04e+06  6.11e+06      93.7         1  1.01e-22  3.72e+09  6.71e+13  2.06e+29
         P4   2.7e+15  3.02e+28  6.07e+28  9.31e+23  9.94e+21         1   3.7e+31  6.67e+35  2.05e+51
         P5  7.29e-17  0.000818   0.00164  2.52e-08  2.69e-10   2.7e-32         1   1.8e+04  5.54e+19
         P6  4.05e-21  4.54e-08   9.1e-08   1.4e-12  1.49e-14   1.5e-36  5.55e-05         1  3.07e+15
         P7  1.32e-36  1.48e-23  2.96e-23  4.54e-28  4.85e-30  4.88e-52  1.81e-20  3.25e-16         1
   MasterEquation::set:  done, cpu time[sec] = 15.1668, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 510 K
            Well    Collision, 1/sec
              W1         3.28012e+08
      global relaxation matrix dimension = 986
      setting global matrices ... done, cpu time[sec] = 0.654795, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 13.9492, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            57879.3        18263      6308.65       6981.1       891.63      68026.7        12235      227.646
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.341654, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.024438, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.367579, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.81276e-09  2.63465e-31  4.45966e-32
      low eigenvalue method done, cpu time[sec] = 0.368533, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.63e-31 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.45e-32 -4.44e-16         1
         *Z       ---       ---  1.48e+55
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  3.74292e-32  1.76587e-32  5.08757e-34  4.97102e-33   1.2555e-34 -2.27627e-34 -1.94132e-36  2.52828e-48

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 19.3356, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 510 K
            Well    Collision, 1/sec
              W1         9.84037e+08
      global relaxation matrix dimension = 986
      setting global matrices ... done, cpu time[sec] = 0.578693, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 13.9049, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            19293.1      6087.66      2102.88      2327.03       297.21      22675.6      4078.32       75.882
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.341128, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.024428, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.367058, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.32035e-09  1.22338e-31  1.77424e-32
      low eigenvalue method done, cpu time[sec] = 0.368031, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.22e-31 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.76e-33 -4.44e-16         1
         *Z       ---       ---  1.48e+55
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16 -8.23074e-33 -2.34518e-33 -6.89262e-35 -3.42254e-34 -1.09736e-35 -1.25693e-35 -1.13381e-37   7.1011e-48

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 19.1935, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 510 K
            Well    Collision, 1/sec
              W1         1.64006e+09
      global relaxation matrix dimension = 986
      setting global matrices ... done, cpu time[sec] = 0.634975, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 13.9152, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            11575.9      3652.59      1261.73      1396.22      178.326      13605.3      2446.99      45.5292
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.340675, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.024419, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.366564, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.50792e-10  8.35608e-32  1.07827e-32
      low eigenvalue method done, cpu time[sec] = 0.367498, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.36e-32 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.61e-33 -4.44e-16         1
         *Z       ---       ---  1.48e+55
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  1.22338e-32  5.32369e-33  1.60515e-34  1.41556e-33  3.75113e-35  4.29289e-35  1.67216e-37  1.71139e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 19.2605, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 510 K
            Well    Collision, 1/sec
              W1         2.29609e+09
      global relaxation matrix dimension = 986
      setting global matrices ... done, cpu time[sec] = 0.602549, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 13.9281, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            8268.48         2609      901.235      997.299      127.376       9718.1      1747.85      32.5209
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.340554, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.024391, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.366429, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.73804e-10  6.43736e-32  7.57126e-33
      low eigenvalue method done, cpu time[sec] = 0.367415, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.44e-32 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.56e-33 -4.44e-16         1
         *Z       ---       ---  1.48e+55
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16 -5.49803e-33 -1.52768e-33 -3.72186e-35 -1.75258e-34 -5.94142e-36 -2.37569e-35  1.60127e-38 -5.62332e-48

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 19.2657, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 510 K
            Well    Collision, 1/sec
              W1         2.95211e+09
      global relaxation matrix dimension = 986
      setting global matrices ... done, cpu time[sec] = 0.596776, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 13.8442, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            6431.04      2029.22      700.961      775.677        99.07      7558.52      1359.44       25.294
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.34031, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.024424, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.366244, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.15184e-10  5.27034e-32  5.73599e-33
      low eigenvalue method done, cpu time[sec] = 0.367195, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.27e-32 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.91e-33 -4.44e-16         1
         *Z       ---       ---  1.48e+55
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  3.31012e-33  9.76066e-34  1.72241e-35  1.06574e-37  1.58769e-36   3.1139e-35 -2.50963e-38   3.9888e-48

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 18.5324, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 510 K
            Well    Collision, 1/sec
              W1         3.28012e+09
      global relaxation matrix dimension = 986
      setting global matrices ... done, cpu time[sec] = 1.21764, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 13.8553, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            5787.93       1826.3      630.865       698.11       89.163      6802.67       1223.5      22.7646
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.340022, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.024367, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.365906, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.70003e-10  4.84004e-32  5.08814e-33
      low eigenvalue method done, cpu time[sec] = 0.366862, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.84e-32 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.67e-33 -4.44e-16         1
         *Z       ---       ---  1.48e+55
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  5.14551e-33  2.16588e-33  5.57306e-35  4.57894e-34   1.2546e-35 -2.73399e-35 -4.35924e-38  1.65726e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 19.8091, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 510 K
            Well    Collision, 1/sec
              W1         4.92019e+09
      global relaxation matrix dimension = 986
      setting global matrices ... done, cpu time[sec] = 0.610009, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 13.8463, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            3858.62      1217.53      420.577      465.406       59.442      4535.11      815.664      15.1764
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.340452, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.024426, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.366378, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.70338e-10  3.46259e-32  3.14701e-33
      low eigenvalue method done, cpu time[sec] = 0.367336, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.46e-32 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.91e-33 -4.44e-16         1
         *Z       ---       ---  1.48e+55
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16 -4.03635e-34 -6.77428e-34 -1.55143e-35  -1.7018e-34 -4.29673e-36  1.15168e-35  2.37955e-38  2.96792e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 19.2089, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 510 K
            Well    Collision, 1/sec
              W1         6.56025e+09
      global relaxation matrix dimension = 986
      setting global matrices ... done, cpu time[sec] = 0.563136, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 13.8634, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2893.97      913.148      315.432      349.055      44.5815      3401.34      611.748      11.3823
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.339963, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.024414, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.365862, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.12571e-10  2.71211e-32  2.19671e-33
      low eigenvalue method done, cpu time[sec] = 0.366819, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.71e-32 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.5e-33 -4.44e-16         1
         *Z       ---       ---  1.48e+55
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  2.13211e-33  4.61029e-34  1.58547e-35  1.13855e-34   3.4207e-36 -4.83877e-36  1.62539e-38 -6.74526e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 19.1915, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 510 K
            Well    Collision, 1/sec
              W1         8.20031e+09
      global relaxation matrix dimension = 986
      setting global matrices ... done, cpu time[sec] = 0.564526, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 13.8535, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2315.17      730.519      252.346      279.244      35.6652      2721.07      489.398      9.10585
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.340315, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.024391, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.366197, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.24716e-10  2.23581e-32  1.64457e-33
      low eigenvalue method done, cpu time[sec] = 0.367163, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.24e-32 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.23e-33 -4.44e-16         1
         *Z       ---       ---  1.48e+55
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  1.76145e-33  1.81461e-34  1.32637e-35  1.13805e-34  3.14624e-36  1.33623e-35 -5.66664e-39  2.34233e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 19.1349, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 510 K
            Well    Collision, 1/sec
              W1         9.84037e+09
      global relaxation matrix dimension = 986
      setting global matrices ... done, cpu time[sec] = 0.615553, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 13.8758, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1929.31      608.766      210.288      232.703       29.721      2267.56      407.832       7.5882
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.339932, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.024414, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.365814, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -6.2081e-11  1.90514e-32  1.28926e-33
      low eigenvalue method done, cpu time[sec] = 0.366781, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.91e-32 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.05e-33 -4.44e-16         1
         *Z       ---       ---  1.48e+55
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  4.09524e-33  5.25641e-34   2.1415e-35  8.76519e-35  3.40708e-36  5.49974e-35 -6.80818e-41  6.16804e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 19.2085, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 510 K
            Well    Collision, 1/sec
              W1         1.14804e+10
      global relaxation matrix dimension = 986
      setting global matrices ... done, cpu time[sec] = 0.614357, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 13.8805, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             1653.7      521.799      180.247       199.46      25.4751      1943.62       349.57      6.50418
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.339409, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.02437, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.365262, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.68182e-10   1.6615e-32  1.04442e-33
      low eigenvalue method done, cpu time[sec] = 0.366207, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.66e-32 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.18e-34 -4.44e-16         1
         *Z       ---       ---  1.48e+55
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  3.36286e-33  6.82582e-34  2.25086e-35  1.36436e-34  4.21131e-36  1.98628e-35 -6.34981e-39 -6.24217e-48

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 19.2279, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 510 K
            Well    Collision, 1/sec
              W1         1.31205e+10
      global relaxation matrix dimension = 986
      setting global matrices ... done, cpu time[sec] = 0.598311, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 13.8993, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1446.98      456.574      157.716      174.527      22.2907      1700.67      305.874      5.69115
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.339515, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.024362, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.365392, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.69582e-10   1.4742e-32   8.6718e-34
      low eigenvalue method done, cpu time[sec] = 0.36633, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.47e-32 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.14e-34 -4.44e-16         1
         *Z       ---       ---  1.48e+55
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  1.85587e-33  8.09102e-35  4.65124e-36 -8.85179e-36  3.31433e-37  3.02895e-35 -3.42332e-39 -7.49019e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 19.2561, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 520 K
      Energy reference = 52918 1/cm
      Energy step      = 87 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -87.3 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.014597
         W1 Well: collisional kernel bandwidth = 56
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.581352
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.011575
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.718909
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 9.37081
         W1 Well: minimal relaxation eigenvalue = 0.0546545
         W1 Well: maximal relaxation eigenvalue = 4.08898
         W1 Well:       grid size = 972
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31646 1/cm
         B1 Barrier:        grid size = 609
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -64 1/cm
         B2 Barrier:        grid size = 606
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 196 1/cm
         B3 Barrier:        grid size = 662
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4676 1/cm
         B4 Barrier:        grid size = 680
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6241 1/cm
         B5 Barrier: nonpositive number of states at -23207 1/cm => truncating
         B5 Barrier:        grid size = 875
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23207 1/cm
         B6 Barrier:        grid size = 591
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1501 1/cm
         B7 Barrier:        grid size = 555
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4633 1/cm
         B8 Barrier:        grid size = 416
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16726 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 10.8905, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31646 -23207 4.52e+05 2.19e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -64 1.42e+17
         B2    197 4.56e+16
         B3  -4676 1.59e+16
         B4  -6241 1.76e+16
         B5 -23207 2.25e+15
         B6   1502 1.69e+17
         B7   4634 3.08e+16
         B8  16726 5.94e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  4.89e+15  9.72e+15  1.94e+11  2.26e+09  6.13e-13  5.55e+18  8.48e+22  1.37e+38
          R  2.05e-16         1      1.99  3.97e-05  4.63e-07  1.25e-28  1.13e+03  1.73e+07   2.8e+22
         P1  1.03e-16     0.503         1  1.99e-05  2.33e-07  6.31e-29       571  8.72e+06  1.41e+22
         P2  5.16e-12  2.52e+04  5.01e+04         1    0.0117  3.16e-24  2.86e+07  4.37e+11  7.06e+26
         P3  4.42e-10  2.16e+06   4.3e+06      85.7         1  2.71e-22  2.45e+09  3.75e+13  6.05e+28
         P4  1.63e+12  7.97e+27  1.59e+28  3.16e+23  3.69e+21         1  9.05e+30  1.38e+35  2.23e+50
         P5   1.8e-19  0.000881   0.00175   3.5e-08  4.08e-10  1.11e-31         1  1.53e+04  2.47e+19
         P6  1.18e-23  5.76e-08  1.15e-07  2.29e-12  2.67e-14  7.23e-36  6.54e-05         1  1.61e+15
         P7  7.31e-39  3.57e-23   7.1e-23  1.42e-27  1.65e-29  4.48e-51  4.05e-20   6.2e-16         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  1.95e+12  3.87e+12  7.72e+07     9e+05  2.44e-16  2.21e+15  3.37e+19  5.45e+34
          R  5.14e-13         1      1.99  3.97e-05  4.63e-07  1.25e-28  1.13e+03  1.73e+07   2.8e+22
         P1  2.59e-13     0.503         1  1.99e-05  2.33e-07  6.31e-29       571  8.72e+06  1.41e+22
         P2   1.3e-08  2.52e+04  5.01e+04         1    0.0117  3.16e-24  2.86e+07  4.37e+11  7.06e+26
         P3  1.11e-06  2.16e+06   4.3e+06      85.7         1  2.71e-22  2.45e+09  3.75e+13  6.05e+28
         P4   4.1e+15  7.97e+27  1.59e+28  3.16e+23  3.69e+21         1  9.05e+30  1.38e+35  2.23e+50
         P5  4.53e-16  0.000881   0.00175   3.5e-08  4.08e-10  1.11e-31         1  1.53e+04  2.47e+19
         P6  2.96e-20  5.76e-08  1.15e-07  2.29e-12  2.67e-14  7.23e-36  6.54e-05         1  1.61e+15
         P7  1.84e-35  3.57e-23   7.1e-23  1.42e-27  1.65e-29  4.48e-51  4.05e-20   6.2e-16         1
   MasterEquation::set:  done, cpu time[sec] = 10.8971, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 520 K
            Well    Collision, 1/sec
              W1         3.23834e+08
      global relaxation matrix dimension = 972
      setting global matrices ... done, cpu time[sec] = 0.623552, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 13.5385, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            60120.5      19278.2      6735.61      7436.27      952.773      71551.4      13036.3      251.217
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.328928, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.023494, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.353853, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.68651e-10  1.44713e-30  2.53679e-31
      low eigenvalue method done, cpu time[sec] = 0.354758, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.45e-30         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.91e-32         0         1
         *Z       ---       ---  4.03e+54
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.64201e-31  5.72897e-32  1.54826e-33  1.14516e-32  3.22683e-34  6.37043e-34  3.99433e-36  -4.4968e-48

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 18.762, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 520 K
            Well    Collision, 1/sec
              W1         9.71502e+08
      global relaxation matrix dimension = 972
      setting global matrices ... done, cpu time[sec] = 0.709341, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 13.5038, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            20040.2      6426.07       2245.2      2478.76      317.591      23850.5      4345.43      83.7391
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.32795, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.023496, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.352905, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.32517e-10    6.816e-31   1.0253e-31
      low eigenvalue method done, cpu time[sec] = 0.353855, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.82e-31         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.73e-32         0         1
         *Z       ---       ---  4.03e+54
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  8.64533e-32  3.04912e-32   8.3878e-34  5.90193e-33  1.71848e-34  6.46315e-35 -1.07072e-36 -2.05051e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 18.8306, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 520 K
            Well    Collision, 1/sec
              W1         1.61917e+09
      global relaxation matrix dimension = 972
      setting global matrices ... done, cpu time[sec] = 0.700868, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 13.5025, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            12024.1      3855.64      1347.12      1487.25      190.555      14310.3      2607.26      50.2434
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.32808, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.023497, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.353036, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.87658e-10  4.68286e-31  6.28206e-32
      low eigenvalue method done, cpu time[sec] = 0.353993, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.68e-31         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.56e-32         0         1
         *Z       ---       ---  4.03e+54
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  3.77107e-32  5.05268e-33   1.3009e-34 -2.00822e-34  8.61458e-36  2.13992e-34  3.69454e-37  4.88599e-48

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 18.8212, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 520 K
            Well    Collision, 1/sec
              W1         2.26684e+09
      global relaxation matrix dimension = 972
      setting global matrices ... done, cpu time[sec] = 0.69936, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 13.4236, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            8588.65      2754.03      962.231      1062.32       136.11      10221.6      1862.33      35.8882
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.327645, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.023492, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.3526, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.81493e-10  3.62052e-31  4.43597e-32
      low eigenvalue method done, cpu time[sec] = 0.353511, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.62e-31         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.98e-32         0         1
         *Z       ---       ---  4.03e+54
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.00066e-32  2.30955e-33  8.22537e-35  1.58016e-34  9.98902e-36  1.81234e-34 -1.71074e-37 -4.25922e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 18.6982, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 520 K
            Well    Collision, 1/sec
              W1         2.91451e+09
      global relaxation matrix dimension = 972
      setting global matrices ... done, cpu time[sec] = 0.738413, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 13.4391, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            6680.06      2142.02      748.402      826.253      105.864      7950.16      1448.48       27.913
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.327073, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.023513, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.352021, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.53841e-10  2.97166e-31  3.37527e-32
      low eigenvalue method done, cpu time[sec] = 0.352895, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.97e-31         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.62e-32         0         1
         *Z       ---       ---  4.03e+54
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0   2.9372e-32  6.40348e-33  1.93708e-34  1.15519e-33  3.74099e-35   1.0186e-34 -4.09213e-38 -8.87654e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 18.7835, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 520 K
            Well    Collision, 1/sec
              W1         3.23834e+09
      global relaxation matrix dimension = 972
      setting global matrices ... done, cpu time[sec] = 0.710366, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 13.4345, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            6012.05      1927.82      673.561      743.627      95.2773      7155.14      1303.63      25.1217
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.327072, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.023497, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.352023, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   2.1374e-11  2.73183e-31  2.99957e-32
      low eigenvalue method done, cpu time[sec] = 0.35294, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.73e-31         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.49e-32         0         1
         *Z       ---       ---  4.03e+54
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0    8.478e-33   1.6114e-33  5.34098e-35  2.93387e-34  9.81553e-36  6.79554e-35  9.66719e-38  9.60674e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 18.7019, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 520 K
            Well    Collision, 1/sec
              W1         4.85751e+09
      global relaxation matrix dimension = 972
      setting global matrices ... done, cpu time[sec] = 0.759683, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 13.4533, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            4008.04      1285.21      449.041      495.752      63.5182      4770.09      869.086      16.7478
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.326374, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.023464, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.351285, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.91094e-10  1.96166e-31  1.86868e-32
      low eigenvalue method done, cpu time[sec] = 0.352195, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.96e-31         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.07e-32         0         1
         *Z       ---       ---  4.03e+54
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  4.65229e-33 -2.61499e-35 -2.53343e-35 -5.90135e-34 -1.24209e-35 -1.00436e-34  4.31191e-39 -2.20257e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 18.7453, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 520 K
            Well    Collision, 1/sec
              W1         6.47668e+09
      global relaxation matrix dimension = 972
      setting global matrices ... done, cpu time[sec] = 0.796603, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 13.4536, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            3006.03      963.911      336.781      371.814      47.6386      3577.57      651.815      12.5609
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.326901, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.023478, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.351836, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.94561e-11  1.54023e-31  1.31124e-32
      low eigenvalue method done, cpu time[sec] = 0.352734, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.54e-31         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.42e-33         0         1
         *Z       ---       ---  4.03e+54
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0 -6.59162e-33 -1.28725e-33 -3.94607e-35  -1.4512e-34 -5.80039e-36 -6.52282e-35 -2.17242e-38  1.27031e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 18.8272, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 520 K
            Well    Collision, 1/sec
              W1         8.09585e+09
      global relaxation matrix dimension = 972
      setting global matrices ... done, cpu time[sec] = 0.717818, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 13.4506, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2404.82      771.129      269.425      297.451      38.1109      2862.06      521.452      10.0487
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.326754, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.023474, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.351694, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.37199e-10  1.27197e-31  9.85685e-33
      low eigenvalue method done, cpu time[sec] = 0.352588, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.27e-31         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.95e-33         0         1
         *Z       ---       ---  4.03e+54
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.06354e-32  1.16888e-33  5.18171e-35  1.43744e-34  7.02047e-36   1.1581e-34 -1.73357e-38 -1.67966e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 18.747, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 520 K
            Well    Collision, 1/sec
              W1         9.71502e+09
      global relaxation matrix dimension = 972
      setting global matrices ... done, cpu time[sec] = 0.735415, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 13.4669, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2004.02      642.607       224.52      247.876      31.7591      2385.05      434.543      8.37391
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.326602, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.023482, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.351543, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -9.3603e-11  1.08532e-31  7.75331e-33
      low eigenvalue method done, cpu time[sec] = 0.352438, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.09e-31         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.93e-33         0         1
         *Z       ---       ---  4.03e+54
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.14622e-32  1.66168e-33  5.44317e-35  1.80135e-34  7.80801e-36   1.2797e-34 -2.82458e-38 -3.87813e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 18.7974, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 520 K
            Well    Collision, 1/sec
              W1         1.13342e+10
      global relaxation matrix dimension = 972
      setting global matrices ... done, cpu time[sec] = 0.720858, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 13.473, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1717.73      550.806      192.446      212.465      27.2221      2044.33      372.466      7.17763
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.326469, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.023483, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.351386, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.64226e-12  9.47556e-32  6.29881e-33
      low eigenvalue method done, cpu time[sec] = 0.352305, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.48e-32         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.18e-33         0         1
         *Z       ---       ---  4.03e+54
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  5.88082e-33  1.47045e-34  2.05584e-35 -8.44308e-36  1.73188e-36  1.06487e-34 -2.05569e-38  2.72625e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 18.7805, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 520 K
            Well    Collision, 1/sec
              W1         1.29534e+10
      global relaxation matrix dimension = 972
      setting global matrices ... done, cpu time[sec] = 0.72796, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 13.4572, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1503.01      481.955       168.39      185.907      23.8193      1788.79      325.907      6.28043
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.326433, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.023496, elapsed time[sec] = 1
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.351384, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -1.0495e-10  8.41496e-32  5.24277e-33
      low eigenvalue method done, cpu time[sec] = 0.352284, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.41e-32         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   4.6e-33         0         1
         *Z       ---       ---  4.03e+54
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  4.59513e-33  1.23818e-33  4.43383e-35  4.29834e-34  1.11018e-35  1.73514e-35  6.02199e-39  1.61205e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 18.7373, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 530 K
      Energy reference = 53614 1/cm
      Energy step      = 88 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -87.2 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.012944
         W1 Well: collisional kernel bandwidth = 56
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.771973
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.011459
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 4.79222
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 9.27735
         W1 Well: minimal relaxation eigenvalue = 0.0541633
         W1 Well: maximal relaxation eigenvalue = 1.45879
         W1 Well:       grid size = 968
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31570 1/cm
         B1 Barrier:        grid size = 610
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -65 1/cm
         B2 Barrier:        grid size = 607
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 197 1/cm
         B3 Barrier:        grid size = 662
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4641 1/cm
         B4 Barrier:        grid size = 680
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6226 1/cm
         B5 Barrier: nonpositive number of states at -23650 1/cm => truncating
         B5 Barrier:        grid size = 878
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23650 1/cm
         B6 Barrier:        grid size = 593
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1429 1/cm
         B7 Barrier:        grid size = 556
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4686 1/cm
         B8 Barrier:        grid size = 419
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16741 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 15.0064, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31570 -23650 3.27e+05 2.39e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -65 1.59e+17
         B2    198 5.18e+16
         B3  -4641 1.83e+16
         B4  -6226 2.02e+16
         B5 -23650 2.59e+15
         B6   1430 1.92e+17
         B7   4687 3.53e+16
         B8  16742 7.05e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  8.94e+14  1.76e+15  4.52e+10  5.75e+08  4.04e-13  9.43e+17  1.23e+22  1.07e+37
          R  1.12e-15         1      1.97  5.06e-05  6.43e-07  4.52e-28  1.06e+03  1.38e+07   1.2e+22
         P1  5.68e-16     0.507         1  2.57e-05  3.26e-07   2.3e-28       535  6.99e+06  6.07e+21
         P2  2.21e-11  1.98e+04  3.89e+04         1    0.0127  8.94e-24  2.08e+07  2.72e+11  2.36e+26
         P3  1.74e-09  1.55e+06  3.06e+06      78.7         1  7.03e-22  1.64e+09  2.14e+13  1.86e+28
         P4  2.47e+12  2.21e+27  4.36e+27  1.12e+23  1.42e+21         1  2.33e+30  3.04e+34  2.64e+49
         P5  1.06e-18  0.000948   0.00187   4.8e-08   6.1e-10  4.29e-31         1  1.31e+04  1.13e+19
         P6  8.12e-23  7.26e-08  1.43e-07  3.68e-12  4.67e-14  3.29e-35  7.66e-05         1  8.69e+14
         P7  9.35e-38  8.36e-23  1.65e-22  4.23e-27  5.38e-29  3.78e-50  8.82e-20  1.15e-15         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1   3.6e+11  7.11e+11  1.82e+07  2.32e+05  1.63e-16   3.8e+14  4.96e+18  4.31e+33
          R  2.77e-12         1      1.97  5.06e-05  6.43e-07  4.52e-28  1.06e+03  1.38e+07   1.2e+22
         P1  1.41e-12     0.507         1  2.57e-05  3.26e-07   2.3e-28       535  6.99e+06  6.07e+21
         P2  5.48e-08  1.98e+04  3.89e+04         1    0.0127  8.94e-24  2.08e+07  2.72e+11  2.36e+26
         P3  4.31e-06  1.55e+06  3.06e+06      78.7         1  7.03e-22  1.64e+09  2.14e+13  1.86e+28
         P4  6.13e+15  2.21e+27  4.36e+27  1.12e+23  1.42e+21         1  2.33e+30  3.04e+34  2.64e+49
         P5  2.63e-15  0.000948   0.00187   4.8e-08   6.1e-10  4.29e-31         1  1.31e+04  1.13e+19
         P6  2.01e-19  7.26e-08  1.43e-07  3.68e-12  4.67e-14  3.29e-35  7.66e-05         1  8.69e+14
         P7  2.32e-34  8.36e-23  1.65e-22  4.23e-27  5.38e-29  3.78e-50  8.82e-20  1.15e-15         1
   MasterEquation::set:  done, cpu time[sec] = 15.0129, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 530 K
            Well    Collision, 1/sec
              W1         3.19793e+08
      global relaxation matrix dimension = 968
      setting global matrices ... done, cpu time[sec] = 0.632445, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 13.4579, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            62382.3      20324.4      7183.39       7912.6      1016.95      75164.4      13868.8      276.613
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.327166, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.023338, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.351929, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.73619e-09  7.44368e-30  1.34832e-30
      low eigenvalue method done, cpu time[sec] = 0.35284, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.44e-30  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.03e-31  2.22e-16         1
         *Z       ---       ---  1.17e+54
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16  9.34473e-31  3.64973e-31  1.08263e-32  9.09505e-32  2.46801e-33  7.93057e-34 -2.67462e-37   1.2254e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 18.6141, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 530 K
            Well    Collision, 1/sec
              W1         9.59378e+08
      global relaxation matrix dimension = 968
      setting global matrices ... done, cpu time[sec] = 0.768182, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 13.4083, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            20794.1       6774.8      2394.46      2637.53      338.982      25054.8      4622.95      92.2044
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.326277, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.023313, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.351039, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.54708e-09  3.55423e-30  5.53341e-31
      low eigenvalue method done, cpu time[sec] = 0.35195, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.55e-30  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.93e-31  2.22e-16         1
         *Z       ---       ---  1.17e+54
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16  4.19115e-31  1.18557e-31  3.30907e-33  2.30506e-32  6.75843e-34  1.26215e-33  4.55179e-36 -2.84696e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 18.6897, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 530 K
            Well    Collision, 1/sec
              W1         1.59896e+09
      global relaxation matrix dimension = 968
      setting global matrices ... done, cpu time[sec] = 0.817931, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 13.3125, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            12476.5      4064.88      1436.68      1582.52      203.389      15032.9      2773.77      55.3227
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.325813, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.02332, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.350567, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.15096e-10  2.45572e-30  3.41728e-31
      low eigenvalue method done, cpu time[sec] = 0.351518, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.46e-30  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.33e-31  2.22e-16         1
         *Z       ---       ---  1.17e+54
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16  2.80188e-31  8.28261e-32  2.21727e-33    1.434e-32   4.3379e-34  2.11924e-34  -7.6391e-37 -7.13041e-48

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 18.608, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 530 K
            Well    Collision, 1/sec
              W1         2.23855e+09
      global relaxation matrix dimension = 968
      setting global matrices ... done, cpu time[sec] = 0.818815, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 13.415, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            8911.76      2903.48       1026.2      1130.37      145.278      10737.8      1981.26      39.5162
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.325774, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.023367, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.350579, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.45884e-10  1.90523e-30   2.4263e-31
      low eigenvalue method done, cpu time[sec] = 0.351509, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.91e-30  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.03e-31  2.22e-16         1
         *Z       ---       ---  1.17e+54
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16   2.1039e-31  5.89527e-32  1.67926e-33  1.12548e-32  3.36276e-34  5.05155e-34  3.78503e-37 -1.18526e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 18.7426, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 530 K
            Well    Collision, 1/sec
              W1         2.87813e+09
      global relaxation matrix dimension = 968
      setting global matrices ... done, cpu time[sec] = 0.803508, elapsed time[sec] = 1
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 13.4307, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            6931.37      2258.27      798.154      879.178      112.994       8351.6      1540.98      30.7348
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.325935, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.023293, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.350663, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.65218e-10  1.56764e-30  1.85394e-31
      low eigenvalue method done, cpu time[sec] = 0.351552, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.57e-30  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.49e-32  2.22e-16         1
         *Z       ---       ---  1.17e+54
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16  1.04789e-31  2.80982e-32  8.37854e-34  6.17465e-33   1.7803e-34  4.04396e-34  4.52068e-39  3.62442e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 18.729, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 530 K
            Well    Collision, 1/sec
              W1         3.19793e+09
      global relaxation matrix dimension = 968
      setting global matrices ... done, cpu time[sec] = 0.81608, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 13.8323, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            6238.23      2032.44      718.339       791.26      101.695      7516.44      1386.88      27.6613
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.325262, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.023318, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.350032, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.74849e-11  1.44256e-30  1.65054e-31
      low eigenvalue method done, cpu time[sec] = 0.350933, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.44e-30  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.81e-32  2.22e-16         1
         *Z       ---       ---  1.17e+54
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16   1.0802e-31  2.99127e-32  8.11755e-34  5.11013e-33  1.56951e-34  1.82329e-34 -3.26075e-37 -3.25167e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 19.314, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 530 K
            Well    Collision, 1/sec
              W1         4.79689e+09
      global relaxation matrix dimension = 968
      setting global matrices ... done, cpu time[sec] = 0.795538, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 13.4322, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            4158.82      1354.96      478.892      527.507      67.7965      5010.96      924.589      18.4409
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.325157, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.02331, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.349911, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.33037e-11  1.03966e-30  1.03553e-31
      low eigenvalue method done, cpu time[sec] = 0.350797, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.04e-30  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.63e-32  2.22e-16         1
         *Z       ---       ---  1.17e+54
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16  6.22985e-32  1.62212e-32  4.98821e-34  3.53355e-33  1.02472e-34  2.18268e-34 -2.20513e-37 -8.22046e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 18.7397, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 530 K
            Well    Collision, 1/sec
              W1         6.39585e+09
      global relaxation matrix dimension = 968
      setting global matrices ... done, cpu time[sec] = 0.802118, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 13.44, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            3119.12      1016.22      359.169       395.63      50.8474      3758.22      693.442      13.8307
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.325375, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.023309, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.350119, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.66167e-10  8.18261e-31  7.30341e-32
      low eigenvalue method done, cpu time[sec] = 0.351029, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.18e-31  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.43e-32  2.22e-16         1
         *Z       ---       ---  1.17e+54
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16  9.23106e-32  1.92693e-32  5.63781e-34  2.69593e-33  9.49644e-35  5.70453e-34 -3.11846e-38  3.44751e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 18.7595, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 530 K
            Well    Collision, 1/sec
              W1         7.99482e+09
      global relaxation matrix dimension = 968
      setting global matrices ... done, cpu time[sec] = 0.795676, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 13.4903, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2495.29      812.975      287.335      316.504      40.6779      3006.58      554.754      11.0645
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.324937, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.023314, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.3497, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.39441e-11  6.76925e-31  5.51219e-32
      low eigenvalue method done, cpu time[sec] = 0.350609, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.77e-31  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.67e-32  2.22e-16         1
         *Z       ---       ---  1.17e+54
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16  3.42832e-32  8.79327e-33  2.76714e-34   1.8846e-33  5.58182e-35  1.49076e-34  2.01527e-38  4.51393e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 18.785, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 530 K
            Well    Collision, 1/sec
              W1         9.59378e+09
      global relaxation matrix dimension = 968
      setting global matrices ... done, cpu time[sec] = 0.81449, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 13.4842, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2079.41       677.48      239.446      263.753      33.8982      2505.48      462.295      9.22044
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.324689, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.023293, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.349421, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.35934e-11  5.78371e-31  4.35014e-32
      low eigenvalue method done, cpu time[sec] = 0.350332, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.78e-31  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.13e-32  2.22e-16         1
         *Z       ---       ---  1.17e+54
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16  2.64558e-32  5.75579e-33  1.91489e-34  1.21252e-33  3.71848e-35  2.40184e-34  1.55802e-38  5.42263e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 18.7936, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 530 K
            Well    Collision, 1/sec
              W1         1.11927e+10
      global relaxation matrix dimension = 968
      setting global matrices ... done, cpu time[sec] = 0.81679, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 13.4435, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1782.35      580.697       205.24      226.074      29.0556      2147.56      396.253      7.90324
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.324356, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.023307, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.349084, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.52761e-10  5.05504e-31  3.54395e-32
      low eigenvalue method done, cpu time[sec] = 0.350064, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.06e-31  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.74e-32  2.22e-16         1
         *Z       ---       ---  1.17e+54
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16  4.24529e-32  9.40865e-33  2.77121e-34  1.50523e-33  4.95785e-35  2.11989e-34 -2.36669e-38 -1.35787e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 18.77, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 530 K
            Well    Collision, 1/sec
              W1         1.27917e+10
      global relaxation matrix dimension = 968
      setting global matrices ... done, cpu time[sec] = 0.804614, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 13.4591, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1559.56       508.11      179.585      197.815      25.4237      1879.11      346.721      6.91533
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.324962, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.02329, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.34969, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.93147e-11  4.49326e-31  2.95693e-32
      low eigenvalue method done, cpu time[sec] = 0.350595, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.49e-31  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.43e-32  2.22e-16         1
         *Z       ---       ---  1.17e+54
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16  4.15141e-33 -5.69564e-35  4.14924e-36 -1.21426e-34 -1.52107e-36  5.56996e-35  4.41301e-38 -5.36142e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 18.77, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 540 K
      Energy reference = 54309 1/cm
      Energy step      = 90 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -87.2 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.013917
         W1 Well: collisional kernel bandwidth = 55
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.817288
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.011153
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.673508
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 8.96512
         W1 Well: minimal relaxation eigenvalue = 0.0536354
         W1 Well: maximal relaxation eigenvalue = 3.47363
         W1 Well:       grid size = 955
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31641 1/cm
         B1 Barrier:        grid size = 604
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -50 1/cm
         B2 Barrier:        grid size = 602
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 129 1/cm
         B3 Barrier:        grid size = 655
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4641 1/cm
         B4 Barrier:        grid size = 673
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6261 1/cm
         B5 Barrier: nonpositive number of states at -23181 1/cm => truncating
         B5 Barrier:        grid size = 861
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23181 1/cm
         B6 Barrier:        grid size = 587
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1478 1/cm
         B7 Barrier:        grid size = 552
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4628 1/cm
         B8 Barrier:        grid size = 418
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16688 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 10.6746, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31641 -23181 4.61e+05 2.61e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -50 1.78e+17
         B2    130 5.88e+16
         B3  -4641  2.1e+16
         B4  -6261 2.31e+16
         B5 -23181 2.98e+15
         B6   1479 2.17e+17
         B7   4629 4.04e+16
         B8  16689 8.34e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  1.72e+14  3.37e+14   1.1e+10  1.52e+08  2.68e-13   1.7e+17   1.9e+21   9.1e+35
          R   5.8e-15         1      1.95   6.4e-05  8.83e-07  1.56e-27       984   1.1e+07  5.28e+21
         P1  2.97e-15     0.512         1  3.27e-05  4.52e-07  7.96e-28       503  5.64e+06   2.7e+21
         P2  9.06e-11  1.56e+04  3.05e+04         1    0.0138  2.43e-23  1.54e+07  1.72e+11  8.25e+25
         P3  6.56e-09  1.13e+06  2.21e+06      72.5         1  1.76e-21  1.11e+09  1.25e+13  5.98e+27
         P4  3.72e+12  6.42e+26  1.26e+27  4.11e+22  5.67e+20         1  6.32e+29  7.08e+33  3.39e+48
         P5  5.89e-18   0.00102   0.00199  6.51e-08  8.98e-10  1.58e-30         1  1.12e+04  5.37e+18
         P6  5.26e-22  9.07e-08  1.77e-07  5.81e-12  8.01e-14  1.41e-34  8.92e-05         1  4.79e+14
         P7   1.1e-36  1.89e-22   3.7e-22  1.21e-26  1.67e-28  2.95e-49  1.86e-19  2.09e-15         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  7.11e+10  1.39e+11  4.55e+06  6.28e+04  1.11e-16  6.99e+13  7.84e+17  3.75e+32
          R  1.41e-11         1      1.95   6.4e-05  8.83e-07  1.56e-27       984   1.1e+07  5.28e+21
         P1   7.2e-12     0.512         1  3.27e-05  4.52e-07  7.96e-28       503  5.64e+06   2.7e+21
         P2   2.2e-07  1.56e+04  3.05e+04         1    0.0138  2.43e-23  1.54e+07  1.72e+11  8.25e+25
         P3  1.59e-05  1.13e+06  2.21e+06      72.5         1  1.76e-21  1.11e+09  1.25e+13  5.98e+27
         P4  9.04e+15  6.42e+26  1.26e+27  4.11e+22  5.67e+20         1  6.32e+29  7.08e+33  3.39e+48
         P5  1.43e-14   0.00102   0.00199  6.51e-08  8.98e-10  1.58e-30         1  1.12e+04  5.37e+18
         P6  1.28e-18  9.07e-08  1.77e-07  5.81e-12  8.01e-14  1.41e-34  8.92e-05         1  4.79e+14
         P7  2.66e-33  1.89e-22   3.7e-22  1.21e-26  1.67e-28  2.95e-49  1.86e-19  2.09e-15         1
   MasterEquation::set:  done, cpu time[sec] = 10.6818, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 540 K
            Well    Collision, 1/sec
              W1         3.15881e+08
      global relaxation matrix dimension = 955
      setting global matrices ... done, cpu time[sec] = 0.60183, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 13.166, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            64658.7        21399      7651.46      8409.48      1084.08      78856.3      14730.7      303.858
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.312591, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.022356, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.336327, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.13988e-09  3.59937e-29  6.71363e-30
      low eigenvalue method done, cpu time[sec] = 0.337235, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   3.6e-29         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.93e-30         0         1
         *Z       ---       ---  3.51e+53
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  4.59102e-30  1.72419e-30   5.0838e-32   4.2645e-31  1.15512e-32   3.8781e-33 -1.96165e-35  4.26265e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 18.1151, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 540 K
            Well    Collision, 1/sec
              W1         9.47643e+08
      global relaxation matrix dimension = 955
      setting global matrices ... done, cpu time[sec] = 0.943574, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 13.094, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            21552.9      7132.99      2550.49      2803.16      361.361      26285.4      4910.24      101.286
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.31211, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.022353, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.33588, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.94809e-09  1.74133e-29  2.79635e-30
      low eigenvalue method done, cpu time[sec] = 0.336777, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.74e-29         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.34e-31         0         1
         *Z       ---       ---  3.51e+53
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.06074e-30  6.45059e-31   1.7444e-32  1.19642e-31  3.51235e-33  3.98741e-33  1.53832e-36  6.51427e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 18.3914, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 540 K
            Well    Collision, 1/sec
              W1         1.57941e+09
      global relaxation matrix dimension = 955
      setting global matrices ... done, cpu time[sec] = 0.942252, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 13.1082, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            12931.7      4279.79      1530.29       1681.9      216.817      15771.3      2946.14      60.7715
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.312055, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.022387, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.335854, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.43637e-10  1.20973e-29   1.7403e-30
      low eigenvalue method done, cpu time[sec] = 0.336742, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.21e-29         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.49e-31         0         1
         *Z       ---       ---  3.51e+53
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.28032e-30  3.46106e-31  9.72874e-33  6.18807e-32  1.89194e-33  4.18064e-33   7.2052e-36 -1.09098e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 18.4129, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 540 K
            Well    Collision, 1/sec
              W1         2.21117e+09
      global relaxation matrix dimension = 955
      setting global matrices ... done, cpu time[sec] = 0.930397, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 13.1216, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            9236.95      3056.99      1093.07      1201.35      154.869      11265.2      2104.39      43.4082
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.311534, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.022379, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.335332, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.68465e-10  9.41719e-30  1.24225e-30
      low eigenvalue method done, cpu time[sec] = 0.336188, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.42e-30         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.05e-31         0         1
         *Z       ---       ---  3.51e+53
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  9.10919e-31  2.28595e-31    6.319e-33  3.70084e-32  1.17877e-33  2.76023e-33  1.17864e-36  9.51621e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 18.3998, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 540 K
            Well    Collision, 1/sec
              W1         2.84293e+09
      global relaxation matrix dimension = 955
      setting global matrices ... done, cpu time[sec] = 0.940767, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 13.1322, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             7184.3      2377.66      850.162      934.387      120.454      8761.81      1636.75       33.762
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.31122, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.022368, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.334962, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.31651e-10  7.76721e-30  9.53113e-31
      low eigenvalue method done, cpu time[sec] = 0.335836, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.77e-30         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.17e-31         0         1
         *Z       ---       ---  3.51e+53
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  8.65227e-31  2.11662e-31  6.05877e-33  3.50832e-32   1.1177e-33  3.10981e-33 -1.08243e-37  3.92939e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 18.4197, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 540 K
            Well    Collision, 1/sec
              W1         3.15881e+09
      global relaxation matrix dimension = 955
      setting global matrices ... done, cpu time[sec] = 0.947682, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 13.1678, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            6465.87       2139.9      765.146      840.948      108.408      7885.63      1473.07      30.3858
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.31131, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.022372, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.335113, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.48694e-10  7.15448e-30  8.50036e-31
      low eigenvalue method done, cpu time[sec] = 0.335998, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.15e-30         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.84e-31         0         1
         *Z       ---       ---  3.51e+53
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  6.67712e-31  1.56758e-31  4.49483e-33  2.48704e-32  8.11279e-34  2.48978e-33   1.3742e-36  6.82828e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 18.463, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 540 K
            Well    Collision, 1/sec
              W1         4.73822e+09
      global relaxation matrix dimension = 955
      setting global matrices ... done, cpu time[sec] = 0.942926, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 13.1601, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            4310.58       1426.6      510.097      560.632      72.2723      5257.09      982.048      20.2572
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.311053, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.022371, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.33486, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.14915e-10  5.17476e-30  5.36994e-31
      low eigenvalue method done, cpu time[sec] = 0.335746, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.17e-30         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.78e-31         0         1
         *Z       ---       ---  3.51e+53
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0   4.0338e-31  9.51101e-32  2.76472e-33   1.5518e-32    5.021e-34   1.8069e-33 -1.57083e-37 -1.44135e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 18.4599, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 540 K
            Well    Collision, 1/sec
              W1         6.31762e+09
      global relaxation matrix dimension = 955
      setting global matrices ... done, cpu time[sec] = 0.940565, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 13.1349, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            3232.93      1069.95      382.573      420.474      54.2042      3942.82      736.536      15.1929
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.310817, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.022377, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.334611, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -6.10722e-11  4.08245e-30  3.80637e-31
      low eigenvalue method done, cpu time[sec] = 0.335486, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.08e-30         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.19e-31         0         1
         *Z       ---       ---  3.51e+53
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  3.49617e-31  7.34447e-32  2.26261e-33  1.22327e-32    4.049e-34  2.13733e-33  1.14467e-37 -2.30695e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 18.4348, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 540 K
            Well    Collision, 1/sec
              W1         7.89703e+09
      global relaxation matrix dimension = 955
      setting global matrices ... done, cpu time[sec] = 0.939529, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 13.1451, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2586.35      855.958      306.058      336.379      43.3634      3154.25      589.229      12.1543
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.310342, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.022356, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.334114, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.16861e-10  3.38314e-30  2.88416e-31
      low eigenvalue method done, cpu time[sec] = 0.334993, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.38e-30         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.81e-31         0         1
         *Z       ---       ---  3.51e+53
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.81946e-31  3.50128e-32  1.07231e-33  5.30642e-33  1.83207e-34  1.13062e-33  3.35514e-37  2.79212e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 18.441, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 540 K
            Well    Collision, 1/sec
              W1         9.47643e+09
      global relaxation matrix dimension = 955
      setting global matrices ... done, cpu time[sec] = 0.935713, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 13.1881, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2155.29      713.299      255.049      280.316      36.1361      2628.54      491.024      10.1286
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.310636, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.022366, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.334414, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.21011e-10  2.89447e-30  2.28353e-31
      low eigenvalue method done, cpu time[sec] = 0.335318, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.89e-30         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.55e-31         0         1
         *Z       ---       ---  3.51e+53
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.23612e-31  2.66854e-32  8.26779e-34  4.39997e-33    1.468e-34  1.13884e-33  2.34842e-37  2.28991e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 18.469, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 540 K
            Well    Collision, 1/sec
              W1         1.10558e+10
      global relaxation matrix dimension = 955
      setting global matrices ... done, cpu time[sec] = 0.950187, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 13.1717, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1847.39      611.399      218.613      240.271      30.9738      2253.04      420.878      8.68165
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.3105, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.022371, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.334287, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.29151e-10  2.53254e-30  1.86546e-31
      low eigenvalue method done, cpu time[sec] = 0.335165, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.53e-30         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.36e-31         0         1
         *Z       ---       ---  3.51e+53
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.39327e-31  2.45401e-32  7.78355e-34  3.42131e-33  1.26713e-34  9.89543e-34 -1.18612e-37 -4.30016e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 18.6137, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 540 K
            Well    Collision, 1/sec
              W1         1.26352e+10
      global relaxation matrix dimension = 955
      setting global matrices ... done, cpu time[sec] = 0.809269, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 13.1415, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1616.47      534.974      191.286      210.237      27.1021      1971.41      368.268      7.59644
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.310221, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.022375, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.333993, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.22859e-12  2.25312e-30  1.56019e-31
      low eigenvalue method done, cpu time[sec] = 0.334892, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.25e-30         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.21e-31         0         1
         *Z       ---       ---  3.51e+53
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.33656e-31  2.82544e-32  9.14742e-34  5.51127e-33  1.73667e-34  9.58904e-34  3.20085e-37 -4.04294e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 18.3114, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 550 K
      Energy reference = 55004 1/cm
      Energy step      = 92 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -87.1 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.014391
         W1 Well: collisional kernel bandwidth = 55
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.943835
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.010876
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 4.46008
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 8.57045
         W1 Well: minimal relaxation eigenvalue = 0.0531261
         W1 Well: maximal relaxation eigenvalue = 1.45757
         W1 Well:       grid size = 941
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31567 1/cm
         B1 Barrier:        grid size = 598
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -11 1/cm
         B2 Barrier:        grid size = 596
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 172 1/cm
         B3 Barrier:        grid size = 648
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4611 1/cm
         B4 Barrier: nonpositive number of states at -6176 1/cm => truncating
         B4 Barrier:        grid size = 665
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6176 1/cm
         B5 Barrier: nonpositive number of states at -23656 1/cm => truncating
         B5 Barrier:        grid size = 855
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23655 1/cm
         B6 Barrier:        grid size = 582
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1460 1/cm
         B7 Barrier:        grid size = 547
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4680 1/cm
         B8 Barrier:        grid size = 416
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16732 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 14.1333, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31567 -23655 3.26e+05 2.84e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -11 1.98e+17
         B2    173 6.65e+16
         B3  -4611 2.41e+16
         B4  -6176 2.64e+16
         B5 -23655 3.41e+15
         B6   1461 2.44e+17
         B7   4681 4.62e+16
         B8  16733 9.85e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  3.53e+13  6.85e+13  2.84e+09  4.24e+07  1.81e-13  3.25e+16  3.14e+20  8.48e+34
          R  2.83e-14         1      1.94  8.03e-05   1.2e-06  5.12e-27       919   8.9e+06   2.4e+21
         P1  1.46e-14     0.516         1  4.14e-05  6.18e-07  2.64e-27       474  4.59e+06  1.24e+21
         P2  3.53e-10  1.25e+04  2.42e+04         1    0.0149  6.38e-23  1.15e+07  1.11e+11  2.99e+25
         P3  2.36e-08  8.34e+05  1.62e+06      66.9         1  4.27e-21  7.67e+08  7.42e+12     2e+27
         P4  5.53e+12  1.95e+26  3.79e+26  1.57e+22  2.34e+20         1  1.79e+29  1.74e+33  4.69e+47
         P5  3.08e-17   0.00109   0.00211  8.73e-08   1.3e-09  5.57e-30         1  9.68e+03  2.61e+18
         P6  3.18e-21  1.12e-07  2.18e-07  9.02e-12  1.35e-13  5.76e-34  0.000103         1   2.7e+14
         P7  1.18e-35  4.17e-22  8.08e-22  3.34e-26     5e-28  2.13e-48  3.83e-19  3.71e-15         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  1.49e+10  2.88e+10  1.19e+06  1.78e+04  7.61e-17  1.37e+13  1.32e+17  3.57e+31
          R  6.73e-11         1      1.94  8.03e-05   1.2e-06  5.12e-27       919   8.9e+06   2.4e+21
         P1  3.47e-11     0.516         1  4.14e-05  6.18e-07  2.64e-27       474  4.59e+06  1.24e+21
         P2  8.38e-07  1.25e+04  2.42e+04         1    0.0149  6.38e-23  1.15e+07  1.11e+11  2.99e+25
         P3  5.61e-05  8.34e+05  1.62e+06      66.9         1  4.27e-21  7.67e+08  7.42e+12     2e+27
         P4  1.31e+16  1.95e+26  3.79e+26  1.57e+22  2.34e+20         1  1.79e+29  1.74e+33  4.69e+47
         P5  7.32e-14   0.00109   0.00211  8.73e-08   1.3e-09  5.57e-30         1  9.68e+03  2.61e+18
         P6  7.56e-18  1.12e-07  2.18e-07  9.02e-12  1.35e-13  5.76e-34  0.000103         1   2.7e+14
         P7   2.8e-32  4.17e-22  8.08e-22  3.34e-26     5e-28  2.13e-48  3.83e-19  3.71e-15         1
   MasterEquation::set:  done, cpu time[sec] = 14.1397, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 550 K
            Well    Collision, 1/sec
              W1         3.12093e+08
      global relaxation matrix dimension = 941
      setting global matrices ... done, cpu time[sec] = 0.601684, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 12.748, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            66949.9      22502.8      8140.85      8927.93      1154.33        82629      15622.9      333.063
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.308379, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.021535, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.331281, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -1.4767e-09  1.64249e-28  3.14766e-29
      low eigenvalue method done, cpu time[sec] = 0.332247, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.64e-28         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.73e-30         0         1
         *Z       ---       ---  1.11e+53
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.07902e-29   7.7904e-30  2.25116e-31  1.84128e-30  5.03419e-32  1.62416e-32 -4.31081e-35   2.0886e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.5422, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 550 K
            Well    Collision, 1/sec
              W1         9.36278e+08
      global relaxation matrix dimension = 941
      setting global matrices ... done, cpu time[sec] = 1.07873, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 12.7, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            22316.6      7500.94      2713.62      2975.98      384.778        27543      5207.62      111.021
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.307784, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.02156, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.330728, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.27763e-09  8.04754e-29  1.33014e-29
      low eigenvalue method done, cpu time[sec] = 0.33159, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.05e-29         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.28e-30         0         1
         *Z       ---       ---  1.11e+53
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  9.64984e-30  2.91503e-30  8.03672e-32  5.46591e-31  1.61537e-32  1.98854e-32  3.96277e-36  4.95052e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.9947, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 550 K
            Well    Collision, 1/sec
              W1         1.56046e+09
      global relaxation matrix dimension = 941
      setting global matrices ... done, cpu time[sec] = 1.07169, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 12.7022, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
              13390      4500.56      1628.17      1785.59      230.867      16525.8      3124.57      66.6125
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.307274, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.022043, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.33069, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.07811e-10  5.62047e-29  8.34053e-30
      low eigenvalue method done, cpu time[sec] = 0.331584, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.62e-29         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.99e-30         0         1
         *Z       ---       ---  1.11e+53
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  6.45732e-30  1.74877e-30  4.86035e-32  3.07951e-31  9.41523e-33  1.85513e-32 -3.62757e-36  3.43625e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.9962, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 550 K
            Well    Collision, 1/sec
              W1         2.18465e+09
      global relaxation matrix dimension = 941
      setting global matrices ... done, cpu time[sec] = 1.06516, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 12.6977, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            9564.28      3214.69      1162.98      1275.42      164.905      11804.1      2231.84      47.5804
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.307276, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.021617, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.330287, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.03792e-10  4.38975e-29   5.9847e-30
      low eigenvalue method done, cpu time[sec] = 0.33115, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.39e-29         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.33e-30         0         1
         *Z       ---       ---  1.11e+53
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  4.28756e-30  1.12495e-30  3.16286e-32  1.96213e-31  6.06399e-33  1.33391e-32  6.90683e-37  3.67327e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.9741, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 550 K
            Well    Collision, 1/sec
              W1         2.80883e+09
      global relaxation matrix dimension = 941
      setting global matrices ... done, cpu time[sec] = 1.07583, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 12.7074, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            7438.88      2500.31      904.539      991.992      128.259         9181      1735.87       37.007
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.30704, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.021648, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.330052, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.23245e-10  3.62917e-29  4.61027e-30
      low eigenvalue method done, cpu time[sec] = 0.330928, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.63e-29         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.93e-30         0         1
         *Z       ---       ---  1.11e+53
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  3.50479e-30  8.67909e-31  2.45364e-32  1.45464e-31  4.59353e-33  1.20081e-32 -1.13451e-36 -2.23597e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.9974, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 550 K
            Well    Collision, 1/sec
              W1         3.12093e+09
      global relaxation matrix dimension = 941
      setting global matrices ... done, cpu time[sec] = 1.07296, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 12.6888, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            6694.99      2250.28      814.085      892.793      115.433       8262.9      1562.29      33.3063
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.306947, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.022096, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.330424, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -6.8589e-10  3.34609e-29  4.11874e-30
      low eigenvalue method done, cpu time[sec] = 0.331279, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.35e-29         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.78e-30         0         1
         *Z       ---       ---  1.11e+53
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  3.36117e-30  7.86502e-31  2.24203e-32  1.25065e-31  4.06711e-33  1.33004e-32  5.86124e-37 -2.23643e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.984, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 550 K
            Well    Collision, 1/sec
              W1         4.68139e+09
      global relaxation matrix dimension = 941
      setting global matrices ... done, cpu time[sec] = 1.07041, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 12.7111, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            4463.33      1500.19      542.723      595.195      76.9556       5508.6      1041.52      22.2042
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.306937, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.021628, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.329944, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.54185e-11  2.42876e-29  2.61957e-30
      low eigenvalue method done, cpu time[sec] = 0.330805, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.43e-29         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.29e-30         0         1
         *Z       ---       ---  1.11e+53
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.01672e-30  4.59107e-31  1.32145e-32  7.28469e-32  2.38681e-33  8.29323e-33  2.28891e-37 -7.29955e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.9849, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 550 K
            Well    Collision, 1/sec
              W1         6.24185e+09
      global relaxation matrix dimension = 941
      setting global matrices ... done, cpu time[sec] = 1.08209, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 12.7342, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             3347.5      1125.14      407.043      446.397      57.7167      4131.45      781.143      16.6531
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.306444, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.021683, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.329496, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -9.39256e-11  1.92058e-29  1.86597e-30
      low eigenvalue method done, cpu time[sec] = 0.330415, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.92e-29         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.02e-30         0         1
         *Z       ---       ---  1.11e+53
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.31253e-30  2.94494e-31  8.56198e-33   4.7061e-32  1.54403e-33  5.60888e-33  1.20878e-37 -2.67202e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 18.0277, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 550 K
            Well    Collision, 1/sec
              W1         7.80231e+09
      global relaxation matrix dimension = 941
      setting global matrices ... done, cpu time[sec] = 1.0775, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 12.7607, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
               2678      900.113      325.634      357.117      46.1734      3305.16      624.914      13.3225
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.306323, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.021658, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.329354, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.07286e-10  1.59433e-29  1.41936e-30
      low eigenvalue method done, cpu time[sec] = 0.3302, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.59e-29         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.47e-31         0         1
         *Z       ---       ---  1.11e+53
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.06129e-30  2.07697e-31  6.44128e-33  3.27556e-32  1.12006e-33  6.22677e-33  1.26206e-37 -9.31549e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 18.0662, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 550 K
            Well    Collision, 1/sec
              W1         9.36278e+09
      global relaxation matrix dimension = 941
      setting global matrices ... done, cpu time[sec] = 1.05379, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 12.7374, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2231.66      750.094      271.362      297.598      38.4778       2754.3      520.762      11.1021
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.306134, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.021674, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.329187, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.14048e-10  1.36587e-29  1.12737e-30
      low eigenvalue method done, cpu time[sec] = 0.330054, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.37e-29         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.26e-31         0         1
         *Z       ---       ---  1.11e+53
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  8.95442e-31  1.71925e-31  5.32794e-33  2.61945e-32  9.10741e-34  5.48601e-33 -3.12397e-37  2.89894e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 18.0113, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 550 K
            Well    Collision, 1/sec
              W1         1.09232e+10
      global relaxation matrix dimension = 941
      setting global matrices ... done, cpu time[sec] = 1.07574, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 12.7591, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1912.86      642.938      232.596      255.084       32.981      2360.83      446.367      9.51608
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.306258, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.021638, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.329265, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.27523e-11  1.19637e-29  9.23463e-31
      low eigenvalue method done, cpu time[sec] = 0.330121, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.2e-29         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.36e-31         0         1
         *Z       ---       ---  1.11e+53
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0   8.2469e-31    1.729e-31  5.22221e-33  2.76471e-32  9.24278e-34  4.62177e-33  3.18993e-37 -1.53289e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 18.0514, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 550 K
            Well    Collision, 1/sec
              W1         1.24837e+10
      global relaxation matrix dimension = 941
      setting global matrices ... done, cpu time[sec] = 1.0695, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 12.7605, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1673.75       562.57      203.521      223.198      28.8584      2065.73      390.572      8.32657
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.306402, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.021672, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.329438, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -9.05868e-11  1.06533e-29   7.7416e-31
      low eigenvalue method done, cpu time[sec] = 0.330294, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.07e-29         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.66e-31         0         1
         *Z       ---       ---  1.11e+53
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0   6.3375e-31  1.19173e-31  3.82652e-33  1.93534e-32  6.64957e-34  4.65876e-33  4.34608e-38  1.16989e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 18.0543, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 560 K
      Energy reference = 55699 1/cm
      Energy step      = 93 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -87 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.014139
         W1 Well: collisional kernel bandwidth = 55
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.955775
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.123696
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.729503
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 8.53637
         W1 Well: minimal relaxation eigenvalue = 0.0526388
         W1 Well: maximal relaxation eigenvalue = 2.32089
         W1 Well:       grid size = 939
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31627 1/cm
         B1 Barrier:        grid size = 599
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -7 1/cm
         B2 Barrier:        grid size = 597
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 177 1/cm
         B3 Barrier:        grid size = 649
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4657 1/cm
         B4 Barrier:        grid size = 666
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6238 1/cm
         B5 Barrier: nonpositive number of states at -23165 1/cm => truncating
         B5 Barrier:        grid size = 848
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23165 1/cm
         B6 Barrier:        grid size = 583
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1480 1/cm
         B7 Barrier:        grid size = 549
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4642 1/cm
         B8 Barrier:        grid size = 419
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16732 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 10.5524, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31627 -23165 4.66e+05 3.09e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -7  2.2e+17
         B2    178 7.52e+16
         B3  -4657 2.75e+16
         B4  -6238 3.01e+16
         B5 -23165 3.91e+15
         B6   1481 2.75e+17
         B7   4643 5.27e+16
         B8  16733 1.16e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  7.75e+12  1.49e+13  7.73e+08  1.25e+07  1.25e-13  6.67e+15   5.6e+19   8.7e+33
          R  1.29e-13         1      1.92  9.98e-05  1.61e-06  1.61e-26       861  7.23e+06  1.12e+21
         P1  6.71e-14      0.52         1  5.19e-05  8.36e-07  8.39e-27       447  3.76e+06  5.83e+20
         P2  1.29e-09     1e+04  1.93e+04         1    0.0161  1.62e-22  8.62e+06  7.25e+10  1.12e+25
         P3  8.02e-08  6.21e+05   1.2e+06        62         1     1e-20  5.35e+08  4.49e+12  6.97e+26
         P4  7.99e+12  6.19e+25  1.19e+26  6.18e+21  9.97e+19         1  5.33e+28  4.48e+32  6.95e+46
         P5   1.5e-16   0.00116   0.00224  1.16e-07  1.87e-09  1.88e-29         1  8.41e+03   1.3e+18
         P6  1.78e-20  1.38e-07  2.66e-07  1.38e-11  2.23e-13  2.23e-33  0.000119         1  1.55e+14
         P7  1.15e-34  8.91e-22  1.71e-21  8.89e-26  1.43e-27  1.44e-47  7.67e-19  6.44e-15         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  3.29e+09  6.33e+09  3.28e+05  5.29e+03  5.31e-17  2.83e+12  2.38e+16  3.69e+30
          R  3.04e-10         1      1.92  9.98e-05  1.61e-06  1.61e-26       861  7.23e+06  1.12e+21
         P1  1.58e-10      0.52         1  5.19e-05  8.36e-07  8.39e-27       447  3.76e+06  5.83e+20
         P2  3.05e-06     1e+04  1.93e+04         1    0.0161  1.62e-22  8.62e+06  7.25e+10  1.12e+25
         P3  0.000189  6.21e+05   1.2e+06        62         1     1e-20  5.35e+08  4.49e+12  6.97e+26
         P4  1.88e+16  6.19e+25  1.19e+26  6.18e+21  9.97e+19         1  5.33e+28  4.48e+32  6.95e+46
         P5  3.53e-13   0.00116   0.00224  1.16e-07  1.87e-09  1.88e-29         1  8.41e+03   1.3e+18
         P6   4.2e-17  1.38e-07  2.66e-07  1.38e-11  2.23e-13  2.23e-33  0.000119         1  1.55e+14
         P7  2.71e-31  8.91e-22  1.71e-21  8.89e-26  1.43e-27  1.44e-47  7.67e-19  6.44e-15         1
   MasterEquation::set:  done, cpu time[sec] = 10.5591, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 560 K
            Well    Collision, 1/sec
              W1         3.08421e+08
      global relaxation matrix dimension = 939
      setting global matrices ... done, cpu time[sec] = 0.579517, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 12.8, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            69254.4      23635.7      8652.09      9468.43      1227.78      86480.8      16545.2      364.314
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.298712, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.021391, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.321436, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.21901e-09    7.092e-28  1.39324e-28
      low eigenvalue method done, cpu time[sec] = 0.32229, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.09e-28         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.73e-29         0         1
         *Z       ---       ---  3.66e+52
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  9.23459e-29  3.40586e-29   9.9519e-31  8.11052e-30  2.21939e-31  1.04493e-31  2.76886e-35  2.25232e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.5615, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 560 K
            Well    Collision, 1/sec
              W1         9.25262e+08
      global relaxation matrix dimension = 939
      setting global matrices ... done, cpu time[sec] = 1.08714, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 12.6512, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            23084.8      7878.56      2884.03      3156.14      409.259      28826.9      5515.08      121.438
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.298146, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.021331, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.32084, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.40245e-10  3.51739e-28   5.9707e-29
      low eigenvalue method done, cpu time[sec] = 0.32168, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.52e-28         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.85e-29         0         1
         *Z       ---       ---  3.66e+52
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  4.36039e-29  1.30967e-29  3.61589e-31  2.46371e-30  7.28058e-32   7.6244e-32 -1.14297e-34 -1.59202e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.9287, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 560 K
            Well    Collision, 1/sec
              W1          1.5421e+09
      global relaxation matrix dimension = 939
      setting global matrices ... done, cpu time[sec] = 1.08986, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 12.6643, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            13850.9      4727.14      1730.42      1893.69      245.555      17296.2      3309.05      72.8629
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.297781, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.021333, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.320484, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -7.60813e-10  2.46923e-28  3.77134e-29
      low eigenvalue method done, cpu time[sec] = 0.321352, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.47e-28         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.3e-29         0         1
         *Z       ---       ---  3.66e+52
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.90022e-29  7.73263e-30  2.16196e-31  1.35268e-30  4.15974e-32  8.11957e-32 -1.32582e-35  9.09812e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.9504, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 560 K
            Well    Collision, 1/sec
              W1         2.15894e+09
      global relaxation matrix dimension = 939
      setting global matrices ... done, cpu time[sec] = 1.0877, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 12.6705, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            9893.49      3376.53      1236.01      1352.63      175.397      12354.4       2363.6      52.0449
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.297604, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.021354, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.320347, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   -5.084e-10  1.93474e-28  2.71988e-29
      low eigenvalue method done, cpu time[sec] = 0.321288, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.93e-28         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.02e-29         0         1
         *Z       ---       ---  3.66e+52
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.03342e-29  5.11036e-30  1.45157e-31  8.83812e-31  2.75651e-32  6.55293e-32 -1.17773e-35 -8.83344e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.9487, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 560 K
            Well    Collision, 1/sec
              W1         2.77579e+09
      global relaxation matrix dimension = 939
      setting global matrices ... done, cpu time[sec] = 1.0937, elapsed time[sec] = 1
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 12.6851, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            7694.93      2626.19      961.343      1052.05       136.42      9608.97      1838.36      40.4794
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.297199, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.021335, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.31992, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.12841e-10  1.60321e-28  2.10347e-29
      low eigenvalue method done, cpu time[sec] = 0.320784, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.6e-28         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.44e-30         0         1
         *Z       ---       ---  3.66e+52
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.60519e-29  3.90013e-30  1.11268e-31  6.54764e-31  2.07622e-32   5.5639e-32 -1.16867e-35 -1.13727e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.9569, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 560 K
            Well    Collision, 1/sec
              W1         3.08421e+09
      global relaxation matrix dimension = 939
      setting global matrices ... done, cpu time[sec] = 1.10213, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 12.6945, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            6925.44      2363.57      865.209      946.843      122.778      8648.08      1654.52      36.4314
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.29759, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.021323, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.3203, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.59696e-10  1.47954e-28  1.88235e-29
      low eigenvalue method done, cpu time[sec] = 0.321146, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.48e-28         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.79e-30         0         1
         *Z       ---       ---  3.66e+52
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.46416e-29  3.42162e-30  9.86584e-32   5.6107e-31  1.80899e-32  5.91039e-32  3.69972e-36 -5.82711e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.9888, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 560 K
            Well    Collision, 1/sec
              W1         4.62631e+09
      global relaxation matrix dimension = 939
      setting global matrices ... done, cpu time[sec] = 1.08045, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 12.7077, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            4616.96      1575.71      576.806      631.229      81.8518      5765.38      1103.02      24.2876
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.296969, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.021361, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.319693, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.59045e-10  1.07766e-28  1.20511e-29
      low eigenvalue method done, cpu time[sec] = 0.320528, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.08e-28         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.67e-30         0         1
         *Z       ---       ---  3.66e+52
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  9.39579e-30  2.07295e-30  6.15363e-32  3.40523e-31  1.11333e-32  4.40373e-32 -1.26582e-36  4.91413e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.9664, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 560 K
            Well    Collision, 1/sec
              W1         6.16841e+09
      global relaxation matrix dimension = 939
      setting global matrices ... done, cpu time[sec] = 1.09662, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 12.7049, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            3462.72      1181.78      432.605      473.422      61.3888      4324.04      827.262      18.2157
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.297465, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.021383, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.320222, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.87827e-11   8.5415e-29  8.62561e-30
      low eigenvalue method done, cpu time[sec] = 0.32108, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.54e-29         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   4.5e-30         0         1
         *Z       ---       ---  3.66e+52
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  6.54681e-30  1.38099e-30  4.17174e-32  2.24011e-31  7.44125e-33  3.55025e-32 -2.42844e-36  1.01297e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.9776, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 560 K
            Well    Collision, 1/sec
              W1         7.71052e+09
      global relaxation matrix dimension = 939
      setting global matrices ... done, cpu time[sec] = 1.10316, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 12.7065, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2770.18      945.427      346.084      378.737      49.1111      3459.23      661.809      14.5726
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.296978, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.02139, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.319745, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.60287e-11  7.10263e-29  6.58598e-30
      low eigenvalue method done, cpu time[sec] = 0.320592, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0   7.1e-29         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.74e-30         0         1
         *Z       ---       ---  3.66e+52
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  5.31007e-30  1.04974e-30   3.2082e-32  1.60014e-31  5.52389e-33  3.21855e-32 -2.55832e-36 -3.36528e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.9969, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 560 K
            Well    Collision, 1/sec
              W1         9.25262e+09
      global relaxation matrix dimension = 939
      setting global matrices ... done, cpu time[sec] = 1.09086, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 12.7165, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2308.48      787.856      288.403      315.614      40.9259      2882.69      551.508      12.1438
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.296506, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.021383, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.319271, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.31027e-11  6.09291e-29  5.24743e-30
      low eigenvalue method done, cpu time[sec] = 0.320125, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.09e-29         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.21e-30         0         1
         *Z       ---       ---  3.66e+52
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  4.48246e-30  8.89259e-31  2.74115e-32  1.39178e-31  4.76285e-33  2.68983e-32 -9.93274e-38 -3.82276e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.9775, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 560 K
            Well    Collision, 1/sec
              W1         1.07947e+10
      global relaxation matrix dimension = 939
      setting global matrices ... done, cpu time[sec] = 1.10664, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 12.7234, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             1978.7      675.305      247.203      270.527      35.0793      2470.88      472.721       10.409
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.296252, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.021415, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.319035, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.30208e-11  5.34257e-29  4.30977e-30
      low eigenvalue method done, cpu time[sec] = 0.319882, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.34e-29         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.81e-30         0         1
         *Z       ---       ---  3.66e+52
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0   3.6844e-30  6.91705e-31  2.19602e-32  1.07517e-31  3.74972e-33  2.56416e-32  1.92621e-38  3.74038e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 18.0117, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 560 K
            Well    Collision, 1/sec
              W1         1.23368e+10
      global relaxation matrix dimension = 939
      setting global matrices ... done, cpu time[sec] = 1.09632, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 12.7136, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1731.36      590.892      216.302      236.711      30.6944      2162.02      413.631      9.10786
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.296498, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.021393, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.319273, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.71938e-11  4.76166e-29  3.62132e-30
      low eigenvalue method done, cpu time[sec] = 0.320133, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.76e-29         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.51e-30         0         1
         *Z       ---       ---  3.66e+52
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  3.10755e-30  5.66775e-31  1.81242e-32   8.5857e-32  3.04959e-33  2.31949e-32  1.38391e-36 -1.92985e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.9823, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 570 K
      Energy reference = 56394 1/cm
      Energy step      = 95 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -86.9 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.013898
         W1 Well: collisional kernel bandwidth = 55
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.937294
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.187734
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 4.4974
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 8.30852
         W1 Well: minimal relaxation eigenvalue = 0.0521541
         W1 Well: maximal relaxation eigenvalue = 1.49348
         W1 Well:       grid size = 926
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31575 1/cm
         B1 Barrier:        grid size = 594
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -35 1/cm
         B2 Barrier:        grid size = 592
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 153 1/cm
         B3 Barrier:        grid size = 643
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4690 1/cm
         B4 Barrier:        grid size = 659
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6210 1/cm
         B5 Barrier: nonpositive number of states at -23121 1/cm => truncating
         B5 Barrier:        grid size = 837
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23121 1/cm
         B6 Barrier:        grid size = 578
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1484 1/cm
         B7 Barrier:        grid size = 544
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4714 1/cm
         B8 Barrier:        grid size = 418
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16684 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 14.0811, elapsed time[sec] = 1
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31575 -23121 4.81e+05 3.37e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -35 2.45e+17
         B2    154  8.5e+16
         B3  -4690 3.15e+16
         B4  -6210 3.44e+16
         B5 -23121 4.47e+15
         B6   1485  3.1e+17
         B7   4715 5.99e+16
         B8  16685 1.36e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  1.77e+12  3.38e+12  2.18e+08  3.78e+06  8.64e-14  1.43e+15  1.05e+19  9.53e+32
          R  5.66e-13         1      1.91  0.000123  2.14e-06  4.89e-26       807  5.92e+06  5.39e+20
         P1  2.96e-13     0.523         1  6.45e-05  1.12e-06  2.56e-26       423   3.1e+06  2.82e+20
         P2  4.59e-09  8.12e+03  1.55e+04         1    0.0174  3.97e-22  6.56e+06  4.81e+10  4.38e+24
         P3  2.64e-07  4.68e+05  8.93e+05      57.6         1  2.29e-20  3.78e+08  2.77e+12  2.52e+26
         P4  1.16e+13  2.05e+25  3.91e+25  2.52e+21  4.37e+19         1  1.65e+28  1.21e+32   1.1e+46
         P5  7.01e-16   0.00124   0.00237  1.53e-07  2.65e-09  6.06e-29         1  7.34e+03  6.68e+17
         P6  9.55e-20  1.69e-07  3.23e-07  2.08e-11  3.61e-13  8.25e-33  0.000136         1   9.1e+13
         P7  1.05e-33  1.85e-21  3.54e-21  2.28e-25  3.97e-27  9.07e-47   1.5e-18   1.1e-14         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  7.66e+08  1.46e+09  9.44e+04  1.64e+03  3.75e-17  6.19e+11  4.54e+15  4.13e+29
          R   1.3e-09         1      1.91  0.000123  2.14e-06  4.89e-26       807  5.92e+06  5.39e+20
         P1  6.83e-10     0.523         1  6.45e-05  1.12e-06  2.56e-26       423   3.1e+06  2.82e+20
         P2  1.06e-05  8.12e+03  1.55e+04         1    0.0174  3.97e-22  6.56e+06  4.81e+10  4.38e+24
         P3   0.00061  4.68e+05  8.93e+05      57.6         1  2.29e-20  3.78e+08  2.77e+12  2.52e+26
         P4  2.67e+16  2.05e+25  3.91e+25  2.52e+21  4.37e+19         1  1.65e+28  1.21e+32   1.1e+46
         P5  1.62e-12   0.00124   0.00237  1.53e-07  2.65e-09  6.06e-29         1  7.34e+03  6.68e+17
         P6   2.2e-16  1.69e-07  3.23e-07  2.08e-11  3.61e-13  8.25e-33  0.000136         1   9.1e+13
         P7  2.42e-30  1.85e-21  3.54e-21  2.28e-25  3.97e-27  9.07e-47   1.5e-18   1.1e-14         1
   MasterEquation::set:  done, cpu time[sec] = 14.088, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 570 K
            Well    Collision, 1/sec
              W1          3.0486e+08
      global relaxation matrix dimension = 926
      setting global matrices ... done, cpu time[sec] = 0.584932, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 12.4579, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            71570.4      24797.2      9185.69      10031.5      1304.49      90409.6      17497.8      397.698
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.287962, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.021404, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.310709, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.52435e-09  2.91797e-27  5.86514e-28
      low eigenvalue method done, cpu time[sec] = 0.311608, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.92e-27         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.52e-28         0         1
         *Z       ---       ---  1.25e+52
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  3.99349e-28  1.46527e-28  4.23165e-30  3.40399e-29  9.36181e-31  4.52717e-31  2.83385e-35 -1.56773e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.089, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 570 K
            Well    Collision, 1/sec
              W1         9.14579e+08
      global relaxation matrix dimension = 926
      setting global matrices ... done, cpu time[sec] = 1.21183, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 12.3434, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            23856.8      8265.75       3061.9      3343.83       434.83      30136.5      5832.59      132.566
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.287097, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.020707, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.309116, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -6.81129e-11  1.46423e-27  2.54782e-28
      low eigenvalue method done, cpu time[sec] = 0.309963, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.46e-27         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.64e-29         0         1
         *Z       ---       ---  1.25e+52
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.85348e-28  5.49411e-29   1.5211e-30  1.02756e-29  3.04775e-31  3.91929e-31  2.94997e-35 -6.76117e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.6167, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 570 K
            Well    Collision, 1/sec
              W1          1.5243e+09
      global relaxation matrix dimension = 926
      setting global matrices ... done, cpu time[sec] = 1.20261, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 12.3524, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            14314.1      4959.45      1837.14       2006.3      260.898      18081.9      3499.55      79.5396
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.286781, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.020694, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.308817, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.52399e-09  1.03303e-27  1.62079e-28
      low eigenvalue method done, cpu time[sec] = 0.309638, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.03e-27         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.39e-29         0         1
         *Z       ---       ---  1.25e+52
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.21112e-28  3.23166e-29    9.039e-31  5.66862e-30  1.74168e-31  3.44464e-31  3.62734e-35 -1.27337e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.6216, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 570 K
            Well    Collision, 1/sec
              W1         2.13402e+09
      global relaxation matrix dimension = 926
      setting global matrices ... done, cpu time[sec] = 1.20009, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 12.3562, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            10224.3      3542.46      1312.24      1433.07      186.356      12915.7      2499.68       56.814
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.287099, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.020676, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.309117, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   1.5219e-10  8.11944e-28  1.17471e-28
      low eigenvalue method done, cpu time[sec] = 0.309956, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.12e-28         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.23e-29         0         1
         *Z       ---       ---  1.25e+52
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  9.01979e-29  2.24976e-29  6.36634e-31  3.78666e-30  1.19329e-31  3.00821e-31  -1.1251e-35  4.13842e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.6201, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 570 K
            Well    Collision, 1/sec
              W1         2.74374e+09
      global relaxation matrix dimension = 926
      setting global matrices ... done, cpu time[sec] = 1.20008, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 12.3561, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            7952.27      2755.25      1020.63      1114.61      144.943      10045.5       1944.2      44.1886
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.286443, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.020632, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.308422, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.50854e-10  6.74323e-28  9.11965e-29
      low eigenvalue method done, cpu time[sec] = 0.309318, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.74e-28         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.52e-29         0         1
         *Z       ---       ---  1.25e+52
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  6.95994e-29   1.6569e-29  4.75423e-31    2.738e-30  8.77073e-32  2.71386e-31  2.25196e-35 -2.43421e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.631, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 570 K
            Well    Collision, 1/sec
              W1          3.0486e+09
      global relaxation matrix dimension = 926
      setting global matrices ... done, cpu time[sec] = 1.19071, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 12.374, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            7157.04      2479.72      918.569      1003.15      130.449      9040.96      1749.78      39.7698
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.286656, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.020627, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.308642, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -6.42268e-11  6.22882e-28  8.17435e-29
      low eigenvalue method done, cpu time[sec] = 0.30947, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.23e-28         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.25e-29         0         1
         *Z       ---       ---  1.25e+52
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  6.38201e-29  1.49215e-29  4.31431e-31  2.46279e-30  7.92352e-32  2.57171e-31  2.54635e-35  4.90329e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.6302, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 570 K
            Well    Collision, 1/sec
              W1         4.57289e+09
      global relaxation matrix dimension = 926
      setting global matrices ... done, cpu time[sec] = 1.19273, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 12.3759, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            4771.36      1653.15       612.38      668.765      86.9659       6027.3      1166.52      26.5132
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.286201, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.020606, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.30814, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.20246e-10  4.55238e-28  5.26723e-29
      low eigenvalue method done, cpu time[sec] = 0.308963, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.55e-28         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.37e-29         0         1
         *Z       ---       ---  1.25e+52
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0   4.1092e-29  8.87169e-30  2.63168e-31  1.41619e-30  4.69845e-32  2.04266e-31  2.99378e-35  4.90723e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.6305, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 570 K
            Well    Collision, 1/sec
              W1         6.09719e+09
      global relaxation matrix dimension = 926
      setting global matrices ... done, cpu time[sec] = 1.19714, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 12.3784, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            3578.52      1239.86      459.285      501.574      65.2244      4520.48      874.888      19.8849
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.286555, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.020616, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.308492, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -8.93334e-11  3.61644e-28  3.78781e-29
      low eigenvalue method done, cpu time[sec] = 0.309316, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.62e-28         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.89e-29         0         1
         *Z       ---       ---  1.25e+52
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  3.16118e-29  6.45439e-30  1.95909e-31  1.01318e-30  3.42997e-32  1.77482e-31  6.64007e-36  -1.1938e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.6428, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 570 K
            Well    Collision, 1/sec
              W1         7.62149e+09
      global relaxation matrix dimension = 926
      setting global matrices ... done, cpu time[sec] = 1.19728, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 12.381, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2862.82       991.89      367.428      401.259      52.1796      3616.38       699.91      15.9079
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.285996, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.020614, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.307941, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.07945e-10   3.0123e-28   2.9029e-29
      low eigenvalue method done, cpu time[sec] = 0.308828, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.01e-28         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.57e-29         0         1
         *Z       ---       ---  1.25e+52
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.28585e-29  4.52186e-30  1.39338e-31  7.05887e-31  2.41763e-32  1.38206e-31 -4.41696e-36 -8.34137e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.9817, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 570 K
            Well    Collision, 1/sec
              W1         9.14579e+09
      global relaxation matrix dimension = 926
      setting global matrices ... done, cpu time[sec] = 0.869674, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 12.3937, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2385.68      826.575       306.19      334.383       43.483      3013.65      583.259      13.2566
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.290405, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.020714, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.312474, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.44019e-10  2.58748e-28  2.32001e-29
      low eigenvalue method done, cpu time[sec] = 0.313331, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.59e-28         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.35e-29         0         1
         *Z       ---       ---  1.25e+52
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.86458e-29  3.59363e-30  1.12444e-31  5.58524e-31  1.93351e-32  1.24584e-31  2.30492e-36  2.89172e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.5647, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 570 K
            Well    Collision, 1/sec
              W1         1.06701e+10
      global relaxation matrix dimension = 926
      setting global matrices ... done, cpu time[sec] = 1.15838, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 12.5846, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2044.87      708.493      262.448      286.614      37.2711      2583.13      499.936      11.3628
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.287399, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.021029, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.309755, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.16532e-10  2.27126e-28  1.91043e-29
      low eigenvalue method done, cpu time[sec] = 0.31061, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.27e-28         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.18e-29         0         1
         *Z       ---       ---  1.25e+52
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.51391e-29  2.86854e-30  9.05713e-32  4.44356e-31   1.5482e-32  1.05433e-31  5.78136e-36  5.34409e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.8294, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 570 K
            Well    Collision, 1/sec
              W1         1.21944e+10
      global relaxation matrix dimension = 926
      setting global matrices ... done, cpu time[sec] = 1.17681, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 12.5574, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1789.26      619.931      229.642      250.787      32.6122      2260.24      437.444      9.94244
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.287668, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.020975, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.309988, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.10982e-11  2.02612e-28  1.60891e-29
      low eigenvalue method done, cpu time[sec] = 0.31083, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.03e-28         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.06e-29         0         1
         *Z       ---       ---  1.25e+52
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.26851e-29  2.38777e-30  7.60089e-32  3.74438e-31  1.30236e-32  9.27065e-32  7.33722e-36 -1.78145e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.8103, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 580 K
      Energy reference = 57089 1/cm
      Energy step      = 97 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -86.7 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.017483
         W1 Well: collisional kernel bandwidth = 55
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.928108
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.269891
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.776175
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 8.13233
         W1 Well: minimal relaxation eigenvalue = 0.0517006
         W1 Well: maximal relaxation eigenvalue = 1.46967
         W1 Well:       grid size = 914
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31569 1/cm
         B1 Barrier:        grid size = 589
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -43 1/cm
         B2 Barrier:        grid size = 587
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 149 1/cm
         B3 Barrier:        grid size = 636
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4603 1/cm
         B4 Barrier:        grid size = 653
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6252 1/cm
         B5 Barrier: nonpositive number of states at -23227 1/cm => truncating
         B5 Barrier:        grid size = 828
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23227 1/cm
         B6 Barrier:        grid size = 574
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1410 1/cm
         B7 Barrier:        grid size = 540
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4708 1/cm
         B8 Barrier:        grid size = 416
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16736 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 10.2647, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31569 -23227 4.46e+05 3.67e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -43 2.72e+17
         B2    150 9.58e+16
         B3  -4603 3.59e+16
         B4  -6252 3.91e+16
         B5 -23227  5.1e+15
         B6   1411 3.48e+17
         B7   4709 6.81e+16
         B8  16737  1.6e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  4.22e+11  8.01e+11  6.37e+07  1.19e+06  6.02e-14  3.21e+14  2.06e+18  1.12e+32
          R  2.37e-12         1       1.9  0.000151  2.81e-06  1.43e-25       759  4.88e+06  2.66e+20
         P1  1.25e-12     0.527         1  7.95e-05  1.48e-06  7.51e-26       400  2.57e+06   1.4e+20
         P2  1.57e-08  6.63e+03  1.26e+04         1    0.0187  9.45e-22  5.03e+06  3.24e+10  1.76e+24
         P3  8.42e-07  3.55e+05  6.74e+05      53.6         1  5.06e-20   2.7e+08  1.74e+12  9.45e+25
         P4  1.66e+13  7.02e+24  1.33e+25  1.06e+21  1.97e+19         1  5.32e+27  3.43e+31  1.86e+45
         P5  3.12e-15   0.00132    0.0025  1.99e-07  3.71e-09  1.88e-28         1  6.43e+03   3.5e+17
         P6  4.85e-19  2.05e-07  3.89e-07  3.09e-11  5.76e-13  2.92e-32  0.000155         1  5.44e+13
         P7  8.91e-33  3.76e-21  7.14e-21  5.68e-25  1.06e-26  5.36e-46  2.86e-18  1.84e-14         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  1.88e+08  3.57e+08  2.83e+04       529  2.68e-17  1.43e+11  9.17e+14  4.99e+28
          R  5.32e-09         1       1.9  0.000151  2.81e-06  1.43e-25       759  4.88e+06  2.66e+20
         P1   2.8e-09     0.527         1  7.95e-05  1.48e-06  7.51e-26       400  2.57e+06   1.4e+20
         P2  3.53e-05  6.63e+03  1.26e+04         1    0.0187  9.45e-22  5.03e+06  3.24e+10  1.76e+24
         P3   0.00189  3.55e+05  6.74e+05      53.6         1  5.06e-20   2.7e+08  1.74e+12  9.45e+25
         P4  3.73e+16  7.02e+24  1.33e+25  1.06e+21  1.97e+19         1  5.32e+27  3.43e+31  1.86e+45
         P5  7.01e-12   0.00132    0.0025  1.99e-07  3.71e-09  1.88e-28         1  6.43e+03   3.5e+17
         P6  1.09e-15  2.05e-07  3.89e-07  3.09e-11  5.76e-13  2.92e-32  0.000155         1  5.44e+13
         P7     2e-29  3.76e-21  7.14e-21  5.68e-25  1.06e-26  5.36e-46  2.86e-18  1.84e-14         1
   MasterEquation::set:  done, cpu time[sec] = 10.2713, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 580 K
            Well    Collision, 1/sec
              W1         3.01404e+08
      global relaxation matrix dimension = 914
      setting global matrices ... done, cpu time[sec] = 0.560901, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 12.25, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            73896.3      25987.2      9742.18      10617.5      1384.55      94413.5      18480.3      433.297
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.279619, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.020104, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.300833, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.76954e-09  1.14778e-26  2.35747e-27
      low eigenvalue method done, cpu time[sec] = 0.30164, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.15e-26 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.93e-28 -4.44e-16         1
         *Z       ---       ---  4.42e+51
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  1.60306e-27  5.84841e-28  1.69247e-29   1.3621e-28  3.74609e-30  1.84869e-30 -6.37727e-34  1.48839e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.8983, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 580 K
            Well    Collision, 1/sec
              W1         9.04211e+08
      global relaxation matrix dimension = 914
      setting global matrices ... done, cpu time[sec] = 1.18528, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 12.1517, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            24632.1      8662.39      3247.39      3539.18      461.516      31471.2      6160.11      144.432
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.278963, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.020101, elapsed time[sec] = 1
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.299428, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.23231e-09  5.82509e-27  1.03776e-27
      low eigenvalue method done, cpu time[sec] = 0.300241, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.83e-27 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.01e-28 -4.44e-16         1
         *Z       ---       ---  4.42e+51
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  7.54825e-28  2.21396e-28  6.13735e-30  4.12204e-29  1.22594e-30  1.62803e-30 -3.59521e-34  7.89663e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.3363, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 580 K
            Well    Collision, 1/sec
              W1         1.50702e+09
      global relaxation matrix dimension = 914
      setting global matrices ... done, cpu time[sec] = 1.25284, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 12.1605, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            14779.3      5197.43      1948.44      2123.51       276.91      18882.7      3696.07      86.6594
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.279082, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.020075, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.299517, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -3.7898e-10   4.1296e-27  6.64768e-28
      low eigenvalue method done, cpu time[sec] = 0.300332, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.13e-27 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.14e-28 -4.44e-16         1
         *Z       ---       ---  4.42e+51
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  4.98175e-28  1.31995e-28  3.69841e-30  2.30506e-29  7.10113e-31  1.43971e-30 -2.17496e-34  4.29201e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.4203, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 580 K
            Well    Collision, 1/sec
              W1         2.10983e+09
      global relaxation matrix dimension = 914
      setting global matrices ... done, cpu time[sec] = 1.25071, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 12.1673, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            10556.6      3712.45      1391.74      1516.79      197.793      13487.6      2640.05      61.8996
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.278171, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.020067, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.298602, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -8.45532e-10  3.25573e-27  4.84143e-28
      low eigenvalue method done, cpu time[sec] = 0.299451, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.26e-27 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.68e-28 -4.44e-16         1
         *Z       ---       ---  4.42e+51
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  3.69651e-28  9.17115e-29  2.60163e-30  1.54268e-29  4.87028e-31  1.29188e-30  1.82784e-34 -1.91032e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.4017, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 580 K
            Well    Collision, 1/sec
              W1         2.71263e+09
      global relaxation matrix dimension = 914
      setting global matrices ... done, cpu time[sec] = 1.26792, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 12.1598, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             8210.7      2887.46      1082.46      1179.73      153.839      10490.4      2053.37      48.1441
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.277974, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.020088, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.298436, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   5.6107e-10  2.70987e-27  3.77265e-28
      low eigenvalue method done, cpu time[sec] = 0.299241, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.71e-27 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.4e-28 -4.44e-16         1
         *Z       ---       ---  4.42e+51
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  2.91298e-28  6.84864e-29   1.9771e-30  1.13294e-29  3.63852e-31  1.17189e-30 -4.51617e-35  5.67564e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.483, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 580 K
            Well    Collision, 1/sec
              W1         3.01404e+09
      global relaxation matrix dimension = 914
      setting global matrices ... done, cpu time[sec] = 1.19349, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 12.1548, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            7389.63      2598.72      974.218      1061.75      138.455      9441.35      1848.03      43.3297
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.27796, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.020045, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.298368, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -7.3532e-10  2.50541e-27    3.387e-28
      low eigenvalue method done, cpu time[sec] = 0.29917, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.51e-27 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.3e-28 -4.44e-16         1
         *Z       ---       ---  4.42e+51
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  2.62803e-28  6.06185e-29  1.75659e-30  9.89874e-30  3.20659e-31   1.1157e-30  1.32713e-34  1.09497e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.3648, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 580 K
            Well    Collision, 1/sec
              W1         4.52106e+09
      global relaxation matrix dimension = 914
      setting global matrices ... done, cpu time[sec] = 1.23581, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 12.1673, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            4926.42      1732.48      649.479      707.836      92.3033      6294.23      1232.02      28.8865
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.277637, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.019972, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.297954, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.85306e-10  1.83726e-27  2.19627e-28
      low eigenvalue method done, cpu time[sec] = 0.298754, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.84e-27 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   9.5e-29 -4.44e-16         1
         *Z       ---       ---  4.42e+51
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  1.73382e-28  3.72254e-29  1.10877e-30  5.94772e-30  1.97599e-31  8.80006e-31 -1.65994e-35 -4.13128e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.4637, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 580 K
            Well    Collision, 1/sec
              W1         6.02808e+09
      global relaxation matrix dimension = 914
      setting global matrices ... done, cpu time[sec] = 1.19048, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 12.2062, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            3694.82      1299.36      487.109      530.877      69.2275      4720.67      924.017      21.6649
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.277829, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.020029, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.298213, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.15892e-11  1.46283e-27   1.5867e-28
      low eigenvalue method done, cpu time[sec] = 0.299036, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.46e-27 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.56e-29 -4.44e-16         1
         *Z       ---       ---  4.42e+51
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  1.25567e-28  2.55323e-29  7.78187e-31  4.02292e-30  1.36298e-31   7.2635e-31 -2.69607e-36 -7.34136e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.4501, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 580 K
            Well    Collision, 1/sec
              W1          7.5351e+09
      global relaxation matrix dimension = 914
      setting global matrices ... done, cpu time[sec] = 1.20077, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 12.1913, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2955.85      1039.49      389.687      424.701       55.382      3776.54      739.214      17.3319
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.277465, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.019982, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.297807, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.73543e-11   1.2205e-27  1.22045e-28
      low eigenvalue method done, cpu time[sec] = 0.298664, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.22e-27 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.31e-29 -4.44e-16         1
         *Z       ---       ---  4.42e+51
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  9.66912e-29  1.89405e-29  5.87962e-31  2.96916e-30  1.01906e-31  6.18472e-31  2.05552e-35 -1.70395e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.3725, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 580 K
            Well    Collision, 1/sec
              W1         9.04211e+09
      global relaxation matrix dimension = 914
      setting global matrices ... done, cpu time[sec] = 1.26874, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 12.0944, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2463.21      866.239      324.739      353.918      46.1516      3147.12      616.011      14.4432
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.277318, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.019992, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.29766, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.16116e-10  1.04975e-27  9.78335e-29
      low eigenvalue method done, cpu time[sec] = 0.298475, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.05e-27 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.43e-29 -4.44e-16         1
         *Z       ---       ---  4.42e+51
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  7.76016e-29  1.47388e-29  4.63626e-31  2.27546e-30  7.92835e-32  5.34566e-31  2.13096e-35  -2.6371e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.3456, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 580 K
            Well    Collision, 1/sec
              W1         1.05491e+10
      global relaxation matrix dimension = 914
      setting global matrices ... done, cpu time[sec] = 1.26887, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 12.1206, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2111.32      742.491      278.348      303.358      39.5585      2697.53       528.01      12.3799
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.277397, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.020028, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.297763, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.11402e-11   9.2245e-28  8.07687e-29
      low eigenvalue method done, cpu time[sec] = 0.298606, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.22e-28 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.77e-29 -4.44e-16         1
         *Z       ---       ---  4.42e+51
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  6.46137e-29  1.20212e-29   3.8269e-31  1.85237e-30  6.50364e-32  4.68839e-31  1.94954e-35  2.54513e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.4527, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 580 K
            Well    Collision, 1/sec
              W1         1.20562e+10
      global relaxation matrix dimension = 914
      setting global matrices ... done, cpu time[sec] = 1.18793, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 12.1074, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1847.41      649.679      243.554      265.438      34.6137      2360.34      462.009      10.8324
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.276975, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.02005, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.29738, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   9.4269e-12  8.23625e-28  6.81732e-29
      low eigenvalue method done, cpu time[sec] = 0.298182, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.24e-28 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.26e-29 -4.44e-16         1
         *Z       ---       ---  4.42e+51
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  5.43958e-29  9.87847e-30  3.18681e-31  1.51727e-30  5.37698e-32  4.18039e-31  1.61285e-35  6.45324e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.3561, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 590 K
      Energy reference = 57784 1/cm
      Energy step      = 98 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -86.6 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.016515
         W1 Well: collisional kernel bandwidth = 55
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 1.17239
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.031232
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.745346
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 8.17836
         W1 Well: minimal relaxation eigenvalue = 0.051217
         W1 Well: maximal relaxation eigenvalue = 1.57156
         W1 Well:       grid size = 912
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31592 1/cm
         B1 Barrier:        grid size = 590
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -36 1/cm
         B2 Barrier:        grid size = 588
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 159 1/cm
         B3 Barrier:        grid size = 637
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4642 1/cm
         B4 Barrier:        grid size = 653
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6210 1/cm
         B5 Barrier: nonpositive number of states at -23654 1/cm => truncating
         B5 Barrier:        grid size = 831
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23654 1/cm
         B6 Barrier:        grid size = 575
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1433 1/cm
         B7 Barrier:        grid size = 542
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4667 1/cm
         B8 Barrier:        grid size = 419
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16721 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 10.3386, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31592 -23654 3.26e+05 3.99e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -36 3.02e+17
         B2    160 1.08e+17
         B3  -4642 4.09e+16
         B4  -6210 4.45e+16
         B5 -23654 5.82e+15
         B6   1434  3.9e+17
         B7   4668 7.72e+16
         B8  16722 1.87e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  1.08e+11  2.04e+11  1.99e+07  3.97e+05  4.34e-14  7.74e+13  4.39e+17  1.45e+31
          R  9.24e-12         1      1.89  0.000184  3.67e-06  4.01e-25       715  4.05e+06  1.34e+20
         P1   4.9e-12      0.53         1  9.73e-05  1.95e-06  2.12e-25       379  2.15e+06  7.12e+19
         P2  5.03e-08  5.45e+03  1.03e+04         1      0.02  2.18e-21  3.89e+06  2.21e+10  7.31e+23
         P3  2.52e-06  2.73e+05  5.14e+05        50         1  1.09e-19  1.95e+08   1.1e+12  3.66e+25
         P4   2.3e+13   2.5e+24  4.71e+24  4.58e+20  9.15e+18         1  1.78e+27  1.01e+31  3.35e+44
         P5  1.29e-14    0.0014   0.00264  2.57e-07  5.13e-09  5.61e-28         1  5.67e+03  1.88e+17
         P6  2.28e-18  2.47e-07  4.65e-07  4.53e-11  9.05e-13  9.89e-32  0.000176         1  3.31e+13
         P7  6.88e-32  7.45e-21  1.41e-20  1.37e-24  2.73e-26  2.99e-45  5.33e-18  3.02e-14         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  4.83e+07   9.1e+07  8.86e+03       177  1.93e-17  3.45e+10  1.96e+14  6.48e+27
          R  2.07e-08         1      1.89  0.000184  3.67e-06  4.01e-25       715  4.05e+06  1.34e+20
         P1   1.1e-08      0.53         1  9.73e-05  1.95e-06  2.12e-25       379  2.15e+06  7.12e+19
         P2  0.000113  5.45e+03  1.03e+04         1      0.02  2.18e-21  3.89e+06  2.21e+10  7.31e+23
         P3   0.00565  2.73e+05  5.14e+05        50         1  1.09e-19  1.95e+08   1.1e+12  3.66e+25
         P4  5.17e+16   2.5e+24  4.71e+24  4.58e+20  9.15e+18         1  1.78e+27  1.01e+31  3.35e+44
         P5   2.9e-11    0.0014   0.00264  2.57e-07  5.13e-09  5.61e-28         1  5.67e+03  1.88e+17
         P6  5.11e-15  2.47e-07  4.65e-07  4.53e-11  9.05e-13  9.89e-32  0.000176         1  3.31e+13
         P7  1.54e-28  7.45e-21  1.41e-20  1.37e-24  2.73e-26  2.99e-45  5.33e-18  3.02e-14         1
   MasterEquation::set:  done, cpu time[sec] = 10.3452, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 590 K
            Well    Collision, 1/sec
              W1         2.98048e+08
      global relaxation matrix dimension = 912
      setting global matrices ... done, cpu time[sec] = 0.558685, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 12.1657, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            76230.5      27205.1      10322.1      11227.1      1468.04      98490.4      19492.8      471.201
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.284694, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.020197, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.305174, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.39811e-09  4.25817e-26  8.91489e-27
      low eigenvalue method done, cpu time[sec] = 0.305967, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.26e-26 -1.33e-15         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.18e-27 -1.33e-15         1
         *Z       ---       ---  1.64e+51
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -1.33227e-15
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -1.33227e-15  6.11819e-27  2.21181e-27  6.38018e-29  5.09548e-28  1.40593e-29  7.29896e-30 -7.30773e-34 -1.08647e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.7087, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 590 K
            Well    Collision, 1/sec
              W1         8.94145e+08
      global relaxation matrix dimension = 912
      setting global matrices ... done, cpu time[sec] = 1.25331, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 12.2453, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            25410.2      9068.37      3440.69      3742.36      489.345      32830.1      6497.61      157.067
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.284509, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.020189, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.304981, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.07205e-09  2.18487e-26  3.97533e-27
      low eigenvalue method done, cpu time[sec] = 0.305769, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.18e-26 -1.33e-15         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.12e-27 -1.33e-15         1
         *Z       ---       ---  1.64e+51
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -1.33227e-15
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -1.33227e-15  2.93241e-27   8.5116e-28  2.36101e-29  1.57324e-28  4.69649e-30  6.56661e-30 -1.47089e-33  5.34146e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.5198, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 590 K
            Well    Collision, 1/sec
              W1         1.49024e+09
      global relaxation matrix dimension = 912
      setting global matrices ... done, cpu time[sec] = 1.23677, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 12.146, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            15246.1      5441.02      2064.41      2245.42      293.607      19698.1      3898.57      94.2402
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.284147, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.020169, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.304595, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.30321e-09  1.55625e-26   2.5638e-27
      low eigenvalue method done, cpu time[sec] = 0.305408, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.56e-26 -1.33e-15         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.97e-28 -1.33e-15         1
         *Z       ---       ---  1.64e+51
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -1.33227e-15
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -1.33227e-15  1.94751e-27  5.10492e-28  1.43338e-29  8.86122e-29  2.74074e-30  5.84093e-30 -4.55469e-34  3.87444e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.3794, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 590 K
            Well    Collision, 1/sec
              W1         2.08634e+09
      global relaxation matrix dimension = 912
      setting global matrices ... done, cpu time[sec] = 1.2631, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 12.0932, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            10890.1      3886.45      1474.58      1603.87      209.719      14070.1      2784.69      67.3144
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.283898, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.020153, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.304329, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   5.9187e-10  1.23059e-26  1.87601e-27
      low eigenvalue method done, cpu time[sec] = 0.305169, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.23e-26 -1.33e-15         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   6.3e-28 -1.33e-15         1
         *Z       ---       ---  1.64e+51
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -1.33227e-15
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -1.33227e-15  1.44606e-27  3.54662e-28   1.0094e-29  5.93776e-29  1.88176e-30  5.18254e-30 -1.61679e-34  -5.3422e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.3044, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 590 K
            Well    Collision, 1/sec
              W1         2.68243e+09
      global relaxation matrix dimension = 912
      setting global matrices ... done, cpu time[sec] = 1.30975, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 12.0918, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            8470.06      3022.79       1146.9      1247.45      163.115      10943.4      2165.87      52.3557
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.283545, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.020104, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.303924, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.08428e-10  1.02648e-26  1.46721e-27
      low eigenvalue method done, cpu time[sec] = 0.304719, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.03e-26 -1.33e-15         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.26e-28 -1.33e-15         1
         *Z       ---       ---  1.64e+51
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -1.33227e-15
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -1.33227e-15  1.14511e-27  2.67582e-28  7.73002e-30  4.40143e-29  1.41798e-30  4.66326e-30 -1.69649e-34  9.78679e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.3665, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 590 K
            Well    Collision, 1/sec
              W1         2.98048e+09
      global relaxation matrix dimension = 912
      setting global matrices ... done, cpu time[sec] = 1.28983, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 12.098, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            7623.05      2720.51      1032.21      1122.71      146.804      9849.04      1949.28      47.1201
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.283613, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.020106, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.303996, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   1.2905e-10  9.49877e-27  1.31929e-27
      low eigenvalue method done, cpu time[sec] = 0.304763, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0   9.5e-27 -1.33e-15         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.86e-28 -1.33e-15         1
         *Z       ---       ---  1.64e+51
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -1.33227e-15
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -1.33227e-15  1.03672e-27  2.36896e-28  6.89416e-30  3.86722e-29  1.25552e-30  4.48498e-30  3.57774e-35 -5.86201e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.4156, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 590 K
            Well    Collision, 1/sec
              W1         4.47072e+09
      global relaxation matrix dimension = 912
      setting global matrices ... done, cpu time[sec] = 1.23379, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 12.1172, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            5082.03      1813.67      688.137      748.472       97.869      6566.03      1299.52      31.4134
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.28332, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.020075, elapsed time[sec] = 1
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.303675, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.21518e-11  6.98868e-27  8.60768e-28
      low eigenvalue method done, cpu time[sec] = 0.304483, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.99e-27 -1.33e-15         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.58e-28 -1.33e-15         1
         *Z       ---       ---  1.64e+51
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -1.33227e-15
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -1.33227e-15   6.8162e-28  1.44759e-28  4.32806e-30  2.30412e-29  7.68542e-31  3.54863e-30  9.13857e-35 -4.76061e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.3129, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 590 K
            Well    Collision, 1/sec
              W1         5.96096e+09
      global relaxation matrix dimension = 912
      setting global matrices ... done, cpu time[sec] = 1.29445, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 12.2061, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            3811.53      1360.26      516.103      561.354      73.4018      4924.52      974.642        23.56
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.283449, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.020097, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.303869, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.07975e-10  5.57684e-27  6.24676e-28
      low eigenvalue method done, cpu time[sec] = 0.304643, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.58e-27 -1.33e-15         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.86e-28 -1.33e-15         1
         *Z       ---       ---  1.64e+51
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -1.33227e-15
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -1.33227e-15  5.03195e-28  1.01456e-28   3.1038e-30  1.59413e-29  5.42012e-31  2.98975e-30  4.24971e-35  1.51648e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.4728, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 590 K
            Well    Collision, 1/sec
              W1         7.45121e+09
      global relaxation matrix dimension = 912
      setting global matrices ... done, cpu time[sec] = 1.28548, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 12.206, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            3049.22       1088.2      412.882      449.083      58.7214      3939.62      779.713       18.848
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.283181, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.020088, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.303537, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -8.41546e-11  4.66071e-27  4.82203e-28
      low eigenvalue method done, cpu time[sec] = 0.304397, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.66e-27 -1.33e-15         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.39e-28 -1.33e-15         1
         *Z       ---       ---  1.64e+51
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -1.33227e-15
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -1.33227e-15  3.91555e-28  7.57641e-29  2.36436e-30   1.1799e-29  4.07488e-31  2.57403e-30  7.38532e-35  8.71567e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.4517, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 590 K
            Well    Collision, 1/sec
              W1         8.94145e+09
      global relaxation matrix dimension = 912
      setting global matrices ... done, cpu time[sec] = 1.29661, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 12.2085, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2541.02      906.837      344.069      374.236      48.9345      3283.01      649.761      15.7067
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.283337, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.020075, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.303683, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.30771e-11  4.01391e-27  3.87683e-28
      low eigenvalue method done, cpu time[sec] = 0.30447, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.01e-27 -1.33e-15         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.06e-28 -1.33e-15         1
         *Z       ---       ---  1.64e+51
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -1.33227e-15
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -1.33227e-15  3.14821e-28   5.9405e-29  1.87709e-30  9.20029e-30   3.2089e-31  2.20243e-30  4.70931e-35 -7.15901e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.5086, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 590 K
            Well    Collision, 1/sec
              W1         1.04317e+10
      global relaxation matrix dimension = 912
      setting global matrices ... done, cpu time[sec] = 1.24947, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 12.2118, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2178.01      777.289      294.916      320.774      41.9439      2814.01      556.938      13.4629
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.283182, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.02009, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.303551, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.97985e-11  3.53091e-27  3.20867e-28
      low eigenvalue method done, cpu time[sec] = 0.304358, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.53e-27 -1.33e-15         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.81e-28 -1.33e-15         1
         *Z       ---       ---  1.64e+51
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -1.33227e-15
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -1.33227e-15  2.61371e-28   4.8123e-29  1.54183e-30  7.43848e-30   2.6175e-31  1.94327e-30  6.84812e-35 -6.05183e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.4514, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 590 K
            Well    Collision, 1/sec
              W1         1.19219e+10
      global relaxation matrix dimension = 912
      setting global matrices ... done, cpu time[sec] = 1.26314, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 12.2111, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1905.76      680.128      258.051      280.677      36.7009      2462.26      487.321        11.78
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.282946, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.020097, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.303315, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.02615e-10  3.15545e-27  2.71424e-28
      low eigenvalue method done, cpu time[sec] = 0.304144, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.16e-27 -1.33e-15         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.62e-28 -1.33e-15         1
         *Z       ---       ---  1.64e+51
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -1.33227e-15
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -1.33227e-15  2.23625e-28  4.01303e-29  1.30304e-30  6.16538e-30  2.19291e-31  1.76103e-30  6.10817e-35 -4.13681e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.4192, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 600 K
      Energy reference = 58479 1/cm
      Energy step      = 100 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -86.5 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.016077
         W1 Well: collisional kernel bandwidth = 55
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 1.15235
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.174319
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 4.16118
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 7.97007
         W1 Well: minimal relaxation eigenvalue = 0.0507872
         W1 Well: maximal relaxation eigenvalue = 1.83516
         W1 Well:       grid size = 901
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31621 1/cm
         B1 Barrier:        grid size = 585
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -21 1/cm
         B2 Barrier:        grid size = 583
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 178 1/cm
         B3 Barrier:        grid size = 631
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4621 1/cm
         B4 Barrier:        grid size = 647
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6221 1/cm
         B5 Barrier: nonpositive number of states at -23121 1/cm => truncating
         B5 Barrier:        grid size = 816
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23121 1/cm
         B6 Barrier:        grid size = 570
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1478 1/cm
         B7 Barrier:        grid size = 538
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4678 1/cm
         B8 Barrier:        grid size = 418
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16678 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 13.6106, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31621 -23121 4.81e+05 4.33e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -21 3.35e+17
         B2    179 1.21e+17
         B3  -4621 4.65e+16
         B4  -6221 5.05e+16
         B5 -23121 6.62e+15
         B6   1479 4.37e+17
         B7   4679 8.75e+16
         B8  16679 2.18e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  2.85e+10  5.34e+10  6.32e+06  1.35e+05   3.1e-14  1.92e+13  9.64e+16  1.98e+30
          R  3.51e-11         1      1.87  0.000222  4.74e-06  1.09e-24       674  3.38e+06  6.94e+19
         P1  1.87e-11     0.533         1  0.000118  2.53e-06  5.81e-25       360   1.8e+06   3.7e+19
         P2  1.58e-07  4.51e+03  8.45e+03         1    0.0214  4.91e-21  3.04e+06  1.52e+10  3.13e+23
         P3   7.4e-06  2.11e+05  3.96e+05      46.8         1   2.3e-19  1.42e+08  7.14e+11  1.46e+25
         P4  3.22e+13  9.19e+23  1.72e+24  2.04e+20  4.35e+18         1   6.2e+26  3.11e+30  6.37e+43
         P5   5.2e-14   0.00148   0.00278  3.29e-07  7.03e-09  1.61e-27         1  5.02e+03  1.03e+17
         P6  1.04e-17  2.96e-07  5.54e-07  6.56e-11   1.4e-12  3.22e-31  0.000199         1  2.05e+13
         P7  5.06e-31  1.44e-20   2.7e-20   3.2e-24  6.83e-26  1.57e-44  9.72e-18  4.88e-14         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1   1.3e+07  2.43e+07  2.88e+03      61.5  1.41e-17  8.75e+09  4.39e+13     9e+26
          R   7.7e-08         1      1.87  0.000222  4.74e-06  1.09e-24       674  3.38e+06  6.94e+19
         P1  4.11e-08     0.533         1  0.000118  2.53e-06  5.81e-25       360   1.8e+06   3.7e+19
         P2  0.000347  4.51e+03  8.45e+03         1    0.0214  4.91e-21  3.04e+06  1.52e+10  3.13e+23
         P3    0.0163  2.11e+05  3.96e+05      46.8         1   2.3e-19  1.42e+08  7.14e+11  1.46e+25
         P4  7.08e+16  9.19e+23  1.72e+24  2.04e+20  4.35e+18         1   6.2e+26  3.11e+30  6.37e+43
         P5  1.14e-10   0.00148   0.00278  3.29e-07  7.03e-09  1.61e-27         1  5.02e+03  1.03e+17
         P6  2.28e-14  2.96e-07  5.54e-07  6.56e-11   1.4e-12  3.22e-31  0.000199         1  2.05e+13
         P7  1.11e-27  1.44e-20   2.7e-20   3.2e-24  6.83e-26  1.57e-44  9.72e-18  4.88e-14         1
   MasterEquation::set:  done, cpu time[sec] = 13.6174, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 600 K
            Well    Collision, 1/sec
              W1         2.94788e+08
      global relaxation matrix dimension = 901
      setting global matrices ... done, cpu time[sec] = 0.548642, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.9495, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            78571.4      28450.7      10925.8      11860.6      1555.02       102638      20535.1      511.492
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.268491, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.01953, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.288446, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.70123e-09  1.52351e-25   3.2503e-26
      low eigenvalue method done, cpu time[sec] = 0.289268, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.52e-25 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.74e-27 -4.44e-16         1
         *Z       ---       ---  6.23e+50
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16   2.2378e-26  8.00938e-27  2.30668e-28  1.82807e-27  5.05938e-29  2.93131e-29  5.91228e-33  1.95808e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.3993, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 600 K
            Well    Collision, 1/sec
              W1         8.84364e+08
      global relaxation matrix dimension = 901
      setting global matrices ... done, cpu time[sec] = 1.32511, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.8931, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            26190.5      9483.57      3641.95      3953.53      518.341      34212.8      6845.03      170.497
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.268115, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.019457, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.287934, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.09843e-10  7.90055e-26   1.4678e-26
      low eigenvalue method done, cpu time[sec] = 0.288729, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   7.9e-26 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.01e-27 -4.44e-16         1
         *Z       ---       ---  6.23e+50
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  1.08467e-26  3.11743e-27  8.66503e-29   5.7369e-28  1.71774e-29  2.56862e-29  3.02369e-34 -5.64038e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.1057, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 600 K
            Well    Collision, 1/sec
              W1         1.47394e+09
      global relaxation matrix dimension = 901
      setting global matrices ... done, cpu time[sec] = 1.35307, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.9018, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            15714.3      5690.14      2185.17      2372.12      311.005      20527.7      4107.02      102.298
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.26822, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.019432, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.287989, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -8.49292e-10   5.6534e-26  9.52913e-27
      low eigenvalue method done, cpu time[sec] = 0.28877, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.65e-26 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.87e-27 -4.44e-16         1
         *Z       ---       ---  6.23e+50
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  7.26766e-27  1.88284e-27  5.29937e-29  3.24827e-28  1.00885e-29  2.26827e-29  3.55637e-34  5.10945e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.144, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 600 K
            Well    Collision, 1/sec
              W1         2.06352e+09
      global relaxation matrix dimension = 901
      setting global matrices ... done, cpu time[sec] = 1.35064, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.8949, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            11224.5      4064.39      1560.84      1694.37      222.146      14662.6      2933.58      73.0703
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.267921, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.019366, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.287639, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.78309e-10  4.48347e-26  7.00504e-27
      low eigenvalue method done, cpu time[sec] = 0.288438, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.48e-26 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.28e-27 -4.44e-16         1
         *Z       ---       ---  6.23e+50
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  5.41277e-27  1.31099e-27  3.74933e-29  2.19065e-28   6.9663e-30   2.0172e-29  4.78156e-34  3.47071e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.0781, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 600 K
            Well    Collision, 1/sec
              W1         2.65309e+09
      global relaxation matrix dimension = 901
      setting global matrices ... done, cpu time[sec] = 1.40079, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.9001, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            8730.15      3161.19      1213.98      1317.84       172.78      11404.3      2281.68      56.8324
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.267883, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.019358, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.287575, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   4.4922e-10  3.74778e-26  5.49821e-27
      low eigenvalue method done, cpu time[sec] = 0.288392, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.75e-26 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.9e-27 -4.44e-16         1
         *Z       ---       ---  6.23e+50
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16   4.3051e-27  9.93622e-28  2.88141e-29  1.62561e-28   5.2617e-30  1.81939e-29  8.64654e-34 -1.12229e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.1862, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 600 K
            Well    Collision, 1/sec
              W1         2.94788e+09
      global relaxation matrix dimension = 901
      setting global matrices ... done, cpu time[sec] = 1.35172, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.9023, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            7857.14      2845.07      1092.58      1186.06      155.502      10263.8      2053.51      51.1492
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.267709, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.019372, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.287406, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.48748e-10  3.47111e-26  4.95146e-27
      low eigenvalue method done, cpu time[sec] = 0.288204, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.47e-26 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.76e-27 -4.44e-16         1
         *Z       ---       ---  6.23e+50
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  3.89084e-27  8.79915e-28  2.56918e-29  1.42888e-28  4.65895e-30  1.72826e-29 -3.49726e-34  2.72742e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.097, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 600 K
            Well    Collision, 1/sec
              W1         4.42182e+09
      global relaxation matrix dimension = 901
      setting global matrices ... done, cpu time[sec] = 1.39468, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.9082, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            5238.09      1896.71       728.39      790.707      103.668      6842.56      1369.01      34.0995
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.267117, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.019405, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.28687, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.96575e-11  2.56221e-26  3.25018e-27
      low eigenvalue method done, cpu time[sec] = 0.287688, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.56e-26 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.3e-27 -4.44e-16         1
         *Z       ---       ---  6.23e+50
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16   2.5994e-27  5.44686e-28  1.63716e-29  8.62549e-29  2.89307e-30  1.40046e-29  5.77845e-34  3.88924e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.1433, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 600 K
            Well    Collision, 1/sec
              W1         5.89576e+09
      global relaxation matrix dimension = 901
      setting global matrices ... done, cpu time[sec] = 1.39805, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.8897, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            3928.57      1422.54      546.292       593.03      77.7512      5131.92      1026.75      25.5746
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.268268, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.019447, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.288056, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -7.60738e-11  2.04912e-26   2.3692e-27
      low eigenvalue method done, cpu time[sec] = 0.288876, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.05e-26 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.04e-27 -4.44e-16         1
         *Z       ---       ---  6.23e+50
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  1.90576e-27  3.79863e-28  1.16803e-29  5.94986e-29  2.03205e-30  1.16084e-29  1.62971e-34 -1.21106e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.1209, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 600 K
            Well    Collision, 1/sec
              W1          7.3697e+09
      global relaxation matrix dimension = 901
      setting global matrices ... done, cpu time[sec] = 1.40634, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.9049, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            3142.85      1138.03      437.034      474.424       62.201      4105.53      821.403      20.4597
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.26749, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.019408, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.287245, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.73065e-10  1.71533e-26  1.83526e-27
      low eigenvalue method done, cpu time[sec] = 0.288065, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.72e-26 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.71e-28 -4.44e-16         1
         *Z       ---       ---  6.23e+50
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  1.48442e-27  2.84537e-28  8.91628e-30  4.41574e-29  1.53129e-30  9.94735e-30   2.4151e-34  2.86274e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.2178, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 600 K
            Well    Collision, 1/sec
              W1         8.84364e+09
      global relaxation matrix dimension = 901
      setting global matrices ... done, cpu time[sec] = 1.33341, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.9126, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2619.05      948.357      364.195      395.353      51.8341      3421.28      684.503      17.0497
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.267282, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.019346, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.286969, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.93237e-12  1.47921e-26  1.47981e-27
      low eigenvalue method done, cpu time[sec] = 0.28817, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.48e-26 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.51e-28 -4.44e-16         1
         *Z       ---       ---  6.23e+50
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  1.20445e-27  2.24129e-28  7.13501e-30  3.46414e-29   1.2146e-30  8.71442e-30  2.94558e-34  7.44641e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.3386, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 600 K
            Well    Collision, 1/sec
              W1         1.03176e+10
      global relaxation matrix dimension = 901
      setting global matrices ... done, cpu time[sec] = 1.14654, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.933, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             2244.9      812.878      312.167      338.874      44.4293      2932.52      586.717      14.6141
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.267243, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.019393, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.286965, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.31373e-10   1.3026e-26  1.22781e-27
      low eigenvalue method done, cpu time[sec] = 0.287763, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.3e-26 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.62e-28 -4.44e-16         1
         *Z       ---       ---  6.23e+50
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  1.00297e-27  1.81792e-28  5.87145e-30  2.79898e-29  9.91434e-31  7.72167e-30  2.79852e-34  -9.6595e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.9244, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 600 K
            Well    Collision, 1/sec
              W1         1.17915e+10
      global relaxation matrix dimension = 901
      setting global matrices ... done, cpu time[sec] = 1.38868, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.9313, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1964.28      711.268      273.146      296.515      38.8756      2565.96      513.377      12.7873
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.266692, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.01928, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.28631, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.41298e-10  1.16513e-26  1.04086e-27
      low eigenvalue method done, cpu time[sec] = 0.287126, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.17e-26 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.92e-28 -4.44e-16         1
         *Z       ---       ---  6.23e+50
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  8.55964e-28   1.5178e-28  4.96395e-30  2.32818e-29  8.32182e-31  6.96419e-30  2.96019e-34 -2.87525e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.1625, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 610 K
      Energy reference = 59174 1/cm
      Energy step      = 102 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -86.4 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.014097
         W1 Well: collisional kernel bandwidth = 54
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 1.12779
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.284635
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.658697
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 7.66671
         W1 Well: minimal relaxation eigenvalue = 0.0503306
         W1 Well: maximal relaxation eigenvalue = 1.6541
         W1 Well:       grid size = 890
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31606 1/cm
         B1 Barrier:        grid size = 581
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -88 1/cm
         B2 Barrier:        grid size = 579
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 115 1/cm
         B3 Barrier:        grid size = 626
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4678 1/cm
         B4 Barrier:        grid size = 641
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6208 1/cm
         B5 Barrier: nonpositive number of states at -23650 1/cm => truncating
         B5 Barrier:        grid size = 812
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23650 1/cm
         B6 Barrier:        grid size = 566
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1441 1/cm
         B7 Barrier:        grid size = 534
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4705 1/cm
         B8 Barrier:        grid size = 416
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16741 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 9.9421, elapsed time[sec] = 1
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31606 -23650 3.27e+05  4.7e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -88  3.7e+17
         B2    116 1.36e+17
         B3  -4678 5.29e+16
         B4  -6208 5.73e+16
         B5 -23650 7.53e+15
         B6   1442 4.89e+17
         B7   4706 9.89e+16
         B8  16742 2.54e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  7.86e+09  1.46e+10  2.09e+06  4.77e+04  2.25e-14  5.01e+12  2.23e+16  2.88e+29
          R  1.27e-10         1      1.86  0.000266  6.07e-06  2.86e-24       637  2.84e+06  3.66e+19
         P1  6.83e-11     0.536         1  0.000143  3.26e-06  1.54e-24       342  1.52e+06  1.97e+19
         P2  4.78e-07  3.75e+03  6.99e+03         1    0.0228  1.07e-20  2.39e+06  1.07e+10  1.37e+23
         P3   2.1e-05  1.65e+05  3.07e+05      43.9         1  4.71e-19  1.05e+08  4.68e+11  6.03e+24
         P4  4.45e+13  3.49e+23  6.51e+23  9.31e+19  2.12e+18         1  2.23e+26  9.92e+29  1.28e+43
         P5     2e-13   0.00157   0.00293  4.18e-07  9.53e-09  4.49e-27         1  4.46e+03  5.75e+16
         P6  4.48e-17  3.52e-07  6.56e-07  9.38e-11  2.14e-12  1.01e-30  0.000224         1  1.29e+13
         P7  3.48e-30  2.73e-20  5.09e-20  7.28e-24  1.66e-25  7.81e-44  1.74e-17  7.75e-14         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  3.64e+06  6.79e+06       971      22.1  1.04e-17  2.32e+09  1.03e+13  1.33e+26
          R  2.75e-07         1      1.86  0.000266  6.07e-06  2.86e-24       637  2.84e+06  3.66e+19
         P1  1.47e-07     0.536         1  0.000143  3.26e-06  1.54e-24       342  1.52e+06  1.97e+19
         P2   0.00103  3.75e+03  6.99e+03         1    0.0228  1.07e-20  2.39e+06  1.07e+10  1.37e+23
         P3    0.0452  1.65e+05  3.07e+05      43.9         1  4.71e-19  1.05e+08  4.68e+11  6.03e+24
         P4  9.59e+16  3.49e+23  6.51e+23  9.31e+19  2.12e+18         1  2.23e+26  9.92e+29  1.28e+43
         P5  4.31e-10   0.00157   0.00293  4.18e-07  9.53e-09  4.49e-27         1  4.46e+03  5.75e+16
         P6  9.67e-14  3.52e-07  6.56e-07  9.38e-11  2.14e-12  1.01e-30  0.000224         1  1.29e+13
         P7  7.49e-27  2.73e-20  5.09e-20  7.28e-24  1.66e-25  7.81e-44  1.74e-17  7.75e-14         1
   MasterEquation::set:  done, cpu time[sec] = 9.94851, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 610 K
            Well    Collision, 1/sec
              W1         2.91619e+08
      global relaxation matrix dimension = 890
      setting global matrices ... done, cpu time[sec] = 0.529385, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.5755, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            80917.3      29723.6        11554      12518.5      1645.59       106855      21606.9       554.26
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.260803, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.018787, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.280811, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.45782e-10  5.21964e-25  1.13228e-25
      low eigenvalue method done, cpu time[sec] = 0.281575, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.22e-25         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.63e-26         0         1
         *Z       ---       ---  2.45e+50
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  7.82813e-26  2.78128e-26  7.98991e-28  6.29381e-27  1.74617e-28   1.0338e-28 -7.80707e-33 -1.39917e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.8872, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 610 K
            Well    Collision, 1/sec
              W1         8.74857e+08
      global relaxation matrix dimension = 890
      setting global matrices ... done, cpu time[sec] = 1.43115, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.5312, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            26972.4      9907.86      3851.35      4172.85      548.531      35618.4      7202.29      184.753
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.260006, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.018742, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.279985, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.32374e-09  2.73426e-25  5.17546e-26
      low eigenvalue method done, cpu time[sec] = 0.280757, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.73e-25         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.38e-26         0         1
         *Z       ---       ---  2.45e+50
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  3.84643e-26  1.09513e-26  3.04636e-28  2.00289e-27   6.0165e-29  9.45184e-29   3.9954e-33  2.94364e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.7437, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 610 K
            Well    Collision, 1/sec
              W1          1.4581e+09
      global relaxation matrix dimension = 890
      setting global matrices ... done, cpu time[sec] = 1.44539, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.5435, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            16183.5      5944.72      2310.81      2503.71      329.119        21371      4321.37      110.852
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.25971, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.018733, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.279681, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   4.6501e-10  1.96522e-25  3.38153e-26
      low eigenvalue method done, cpu time[sec] = 0.280442, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.97e-25         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.89e-27         0         1
         *Z       ---       ---  2.45e+50
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.58135e-26  6.62414e-27  1.86811e-28  1.13717e-27  3.54377e-29  8.33358e-29  7.10463e-34  2.69278e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.7376, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 610 K
            Well    Collision, 1/sec
              W1         2.04133e+09
      global relaxation matrix dimension = 890
      setting global matrices ... done, cpu time[sec] = 1.47987, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.5455, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            11559.6      4246.23      1650.58      1788.36      235.085        15265       3086.7      79.1799
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.259585, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.018727, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.279555, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.66392e-11  1.56294e-25  2.49698e-26
      low eigenvalue method done, cpu time[sec] = 0.280339, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.56e-25         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.87e-27         0         1
         *Z       ---       ---  2.45e+50
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0   1.9372e-26  4.65272e-27  1.33327e-28  7.73758e-28  2.46892e-29  7.43137e-29  3.17245e-33 -1.08591e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.8414, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 610 K
            Well    Collision, 1/sec
              W1         2.62457e+09
      global relaxation matrix dimension = 890
      setting global matrices ... done, cpu time[sec] = 1.40909, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.5556, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            8990.81      3302.62      1283.78      1390.95      182.844      11872.8      2400.76      61.5844
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.259746, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.018732, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.279713, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.53139e-10  1.30917e-25  1.96668e-26
      low eigenvalue method done, cpu time[sec] = 0.280512, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.31e-25         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.59e-27         0         1
         *Z       ---       ---  2.45e+50
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.54185e-26  3.52161e-27  1.02459e-28  5.73543e-28  1.86388e-29  6.72496e-29  2.46481e-33 -1.78392e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.7143, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 610 K
            Well    Collision, 1/sec
              W1         2.91619e+09
      global relaxation matrix dimension = 890
      setting global matrices ... done, cpu time[sec] = 1.47828, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.5738, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            8091.73      2972.36       1155.4      1251.85      164.559      10685.5      2160.69       55.426
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.259986, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.018758, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.279988, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.42981e-10  1.21355e-25  1.77375e-26
      low eigenvalue method done, cpu time[sec] = 0.280766, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.21e-25         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.11e-27         0         1
         *Z       ---       ---  2.45e+50
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.39651e-26  3.12836e-27  9.16483e-29  5.06377e-28  1.65675e-29  6.38734e-29  1.23346e-33  2.47149e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.7832, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 610 K
            Well    Collision, 1/sec
              W1         4.37429e+09
      global relaxation matrix dimension = 890
      setting global matrices ... done, cpu time[sec] = 1.49508, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.5558, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            5394.49      1981.57       770.27       834.57      109.706      7123.68      1440.46      36.9506
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.25978, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.018737, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.279776, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.69115e-10   8.9864e-26  1.17119e-26
      low eigenvalue method done, cpu time[sec] = 0.280538, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.99e-26         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.52e-27         0         1
         *Z       ---       ---  2.45e+50
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  9.36456e-27  1.94257e-27  5.86513e-29  3.06995e-28  1.03329e-29  5.18186e-29  1.04845e-33 -4.10342e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.8372, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 610 K
            Well    Collision, 1/sec
              W1         5.83238e+09
      global relaxation matrix dimension = 890
      setting global matrices ... done, cpu time[sec] = 1.44288, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.5637, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            4045.87      1486.18      577.702      625.927      82.2797      5342.76      1080.34       27.713
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.259138, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.018771, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.279141, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.76415e-10  7.20246e-26  8.57428e-27
      low eigenvalue method done, cpu time[sec] = 0.279878, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0   7.2e-26         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.63e-27         0         1
         *Z       ---       ---  2.45e+50
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0   6.9163e-27  1.36356e-27  4.21328e-29  2.12801e-28  7.30103e-30  4.34064e-29  1.12953e-33 -1.10267e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.8239, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 610 K
            Well    Collision, 1/sec
              W1         7.29048e+09
      global relaxation matrix dimension = 890
      setting global matrices ... done, cpu time[sec] = 1.4097, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.5776, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            3236.69      1188.94      462.162      500.742      65.8237      4274.21      864.275      22.1704
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.25901, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.018747, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.279009, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.29088e-10  6.03901e-26  6.66474e-27
      low eigenvalue method done, cpu time[sec] = 0.279778, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.04e-26         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.04e-27         0         1
         *Z       ---       ---  2.45e+50
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  5.41882e-27  1.02705e-27  3.23747e-29  1.59147e-28  5.54168e-30   3.7449e-29  1.40028e-33 -2.66982e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.7917, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 610 K
            Well    Collision, 1/sec
              W1         8.74857e+09
      global relaxation matrix dimension = 890
      setting global matrices ... done, cpu time[sec] = 1.41935, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.5966, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2697.24      990.786      385.135      417.285      54.8531      3561.84      720.229      18.4753
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.259681, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.01873, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.279641, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -7.73742e-11  5.21439e-26  5.38922e-27
      low eigenvalue method done, cpu time[sec] = 0.28039, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.21e-26         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.62e-27         0         1
         *Z       ---       ---  2.45e+50
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  4.40196e-27  8.09082e-28  2.59179e-29   1.2464e-28   4.3932e-30  3.27732e-29  1.14414e-33 -1.58444e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.7895, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 610 K
            Well    Collision, 1/sec
              W1         1.02067e+10
      global relaxation matrix dimension = 890
      setting global matrices ... done, cpu time[sec] = 1.45101, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.5917, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2311.92      849.245      330.116      357.673      47.0169      3053.01      617.339       15.836
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.25876, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.018751, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.278754, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.46153e-11  4.59666e-26  4.48234e-27
      low eigenvalue method done, cpu time[sec] = 0.279595, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   4.6e-26         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.31e-27         0         1
         *Z       ---       ---  2.45e+50
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  3.67995e-27  6.59623e-28  2.14286e-29  1.01255e-28  3.60416e-30  2.90512e-29    8.899e-34 -5.96333e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.8468, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 610 K
            Well    Collision, 1/sec
              W1         1.16648e+10
      global relaxation matrix dimension = 890
      setting global matrices ... done, cpu time[sec] = 1.42605, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.6028, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2022.93      743.089      288.851      312.964      41.1398      2671.38      540.172      13.8565
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.259243, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.018743, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.279238, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.25583e-10  4.11521e-26   3.8079e-27
      low eigenvalue method done, cpu time[sec] = 0.280031, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.12e-26         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.07e-27         0         1
         *Z       ---       ---  2.45e+50
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  3.13825e-27  5.51132e-28  1.81243e-29  8.44118e-29  3.02928e-30  2.61383e-29  1.12493e-33 -9.38638e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.8173, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 620 K
      Energy reference = 59869 1/cm
      Energy step      = 103 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -86.3 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.014898
         W1 Well: collisional kernel bandwidth = 54
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.888835
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.56357
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 4.24142
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 7.71865
         W1 Well: minimal relaxation eigenvalue = 0.049916
         W1 Well: maximal relaxation eigenvalue = 1.59142
         W1 Well:       grid size = 888
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31595 1/cm
         B1 Barrier:        grid size = 582
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -77 1/cm
         B2 Barrier:        grid size = 580
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 128 1/cm
         B3 Barrier:        grid size = 626
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4609 1/cm
         B4 Barrier:        grid size = 642
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6257 1/cm
         B5 Barrier: nonpositive number of states at -23149 1/cm => truncating
         B5 Barrier:        grid size = 806
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23149 1/cm
         B6 Barrier:        grid size = 567
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1467 1/cm
         B7 Barrier:        grid size = 536
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4660 1/cm
         B8 Barrier:        grid size = 419
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16711 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 13.5598, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31595 -23149 4.72e+05 5.11e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -77 4.09e+17
         B2    129 1.52e+17
         B3  -4609    6e+16
         B4  -6257 6.49e+16
         B5 -23149 8.55e+15
         B6   1468 5.46e+17
         B7   4661 1.12e+17
         B8  16712 2.95e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  2.27e+09  4.22e+09  7.24e+05  1.76e+04  1.66e-14  1.37e+12  5.45e+15  4.49e+28
          R   4.4e-10         1      1.85  0.000318  7.72e-06  7.29e-24       603   2.4e+06  1.97e+19
         P1  2.37e-10     0.539         1  0.000172  4.16e-06  3.93e-24       325  1.29e+06  1.07e+19
         P2  1.38e-06  3.14e+03  5.83e+03         1    0.0243  2.29e-20   1.9e+06  7.54e+09  6.21e+22
         P3   5.7e-05   1.3e+05   2.4e+05      41.2         1  9.45e-19  7.81e+07  3.11e+11  2.56e+24
         P4  6.03e+13  1.37e+23  2.54e+23  4.36e+19  1.06e+18         1  8.27e+25  3.29e+29  2.71e+42
         P5  7.29e-13   0.00166   0.00307  5.28e-07  1.28e-08  1.21e-26         1  3.98e+03  3.27e+16
         P6  1.83e-16  4.17e-07  7.73e-07  1.33e-10  3.22e-12  3.04e-30  0.000252         1  8.24e+12
         P7  2.23e-29  5.06e-20  9.39e-20  1.61e-23  3.91e-25  3.69e-43  3.05e-17  1.21e-13         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  1.07e+06  1.97e+06       339      8.22  7.77e-18  6.42e+08  2.55e+12   2.1e+25
          R  9.39e-07         1      1.85  0.000318  7.72e-06  7.29e-24       603   2.4e+06  1.97e+19
         P1  5.06e-07     0.539         1  0.000172  4.16e-06  3.93e-24       325  1.29e+06  1.07e+19
         P2   0.00295  3.14e+03  5.83e+03         1    0.0243  2.29e-20   1.9e+06  7.54e+09  6.21e+22
         P3     0.122   1.3e+05   2.4e+05      41.2         1  9.45e-19  7.81e+07  3.11e+11  2.56e+24
         P4  1.29e+17  1.37e+23  2.54e+23  4.36e+19  1.06e+18         1  8.27e+25  3.29e+29  2.71e+42
         P5  1.56e-09   0.00166   0.00307  5.28e-07  1.28e-08  1.21e-26         1  3.98e+03  3.27e+16
         P6  3.92e-13  4.17e-07  7.73e-07  1.33e-10  3.22e-12  3.04e-30  0.000252         1  8.24e+12
         P7  4.75e-26  5.06e-20  9.39e-20  1.61e-23  3.91e-25  3.69e-43  3.05e-17  1.21e-13         1
   MasterEquation::set:  done, cpu time[sec] = 13.5664, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 620 K
            Well    Collision, 1/sec
              W1         2.88537e+08
      global relaxation matrix dimension = 888
      setting global matrices ... done, cpu time[sec] = 0.530645, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.6313, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            83266.9      31023.3        12207      13201.4      1739.82       111139        22708      599.586
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.258801, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.018692, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.277742, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.59153e-09  1.71932e-24  3.79023e-25
      low eigenvalue method done, cpu time[sec] = 0.27854, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.72e-24  6.66e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.58e-26  6.66e-16         1
         *Z       ---       ---  9.97e+49
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 6.66134e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  6.66134e-16  2.62787e-25  9.25903e-26  2.65661e-27  2.08044e-26  5.78619e-28  3.64798e-28 -5.15016e-33  1.53386e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.8593, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 620 K
            Well    Collision, 1/sec
              W1         8.65611e+08
      global relaxation matrix dimension = 888
      setting global matrices ... done, cpu time[sec] = 1.51603, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.5723, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            27755.6      10341.1         4069      4400.46       579.94      37046.2      7569.33      199.862
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.258032, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.018697, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.276991, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   1.8722e-09  9.09576e-25   1.7531e-25
      low eigenvalue method done, cpu time[sec] = 0.27776, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   9.1e-25  6.66e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.54e-26  6.66e-16         1
         *Z       ---       ---  9.97e+49
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 6.66134e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  6.66134e-16   1.3063e-25  3.68519e-26  1.02614e-27  6.70149e-27  2.01932e-28  3.30018e-28 -8.53781e-33 -3.39075e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.8215, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 620 K
            Well    Collision, 1/sec
              W1         1.44268e+09
      global relaxation matrix dimension = 888
      setting global matrices ... done, cpu time[sec] = 1.49529, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.5901, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            16653.4      6204.66       2441.4      2640.28      347.964      22227.7       4541.6      119.917
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.257717, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.018649, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.276624, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.27826e-10  6.56584e-25  1.15262e-25
      low eigenvalue method done, cpu time[sec] = 0.27744, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.57e-25  6.66e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.28e-26  6.66e-16         1
         *Z       ---       ---  9.97e+49
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 6.66134e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  6.66134e-16  8.81844e-26  2.24226e-26  6.33659e-28  3.83153e-27  1.19793e-28  2.92644e-28 -1.85915e-33  -1.7927e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.8205, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 620 K
            Well    Collision, 1/sec
              W1         2.01976e+09
      global relaxation matrix dimension = 888
      setting global matrices ... done, cpu time[sec] = 1.48988, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.5859, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            11895.3       4431.9      1743.86      1885.91      248.546        15877         3244      85.6552
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.257638, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.018702, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.276594, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.46733e-10   5.2363e-25  8.54843e-26
      low eigenvalue method done, cpu time[sec] = 0.277401, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.24e-25  6.66e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.61e-26  6.66e-16         1
         *Z       ---       ---  9.97e+49
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 6.66134e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  6.66134e-16  6.64504e-26  1.57906e-26  4.53869e-28  2.61397e-27  8.37302e-29  2.62661e-28  1.86619e-33   2.4886e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.8344, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 620 K
            Well    Collision, 1/sec
              W1         2.59683e+09
      global relaxation matrix dimension = 888
      setting global matrices ... done, cpu time[sec] = 1.46566, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.5896, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            9251.88      3447.03      1356.33      1466.82      193.313      12348.7      2523.11      66.6207
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.257502, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.01869, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.276455, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.55448e-10  4.39498e-25  6.75584e-26
      low eigenvalue method done, cpu time[sec] = 0.27722, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.39e-25  6.66e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.19e-26  6.66e-16         1
         *Z       ---       ---  9.97e+49
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 6.66134e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  6.66134e-16  5.30787e-26  1.20056e-26  3.50529e-28  1.94928e-27  6.35635e-29  2.37676e-28  4.85664e-33  1.96147e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.7958, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 620 K
            Well    Collision, 1/sec
              W1         2.88537e+09
      global relaxation matrix dimension = 888
      setting global matrices ... done, cpu time[sec] = 1.48148, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.5982, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            8326.69      3102.33       1220.7      1320.14      173.982      11113.9       2270.8      59.9586
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.257618, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.018674, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.276555, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -6.7793e-10   4.0774e-25  6.10196e-26
      low eigenvalue method done, cpu time[sec] = 0.277315, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.08e-25  6.66e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.04e-26  6.66e-16         1
         *Z       ---       ---  9.97e+49
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 6.66134e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  6.66134e-16  4.81604e-26  1.06779e-26  3.13971e-28  1.72155e-27  5.65469e-29  2.26632e-28  4.02742e-33  1.36142e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.7822, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 620 K
            Well    Collision, 1/sec
              W1         4.32805e+09
      global relaxation matrix dimension = 888
      setting global matrices ... done, cpu time[sec] = 1.45399, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.6639, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            5551.13      2068.22        813.8      880.092      115.988      7409.25      1513.87      39.9724
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.257842, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.018693, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.276803, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -6.14463e-11  3.02885e-25  4.05232e-26
      low eigenvalue method done, cpu time[sec] = 0.277584, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.03e-25  6.66e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.51e-26  6.66e-16         1
         *Z       ---       ---  9.97e+49
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 6.66134e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  6.66134e-16  3.24602e-26   6.6662e-27  2.02138e-28  1.05031e-27  3.54898e-29  1.84596e-28  5.91747e-33 -8.69157e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.8713, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 620 K
            Well    Collision, 1/sec
              W1         5.77074e+09
      global relaxation matrix dimension = 888
      setting global matrices ... done, cpu time[sec] = 1.47429, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.6095, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            4163.35      1551.16       610.35      660.069      86.9909      5556.94       1135.4      29.9793
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.2572, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.018676, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.276154, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.75447e-10  2.43279e-25  2.97929e-26
      low eigenvalue method done, cpu time[sec] = 0.276924, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.43e-25  6.66e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.21e-26  6.66e-16         1
         *Z       ---       ---  9.97e+49
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 6.66134e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  6.66134e-16  2.40969e-26  4.69842e-27  1.45958e-28  7.31315e-28  2.52003e-29  1.55548e-28  5.06147e-33 -8.90703e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.8298, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 620 K
            Well    Collision, 1/sec
              W1         7.21342e+09
      global relaxation matrix dimension = 888
      setting global matrices ... done, cpu time[sec] = 1.47827, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.5709, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            3330.68      1240.93       488.28      528.055      69.5927      4445.55       908.32      23.9835
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.256906, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.018677, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.275844, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -6.56841e-11   2.0431e-25  2.32356e-26
      low eigenvalue method done, cpu time[sec] = 0.276596, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.04e-25  6.66e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.02e-26  6.66e-16         1
         *Z       ---       ---  9.97e+49
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 6.66134e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  6.66134e-16  1.89393e-26  3.55094e-27  1.12537e-28  5.48622e-28  1.91912e-29  1.34396e-28  4.24024e-33 -9.82834e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.8055, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 620 K
            Well    Collision, 1/sec
              W1         8.65611e+09
      global relaxation matrix dimension = 888
      setting global matrices ... done, cpu time[sec] = 1.46754, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.574, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2775.56      1034.11        406.9      440.046       57.994      3704.62      756.933      19.9862
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.257387, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.018717, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.276369, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.86157e-11  1.76637e-25  1.88411e-26
      low eigenvalue method done, cpu time[sec] = 0.27713, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.77e-25  6.66e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.82e-27  6.66e-16         1
         *Z       ---       ---  9.97e+49
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 6.66134e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  6.66134e-16  1.54067e-26  2.80192e-27  9.02839e-29  4.30934e-28  1.52526e-29  1.17654e-28  4.67785e-33  1.31123e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.7679, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 620 K
            Well    Collision, 1/sec
              W1         1.00988e+10
      global relaxation matrix dimension = 888
      setting global matrices ... done, cpu time[sec] = 1.49823, elapsed time[sec] = 1
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.599, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2379.06      886.379      348.772      377.182      49.7091      3175.39        648.8       17.131
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.257335, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.01873, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.27633, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.75082e-11  1.55875e-25  1.57079e-26
      low eigenvalue method done, cpu time[sec] = 0.277125, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.56e-25  6.66e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.78e-27  6.66e-16         1
         *Z       ---       ---  9.97e+49
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 6.66134e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  6.66134e-16  1.29141e-26  2.28915e-27  7.48392e-29  3.50715e-28  1.25421e-29  1.04942e-28  4.42164e-33  2.46764e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.8693, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 620 K
            Well    Collision, 1/sec
              W1         1.15415e+10
      global relaxation matrix dimension = 888
      setting global matrices ... done, cpu time[sec] = 1.45765, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.5797, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2081.67      775.582      305.175      330.035      43.4955      2778.47        567.7      14.9897
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.257543, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.01869, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.276503, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.29644e-10  1.39672e-25  1.33722e-26
      low eigenvalue method done, cpu time[sec] = 0.277315, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.4e-25  6.66e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.97e-27  6.66e-16         1
         *Z       ---       ---  9.97e+49
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 6.66134e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  6.66134e-16   1.1009e-26  1.91071e-27  6.32635e-29  2.92135e-28  1.05348e-29  9.42261e-29  4.48113e-33  3.52737e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.7845, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 630 K
      Energy reference = 60565 1/cm
      Energy step      = 105 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -86.2 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.016746
         W1 Well: collisional kernel bandwidth = 54
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 1.09953
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.394623
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.633718
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 7.54508
         W1 Well: minimal relaxation eigenvalue = 0.0494937
         W1 Well: maximal relaxation eigenvalue = 1.89141
         W1 Well:       grid size = 878
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31626 1/cm
         B1 Barrier:        grid size = 577
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -20 1/cm
         B2 Barrier:        grid size = 575
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 189 1/cm
         B3 Barrier:        grid size = 621
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4640 1/cm
         B4 Barrier:        grid size = 636
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6215 1/cm
         B5 Barrier: nonpositive number of states at -23121 1/cm => truncating
         B5 Barrier:        grid size = 797
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23121 1/cm
         B6 Barrier:        grid size = 563
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1449 1/cm
         B7 Barrier:        grid size = 532
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4704 1/cm
         B8 Barrier:        grid size = 418
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16674 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 9.82428, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31626 -23121 4.81e+05 5.54e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -20 4.52e+17
         B2    190 1.71e+17
         B3  -4640  6.8e+16
         B4  -6215 7.34e+16
         B5 -23121  9.7e+15
         B6   1450 6.09e+17
         B7   4705 1.26e+17
         B8  16675 3.42e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  6.79e+08  1.25e+09  2.56e+05  6.61e+03  1.22e-14  3.88e+11  1.38e+15  7.37e+27
          R  1.47e-09         1      1.84  0.000378  9.73e-06   1.8e-23       572  2.03e+06  1.09e+19
         P1  7.99e-10     0.542         1  0.000205  5.28e-06  9.78e-24       310   1.1e+06  5.89e+18
         P2   3.9e-06  2.65e+03  4.88e+03         1    0.0258  4.78e-20  1.51e+06  5.39e+09  2.88e+22
         P3  0.000151  1.03e+05   1.9e+05      38.8         1  1.85e-18  5.87e+07  2.09e+11  1.12e+24
         P4  8.17e+13  5.54e+22  1.02e+23  2.09e+19   5.4e+17         1  3.17e+25  1.13e+29  6.02e+41
         P5  2.58e-12   0.00175   0.00323  6.61e-07   1.7e-08  3.16e-26         1  3.56e+03   1.9e+16
         P6  7.24e-16  4.91e-07  9.07e-07  1.86e-10  4.78e-12  8.86e-30  0.000281         1  5.34e+12
         P7  1.36e-28  9.21e-20   1.7e-19  3.48e-23  8.96e-25  1.66e-42  5.26e-17  1.87e-13         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  3.24e+05  5.97e+05       122      3.15  5.84e-18  1.85e+08  6.59e+11  3.52e+24
          R  3.09e-06         1      1.84  0.000378  9.73e-06   1.8e-23       572  2.03e+06  1.09e+19
         P1  1.67e-06     0.542         1  0.000205  5.28e-06  9.78e-24       310   1.1e+06  5.89e+18
         P2   0.00818  2.65e+03  4.88e+03         1    0.0258  4.78e-20  1.51e+06  5.39e+09  2.88e+22
         P3     0.317  1.03e+05   1.9e+05      38.8         1  1.85e-18  5.87e+07  2.09e+11  1.12e+24
         P4  1.71e+17  5.54e+22  1.02e+23  2.09e+19   5.4e+17         1  3.17e+25  1.13e+29  6.02e+41
         P5   5.4e-09   0.00175   0.00323  6.61e-07   1.7e-08  3.16e-26         1  3.56e+03   1.9e+16
         P6  1.52e-12  4.91e-07  9.07e-07  1.86e-10  4.78e-12  8.86e-30  0.000281         1  5.34e+12
         P7  2.84e-25  9.21e-20   1.7e-19  3.48e-23  8.96e-25  1.66e-42  5.26e-17  1.87e-13         1
   MasterEquation::set:  done, cpu time[sec] = 9.83111, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 630 K
            Well    Collision, 1/sec
              W1         2.85538e+08
      global relaxation matrix dimension = 878
      setting global matrices ... done, cpu time[sec] = 0.518003, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.3922, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            85618.7      32349.4      12881.4      13909.6      1837.78       115487      23838.2      647.562
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.250221, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.018091, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.269524, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.21115e-08  5.44381e-24  1.21844e-24
      low eigenvalue method done, cpu time[sec] = 0.270268, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.44e-24         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.69e-25         0         1
         *Z       ---       ---  4.16e+49
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0   8.4835e-25  2.96294e-25  8.49461e-27  6.61114e-26  1.84345e-27  1.23628e-27  8.21978e-32  3.27837e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.5943, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 630 K
            Well    Collision, 1/sec
              W1         8.56613e+08
      global relaxation matrix dimension = 878
      setting global matrices ... done, cpu time[sec] = 1.53168, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.3375, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            28539.6      10783.1      4293.79      4636.53      612.592      38495.6      7946.07      215.854
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.249349, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.018059, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.268609, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.27984e-09  2.90802e-24   5.7022e-25
      low eigenvalue method done, cpu time[sec] = 0.269357, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.91e-24         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.44e-25         0         1
         *Z       ---       ---  4.16e+49
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  4.26051e-25   1.1909e-25  3.32181e-27  2.15568e-26  6.51498e-28  1.11736e-27  2.13749e-32 -6.11219e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.5493, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 630 K
            Well    Collision, 1/sec
              W1         1.42769e+09
      global relaxation matrix dimension = 878
      setting global matrices ... done, cpu time[sec] = 1.53344, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.3602, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            17123.7      6469.88      2576.28      2781.92      367.555      23097.4      4767.64      129.512
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.249773, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.018048, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.269027, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.46461e-10  2.10818e-24  3.77224e-25
      low eigenvalue method done, cpu time[sec] = 0.269762, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.11e-24         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.04e-25         0         1
         *Z       ---       ---  4.16e+49
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.89629e-25  7.29196e-26   2.0664e-27  1.24098e-26  3.89298e-28  9.94702e-28  2.43184e-32  1.26402e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.572, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 630 K
            Well    Collision, 1/sec
              W1         1.99876e+09
      global relaxation matrix dimension = 878
      setting global matrices ... done, cpu time[sec] = 1.53894, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.3677, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            12231.2      4621.34       1840.2      1987.08      262.539      16498.1      3405.46      92.5088
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.24919, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.018086, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.268486, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   2.4181e-10  1.68591e-24  2.80977e-25
      low eigenvalue method done, cpu time[sec] = 0.26922, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.69e-24         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.34e-26         0         1
         *Z       ---       ---  4.16e+49
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.19178e-25  5.15759e-26  1.48729e-27  8.50685e-27  2.73438e-28  8.92023e-28  1.84725e-32 -2.77728e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.5328, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 630 K
            Well    Collision, 1/sec
              W1         2.56984e+09
      global relaxation matrix dimension = 878
      setting global matrices ... done, cpu time[sec] = 1.57084, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.3438, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            9513.19      3594.38      1431.26      1545.51      204.197      12831.9      2648.69      71.9513
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.24956, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.018093, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.268851, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.83044e-10  1.41788e-24    2.228e-25
      low eigenvalue method done, cpu time[sec] = 0.269739, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.42e-24         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.02e-26         0         1
         *Z       ---       ---  4.16e+49
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.75619e-25  3.93326e-26   1.1526e-27   6.3652e-27  2.08304e-28  8.08648e-28  2.23421e-32 -1.28374e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.6056, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 630 K
            Well    Collision, 1/sec
              W1         2.85538e+09
      global relaxation matrix dimension = 878
      setting global matrices ... done, cpu time[sec] = 1.5256, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.3078, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            8561.87      3234.94      1288.14      1390.96      183.778      11548.7      2383.82      64.7562
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.249319, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.018086, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.268614, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.22156e-10  1.31652e-24  2.01524e-25
      low eigenvalue method done, cpu time[sec] = 0.269374, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.32e-24         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.52e-26         0         1
         *Z       ---       ---  4.16e+49
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.59552e-25  3.50051e-26  1.03345e-27  5.62473e-27  1.85467e-28  7.72739e-28  1.81395e-32 -7.60701e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.4617, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 630 K
            Well    Collision, 1/sec
              W1         4.28306e+09
      global relaxation matrix dimension = 878
      setting global matrices ... done, cpu time[sec] = 1.57028, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.3534, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            5707.91      2156.63      858.759      927.305      122.518      7699.12      1589.21      43.1708
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.248451, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.018088, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.26774, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.64837e-10  9.81023e-25  1.34594e-25
      low eigenvalue method done, cpu time[sec] = 0.268505, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.81e-25         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.86e-26         0         1
         *Z       ---       ---  4.16e+49
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.08122e-25  2.19813e-26  6.69582e-28  3.45404e-27  1.17164e-28  6.31208e-28  1.72417e-32  7.11187e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.5923, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 630 K
            Well    Collision, 1/sec
              W1         5.71075e+09
      global relaxation matrix dimension = 878
      setting global matrices ... done, cpu time[sec] = 1.54541, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.3372, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            4280.93      1617.47      644.069      695.479      91.8888      5774.34      1191.91      32.3781
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.249084, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.018073, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.26837, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.95727e-10  7.89655e-25  9.93671e-26
      low eigenvalue method done, cpu time[sec] = 0.269115, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   7.9e-25         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.91e-26         0         1
         *Z       ---       ---  4.16e+49
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  8.06087e-26  1.55516e-26  4.85663e-28  2.41514e-27  8.35659e-29  5.34085e-28  1.62388e-32 -5.35987e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.5467, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 630 K
            Well    Collision, 1/sec
              W1         7.13844e+09
      global relaxation matrix dimension = 878
      setting global matrices ... done, cpu time[sec] = 1.55231, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.3769, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            3424.75      1293.98      515.255      556.383      73.5111      4619.47      953.528      25.9025
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.248799, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.018086, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.268095, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.14065e-10  6.64234e-25  7.77536e-26
      low eigenvalue method done, cpu time[sec] = 0.268843, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.64e-25         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.29e-26         0         1
         *Z       ---       ---  4.16e+49
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  6.34626e-26  1.17738e-26  3.75224e-28  1.81555e-27  6.37744e-29  4.61876e-28  1.63554e-32 -2.84172e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.6089, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 630 K
            Well    Collision, 1/sec
              W1         8.56613e+09
      global relaxation matrix dimension = 878
      setting global matrices ... done, cpu time[sec] = 1.53473, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.3828, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2853.96      1078.31      429.379      463.653      61.2592      3849.56      794.607      21.5854
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.248388, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.018046, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.267656, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.51928e-10  5.75001e-25  6.32213e-26
      low eigenvalue method done, cpu time[sec] = 0.268408, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.75e-25         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.85e-26         0         1
         *Z       ---       ---  4.16e+49
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  5.19068e-26  9.33633e-27  3.02643e-28  1.43265e-27  5.09428e-29   4.0665e-28  1.72674e-32 -4.48349e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.5403, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 630 K
            Well    Collision, 1/sec
              W1         9.99382e+09
      global relaxation matrix dimension = 878
      setting global matrices ... done, cpu time[sec] = 1.56647, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.4085, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2446.25      924.269      368.039      397.417      52.5079      3299.62      681.091      18.5018
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.248381, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.018081, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.267684, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.27404e-10  5.07949e-25  5.28317e-26
      low eigenvalue method done, cpu time[sec] = 0.26843, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.08e-25         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.51e-26         0         1
         *Z       ---       ---  4.16e+49
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  4.35103e-26  7.62921e-27  2.50996e-28  1.16709e-27  4.19208e-29  3.62451e-28  1.68969e-32 -2.11079e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.6614, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 630 K
            Well    Collision, 1/sec
              W1         1.14215e+10
      global relaxation matrix dimension = 878
      setting global matrices ... done, cpu time[sec] = 1.53241, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.3915, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2140.47      808.735      322.034       347.74      45.9444      2887.17      595.955       16.189
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.248673, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.018051, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.267924, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.01756e-10  4.55555e-25   4.5068e-26
      low eigenvalue method done, cpu time[sec] = 0.26868, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.56e-25         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.25e-26         0         1
         *Z       ---       ---  4.16e+49
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0   3.7242e-26  6.39222e-27  2.13018e-28  9.75523e-28  3.53449e-29  3.26732e-28  1.61824e-32  1.63309e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.5962, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 640 K
      Energy reference = 61260 1/cm
      Energy step      = 107 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -86.1 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.015787
         W1 Well: collisional kernel bandwidth = 54
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.84748
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.706648
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.629491
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 7.34801
         W1 Well: minimal relaxation eigenvalue = 0.0490969
         W1 Well: maximal relaxation eigenvalue = 1.74732
         W1 Well:       grid size = 868
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31616 1/cm
         B1 Barrier:        grid size = 573
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -51 1/cm
         B2 Barrier:        grid size = 571
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 162 1/cm
         B3 Barrier:        grid size = 616
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4652 1/cm
         B4 Barrier:        grid size = 631
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6258 1/cm
         B5 Barrier: nonpositive number of states at -23271 1/cm => truncating
         B5 Barrier:        grid size = 790
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23271 1/cm
         B6 Barrier:        grid size = 559
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1446 1/cm
         B7 Barrier:        grid size = 529
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4656 1/cm
         B8 Barrier:        grid size = 416
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16747 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 9.6826, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31616 -23271 4.32e+05 6.01e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -51 4.98e+17
         B2    163 1.91e+17
         B3  -4652 7.69e+16
         B4  -6258 8.29e+16
         B5 -23271  1.1e+16
         B6   1447 6.79e+17
         B7   4657 1.42e+17
         B8  16748 3.95e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  2.11e+08  3.87e+08   9.4e+04  2.57e+03  9.14e-15  1.14e+11  3.66e+14  1.28e+27
          R  4.74e-09         1      1.84  0.000446  1.22e-05  4.34e-23       543  1.74e+06  6.09e+18
         P1  2.58e-09     0.545         1  0.000243  6.64e-06  2.36e-23       296  9.45e+05  3.32e+18
         P2  1.06e-05  2.24e+03  4.12e+03         1    0.0273  9.73e-20  1.22e+06  3.89e+09  1.36e+22
         P3  0.000389  8.21e+04  1.51e+05      36.6         1  3.56e-18  4.45e+07  1.42e+11  4.99e+23
         P4  1.09e+14  2.31e+22  4.23e+22  1.03e+19  2.81e+17         1  1.25e+25     4e+28   1.4e+41
         P5  8.74e-12   0.00184   0.00338  8.22e-07  2.25e-08  7.99e-26         1   3.2e+03  1.12e+16
         P6  2.73e-15  5.76e-07  1.06e-06  2.57e-10  7.02e-12   2.5e-29  0.000313         1  3.51e+12
         P7  7.79e-28  1.64e-19  3.02e-19  7.33e-23     2e-24  7.13e-42  8.91e-17  2.85e-13         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  1.02e+05  1.88e+05      45.6      1.25  4.43e-18  5.54e+07  1.77e+11  6.22e+23
          R  9.79e-06         1      1.84  0.000446  1.22e-05  4.34e-23       543  1.74e+06  6.09e+18
         P1  5.33e-06     0.545         1  0.000243  6.64e-06  2.36e-23       296  9.45e+05  3.32e+18
         P2     0.022  2.24e+03  4.12e+03         1    0.0273  9.73e-20  1.22e+06  3.89e+09  1.36e+22
         P3     0.803  8.21e+04  1.51e+05      36.6         1  3.56e-18  4.45e+07  1.42e+11  4.99e+23
         P4  2.26e+17  2.31e+22  4.23e+22  1.03e+19  2.81e+17         1  1.25e+25     4e+28   1.4e+41
         P5   1.8e-08   0.00184   0.00338  8.22e-07  2.25e-08  7.99e-26         1   3.2e+03  1.12e+16
         P6  5.64e-12  5.76e-07  1.06e-06  2.57e-10  7.02e-12   2.5e-29  0.000313         1  3.51e+12
         P7  1.61e-24  1.64e-19  3.02e-19  7.33e-23     2e-24  7.13e-42  8.91e-17  2.85e-13         1
   MasterEquation::set:  done, cpu time[sec] = 9.68916, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 640 K
            Well    Collision, 1/sec
              W1         2.82618e+08
      global relaxation matrix dimension = 868
      setting global matrices ... done, cpu time[sec] = 0.507673, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.1255, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            87971.1      33701.5      13579.1      14643.6      1939.54       119897      24997.2      698.268
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.243287, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.017649, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.26138, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -8.47376e-09  1.65856e-23  3.76613e-24
      low eigenvalue method done, cpu time[sec] = 0.26216, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.66e-23 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.14e-25 -4.44e-16         1
         *Z       ---       ---  1.79e+49
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  2.63648e-24  9.13655e-25  2.61603e-26  2.02443e-25  5.65837e-27  3.95818e-27  -4.5851e-32  3.46156e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.2135, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 640 K
            Well    Collision, 1/sec
              W1         8.47853e+08
      global relaxation matrix dimension = 868
      setting global matrices ... done, cpu time[sec] = 1.53651, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.1748, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            29323.7      11233.8      4526.35       4881.2      646.514      39965.8       8332.4      232.756
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.242755, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.017523, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.260612, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -2.5981e-09  8.94241e-24  1.78255e-24
      low eigenvalue method done, cpu time[sec] = 0.261384, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.94e-24 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.39e-25 -4.44e-16         1
         *Z       ---       ---  1.79e+49
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  1.33913e-24  3.71087e-25  1.03631e-26  6.68342e-26  2.02583e-27  3.62436e-27  4.37946e-32  2.43141e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.3159, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 640 K
            Well    Collision, 1/sec
              W1         1.41309e+09
      global relaxation matrix dimension = 868
      setting global matrices ... done, cpu time[sec] = 1.53467, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.1758, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            17594.2       6740.3      2715.81      2928.72      387.908      23979.5      4999.44      139.654
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.242954, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.017513, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.260782, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   3.9609e-10  6.50964e-24  1.18629e-24
      low eigenvalue method done, cpu time[sec] = 0.261521, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.51e-24 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   3.2e-25 -4.44e-16         1
         *Z       ---       ---  1.79e+49
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  9.15437e-25  2.28391e-25   6.4869e-27  3.87029e-26  1.21806e-27  3.23634e-27   5.0043e-32 -1.72239e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.2364, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 640 K
            Well    Collision, 1/sec
              W1         1.97832e+09
      global relaxation matrix dimension = 868
      setting global matrices ... done, cpu time[sec] = 1.53516, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.2439, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            12567.3       4814.5      1939.87      2091.94      277.077      17128.2      3571.03      99.7526
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.242371, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.017492, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.260208, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.84317e-09  5.21962e-24  8.87319e-25
      low eigenvalue method done, cpu time[sec] = 0.260953, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.22e-24 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.56e-25 -4.44e-16         1
         *Z       ---       ---  1.79e+49
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  6.95346e-25  1.62093e-25  4.68854e-27  2.66389e-26   8.5917e-28  2.91256e-27  5.23555e-32 -4.23524e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.3596, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 640 K
            Well    Collision, 1/sec
              W1         2.54356e+09
      global relaxation matrix dimension = 868
      setting global matrices ... done, cpu time[sec] = 1.53906, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.1736, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            9774.57      3744.61      1508.78      1627.07      215.505      13321.9      2777.47      77.5853
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.242283, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.017551, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.260144, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.03247e-09  4.39839e-24  7.05889e-25
      low eigenvalue method done, cpu time[sec] = 0.260886, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0   4.4e-24 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.16e-25 -4.44e-16         1
         *Z       ---       ---  1.79e+49
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16   5.5912e-25  1.24027e-25  3.64735e-27  2.00046e-26   6.5699e-28  2.64653e-27  4.76506e-32 -2.87632e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.2422, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 640 K
            Well    Collision, 1/sec
              W1         2.82618e+09
      global relaxation matrix dimension = 868
      setting global matrices ... done, cpu time[sec] = 1.53471, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.23, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            8797.11      3370.15      1357.91      1464.36      193.954      11989.7      2499.72      69.8268
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.241982, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.017559, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.259851, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.23131e-10  4.08727e-24  6.39373e-25
      low eigenvalue method done, cpu time[sec] = 0.260668, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.09e-24 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.01e-25 -4.44e-16         1
         *Z       ---       ---  1.79e+49
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  5.08566e-25  1.10523e-25  3.27497e-27  1.77035e-26  5.85824e-28  2.53126e-27  6.65206e-32 -5.52908e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.355, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 640 K
            Well    Collision, 1/sec
              W1         4.23927e+09
      global relaxation matrix dimension = 868
      setting global matrices ... done, cpu time[sec] = 1.53369, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.1397, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            5864.74      2246.77      905.271      976.239      129.303      7993.15      1666.48      46.5512
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.242142, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.017536, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.259997, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.02201e-09  3.05502e-24   4.2939e-25
      low eigenvalue method done, cpu time[sec] = 0.260822, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.06e-24 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.5e-25 -4.44e-16         1
         *Z       ---       ---  1.79e+49
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  3.46687e-25  6.97664e-26  2.13509e-27   1.0934e-26  3.72347e-28  2.07833e-27  5.01681e-32  -1.6932e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.5713, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 640 K
            Well    Collision, 1/sec
              W1         5.65236e+09
      global relaxation matrix dimension = 868
      setting global matrices ... done, cpu time[sec] = 1.53782, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.1884, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            4398.56      1685.07      678.953      732.179      96.9771      5994.86      1249.86      34.9134
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.241957, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.017517, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.259823, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.68759e-10  2.46425e-24    3.183e-25
      low eigenvalue method done, cpu time[sec] = 0.260534, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.46e-24 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.21e-25 -4.44e-16         1
         *Z       ---       ---  1.79e+49
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  2.59395e-25  4.95378e-26  1.55483e-27  7.67511e-27  2.66642e-28  1.76306e-27  5.59979e-32 -6.81656e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.3058, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 640 K
            Well    Collision, 1/sec
              W1         7.06544e+09
      global relaxation matrix dimension = 868
      setting global matrices ... done, cpu time[sec] = 1.53492, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.149, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            3518.85      1348.06      543.162      585.743      77.5817      4795.89      999.888      27.9307
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.242251, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.017487, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.260068, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.17482e-10  2.07614e-24  2.49873e-25
      low eigenvalue method done, cpu time[sec] = 0.260789, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.08e-24 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.02e-25 -4.44e-16         1
         *Z       ---       ---  1.79e+49
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  2.04952e-25  3.76393e-26  1.20607e-27  5.79281e-27  2.04318e-28  1.53006e-27  6.06307e-32 -1.45382e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.2237, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 640 K
            Well    Collision, 1/sec
              W1         8.47853e+09
      global relaxation matrix dimension = 868
      setting global matrices ... done, cpu time[sec] = 1.53849, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.1959, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2932.37      1123.38      452.635       488.12      64.6514      3996.58       833.24      23.2756
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.241808, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.01754, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.259669, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.07494e-10  1.79951e-24  2.03717e-25
      low eigenvalue method done, cpu time[sec] = 0.260432, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.8e-24 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.84e-26 -4.44e-16         1
         *Z       ---       ---  1.79e+49
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  1.67997e-25  2.99072e-26  9.75149e-28  4.58165e-27  1.63605e-28  1.35062e-27  6.04163e-32 -6.98622e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.2436, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 640 K
            Well    Collision, 1/sec
              W1         9.89162e+09
      global relaxation matrix dimension = 868
      setting global matrices ... done, cpu time[sec] = 1.53467, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.2812, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2513.46        962.9      387.973      418.388      55.4155      3425.64      714.205      19.9505
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.241737, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.017521, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.25961, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.78826e-12  1.59132e-24   1.7063e-25
      low eigenvalue method done, cpu time[sec] = 0.260365, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.59e-24 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.81e-26 -4.44e-16         1
         *Z       ---       ---  1.79e+49
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  1.41177e-25   2.4501e-26  8.10937e-28  3.74232e-27  1.34999e-28  1.20596e-27   6.1607e-32  9.95654e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.314, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 640 K
            Well    Collision, 1/sec
              W1         1.13047e+10
      global relaxation matrix dimension = 868
      setting global matrices ... done, cpu time[sec] = 1.54164, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.2917, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2199.28      842.537      339.476       366.09      48.4886      2997.43       624.93      17.4567
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.241845, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.017508, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.259671, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.80879e-12  1.42844e-24  1.45849e-25
      low eigenvalue method done, cpu time[sec] = 0.260404, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.43e-24 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.01e-26 -4.44e-16         1
         *Z       ---       ---  1.79e+49
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  1.21179e-25  2.05794e-26    6.902e-28  3.13644e-27  1.14143e-28   1.0901e-27  6.30826e-32  8.10328e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.3964, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 650 K
      Energy reference = 61954 1/cm
      Energy step      = 108 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -86 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.014949
         W1 Well: collisional kernel bandwidth = 54
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 1.08109
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.576045
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.576182
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 7.27957
         W1 Well: minimal relaxation eigenvalue = 0.0487691
         W1 Well: maximal relaxation eigenvalue = 1.50994
         W1 Well:       grid size = 866
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31574 1/cm
         B1 Barrier:        grid size = 574
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -38 1/cm
         B2 Barrier:        grid size = 572
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 177 1/cm
         B3 Barrier:        grid size = 617
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4681 1/cm
         B4 Barrier:        grid size = 631
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6194 1/cm
         B5 Barrier: nonpositive number of states at -23582 1/cm => truncating
         B5 Barrier:        grid size = 792
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23582 1/cm
         B6 Barrier:        grid size = 560
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1473 1/cm
         B7 Barrier:        grid size = 530
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4714 1/cm
         B8 Barrier:        grid size = 419
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16702 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 9.66324, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31574 -23582 3.44e+05 6.51e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -38 5.49e+17
         B2    178 2.13e+17
         B3  -4681 8.69e+16
         B4  -6194 9.36e+16
         B5 -23582 1.24e+16
         B6   1474 7.56e+17
         B7   4715 1.59e+17
         B8  16702 4.57e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  6.73e+07  1.23e+08  3.52e+04  1.02e+03  6.83e-15  3.47e+10     1e+14  2.34e+26
          R  1.49e-08         1      1.83  0.000524  1.52e-05  1.02e-22       516  1.49e+06  3.47e+18
         P1  8.13e-09     0.547         1  0.000287  8.29e-06  5.56e-23       282  8.14e+05   1.9e+18
         P2  2.84e-05  1.91e+03  3.49e+03         1    0.0289  1.94e-19  9.85e+05  2.84e+09  6.63e+21
         P3  0.000981   6.6e+04  1.21e+05      34.6         1   6.7e-18   3.4e+07  9.81e+10  2.29e+23
         P4  1.46e+14  9.85e+21   1.8e+22  5.16e+18  1.49e+17         1  5.08e+24  1.46e+28  3.42e+40
         P5  2.88e-11   0.00194   0.00354  1.02e-06  2.94e-08  1.97e-25         1  2.88e+03  6.73e+15
         P6     1e-14  6.73e-07  1.23e-06  3.52e-10  1.02e-11  6.83e-29  0.000347         1  2.34e+12
         P7  4.28e-27  2.88e-19  5.26e-19  1.51e-22  4.36e-24  2.92e-41  1.49e-16  4.28e-13         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  3.34e+04   6.1e+04      17.5     0.506  3.39e-18  1.72e+07  4.97e+10  1.16e+23
          R  2.99e-05         1      1.83  0.000524  1.52e-05  1.02e-22       516  1.49e+06  3.47e+18
         P1  1.64e-05     0.547         1  0.000287  8.29e-06  5.56e-23       282  8.14e+05   1.9e+18
         P2    0.0572  1.91e+03  3.49e+03         1    0.0289  1.94e-19  9.85e+05  2.84e+09  6.63e+21
         P3      1.98   6.6e+04  1.21e+05      34.6         1   6.7e-18   3.4e+07  9.81e+10  2.29e+23
         P4  2.95e+17  9.85e+21   1.8e+22  5.16e+18  1.49e+17         1  5.08e+24  1.46e+28  3.42e+40
         P5  5.81e-08   0.00194   0.00354  1.02e-06  2.94e-08  1.97e-25         1  2.88e+03  6.73e+15
         P6  2.01e-11  6.73e-07  1.23e-06  3.52e-10  1.02e-11  6.83e-29  0.000347         1  2.34e+12
         P7  8.62e-24  2.88e-19  5.26e-19  1.51e-22  4.36e-24  2.92e-41  1.49e-16  4.28e-13         1
   MasterEquation::set:  done, cpu time[sec] = 9.66982, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 650 K
            Well    Collision, 1/sec
              W1         2.79774e+08
      global relaxation matrix dimension = 866
      setting global matrices ... done, cpu time[sec] = 0.504534, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.137, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            90322.9      35079.1      14302.5      15403.9      2045.19       124368      26184.7      751.793
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.242868, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.017401, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.261499, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.70073e-09  4.96013e-23  1.14292e-23
      low eigenvalue method done, cpu time[sec] = 0.262383, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.96e-23 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.42e-24 -4.44e-16         1
         *Z       ---       ---  7.85e+48
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  7.90698e-24  2.71784e-24  7.77558e-26  5.98272e-25  1.67621e-26  1.23417e-26  4.16479e-32  8.92856e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.1464, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 650 K
            Well    Collision, 1/sec
              W1         8.39322e+08
      global relaxation matrix dimension = 866
      setting global matrices ... done, cpu time[sec] = 1.53309, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.2714, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            30107.6        11693      4767.52      5134.62       681.73        41456      8728.23      250.598
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.242115, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.017421, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.260728, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.67547e-09  2.69856e-23  5.46946e-24
      low eigenvalue method done, cpu time[sec] = 0.261469, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   2.7e-23 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.32e-24 -4.44e-16         1
         *Z       ---       ---  7.85e+48
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  4.05852e-24  1.11478e-24  3.11789e-26   1.9985e-25   6.0753e-27  1.13143e-26 -6.99062e-32  1.78628e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.3741, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 650 K
            Well    Collision, 1/sec
              W1         1.39887e+09
      global relaxation matrix dimension = 866
      setting global matrices ... done, cpu time[sec] = 1.52761, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.2272, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            18064.6      7015.82      2860.51      3080.77      409.038      24873.6      5236.94      150.359
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.242, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.017472, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.260723, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.30614e-10  1.97235e-23  3.66121e-24
      low eigenvalue method done, cpu time[sec] = 0.261466, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.97e-23 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.62e-25 -4.44e-16         1
         *Z       ---       ---  7.85e+48
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  2.78976e-24  6.89705e-25  1.96392e-26  1.16432e-25  3.67589e-27  1.01511e-26  1.64182e-31 -3.07624e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.3217, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 650 K
            Well    Collision, 1/sec
              W1         1.95842e+09
      global relaxation matrix dimension = 866
      setting global matrices ... done, cpu time[sec] = 1.52959, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.2386, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            12903.3       5011.3      2043.22      2200.55       292.17      17766.8      3740.67      107.399
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.241668, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.017437, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.260286, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -2.6796e-12  1.58562e-23  2.74971e-24
      low eigenvalue method done, cpu time[sec] = 0.261025, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.59e-23 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.73e-25 -4.44e-16         1
         *Z       ---       ---  7.85e+48
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  2.12783e-24  4.91435e-25  1.42595e-26  8.04896e-26  2.60465e-27  9.16069e-27  1.85106e-31 -7.01146e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.3362, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 650 K
            Well    Collision, 1/sec
              W1         2.51796e+09
      global relaxation matrix dimension = 866
      setting global matrices ... done, cpu time[sec] = 1.52601, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.2426, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            10035.9      3897.68      1589.17      1711.54      227.243      13818.7      2909.41      83.5325
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.241977, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.017419, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.260616, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.27557e-10  1.33871e-23  2.19444e-24
      low eigenvalue method done, cpu time[sec] = 0.261333, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.34e-23 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.53e-25 -4.44e-16         1
         *Z       ---       ---  7.85e+48
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  1.71604e-24  3.77049e-25  1.11287e-26  6.06277e-26  1.99812e-27  8.34411e-27  2.29856e-31  7.80247e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.3397, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 650 K
            Well    Collision, 1/sec
              W1         2.79774e+09
      global relaxation matrix dimension = 866
      setting global matrices ... done, cpu time[sec] = 1.52705, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.2524, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            9032.29      3507.91      1430.25      1540.39      204.519      12436.8      2618.47      75.1793
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.241689, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.017463, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.26035, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.64606e-10  1.24501e-23  1.99036e-24
      low eigenvalue method done, cpu time[sec] = 0.261113, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.25e-23 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.07e-25 -4.44e-16         1
         *Z       ---       ---  7.85e+48
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  1.56312e-24  3.36446e-25  1.00083e-26  5.37369e-26  1.78452e-27  7.99087e-27  2.18131e-31  1.06991e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.2861, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 650 K
            Well    Collision, 1/sec
              W1         4.19661e+09
      global relaxation matrix dimension = 866
      setting global matrices ... done, cpu time[sec] = 1.52657, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.3019, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            6021.53      2338.61      953.503      1026.92      136.346      8291.19      1745.65      50.1195
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.241298, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.017521, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.26005, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.11578e-10  9.33383e-24  1.34392e-24
      low eigenvalue method done, cpu time[sec] = 0.260847, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.33e-24 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.55e-25 -4.44e-16         1
         *Z       ---       ---  7.85e+48
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  1.07123e-24  2.13472e-25  6.56308e-27  3.33774e-26   1.1409e-27  6.58892e-27  2.07685e-31 -2.24892e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.3446, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 650 K
            Well    Collision, 1/sec
              W1         5.59548e+09
      global relaxation matrix dimension = 866
      setting global matrices ... done, cpu time[sec] = 1.37783, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.3384, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            4516.15      1753.95      715.127      770.193       102.26      6218.39      1309.23      37.5896
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.241636, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.017483, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.26031, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.07817e-10  7.54455e-24   1.0002e-24
      low eigenvalue method done, cpu time[sec] = 0.261062, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.54e-24 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.68e-25 -4.44e-16         1
         *Z       ---       ---  7.85e+48
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  8.04569e-25  1.52113e-25  4.79922e-27  2.35203e-26  8.20366e-28  5.61033e-27  2.27369e-31  -2.3721e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.3013, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 650 K
            Well    Collision, 1/sec
              W1         6.99435e+09
      global relaxation matrix dimension = 866
      setting global matrices ... done, cpu time[sec] = 1.52553, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.2283, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            3612.92      1403.16      572.102      616.154      81.8077      4974.71      1047.39      30.0717
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.241444, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.017485, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.260116, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.40532e-10   6.3663e-24  7.87668e-25
      low eigenvalue method done, cpu time[sec] = 0.260851, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.37e-24 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   3.1e-25 -4.44e-16         1
         *Z       ---       ---  7.85e+48
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  6.37762e-25  1.15926e-25  3.73535e-27  1.78075e-26  6.30711e-28  4.88029e-27  2.10742e-31  -4.0138e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.2751, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 650 K
            Well    Collision, 1/sec
              W1         8.39322e+09
      global relaxation matrix dimension = 866
      setting global matrices ... done, cpu time[sec] = 1.52549, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.2271, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            3010.76       1169.3      476.752      513.462       68.173       4145.6      872.823      25.0598
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.241901, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.017485, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.260594, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.17443e-10  5.52492e-24  6.43863e-25
      low eigenvalue method done, cpu time[sec] = 0.261339, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.52e-24 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.69e-25 -4.44e-16         1
         *Z       ---       ---  7.85e+48
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  5.23875e-25  9.22994e-26  3.02743e-27  1.41188e-26  5.06284e-28  4.31662e-27  2.13164e-31  4.18196e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.279, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 650 K
            Well    Collision, 1/sec
              W1         9.79209e+09
      global relaxation matrix dimension = 866
      setting global matrices ... done, cpu time[sec] = 1.52627, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.2137, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2580.66      1002.26      408.644       440.11       58.434      3553.37      748.134      21.4798
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.24103, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.017476, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.259705, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.02116e-10   4.8908e-24  5.40506e-25
      low eigenvalue method done, cpu time[sec] = 0.260416, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.89e-24 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.39e-25 -4.44e-16         1
         *Z       ---       ---  7.85e+48
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16   4.4163e-25  7.58345e-26  2.52586e-27  1.15674e-26  4.19104e-28  3.86748e-27  2.16671e-31  3.77608e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.3165, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 650 K
            Well    Collision, 1/sec
              W1          1.1191e+10
      global relaxation matrix dimension = 866
      setting global matrices ... done, cpu time[sec] = 1.52645, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.1662, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2258.07      876.977      357.564      385.096      51.1298       3109.2      654.617      18.7948
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.241187, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.01743, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.259824, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.15604e-10  4.39404e-24  4.62917e-25
      low eigenvalue method done, cpu time[sec] = 0.260565, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.39e-24 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.14e-25 -4.44e-16         1
         *Z       ---       ---  7.85e+48
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  3.79446e-25  6.37619e-26  2.15246e-27  9.70748e-27  3.54822e-28  3.49772e-27  2.16917e-31 -2.08069e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.1991, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 660 K
      Energy reference = 62649 1/cm
      Energy step      = 110 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -85.9 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.014927
         W1 Well: collisional kernel bandwidth = 54
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.846666
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.867376
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.558083
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 7.04923
         W1 Well: minimal relaxation eigenvalue = 0.0483199
         W1 Well: maximal relaxation eigenvalue = 1.78483
         W1 Well:       grid size = 857
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31621 1/cm
         B1 Barrier:        grid size = 570
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -50 1/cm
         B2 Barrier:        grid size = 568
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 168 1/cm
         B3 Barrier:        grid size = 612
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4671 1/cm
         B4 Barrier:        grid size = 626
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6211 1/cm
         B5 Barrier: nonpositive number of states at -23151 1/cm => truncating
         B5 Barrier:        grid size = 780
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23151 1/cm
         B6 Barrier:        grid size = 556
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1488 1/cm
         B7 Barrier:        grid size = 527
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4679 1/cm
         B8 Barrier:        grid size = 418
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16669 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 9.4711, elapsed time[sec] = 1
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31621 -23151 4.71e+05 7.05e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -50 6.04e+17
         B2    169 2.38e+17
         B3  -4671 9.81e+16
         B4  -6211 1.05e+17
         B5 -23151  1.4e+16
         B6   1489  8.4e+17
         B7   4679 1.79e+17
         B8  16669 5.27e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  2.26e+07  4.11e+07  1.38e+04       423  5.23e-15  1.11e+10  2.89e+13  4.55e+25
          R  4.42e-08         1      1.82  0.000612  1.87e-05  2.32e-22       491  1.28e+06  2.02e+18
         P1  2.43e-08      0.55         1  0.000336  1.03e-05  1.27e-22       270  7.03e+05  1.11e+18
         P2  7.23e-05  1.63e+03  2.97e+03         1    0.0306  3.78e-19  8.02e+05  2.09e+09  3.29e+21
         P3   0.00236  5.34e+04  9.72e+04      32.7         1  1.24e-17  2.62e+07  6.84e+10  1.08e+23
         P4  1.91e+14  4.32e+21  7.86e+21  2.64e+18  8.08e+16         1  2.12e+24  5.53e+27   8.7e+39
         P5  9.02e-11   0.00204   0.00371  1.25e-06  3.81e-08  4.72e-25         1  2.61e+03  4.11e+15
         P6  3.46e-14  7.81e-07  1.42e-06  4.78e-10  1.46e-11  1.81e-28  0.000383         1  1.57e+12
         P7   2.2e-26  4.96e-19  9.03e-19  3.04e-22  9.29e-24  1.15e-40  2.44e-16  6.35e-13         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  1.13e+04  2.05e+04      6.91     0.211  2.62e-18  5.54e+06  1.45e+10  2.28e+22
          R  8.85e-05         1      1.82  0.000612  1.87e-05  2.32e-22       491  1.28e+06  2.02e+18
         P1  4.87e-05      0.55         1  0.000336  1.03e-05  1.27e-22       270  7.03e+05  1.11e+18
         P2     0.145  1.63e+03  2.97e+03         1    0.0306  3.78e-19  8.02e+05  2.09e+09  3.29e+21
         P3      4.73  5.34e+04  9.72e+04      32.7         1  1.24e-17  2.62e+07  6.84e+10  1.08e+23
         P4  3.82e+17  4.32e+21  7.86e+21  2.64e+18  8.08e+16         1  2.12e+24  5.53e+27   8.7e+39
         P5   1.8e-07   0.00204   0.00371  1.25e-06  3.81e-08  4.72e-25         1  2.61e+03  4.11e+15
         P6  6.92e-11  7.81e-07  1.42e-06  4.78e-10  1.46e-11  1.81e-28  0.000383         1  1.57e+12
         P7  4.39e-23  4.96e-19  9.03e-19  3.04e-22  9.29e-24  1.15e-40  2.44e-16  6.35e-13         1
   MasterEquation::set:  done, cpu time[sec] = 9.4781, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 660 K
            Well    Collision, 1/sec
              W1         2.77003e+08
      global relaxation matrix dimension = 857
      setting global matrices ... done, cpu time[sec] = 0.498416, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.9664, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            92672.7      36481.7      15052.3      16190.8       2154.8       128896      27400.3       808.22
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.234975, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.017069, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.252494, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.75225e-08  1.40098e-22  3.26522e-23
      low eigenvalue method done, cpu time[sec] = 0.253212, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.4e-22  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.77e-24  2.22e-16         1
         *Z       ---       ---  3.56e+48
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16  2.29173e-23  7.81609e-24   2.2342e-25  1.70943e-24  4.80072e-26  3.72684e-26  8.06039e-31  1.64023e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.9449, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 660 K
            Well    Collision, 1/sec
              W1         8.31008e+08
      global relaxation matrix dimension = 857
      setting global matrices ... done, cpu time[sec] = 1.49849, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.1263, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            30890.9      12160.6      5017.45      5396.94      718.266      42965.5      9133.45      269.407
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.23423, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.016912, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.251447, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   1.3044e-09  7.68894e-23  1.57946e-23
      low eigenvalue method done, cpu time[sec] = 0.252173, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.69e-23  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.72e-24  2.22e-16         1
         *Z       ---       ---  3.56e+48
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16  1.18855e-23  3.23696e-24  9.06713e-26  5.77694e-25  1.76118e-26  3.42755e-26  9.36308e-31  1.89871e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.0459, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 660 K
            Well    Collision, 1/sec
              W1         1.38501e+09
      global relaxation matrix dimension = 857
      setting global matrices ... done, cpu time[sec] = 1.5003, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.1856, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            18534.5      7296.35      3010.47      3238.16       430.96      25779.3      5480.07      161.644
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.23408, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.016903, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.251287, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -1.7328e-09  5.64192e-23  1.06332e-23
      low eigenvalue method done, cpu time[sec] = 0.252019, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.64e-23  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.73e-24  2.22e-16         1
         *Z       ---       ---  3.56e+48
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16  8.21516e-24  2.01324e-24  5.74688e-26  3.38602e-25  1.07231e-26  3.07636e-26    5.879e-31  2.61243e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.1033, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 660 K
            Well    Collision, 1/sec
              W1         1.93902e+09
      global relaxation matrix dimension = 857
      setting global matrices ... done, cpu time[sec] = 1.4968, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.1924, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
              13239      5211.68      2150.33      2312.97      307.828      18413.8      3914.34       115.46
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.233736, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.016918, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.250963, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.76836e-10  4.54726e-23  8.01792e-24
      low eigenvalue method done, cpu time[sec] = 0.251691, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.55e-23  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   2.2e-24  2.22e-16         1
         *Z       ---       ---  3.56e+48
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16  6.29032e-24  1.43975e-24  4.19071e-26  2.35051e-25  7.63108e-27  2.78355e-26  6.61456e-31 -1.62736e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.0924, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 660 K
            Well    Collision, 1/sec
              W1         2.49302e+09
      global relaxation matrix dimension = 857
      setting global matrices ... done, cpu time[sec] = 1.50297, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.1968, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
              10297      4053.53      1672.48      1798.98      239.422      14321.8      3044.48      89.8022
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.233777, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.017019, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.251034, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.29451e-10  3.84642e-23  6.41871e-24
      low eigenvalue method done, cpu time[sec] = 0.251979, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.85e-23  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.86e-24  2.22e-16         1
         *Z       ---       ---  3.56e+48
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16  5.08846e-24  1.10786e-24  3.28164e-26  1.77631e-25  5.87393e-27  2.53982e-26  6.23636e-31 -6.90826e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.1836, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 660 K
            Well    Collision, 1/sec
              W1         2.77003e+09
      global relaxation matrix dimension = 857
      setting global matrices ... done, cpu time[sec] = 1.50109, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.1288, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            9267.27      3648.17      1505.23      1619.08       215.48      12889.6      2740.03       80.822
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.233285, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.017029, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.250558, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.23712e-09  3.57999e-23  5.82956e-24
      low eigenvalue method done, cpu time[sec] = 0.251283, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.58e-23  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.73e-24  2.22e-16         1
         *Z       ---       ---  3.56e+48
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16  4.64085e-24  9.89802e-25  2.95538e-26  1.57652e-25  5.25332e-27  2.43411e-26  6.53546e-31 -5.67078e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.105, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 660 K
            Well    Collision, 1/sec
              W1         4.15504e+09
      global relaxation matrix dimension = 857
      setting global matrices ... done, cpu time[sec] = 1.49751, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.156, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            6178.18      2432.12      1003.49      1079.39      143.653      8593.09      1826.69      53.8813
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.23299, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.01702, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.250259, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.07069e-10  2.69191e-23  3.95712e-24
      low eigenvalue method done, cpu time[sec] = 0.251045, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.69e-23  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.3e-24  2.22e-16         1
         *Z       ---       ---  3.56e+48
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16  3.19677e-24   6.3099e-25  1.94882e-26  9.84371e-26  3.37719e-27  2.01648e-26  6.77926e-31  2.23464e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.0984, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 660 K
            Well    Collision, 1/sec
              W1         5.54005e+09
      global relaxation matrix dimension = 857
      setting global matrices ... done, cpu time[sec] = 1.50518, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.1939, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            4633.63      1824.09      752.617      809.541       107.74      6444.82      1370.02       40.411
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.23329, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.017019, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.250555, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.62504e-10  2.18035e-23  2.95658e-24
      low eigenvalue method done, cpu time[sec] = 0.251311, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.18e-23  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.05e-24  2.22e-16         1
         *Z       ---       ---  3.56e+48
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16  2.41049e-24  4.51365e-25  1.43124e-26  6.96624e-26    2.439e-27  1.72201e-26  7.07073e-31 -1.25359e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.1712, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 660 K
            Well    Collision, 1/sec
              W1         6.92507e+09
      global relaxation matrix dimension = 857
      setting global matrices ... done, cpu time[sec] = 1.49972, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.1805, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            3706.91      1459.27      602.094      647.633      86.1919      5155.85      1096.01      32.3288
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.232878, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.017008, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.250128, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.47846e-11  1.84271e-23  2.33557e-24
      low eigenvalue method done, cpu time[sec] = 0.2509, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.84e-23  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   8.9e-25  2.22e-16         1
         *Z       ---       ---  3.56e+48
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16  1.91691e-24  3.45036e-25  1.11785e-26  5.29152e-26  1.88161e-27  1.50282e-26  7.18555e-31 -1.60553e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.0909, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 660 K
            Well    Collision, 1/sec
              W1         8.31008e+09
      global relaxation matrix dimension = 857
      setting global matrices ... done, cpu time[sec] = 1.5012, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.2068, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            3089.09      1216.06      501.745      539.694      71.8266      4296.55      913.345      26.9407
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.232776, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.017026, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.250052, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -1.4121e-10  1.60116e-23  1.91411e-24
      low eigenvalue method done, cpu time[sec] = 0.250791, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.6e-23  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.74e-25  2.22e-16         1
         *Z       ---       ---  3.56e+48
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16  1.57858e-24   2.7538e-25  9.08467e-27  4.20629e-26  1.51451e-27  1.33221e-26  7.18529e-31 -5.34501e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.182, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 660 K
            Well    Collision, 1/sec
              W1         9.69509e+09
      global relaxation matrix dimension = 857
      setting global matrices ... done, cpu time[sec] = 1.50021, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.1769, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2647.79      1042.34      430.067      462.595      61.5657      3682.75      782.867       23.092
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.2327, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.017011, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.249956, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   -3.211e-10  1.41885e-23  1.61041e-24
      low eigenvalue method done, cpu time[sec] = 0.250734, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.42e-23  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.86e-25  2.22e-16         1
         *Z       ---       ---  3.56e+48
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16  1.33319e-24  2.26657e-25  7.59497e-27  3.45298e-26  1.25628e-27  1.19541e-26  7.20958e-31 -1.81992e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.1383, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 660 K
            Well    Collision, 1/sec
              W1         1.10801e+10
      global relaxation matrix dimension = 857
      setting global matrices ... done, cpu time[sec] = 1.50015, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.1854, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2316.82      912.043      376.309      404.771      53.8699      3222.41      685.009      20.2055
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.232766, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.017033, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.25007, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -8.01974e-11  1.27585e-23  1.38191e-24
      low eigenvalue method done, cpu time[sec] = 0.25105, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.28e-23  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.16e-25  2.22e-16         1
         *Z       ---       ---  3.56e+48
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16   1.1477e-24  1.90906e-25  6.48537e-27  2.90306e-26   1.0657e-27  1.08338e-26  7.28353e-31  -9.1158e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.1505, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 670 K
      Energy reference = 63344 1/cm
      Energy step      = 112 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -85.7 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.014143
         W1 Well: collisional kernel bandwidth = 54
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 1.0554
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.689118
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.554083
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 6.97075
         W1 Well: minimal relaxation eigenvalue = 0.0479412
         W1 Well: maximal relaxation eigenvalue = 1.93038
         W1 Well:       grid size = 848
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31632 1/cm
         B1 Barrier:        grid size = 566
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -48 1/cm
         B2 Barrier:        grid size = 564
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 175 1/cm
         B3 Barrier:        grid size = 607
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4640 1/cm
         B4 Barrier:        grid size = 621
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6208 1/cm
         B5 Barrier: nonpositive number of states at -23568 1/cm => truncating
         B5 Barrier:        grid size = 776
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23568 1/cm
         B6 Barrier:        grid size = 553
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1408 1/cm
         B7 Barrier:        grid size = 524
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4655 1/cm
         B8 Barrier:        grid size = 416
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16751 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 9.41533, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31632 -23568 3.48e+05 7.63e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -48 6.64e+17
         B2    176 2.65e+17
         B3  -4640 1.11e+17
         B4  -6208 1.19e+17
         B5 -23568 1.58e+16
         B6   1409 9.32e+17
         B7   4656    2e+17
         B8  16752 6.06e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  7.75e+06   1.4e+07  5.52e+03       178     4e-15  3.62e+09  8.58e+12  9.22e+24
          R  1.29e-07         1      1.81  0.000712   2.3e-05  5.15e-22       468  1.11e+06  1.19e+18
         P1  7.12e-08     0.552         1  0.000393  1.27e-05  2.84e-22       258  6.11e+05  6.56e+17
         P2  0.000181   1.4e+03  2.54e+03         1    0.0323  7.24e-19  6.57e+05  1.55e+09  1.67e+21
         P3   0.00562  4.35e+04  7.89e+04        31         1  2.24e-17  2.04e+07  4.82e+10  5.18e+22
         P4   2.5e+14  1.94e+21  3.52e+21  1.38e+18  4.46e+16         1  9.07e+23  2.15e+27  2.31e+39
         P5  2.76e-10   0.00214   0.00388  1.52e-06  4.91e-08   1.1e-24         1  2.37e+03  2.54e+15
         P6  1.17e-13  9.04e-07  1.64e-06  6.44e-10  2.08e-11  4.66e-28  0.000423         1  1.07e+12
         P7  1.09e-25  8.41e-19  1.52e-18  5.99e-22  1.93e-23  4.34e-40  3.93e-16  9.31e-13         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  3.94e+03  7.15e+03      2.81    0.0906  2.03e-18  1.84e+06  4.36e+09  4.69e+21
          R  0.000254         1      1.81  0.000712   2.3e-05  5.15e-22       468  1.11e+06  1.19e+18
         P1   0.00014     0.552         1  0.000393  1.27e-05  2.84e-22       258  6.11e+05  6.56e+17
         P2     0.356   1.4e+03  2.54e+03         1    0.0323  7.24e-19  6.57e+05  1.55e+09  1.67e+21
         P3        11  4.35e+04  7.89e+04        31         1  2.24e-17  2.04e+07  4.82e+10  5.18e+22
         P4  4.92e+17  1.94e+21  3.52e+21  1.38e+18  4.46e+16         1  9.07e+23  2.15e+27  2.31e+39
         P5  5.42e-07   0.00214   0.00388  1.52e-06  4.91e-08   1.1e-24         1  2.37e+03  2.54e+15
         P6  2.29e-10  9.04e-07  1.64e-06  6.44e-10  2.08e-11  4.66e-28  0.000423         1  1.07e+12
         P7  2.13e-22  8.41e-19  1.52e-18  5.99e-22  1.93e-23  4.34e-40  3.93e-16  9.31e-13         1
   MasterEquation::set:  done, cpu time[sec] = 9.4221, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 670 K
            Well    Collision, 1/sec
              W1         2.74301e+08
      global relaxation matrix dimension = 848
      setting global matrices ... done, cpu time[sec] = 0.486127, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.6776, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            95019.1      37908.9      15828.9      17004.9      2268.44       133481      28643.8      867.634
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.228987, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.016599, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.246145, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.79268e-09  3.87431e-22   9.1387e-23
      low eigenvalue method done, cpu time[sec] = 0.246858, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.87e-22 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.86e-23 -4.44e-16         1
         *Z       ---       ---  1.65e+48
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  6.42885e-23  2.17589e-23  6.21543e-25  4.72986e-24  1.33138e-25  1.08714e-25  3.52916e-30 -3.15303e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.5987, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 670 K
            Well    Collision, 1/sec
              W1         8.22904e+08
      global relaxation matrix dimension = 848
      setting global matrices ... done, cpu time[sec] = 1.46506, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.859, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
              31673      12636.3       5276.3      5668.31      756.145      44493.5      9547.94      289.211
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.229079, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.016587, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.245984, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.19531e-09  2.14443e-22  4.46711e-23
      low eigenvalue method done, cpu time[sec] = 0.246665, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.14e-22 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.03e-23 -4.44e-16         1
         *Z       ---       ---  1.65e+48
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  3.36774e-23  9.09639e-24  2.55199e-25  1.61652e-24  4.94188e-26  1.00131e-25  2.70401e-30  1.70504e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.7659, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 670 K
            Well    Collision, 1/sec
              W1         1.37151e+09
      global relaxation matrix dimension = 848
      setting global matrices ... done, cpu time[sec] = 1.46569, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.8734, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            19003.8      7581.78      3165.78      3400.99      453.687      26696.1      5728.77      173.527
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.228438, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.016542, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.245298, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -7.28169e-10  1.57957e-22  3.02408e-23
      low eigenvalue method done, cpu time[sec] = 0.246013, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.58e-22 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.57e-24 -4.44e-16         1
         *Z       ---       ---  1.65e+48
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  2.34022e-23  5.68615e-24  1.62725e-25  9.52996e-25  3.02712e-26  9.01389e-26  2.01743e-30   1.0928e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.6977, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 670 K
            Well    Collision, 1/sec
              W1         1.92011e+09
      global relaxation matrix dimension = 848
      setting global matrices ... done, cpu time[sec] = 1.46348, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.9069, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            13574.2      5415.56      2261.27      2429.28      324.062      19068.6      4091.98      123.948
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.22826, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.016543, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.245111, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.48303e-11  1.27628e-22  2.28922e-23
      low eigenvalue method done, cpu time[sec] = 0.245763, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.28e-22 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.12e-24 -4.44e-16         1
         *Z       ---       ---  1.65e+48
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  1.79876e-23  4.08122e-24  1.19167e-25   6.6427e-25  2.16346e-26  8.17589e-26  2.29405e-30 -5.82441e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.7296, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 670 K
            Well    Collision, 1/sec
              W1         2.46871e+09
      global relaxation matrix dimension = 848
      setting global matrices ... done, cpu time[sec] = 1.46541, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.8996, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            10557.7       4212.1      1758.77      1889.44      252.048      14831.2      3182.65      96.4037
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.228396, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.016529, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.245237, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.68074e-10  1.08158e-22   1.8382e-23
      low eigenvalue method done, cpu time[sec] = 0.245963, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.08e-22 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.19e-24 -4.44e-16         1
         *Z       ---       ---  1.65e+48
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16   1.4595e-23  3.14955e-24  9.36297e-26  5.03615e-25  1.67088e-26   7.4778e-26  2.36917e-30  1.09811e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.7462, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 670 K
            Well    Collision, 1/sec
              W1         2.74301e+09
      global relaxation matrix dimension = 848
      setting global matrices ... done, cpu time[sec] = 1.46296, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.9663, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            9501.91      3790.89      1582.89      1700.49      226.844      13348.1      2864.38      86.7634
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.228261, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.016514, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.245071, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.47625e-10  1.00743e-22  1.67165e-23
      low eigenvalue method done, cpu time[sec] = 0.245774, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.01e-22 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.83e-24 -4.44e-16         1
         *Z       ---       ---  1.65e+48
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  1.33269e-23  2.81703e-24  8.44311e-26  4.47533e-25   1.4963e-26  7.17081e-26  2.12956e-30 -1.32082e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.7957, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 670 K
            Well    Collision, 1/sec
              W1         4.11452e+09
      global relaxation matrix dimension = 848
      setting global matrices ... done, cpu time[sec] = 1.46657, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.9123, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            6334.61      2527.26      1055.26      1133.66      151.229       8898.7      1909.59      57.8422
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.22828, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.016531, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.245108, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.52351e-10   7.5974e-23  1.14062e-23
      low eigenvalue method done, cpu time[sec] = 0.245844, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   7.6e-23 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.64e-24 -4.44e-16         1
         *Z       ---       ---  1.65e+48
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  9.22729e-24  1.80468e-24  5.59879e-26  2.80941e-25   9.6732e-27  5.96407e-26  2.24628e-30 -5.90287e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.7524, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 670 K
            Well    Collision, 1/sec
              W1         5.48602e+09
      global relaxation matrix dimension = 848
      setting global matrices ... done, cpu time[sec] = 1.4651, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.918, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            4750.96      1895.45      791.445      850.247      113.422      6674.03      1432.19      43.3817
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.228223, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.016573, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.245103, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.73609e-10  6.16612e-23  8.55482e-24
      low eigenvalue method done, cpu time[sec] = 0.245784, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.17e-23 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.96e-24 -4.44e-16         1
         *Z       ---       ---  1.65e+48
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  6.98362e-24  1.29546e-24  4.12847e-26  1.99589e-25  7.01423e-27  5.10948e-26  2.23735e-30  3.83699e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.7914, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 670 K
            Well    Collision, 1/sec
              W1         6.85753e+09
      global relaxation matrix dimension = 848
      setting global matrices ... done, cpu time[sec] = 1.46214, elapsed time[sec] = 1
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.8987, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            3800.76      1516.36      633.156      680.198      90.7374      5339.22      1145.75      34.7053
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.227927, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.01655, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.244792, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.20288e-10  5.21928e-23  6.77856e-24
      low eigenvalue method done, cpu time[sec] = 0.245477, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.22e-23 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   2.5e-24 -4.44e-16         1
         *Z       ---       ---  1.65e+48
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  5.56942e-24  9.92984e-25  3.23451e-26  1.52058e-25  5.42805e-27  4.47078e-26  2.29354e-30 -3.60578e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.7996, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 670 K
            Well    Collision, 1/sec
              W1         8.22904e+09
      global relaxation matrix dimension = 848
      setting global matrices ... done, cpu time[sec] = 1.32129, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.9561, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             3167.3      1263.63       527.63      566.831      75.6145      4449.35      954.794      28.9211
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.228066, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.016619, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.244977, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.22049e-11  4.54073e-23  5.56944e-24
      low eigenvalue method done, cpu time[sec] = 0.245672, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.54e-23 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.18e-24 -4.44e-16         1
         *Z       ---       ---  1.65e+48
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  4.59848e-24  7.94515e-25  2.63613e-26  1.21204e-25  4.38146e-27  3.97253e-26  2.34888e-30  7.56047e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.6445, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 670 K
            Well    Collision, 1/sec
              W1         9.60054e+09
      global relaxation matrix dimension = 848
      setting global matrices ... done, cpu time[sec] = 1.4661, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.9296, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2714.83      1083.11      452.254      485.855      64.8124      3813.73      818.395      24.7895
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.227863, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.016541, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.2447, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.36163e-11  4.02782e-23  4.69597e-24
      low eigenvalue method done, cpu time[sec] = 0.245374, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.03e-23 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.93e-24 -4.44e-16         1
         *Z       ---       ---  1.65e+48
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  3.89237e-24  6.55347e-25  2.20916e-26  9.97256e-26  3.64312e-27  3.57205e-26  2.36547e-30  5.20945e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.7447, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 670 K
            Well    Collision, 1/sec
              W1          1.0972e+10
      global relaxation matrix dimension = 848
      setting global matrices ... done, cpu time[sec] = 1.46682, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.9984, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2375.48      947.723      395.723      425.123      56.7109      3337.01      716.096      21.6908
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.227776, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.01655, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.244629, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.56849e-10  3.62503e-23  4.03735e-24
      low eigenvalue method done, cpu time[sec] = 0.245374, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.63e-23 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.74e-24 -4.44e-16         1
         *Z       ---       ---  1.65e+48
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  3.35734e-24   5.5302e-25   1.8904e-26  8.40134e-26  3.09696e-27  3.24327e-26  2.37533e-30  4.37419e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.8255, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 680 K
      Energy reference = 64039 1/cm
      Energy step      = 113 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -85.6 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.016043
         W1 Well: collisional kernel bandwidth = 54
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 1.05169
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.781994
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.543625
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 6.78939
         W1 Well: minimal relaxation eigenvalue = 0.0475845
         W1 Well: maximal relaxation eigenvalue = 4.67796
         W1 Well:       grid size = 847
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31671 1/cm
         B1 Barrier:        grid size = 567
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -32 1/cm
         B2 Barrier:        grid size = 565
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 193 1/cm
         B3 Barrier:        grid size = 608
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4664 1/cm
         B4 Barrier:        grid size = 622
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6246 1/cm
         B5 Barrier: nonpositive number of states at -23197 1/cm => truncating
         B5 Barrier:        grid size = 772
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23197 1/cm
         B6 Barrier:        grid size = 554
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1437 1/cm
         B7 Barrier:        grid size = 525
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4714 1/cm
         B8 Barrier:        grid size = 419
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16692 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 9.31561, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31671 -23197 4.56e+05 8.26e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -32 7.29e+17
         B2    194 2.95e+17
         B3  -4664 1.24e+17
         B4  -6246 1.34e+17
         B5 -23197 1.79e+16
         B6   1438 1.03e+18
         B7   4715 2.24e+17
         B8  16693 6.96e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  2.75e+06  4.96e+06  2.27e+03        77  3.08e-15  1.23e+09  2.64e+12  1.96e+24
          R  3.64e-07         1       1.8  0.000825   2.8e-05  1.12e-21       446   9.6e+05  7.12e+17
         P1  2.02e-07     0.554         1  0.000457  1.55e-05  6.21e-22       247  5.32e+05  3.95e+17
         P2  0.000441  1.21e+03  2.19e+03         1     0.034  1.36e-18  5.41e+05  1.16e+09  8.64e+20
         P3     0.013  3.57e+04  6.44e+04      29.4         1     4e-17  1.59e+07  3.43e+10  2.54e+22
         P4  3.25e+14  8.92e+20  1.61e+21  7.36e+17   2.5e+16         1  3.98e+23  8.57e+26  6.36e+38
         P5  8.16e-10   0.00224   0.00405  1.85e-06  6.28e-08  2.51e-24         1  2.15e+03   1.6e+15
         P6  3.79e-13  1.04e-06  1.88e-06  8.59e-10  2.92e-11  1.17e-27  0.000464         1  7.42e+11
         P7  5.11e-25   1.4e-18  2.53e-18  1.16e-21  3.93e-23  1.57e-39  6.26e-16  1.35e-12         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  1.42e+03  2.56e+03      1.17    0.0398  1.59e-18  6.34e+05  1.36e+09  1.01e+21
          R  0.000704         1       1.8  0.000825   2.8e-05  1.12e-21       446   9.6e+05  7.12e+17
         P1   0.00039     0.554         1  0.000457  1.55e-05  6.21e-22       247  5.32e+05  3.95e+17
         P2     0.853  1.21e+03  2.19e+03         1     0.034  1.36e-18  5.41e+05  1.16e+09  8.64e+20
         P3      25.1  3.57e+04  6.44e+04      29.4         1     4e-17  1.59e+07  3.43e+10  2.54e+22
         P4  6.28e+17  8.92e+20  1.61e+21  7.36e+17   2.5e+16         1  3.98e+23  8.57e+26  6.36e+38
         P5  1.58e-06   0.00224   0.00405  1.85e-06  6.28e-08  2.51e-24         1  2.15e+03   1.6e+15
         P6  7.33e-10  1.04e-06  1.88e-06  8.59e-10  2.92e-11  1.17e-27  0.000464         1  7.42e+11
         P7  9.88e-22   1.4e-18  2.53e-18  1.16e-21  3.93e-23  1.57e-39  6.26e-16  1.35e-12         1
   MasterEquation::set:  done, cpu time[sec] = 9.32217, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 680 K
            Well    Collision, 1/sec
              W1         2.71667e+08
      global relaxation matrix dimension = 847
      setting global matrices ... done, cpu time[sec] = 0.481709, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.7017, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            97360.9      39360.2      16632.7      17846.6      2386.18       138118      29914.8      930.119
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.227473, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.016796, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.24487, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   7.5909e-09  1.04665e-21  2.49707e-22
      low eigenvalue method done, cpu time[sec] = 0.245586, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.05e-21         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.98e-23         0         1
         *Z       ---       ---  7.82e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.74775e-22  5.87338e-23  1.67598e-24   1.2686e-23  3.57902e-25   3.0521e-25  6.61245e-30 -5.86206e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.5704, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 680 K
            Well    Collision, 1/sec
              W1            8.15e+08
      global relaxation matrix dimension = 847
      setting global matrices ... done, cpu time[sec] = 1.45778, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.9488, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            32453.6      13120.1      5544.23      5948.88      795.393      46039.4      9971.59       310.04
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.226935, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.016499, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.243744, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.00716e-09  5.84078e-22  1.23302e-22
      low eigenvalue method done, cpu time[sec] = 0.244443, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.84e-22         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.78e-23         0         1
         *Z       ---       ---  7.82e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  9.24572e-23  2.47767e-23  6.96061e-25  4.38393e-24  1.34389e-25  2.82689e-25  8.02013e-30  6.17954e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.7698, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 680 K
            Well    Collision, 1/sec
              W1         1.35833e+09
      global relaxation matrix dimension = 847
      setting global matrices ... done, cpu time[sec] = 1.45653, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.9544, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            19472.2      7872.03      3326.54      3569.33      477.236      27623.6      5982.95      186.024
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.226738, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.016515, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.243568, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.54132e-09  4.31832e-22  8.39232e-23
      low eigenvalue method done, cpu time[sec] = 0.244275, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.32e-22         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.05e-23         0         1
         *Z       ---       ---  7.82e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  6.45842e-23  1.55639e-23  4.46462e-25  2.59923e-24  8.28085e-26  2.55403e-25  6.99601e-30 -4.47499e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.7618, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 680 K
            Well    Collision, 1/sec
              W1         1.90167e+09
      global relaxation matrix dimension = 847
      setting global matrices ... done, cpu time[sec] = 1.45615, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.9609, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            13908.7      5622.88       2376.1      2549.52      340.883      19731.2      4273.54      132.874
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.226749, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.016481, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.243564, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.14751e-09  3.49767e-22  6.37711e-23
      low eigenvalue method done, cpu time[sec] = 0.244265, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   3.5e-22         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.66e-23         0         1
         *Z       ---       ---  7.82e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  4.98257e-23  1.12102e-23  3.28303e-25  1.81896e-24  5.94275e-26  2.32193e-25  6.75105e-30   1.8305e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.8558, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 680 K
            Well    Collision, 1/sec
              W1           2.445e+09
      global relaxation matrix dimension = 847
      setting global matrices ... done, cpu time[sec] = 1.45489, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.9313, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            10817.9      4373.35      1848.08      1982.96      265.131      15346.5      3323.86      103.347
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.226527, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.01651, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.243349, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.73869e-09  2.96942e-22  5.13587e-23
      low eigenvalue method done, cpu time[sec] = 0.244054, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.97e-22         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.41e-23         0         1
         *Z       ---       ---  7.82e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  4.05433e-23  8.67437e-24  2.58762e-25  1.38323e-24  4.60422e-26  2.12868e-25  7.45342e-30 -8.37631e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.751, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 680 K
            Well    Collision, 1/sec
              W1         2.71667e+09
      global relaxation matrix dimension = 847
      setting global matrices ... done, cpu time[sec] = 1.45638, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.9664, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            9736.09      3936.02      1663.27      1784.66      238.618      13811.8      2991.48      93.0119
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.226446, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.016431, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.243186, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.07036e-10  2.76795e-22  4.67649e-23
      low eigenvalue method done, cpu time[sec] = 0.243891, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.77e-22         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.32e-23         0         1
         *Z       ---       ---  7.82e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  3.70678e-23  7.76783e-24  2.33663e-25  1.23082e-24  4.12885e-26  2.04331e-25  6.44754e-30 -2.68984e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.8324, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 680 K
            Well    Collision, 1/sec
              W1           4.075e+09
      global relaxation matrix dimension = 847
      setting global matrices ... done, cpu time[sec] = 1.34509, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.9968, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            6490.73      2624.01      1108.85      1189.78      159.079      9207.87      1994.32      62.0079
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.226943, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.016744, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.244003, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -9.29591e-11  2.09339e-22  3.20707e-23
      low eigenvalue method done, cpu time[sec] = 0.244691, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.09e-22         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.96e-24         0         1
         *Z       ---       ---  7.82e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.57914e-23  4.99972e-24  1.55788e-25  7.76707e-25  2.68373e-26  1.70651e-25  7.36553e-30 -1.92363e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.7059, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 680 K
            Well    Collision, 1/sec
              W1         5.43333e+09
      global relaxation matrix dimension = 847
      setting global matrices ... done, cpu time[sec] = 1.4518, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.9784, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            4868.05      1968.01      831.635      892.332      119.309       6905.9      1495.74      46.5059
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.226618, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.01649, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.243413, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -3.1375e-11  1.70241e-22  2.41436e-23
      low eigenvalue method done, cpu time[sec] = 0.244127, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.7e-22         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   8.1e-24         0         1
         *Z       ---       ---  7.82e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.95936e-23  3.60186e-24  1.15346e-25  5.53959e-25  1.95397e-26  1.46688e-25  7.21882e-30  1.14628e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.854, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 680 K
            Well    Collision, 1/sec
              W1         6.79166e+09
      global relaxation matrix dimension = 847
      setting global matrices ... done, cpu time[sec] = 1.4625, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.9774, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            3894.44      1574.41      665.308      713.866      95.4471      5524.72      1196.59      37.2047
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.226536, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.016502, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.24338, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.89773e-11  1.44318e-22  1.91876e-23
      low eigenvalue method done, cpu time[sec] = 0.244078, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.44e-22         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.87e-24         0         1
         *Z       ---       ---  7.82e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.56716e-23   2.7686e-24  9.06582e-26  4.23346e-25  1.51696e-26  1.28679e-25  7.22519e-30  3.62544e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.7926, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 680 K
            Well    Collision, 1/sec
              W1            8.15e+09
      global relaxation matrix dimension = 847
      setting global matrices ... done, cpu time[sec] = 1.45416, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.9877, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            3245.36      1312.01      554.423      594.888      79.5393      4603.94      997.159       31.004
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.226811, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.016762, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.243883, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.38452e-10  1.25709e-22  1.58042e-23
      low eigenvalue method done, cpu time[sec] = 0.244595, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.26e-22         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.98e-24         0         1
         *Z       ---       ---  7.82e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.29708e-23  2.22026e-24   7.4079e-26  3.38274e-25  1.22764e-26  1.14607e-25  7.35378e-30  1.87408e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.9103, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 680 K
            Well    Collision, 1/sec
              W1         9.50833e+09
      global relaxation matrix dimension = 847
      setting global matrices ... done, cpu time[sec] = 1.46054, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.9854, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2781.74      1124.58       475.22      509.904      68.1765      3946.23      854.708      26.5748
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.226082, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.016471, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.242888, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   1.5382e-10  1.11622e-22  1.33539e-23
      low eigenvalue method done, cpu time[sec] = 0.24359, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.12e-22         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.31e-24         0         1
         *Z       ---       ---  7.82e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.10018e-23  1.83495e-24  6.22198e-26  2.78924e-25  1.02305e-26  1.03261e-25  7.39011e-30 -3.14281e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.8038, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 680 K
            Well    Collision, 1/sec
              W1         1.08667e+10
      global relaxation matrix dimension = 847
      setting global matrices ... done, cpu time[sec] = 1.45425, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.0015, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2434.02      984.004      415.817      446.166      59.6544      3452.95      747.869       23.253
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.225933, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.016503, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.242777, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.74325e-10  1.00546e-22  1.15024e-23
      low eigenvalue method done, cpu time[sec] = 0.243483, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.01e-22         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.78e-24         0         1
         *Z       ---       ---  7.82e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  9.50633e-24  1.55114e-24  5.33454e-26  2.35428e-25  8.71381e-27   9.3897e-26   7.4632e-30 -6.26501e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.8096, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 690 K
      Energy reference = 64734 1/cm
      Energy step      = 115 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -85.5 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.016329
         W1 Well: collisional kernel bandwidth = 53
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 1.02481
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.823924
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.609652
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 6.66486
         W1 Well: minimal relaxation eigenvalue = 0.0472277
         W1 Well: maximal relaxation eigenvalue = 1.9816
         W1 Well:       grid size = 838
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31636 1/cm
         B1 Barrier:        grid size = 563
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -11 1/cm
         B2 Barrier:        grid size = 562
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 104 1/cm
         B3 Barrier:        grid size = 603
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4611 1/cm
         B4 Barrier:        grid size = 617
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6221 1/cm
         B5 Barrier: nonpositive number of states at -23241 1/cm => truncating
         B5 Barrier:        grid size = 765
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23241 1/cm
         B6 Barrier:        grid size = 550
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1484 1/cm
         B7 Barrier:        grid size = 522
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4704 1/cm
         B8 Barrier:        grid size = 418
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16664 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 9.27364, elapsed time[sec] = 1
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31636 -23241 4.41e+05 8.93e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -11 7.99e+17
         B2    105 3.27e+17
         B3  -4611  1.4e+17
         B4  -6221  1.5e+17
         B5 -23241 2.01e+16
         B6   1485 1.14e+18
         B7   4705  2.5e+17
         B8  16664 7.98e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  1.01e+06  1.82e+06       961      34.3  2.41e-15  4.31e+08  8.46e+11  4.38e+23
          R  9.89e-07         1       1.8  0.000951   3.4e-05  2.38e-21       426  8.37e+05  4.33e+17
         P1   5.5e-07     0.556         1  0.000529  1.89e-05  1.32e-21       237  4.65e+05  2.41e+17
         P2   0.00104  1.05e+03  1.89e+03         1    0.0357  2.51e-18  4.48e+05   8.8e+08  4.56e+20
         P3    0.0291  2.94e+04  5.29e+04        28         1  7.01e-17  1.25e+07  2.46e+10  1.28e+22
         P4  4.15e+14   4.2e+20  7.55e+20  3.99e+17  1.43e+16         1  1.79e+23  3.51e+26  1.82e+38
         P5  2.32e-09   0.00235   0.00422  2.23e-06  7.98e-08  5.59e-24         1  1.96e+03  1.02e+15
         P6  1.18e-12  1.19e-06  2.15e-06  1.14e-09  4.06e-11  2.85e-27  0.000509         1  5.18e+11
         P7  2.28e-24  2.31e-18  4.15e-18  2.19e-21  7.84e-23   5.5e-39  9.83e-16  1.93e-12         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1       527       948     0.501    0.0179  1.26e-18  2.25e+05  4.41e+08  2.28e+20
          R    0.0019         1       1.8  0.000951   3.4e-05  2.38e-21       426  8.37e+05  4.33e+17
         P1   0.00105     0.556         1  0.000529  1.89e-05  1.32e-21       237  4.65e+05  2.41e+17
         P2      1.99  1.05e+03  1.89e+03         1    0.0357  2.51e-18  4.48e+05   8.8e+08  4.56e+20
         P3      55.8  2.94e+04  5.29e+04        28         1  7.01e-17  1.25e+07  2.46e+10  1.28e+22
         P4  7.96e+17   4.2e+20  7.55e+20  3.99e+17  1.43e+16         1  1.79e+23  3.51e+26  1.82e+38
         P5  4.45e-06   0.00235   0.00422  2.23e-06  7.98e-08  5.59e-24         1  1.96e+03  1.02e+15
         P6  2.27e-09  1.19e-06  2.15e-06  1.14e-09  4.06e-11  2.85e-27  0.000509         1  5.18e+11
         P7  4.38e-21  2.31e-18  4.15e-18  2.19e-21  7.84e-23   5.5e-39  9.83e-16  1.93e-12         1
   MasterEquation::set:  done, cpu time[sec] = 9.28061, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 690 K
            Well    Collision, 1/sec
              W1         2.69096e+08
      global relaxation matrix dimension = 838
      setting global matrices ... done, cpu time[sec] = 0.478542, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.5245, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            99696.9      40834.9      17464.2      18716.4       2508.1       142807      31212.8      995.755
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.221259, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.016212, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.238445, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.82043e-09  2.70135e-21  6.51495e-22
      low eigenvalue method done, cpu time[sec] = 0.23926, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   2.7e-21 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.28e-22 -4.44e-16         1
         *Z       ---       ---   3.8e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  4.61265e-22   1.5393e-22  4.38833e-24  3.30461e-23  9.34357e-25  8.34457e-25  1.44638e-29    2.101e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.3058, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 690 K
            Well    Collision, 1/sec
              W1         8.07288e+08
      global relaxation matrix dimension = 838
      setting global matrices ... done, cpu time[sec] = 1.42562, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.8123, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            33232.3      13611.6      5821.39      6238.78      836.032      47602.3      10404.3      331.918
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.220511, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.016094, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.236929, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.42729e-09  1.51949e-21  3.24904e-22
      low eigenvalue method done, cpu time[sec] = 0.237614, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.52e-21 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.18e-23 -4.44e-16         1
         *Z       ---       ---   3.8e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  2.46334e-22  6.55057e-23  1.84282e-24  1.15423e-23  3.54773e-25  7.75023e-25  2.16854e-29   1.9645e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.5264, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 690 K
            Well    Collision, 1/sec
              W1         1.34548e+09
      global relaxation matrix dimension = 838
      setting global matrices ... done, cpu time[sec] = 1.43091, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.8234, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            19939.4      8166.99      3492.83      3743.27      501.619      28561.4      6242.55      199.151
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.221191, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.016107, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.237624, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   1.1717e-09  1.12752e-21  2.22311e-22
      low eigenvalue method done, cpu time[sec] = 0.238302, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.13e-21 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.33e-23 -4.44e-16         1
         *Z       ---       ---   3.8e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  1.72966e-22  4.13485e-23  1.18891e-24   6.8818e-24  2.19884e-25   7.0245e-25  2.29935e-29 -5.91215e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.5259, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 690 K
            Well    Collision, 1/sec
              W1         1.88367e+09
      global relaxation matrix dimension = 838
      setting global matrices ... done, cpu time[sec] = 1.42929, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.8392, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            14242.4      5833.56      2494.88      2673.76        358.3        20401      4458.97      142.251
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.221149, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.016135, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.237598, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -6.7205e-10  9.15436e-22  1.69558e-22
      low eigenvalue method done, cpu time[sec] = 0.238292, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.15e-22 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.32e-23 -4.44e-16         1
         *Z       ---       ---   3.8e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16   1.3392e-22  2.98839e-23  8.77783e-25  4.83476e-24   1.5844e-25   6.3998e-25  2.05652e-29 -4.78131e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.5858, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 690 K
            Well    Collision, 1/sec
              W1         2.42186e+09
      global relaxation matrix dimension = 838
      setting global matrices ... done, cpu time[sec] = 1.42995, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.8189, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            11077.4      4537.21      1940.46      2079.59      278.677      15867.4      3468.09      110.639
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.221261, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.016068, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.237671, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.73405e-10   7.7856e-22  1.36952e-22
      low eigenvalue method done, cpu time[sec] = 0.238363, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.79e-22 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.68e-23 -4.44e-16         1
         *Z       ---       ---   3.8e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  1.09285e-22  2.31873e-23   6.9405e-25  3.68783e-24  1.23144e-25  5.87887e-25  2.15567e-29    -6.76e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.5455, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 690 K
            Well    Collision, 1/sec
              W1         2.69096e+09
      global relaxation matrix dimension = 838
      setting global matrices ... done, cpu time[sec] = 1.43121, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.7868, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            9969.69      4083.49      1746.42      1871.64       250.81      14280.7      3121.28      99.5755
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.219838, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.016024, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.236177, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -6.38954e-10  7.26274e-22  1.24858e-22
      low eigenvalue method done, cpu time[sec] = 0.23685, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.26e-22 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.43e-23 -4.44e-16         1
         *Z       ---       ---   3.8e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  1.00038e-22   2.0788e-23  6.27578e-25  3.28578e-24  1.10579e-25  5.64919e-25  2.11814e-29  8.27924e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.5398, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 690 K
            Well    Collision, 1/sec
              W1         4.03644e+09
      global relaxation matrix dimension = 838
      setting global matrices ... done, cpu time[sec] = 1.42968, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.7586, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            6646.46      2722.33      1164.28      1247.76      167.206      9520.45      2080.85      66.3837
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.220314, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.016026, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.236638, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.77072e-10  5.50834e-22  8.60513e-23
      low eigenvalue method done, cpu time[sec] = 0.237303, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.51e-22 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   2.6e-23 -4.44e-16         1
         *Z       ---       ---   3.8e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  6.99456e-23  1.34424e-23  4.20658e-25  2.08418e-24  7.22612e-26  4.73566e-25  2.14278e-29 -4.56821e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.5311, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 690 K
            Well    Collision, 1/sec
              W1         5.38192e+09
      global relaxation matrix dimension = 838
      setting global matrices ... done, cpu time[sec] = 1.42874, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.7585, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            4984.84      2041.75      873.208      935.818      125.405      7140.34      1560.64      49.7878
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.219982, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.015982, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.236288, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.67917e-11  4.48839e-22  6.50192e-23
      low eigenvalue method done, cpu time[sec] = 0.236959, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.49e-22 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.12e-23 -4.44e-16         1
         *Z       ---       ---   3.8e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  5.33251e-23  9.71684e-24  3.12664e-25  1.49202e-24  5.28163e-26  4.08311e-25  2.18348e-29  9.93969e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.5047, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 690 K
            Well    Collision, 1/sec
              W1          6.7274e+09
      global relaxation matrix dimension = 838
      setting global matrices ... done, cpu time[sec] = 1.43222, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.7687, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            3987.87       1633.4      698.567      748.654      100.324      5712.27      1248.51      39.8302
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.219935, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.016014, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.23629, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -8.43608e-10  3.81068e-22  5.18239e-23
      low eigenvalue method done, cpu time[sec] = 0.236983, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.81e-22 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.8e-23 -4.44e-16         1
         *Z       ---       ---   3.8e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  4.27749e-23  7.48943e-24  2.46516e-25  1.14364e-24   4.1132e-26  3.59134e-25  2.21192e-29  6.25154e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.5517, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 690 K
            Well    Collision, 1/sec
              W1         8.07288e+09
      global relaxation matrix dimension = 838
      setting global matrices ... done, cpu time[sec] = 1.43263, elapsed time[sec] = 1
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.7595, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            3323.23      1361.16      582.139      623.878      83.6032      4760.23      1040.43      33.1918
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.219999, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.016028, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.236315, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.08923e-11  3.32332e-22  4.27897e-23
      low eigenvalue method done, cpu time[sec] = 0.236997, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.32e-22 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.57e-23 -4.44e-16         1
         *Z       ---       ---   3.8e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  3.54885e-23  6.02006e-24  2.01962e-25  9.16144e-25  3.33747e-26  3.20538e-25  2.23096e-29 -2.00571e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.46, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 690 K
            Well    Collision, 1/sec
              W1         9.41836e+09
      global relaxation matrix dimension = 838
      setting global matrices ... done, cpu time[sec] = 1.43114, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.7971, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2848.48      1166.71      498.976      534.753      71.6599      4080.19      891.793      28.4502
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.219567, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.016014, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.235891, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.94508e-10  2.95388e-22  3.62314e-23
      low eigenvalue method done, cpu time[sec] = 0.236628, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.95e-22 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.4e-23 -4.44e-16         1
         *Z       ---       ---   3.8e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  3.01636e-23  4.98521e-24  1.70011e-25  7.57033e-25  2.78749e-26  2.89357e-25  2.24729e-29 -3.18748e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.4952, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 690 K
            Well    Collision, 1/sec
              W1         1.07638e+10
      global relaxation matrix dimension = 838
      setting global matrices ... done, cpu time[sec] = 1.4337, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.8332, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2492.42      1020.87      436.604      467.909      62.7024      3570.17      780.319      24.8939
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.219641, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.016016, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.235961, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.45927e-10  2.66306e-22  3.12653e-23
      low eigenvalue method done, cpu time[sec] = 0.236668, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.66e-22 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.26e-23 -4.44e-16         1
         *Z       ---       ---   3.8e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1 -4.44089e-16  2.61097e-23  4.22122e-24  1.46043e-25  6.40147e-25  2.37879e-26  2.63581e-25  2.27366e-29 -8.23328e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.5363, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 700 K
      Energy reference = 65429 1/cm
      Energy step      = 117 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -85.4 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.015051
         W1 Well: collisional kernel bandwidth = 53
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 1.012
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.907807
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.505509
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 6.60066
         W1 Well: minimal relaxation eigenvalue = 0.0468099
         W1 Well: maximal relaxation eigenvalue = 6.16925
         W1 Well:       grid size = 830
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31681 1/cm
         B1 Barrier:        grid size = 560
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -90 1/cm
         B2 Barrier:        grid size = 558
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 142 1/cm
         B3 Barrier:        grid size = 599
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4653 1/cm
         B4 Barrier:        grid size = 613
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6291 1/cm
         B5 Barrier: nonpositive number of states at -23257 1/cm => truncating
         B5 Barrier:        grid size = 758
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23256 1/cm
         B6 Barrier:        grid size = 547
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1430 1/cm
         B7 Barrier:        grid size = 519
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4705 1/cm
         B8 Barrier:        grid size = 416
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16757 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 9.17499, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31681 -23256 4.36e+05 9.65e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -90 8.76e+17
         B2    143 3.63e+17
         B3  -4653 1.57e+17
         B4  -6291 1.68e+17
         B5 -23256 2.26e+16
         B6   1431 1.27e+18
         B7   4706 2.79e+17
         B8  16757 9.14e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  3.76e+05  6.74e+05       410      15.4  1.86e-15  1.53e+08  2.75e+11  1.01e+23
          R  2.66e-06         1      1.79   0.00109   4.1e-05  4.95e-21       407  7.32e+05  2.67e+17
         P1  1.48e-06     0.558         1  0.000609  2.29e-05  2.76e-21       227  4.08e+05  1.49e+17
         P2   0.00244       916  1.64e+03         1    0.0375  4.54e-18  3.73e+05  6.71e+08  2.45e+20
         P3    0.0649  2.44e+04  4.37e+04      26.6         1  1.21e-16  9.94e+06  1.79e+10  6.53e+21
         P4  5.37e+14  2.02e+20  3.62e+20   2.2e+17  8.27e+15         1  8.22e+22  1.48e+26   5.4e+37
         P5  6.53e-09   0.00246    0.0044  2.68e-06  1.01e-07  1.22e-23         1   1.8e+03  6.56e+14
         P6  3.63e-12  1.37e-06  2.45e-06  1.49e-09   5.6e-11  6.77e-27  0.000556         1  3.65e+11
         P7  9.95e-24  3.74e-18   6.7e-18  4.08e-21  1.53e-22  1.85e-38  1.52e-15  2.74e-12         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1       201       361      0.22   0.00825  9.97e-19   8.2e+04  1.47e+08  5.38e+19
          R   0.00497         1      1.79   0.00109   4.1e-05  4.95e-21       407  7.32e+05  2.67e+17
         P1   0.00277     0.558         1  0.000609  2.29e-05  2.76e-21       227  4.08e+05  1.49e+17
         P2      4.55       916  1.64e+03         1    0.0375  4.54e-18  3.73e+05  6.71e+08  2.45e+20
         P3       121  2.44e+04  4.37e+04      26.6         1  1.21e-16  9.94e+06  1.79e+10  6.53e+21
         P4     1e+18  2.02e+20  3.62e+20   2.2e+17  8.27e+15         1  8.22e+22  1.48e+26   5.4e+37
         P5  1.22e-05   0.00246    0.0044  2.68e-06  1.01e-07  1.22e-23         1   1.8e+03  6.56e+14
         P6  6.79e-09  1.37e-06  2.45e-06  1.49e-09   5.6e-11  6.77e-27  0.000556         1  3.65e+11
         P7  1.86e-20  3.74e-18   6.7e-18  4.08e-21  1.53e-22  1.85e-38  1.52e-15  2.74e-12         1
   MasterEquation::set:  done, cpu time[sec] = 9.18169, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 700 K
            Well    Collision, 1/sec
              W1         2.66587e+08
      global relaxation matrix dimension = 830
      setting global matrices ... done, cpu time[sec] = 0.461826, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.3761, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             102026      42332.7      18323.8      19614.5      2634.27       147544      32537.4      1064.63
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.215427, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.015866, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.231876, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.08294e-08  6.90682e-21  1.68088e-21
      low eigenvalue method done, cpu time[sec] = 0.232538, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.91e-21  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.23e-22  2.22e-16         1
         *Z       ---       ---  1.87e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16  1.18282e-21  3.91591e-22  1.11663e-23  8.36548e-23  2.37052e-24  2.21556e-24  6.72978e-29 -1.12013e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.0622, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 700 K
            Well    Collision, 1/sec
              W1         7.99762e+08
      global relaxation matrix dimension = 830
      setting global matrices ... done, cpu time[sec] = 1.47256, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.6911, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            34008.6      14110.9      6107.92      6538.17      878.089      49181.5      10845.8      354.876
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.215492, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.015646, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.231439, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.84508e-09  3.91583e-21  8.46543e-22
      low eigenvalue method done, cpu time[sec] = 0.232124, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.92e-21  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.83e-22  2.22e-16         1
         *Z       ---       ---  1.87e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16  6.37587e-22  1.68159e-22  4.74069e-24  2.95301e-23  9.10068e-25  2.06305e-24  6.81298e-29  4.51464e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.3719, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 700 K
            Well    Collision, 1/sec
              W1         1.33294e+09
      global relaxation matrix dimension = 830
      setting global matrices ... done, cpu time[sec] = 1.40114, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.7445, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            20405.2      8466.54      3664.75       3922.9      526.853      29508.9      6507.48      212.926
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.214801, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.015618, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.230721, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.03374e-10  2.91623e-21  5.82264e-22
      low eigenvalue method done, cpu time[sec] = 0.231407, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.92e-21  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.37e-22  2.22e-16         1
         *Z       ---       ---  1.87e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16  4.49932e-22  1.06662e-22  3.07588e-24  1.77035e-23  5.67277e-25  1.87443e-24  6.19862e-29 -2.84866e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.3513, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 700 K
            Well    Collision, 1/sec
              W1         1.86611e+09
      global relaxation matrix dimension = 830
      setting global matrices ... done, cpu time[sec] = 1.39719, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.672, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            14575.1      6047.53      2617.68      2802.07      376.324      21077.8       4648.2       152.09
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.215029, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.015604, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.230935, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.46084e-10  2.37331e-21  4.45727e-22
      low eigenvalue method done, cpu time[sec] = 0.231686, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.37e-21  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.11e-22  2.22e-16         1
         *Z       ---       ---  1.87e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16  3.49609e-22  7.73539e-23  2.27999e-24  1.24852e-23  4.10389e-25  1.71218e-24  6.07164e-29  8.94911e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.3239, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 700 K
            Well    Collision, 1/sec
              W1         2.39928e+09
      global relaxation matrix dimension = 830
      setting global matrices ... done, cpu time[sec] = 1.39434, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.6521, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            11336.2      4703.63      2035.97      2179.39      292.696      16393.8      3615.27      118.292
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.21473, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.015669, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.23071, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.81006e-10  2.02202e-21  3.61042e-22
      low eigenvalue method done, cpu time[sec] = 0.2314, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.02e-21  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.47e-23  2.22e-16         1
         *Z       ---       ---  1.87e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16  2.86087e-22  6.01817e-23  1.80831e-24  9.55187e-24  3.19954e-25  1.57586e-24  6.31057e-29 -2.42161e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.257, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 700 K
            Well    Collision, 1/sec
              W1         2.66587e+09
      global relaxation matrix dimension = 830
      setting global matrices ... done, cpu time[sec] = 1.40393, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.679, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            10202.6      4233.27      1832.38      1961.45      263.427      14754.4      3253.74      106.463
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.214321, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.015621, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.23023, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.89793e-10  1.88762e-21  3.29562e-22
      low eigenvalue method done, cpu time[sec] = 0.230931, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.89e-21  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.84e-23  2.22e-16         1
         *Z       ---       ---  1.87e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16  2.62197e-22  5.40175e-23   1.6373e-24  8.52142e-24  2.87692e-25  1.51578e-24  6.25743e-29  -1.9432e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.3318, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 700 K
            Well    Collision, 1/sec
              W1         3.99881e+09
      global relaxation matrix dimension = 830
      setting global matrices ... done, cpu time[sec] = 1.37705, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.6798, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            6801.72      2822.18      1221.58      1307.63      175.618      9836.29      2169.16      70.9753
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.214754, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.015896, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.230963, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -7.02746e-10  1.43568e-21  2.28243e-22
      low eigenvalue method done, cpu time[sec] = 0.23163, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.44e-21  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.72e-23  2.22e-16         1
         *Z       ---       ---  1.87e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16   1.8419e-22  3.50893e-23  1.10316e-24  5.43225e-24  1.88979e-25  1.27547e-24  6.32996e-29 -2.09605e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.2603, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 700 K
            Well    Collision, 1/sec
              W1         5.33174e+09
      global relaxation matrix dimension = 830
      setting global matrices ... done, cpu time[sec] = 1.39975, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.6862, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            5101.29      2116.64      916.188      980.725      131.713      7377.22      1626.87      53.2315
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.214749, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.015788, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.230835, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.89289e-10  1.17214e-21   1.7308e-22
      low eigenvalue method done, cpu time[sec] = 0.231514, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.17e-21  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.49e-23  2.22e-16         1
         *Z       ---       ---  1.87e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16  1.40933e-22  2.54534e-23  8.23195e-25  3.90367e-24  1.38674e-25  1.10317e-24  6.43899e-29  3.76264e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.3463, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 700 K
            Well    Collision, 1/sec
              W1         6.66468e+09
      global relaxation matrix dimension = 830
      setting global matrices ... done, cpu time[sec] = 1.39838, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.6798, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            4081.03      1693.31      732.951       784.58      105.371      5901.78       1301.5      42.5852
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.21406, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.015617, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.229989, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.60973e-12  9.96656e-22  1.38352e-22
      low eigenvalue method done, cpu time[sec] = 0.230677, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.97e-22  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.67e-23  2.22e-16         1
         *Z       ---       ---  1.87e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16  1.13366e-22  1.96719e-23  6.51016e-25  3.00098e-24  1.08325e-25  9.72683e-25  6.50127e-29 -8.73839e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.2901, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 700 K
            Well    Collision, 1/sec
              W1         7.99762e+09
      global relaxation matrix dimension = 830
      setting global matrices ... done, cpu time[sec] = 1.40003, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.6871, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            3400.86      1411.09      610.792      653.817      87.8089      4918.15      1084.58      35.4876
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.214233, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.015592, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.230122, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.10533e-10   8.7024e-22  1.14508e-22
      low eigenvalue method done, cpu time[sec] = 0.230827, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   8.7e-22  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.07e-23  2.22e-16         1
         *Z       ---       ---  1.87e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16  9.42742e-23  1.58482e-23  5.34713e-25  2.40991e-24  8.81195e-26  8.70022e-25  6.57739e-29  5.64356e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.3565, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 700 K
            Well    Collision, 1/sec
              W1         9.33055e+09
      global relaxation matrix dimension = 830
      setting global matrices ... done, cpu time[sec] = 1.399, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.6815, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2915.02      1209.51      523.536      560.414      75.2647      4215.55      929.641       30.418
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.214122, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.015543, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.229983, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.55063e-10  7.74278e-22  9.71574e-23
      low eigenvalue method done, cpu time[sec] = 0.230675, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.74e-22  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.62e-23  2.22e-16         1
         *Z       ---       ---  1.87e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16  8.02924e-23  1.31498e-23  4.51116e-25   1.9956e-24  7.37613e-26  7.86881e-25  6.62516e-29 -6.92819e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.2928, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 700 K
            Well    Collision, 1/sec
              W1         1.06635e+10
      global relaxation matrix dimension = 830
      setting global matrices ... done, cpu time[sec] = 1.39959, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.6877, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2550.65      1058.32      458.094      490.363      65.8566      3688.61      813.436      26.6157
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.214275, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.015898, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.230471, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.03423e-10  6.98647e-22  8.39921e-23
      low eigenvalue method done, cpu time[sec] = 0.23115, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.99e-22  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.27e-23  2.22e-16         1
         *Z       ---       ---  1.87e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16  6.96242e-23  1.11535e-23  3.88256e-25  1.69057e-24  6.30665e-26  7.17971e-25  6.67396e-29  2.85186e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.291, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 800 K
      Energy reference = 72380 1/cm
      Energy step      = 133 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -84.1 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.016915
         W1 Well: collisional kernel bandwidth = 52
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.926464
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.832976
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.704766
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 5.88239
         W1 Well: minimal relaxation eigenvalue = 0.0437931
         W1 Well: maximal relaxation eigenvalue = 1.78344
         W1 Well:       grid size = 782
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31626 1/cm
         B1 Barrier:        grid size = 545
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -105 1/cm
         B2 Barrier:        grid size = 543
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 161 1/cm
         B3 Barrier:        grid size = 579
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4627 1/cm
         B4 Barrier:        grid size = 591
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6223 1/cm
         B5 Barrier: nonpositive number of states at -23247 1/cm => truncating
         B5 Barrier:        grid size = 719
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23247 1/cm
         B6 Barrier:        grid size = 533
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1490 1/cm
         B7 Barrier:        grid size = 509
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4683 1/cm
         B8 Barrier:        grid size = 419
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16652 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 8.49426, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31626 -23247 4.39e+05 2.05e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -105 2.08e+18
         B2    162 9.75e+17
         B3  -4627 4.77e+17
         B4  -6223 5.05e+17
         B5 -23247 6.92e+16
         B6   1491 3.29e+18
         B7   4684 7.87e+17
         B8  16653 3.25e+16
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1      82.3       144     0.295    0.0169  2.26e-16  2.25e+04  1.88e+07  3.42e+17
          R    0.0122         1      1.75   0.00358  0.000206  2.74e-18       273  2.29e+05  4.16e+15
         P1   0.00696     0.572         1   0.00205  0.000118  1.57e-18       156  1.31e+05  2.38e+15
         P2      3.39       279       488         1    0.0574  7.66e-16  7.63e+04  6.38e+07  1.16e+18
         P3      59.1  4.86e+03   8.5e+03      17.4         1  1.33e-14  1.33e+06  1.11e+09  2.02e+19
         P4  4.43e+15  3.64e+17  6.37e+17  1.31e+15  7.49e+13         1  9.96e+19  8.33e+22  1.52e+33
         P5  4.45e-05   0.00366    0.0064  1.31e-05  7.52e-07     1e-20         1       837  1.52e+13
         P6  5.32e-08  4.37e-06  7.64e-06  1.57e-08  8.99e-10   1.2e-23    0.0012         1  1.82e+10
         P7  2.92e-18   2.4e-16   4.2e-16  8.61e-19  4.94e-20  6.59e-34  6.57e-14  5.49e-11         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1    0.0498     0.087  0.000178  1.02e-05  1.37e-19      13.6  1.14e+04  2.07e+14
          R      20.1         1      1.75   0.00358  0.000206  2.74e-18       273  2.29e+05  4.16e+15
         P1      11.5     0.572         1   0.00205  0.000118  1.57e-18       156  1.31e+05  2.38e+15
         P2  5.61e+03       279       488         1    0.0574  7.66e-16  7.63e+04  6.38e+07  1.16e+18
         P3  9.77e+04  4.86e+03   8.5e+03      17.4         1  1.33e-14  1.33e+06  1.11e+09  2.02e+19
         P4  7.32e+18  3.64e+17  6.37e+17  1.31e+15  7.49e+13         1  9.96e+19  8.33e+22  1.52e+33
         P5    0.0735   0.00366    0.0064  1.31e-05  7.52e-07     1e-20         1       837  1.52e+13
         P6  8.79e-05  4.37e-06  7.64e-06  1.57e-08  8.99e-10   1.2e-23    0.0012         1  1.82e+10
         P7  4.83e-15   2.4e-16   4.2e-16  8.61e-19  4.94e-20  6.59e-34  6.57e-14  5.49e-11         1
   MasterEquation::set:  done, cpu time[sec] = 8.50028, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 800 K
            Well    Collision, 1/sec
              W1          2.4442e+08
      global relaxation matrix dimension = 782
      setting global matrices ... done, cpu time[sec] = 0.410729, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.41153, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             124698      58458.3      28563.6      30251.2      4145.14       197123      47150.8       1948.8
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.182943, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.014235, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.197533, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.26422e-09  1.99433e-17  5.28109e-18
      low eigenvalue method done, cpu time[sec] = 0.198121, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.99e-17         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.73e-19         0         1
         *Z       ---       ---  4.52e+44
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  3.81619e-18  1.18073e-18   3.3691e-20  2.41002e-19  6.96856e-21  9.75359e-21   6.4431e-25  6.32892e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.5986, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 800 K
            Well    Collision, 1/sec
              W1         7.33259e+08
      global relaxation matrix dimension = 782
      setting global matrices ... done, cpu time[sec] = 1.24269, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.0145, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            41566.2      19486.1       9521.2      10083.7      1381.71      65707.7      15716.9      649.599
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.182971, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.013761, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.196973, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -9.18356e-10  1.21043e-17  2.89843e-18
      low eigenvalue method done, cpu time[sec] = 0.197554, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.21e-17         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   5.3e-19         0         1
         *Z       ---       ---  4.52e+44
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.23258e-18  5.48351e-19  1.57586e-20   9.3441e-20   2.9502e-21  9.30635e-21  6.55524e-25  3.49732e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.0459, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 800 K
            Well    Collision, 1/sec
              W1          1.2221e+09
      global relaxation matrix dimension = 782
      setting global matrices ... done, cpu time[sec] = 1.24272, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.0206, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            24939.7      11691.7      5712.72      6050.23      829.029      39424.6      9430.17       389.76
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.183011, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.013719, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.196968, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -6.71407e-10  9.30798e-18  2.08734e-18
      low eigenvalue method done, cpu time[sec] = 0.197762, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.31e-18         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.08e-19         0         1
         *Z       ---       ---  4.52e+44
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.64696e-18  3.63043e-19  1.07557e-20  5.88393e-20  1.93524e-21  8.65652e-21  6.58024e-25  4.45736e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.0544, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 800 K
            Well    Collision, 1/sec
              W1         1.71094e+09
      global relaxation matrix dimension = 782
      setting global matrices ... done, cpu time[sec] = 1.24638, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.0196, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            17814.1      8351.18      4080.51      4321.59      592.164      28160.4      6735.83        278.4
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.18273, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.013756, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.196727, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.50541e-09  7.73825e-18  1.65053e-18
      low eigenvalue method done, cpu time[sec] = 0.197374, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.74e-18         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.39e-19         0         1
         *Z       ---       ---  4.52e+44
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.32062e-18   2.7144e-19  8.26004e-21  4.29471e-20  1.45085e-21   8.0662e-21   6.6286e-25  6.62535e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.0638, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 800 K
            Well    Collision, 1/sec
              W1         2.19978e+09
      global relaxation matrix dimension = 782
      setting global matrices ... done, cpu time[sec] = 1.24148, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.01, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            13855.4      6495.36      3173.73      3361.24      460.572      21902.6      5238.98      216.533
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.182811, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.013736, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.196785, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.32059e-10  6.69917e-18  1.37125e-18
      low eigenvalue method done, cpu time[sec] = 0.197374, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   6.7e-18         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.93e-19         0         1
         *Z       ---       ---  4.52e+44
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.10763e-18  2.16296e-19  6.73397e-21  3.37465e-20  1.16289e-21  7.55232e-21  6.67483e-25  4.36699e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.0373, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 800 K
            Well    Collision, 1/sec
              W1          2.4442e+09
      global relaxation matrix dimension = 782
      setting global matrices ... done, cpu time[sec] = 1.24673, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.0167, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            12469.8      5845.83      2856.36      3025.12      414.514      19712.3      4715.08       194.88
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.182864, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.013749, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.196852, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.44868e-09  6.29606e-18  1.26541e-18
      low eigenvalue method done, cpu time[sec] = 0.197446, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0   6.3e-18         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.76e-19         0         1
         *Z       ---       ---  4.52e+44
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  1.02597e-18  1.96158e-19  6.16958e-21  3.04532e-20  1.05813e-21  7.32123e-21  6.69091e-25  5.61595e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.056, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 800 K
            Well    Collision, 1/sec
              W1         3.66629e+09
      global relaxation matrix dimension = 782
      setting global matrices ... done, cpu time[sec] = 1.24704, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.0597, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            8313.23      3897.22      1904.24      2016.74      276.343      13141.5      3143.39       129.92
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.182614, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.013636, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.196491, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.85674e-10   4.9142e-18  9.15316e-19
      low eigenvalue method done, cpu time[sec] = 0.19722, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.91e-18         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.15e-19         0         1
         *Z       ---       ---  4.52e+44
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  7.51992e-19  1.32802e-19  4.35675e-21  2.03191e-20  7.28671e-22  6.36793e-21  6.79601e-25  6.65671e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.0967, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 800 K
            Well    Collision, 1/sec
              W1         4.88839e+09
      global relaxation matrix dimension = 782
      setting global matrices ... done, cpu time[sec] = 1.24788, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.0557, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            6234.92      2922.91      1428.18      1512.56      207.257      9856.15      2357.54      97.4399
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.182634, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.013445, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.196321, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.21329e-10  4.08629e-18  7.16869e-19
      low eigenvalue method done, cpu time[sec] = 0.196923, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.09e-18         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.79e-19         0         1
         *Z       ---       ---  4.52e+44
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0   5.9383e-19  9.93431e-20  3.36583e-21  1.51014e-20  5.53666e-22  5.65455e-21   6.8841e-25  4.12095e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.09, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 800 K
            Well    Collision, 1/sec
              W1         6.11049e+09
      global relaxation matrix dimension = 782
      setting global matrices ... done, cpu time[sec] = 1.24696, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.1761, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            4987.94      2338.33      1142.54      1210.05      165.806      7884.92      1886.03      77.9519
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.18244, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.013472, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.196153, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.62646e-10  3.52389e-18  5.88021e-19
      low eigenvalue method done, cpu time[sec] = 0.196754, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.52e-18         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.54e-19         0         1
         *Z       ---       ---  4.52e+44
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  4.89922e-19  7.86978e-20  2.73664e-21  1.19256e-20  4.44704e-22  5.09677e-21   6.9671e-25  7.99327e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.2662, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 800 K
            Well    Collision, 1/sec
              W1         7.33259e+09
      global relaxation matrix dimension = 782
      setting global matrices ... done, cpu time[sec] = 1.24665, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.009, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            4156.62      1948.61       952.12      1008.37      138.171      6570.77      1571.69      64.9599
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.182573, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.013583, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.196398, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.69066e-10  3.11232e-18    4.973e-19
      low eigenvalue method done, cpu time[sec] = 0.196983, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.11e-18         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.36e-19         0         1
         *Z       ---       ---  4.52e+44
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  4.16142e-19  6.47261e-20  2.30037e-21  9.79404e-21  3.70257e-22    4.646e-21   7.0325e-25  8.55081e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.0419, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 800 K
            Well    Collision, 1/sec
              W1         8.55469e+09
      global relaxation matrix dimension = 782
      setting global matrices ... done, cpu time[sec] = 1.24859, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.0234, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            3562.81      1670.24      816.103      864.319      118.433      5632.09      1347.17      55.6799
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.182638, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.013636, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.19652, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   1.6303e-10   2.7958e-18  4.29862e-19
      low eigenvalue method done, cpu time[sec] = 0.197108, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   2.8e-18         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.22e-19         0         1
         *Z       ---       ---  4.52e+44
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  3.60944e-19  5.46693e-20  1.97967e-21  8.26786e-21  3.16167e-22  4.27253e-21  7.08607e-25   2.9636e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.0714, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 800 K
            Well    Collision, 1/sec
              W1         9.77678e+09
      global relaxation matrix dimension = 782
      setting global matrices ... done, cpu time[sec] = 1.24797, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.027, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            3117.46      1461.46       714.09      756.279      103.629      4928.08      1178.77      48.7199
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.182572, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.013463, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.196276, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.51394e-11  2.54355e-18  3.77733e-19
      low eigenvalue method done, cpu time[sec] = 0.196854, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.54e-18         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.11e-19         0         1
         *Z       ---       ---  4.52e+44
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  3.18056e-19  4.71029e-20  1.73387e-21  7.12366e-21  2.75109e-22  3.95702e-21  7.12969e-25  1.63175e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.0599, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 900 K
      Energy reference = 79330 1/cm
      Energy step      = 150 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -82.6 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.016215
         W1 Well: collisional kernel bandwidth = 51
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.845159
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.728061
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.550762
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 5.3983
         W1 Well: minimal relaxation eigenvalue = 0.0412645
         W1 Well: maximal relaxation eigenvalue = 2.26963
         W1 Well:       grid size = 740
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31670 1/cm
         B1 Barrier:        grid size = 529
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -20 1/cm
         B2 Barrier:        grid size = 528
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 129 1/cm
         B3 Barrier:        grid size = 560
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4670 1/cm
         B4 Barrier:        grid size = 571
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6320 1/cm
         B5 Barrier: nonpositive number of states at -23570 1/cm => truncating
         B5 Barrier:        grid size = 686
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23570 1/cm
         B6 Barrier:        grid size = 519
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1480 1/cm
         B7 Barrier:        grid size = 498
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4629 1/cm
         B8 Barrier:        grid size = 418
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16630 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 7.66819, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31670 -23570 3.47e+05 4.15e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -20 4.56e+18
         B2    130 2.39e+18
         B3  -4670 1.32e+18
         B4  -6320 1.38e+18
         B5 -23570 1.93e+17
         B6   1481 7.81e+18
         B7   4630    2e+18
         B8  16630 1.01e+17
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1     0.115     0.198   0.00103  8.24e-05  4.28e-17      22.6  1.05e+04  1.88e+13
          R      8.71         1      1.73   0.00898  0.000718  3.73e-16       197  9.11e+04  1.64e+14
         P1      5.05     0.579         1    0.0052  0.000416  2.16e-16       114  5.28e+04  9.48e+13
         P2       970       111       192         1    0.0799  4.15e-14  2.19e+04  1.01e+07  1.82e+16
         P3  1.21e+04  1.39e+03  2.41e+03      12.5         1  5.19e-13  2.74e+05  1.27e+08  2.28e+17
         P4  2.34e+16  2.68e+15  4.63e+15  2.41e+13  1.93e+12         1  5.29e+17  2.45e+20  4.39e+29
         P5    0.0442   0.00508   0.00877  4.56e-05  3.64e-06  1.89e-18         1       463  8.31e+11
         P6  9.56e-05   1.1e-05  1.89e-05  9.86e-08  7.87e-09  4.09e-21   0.00216         1   1.8e+09
         P7  5.32e-14  6.11e-15  1.06e-14  5.49e-17  4.39e-18  2.28e-30   1.2e-12  5.57e-10         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  7.84e-05  0.000135  7.04e-07  5.62e-08  2.92e-20    0.0154      7.14  1.28e+10
          R  1.28e+04         1      1.73   0.00898  0.000718  3.73e-16       197  9.11e+04  1.64e+14
         P1  7.39e+03     0.579         1    0.0052  0.000416  2.16e-16       114  5.28e+04  9.48e+13
         P2  1.42e+06       111       192         1    0.0799  4.15e-14  2.19e+04  1.01e+07  1.82e+16
         P3  1.78e+07  1.39e+03  2.41e+03      12.5         1  5.19e-13  2.74e+05  1.27e+08  2.28e+17
         P4  3.42e+19  2.68e+15  4.63e+15  2.41e+13  1.93e+12         1  5.29e+17  2.45e+20  4.39e+29
         P5      64.8   0.00508   0.00877  4.56e-05  3.64e-06  1.89e-18         1       463  8.31e+11
         P6      0.14   1.1e-05  1.89e-05  9.86e-08  7.87e-09  4.09e-21   0.00216         1   1.8e+09
         P7   7.8e-11  6.11e-15  1.06e-14  5.49e-17  4.39e-18  2.28e-30   1.2e-12  5.57e-10         1
   MasterEquation::set:  done, cpu time[sec] = 7.67432, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 900 K
            Well    Collision, 1/sec
              W1         2.26425e+08
      global relaxation matrix dimension = 740
      setting global matrices ... done, cpu time[sec] = 0.36395, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.71014, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             145658      76270.3      42070.2      44156.3      6154.16       249202      63881.8      3238.35
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.157605, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.012055, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.170086, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.10436e-09  9.22798e-15  2.59536e-15
      low eigenvalue method done, cpu time[sec] = 0.17066, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.23e-15  2.66e-15         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.81e-16  2.66e-15         1
         *Z       ---       ---  4.31e+42
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.66454e-15
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.66454e-15  1.90629e-15  5.56061e-16  1.59665e-17    1.098e-16  3.23179e-18  6.30873e-18  8.57264e-22  9.38951e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.5307, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 900 K
            Well    Collision, 1/sec
              W1         6.79274e+08
      global relaxation matrix dimension = 740
      setting global matrices ... done, cpu time[sec] = 1.1116, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.5199, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            48552.8      25423.4      14023.4      14718.8      2051.39      83067.2      21293.9      1079.45
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.157152, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.011851, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.169211, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.20912e-08  5.91482e-15  1.52683e-15
      low eigenvalue method done, cpu time[sec] = 0.169816, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.91e-15  1.11e-15         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.44e-16  1.11e-15         1
         *Z       ---       ---  4.31e+42
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.11022e-15
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  1.11022e-15  1.19108e-15  2.75419e-16  8.08411e-18  4.59786e-17  1.48257e-18  6.13402e-18  8.62953e-22  9.36392e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.0928, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 900 K
            Well    Collision, 1/sec
              W1         1.13212e+09
      global relaxation matrix dimension = 740
      setting global matrices ... done, cpu time[sec] = 1.11199, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.51815, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            29131.7      15254.1      8414.03      8831.26      1230.83      49840.3      12776.4      647.671
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.157452, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.011869, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.169542, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -3.7058e-09  4.67082e-15  1.14143e-15
      low eigenvalue method done, cpu time[sec] = 0.170113, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.67e-15  6.66e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.93e-16  6.66e-16         1
         *Z       ---       ---  4.31e+42
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 6.66134e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  6.66134e-16  9.10788e-16  1.88921e-16   5.7519e-18  3.01526e-17  1.01433e-18  5.81032e-18  8.68647e-22  9.40661e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.1478, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 900 K
            Well    Collision, 1/sec
              W1         1.58497e+09
      global relaxation matrix dimension = 740
      setting global matrices ... done, cpu time[sec] = 1.11345, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.49344, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            20808.3      10895.8      6010.02      6308.04      879.166      35600.2      9125.97      462.622
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.156946, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.011848, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.168999, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -2.0829e-09  3.95356e-15  9.26774e-16
      low eigenvalue method done, cpu time[sec] = 0.169543, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.95e-15  6.66e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.63e-16  6.66e-16         1
         *Z       ---       ---  4.31e+42
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 6.66134e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  6.66134e-16  7.49245e-16  1.44875e-16  4.54796e-18  2.26456e-17  7.83207e-19   5.4992e-18   8.7423e-22  9.38492e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.0688, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 900 K
            Well    Collision, 1/sec
              W1         2.03782e+09
      global relaxation matrix dimension = 740
      setting global matrices ... done, cpu time[sec] = 1.11163, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.52349, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            16184.3      8474.48      4674.46      4906.26      683.796      27689.1      7097.98      359.817
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.157331, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.011866, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.169403, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.42488e-09  3.46979e-15  7.86092e-16
      low eigenvalue method done, cpu time[sec] = 0.169934, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.47e-15  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.43e-16  4.44e-16         1
         *Z       ---       ---  4.31e+42
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  4.44089e-16  6.41171e-16  1.17769e-16   3.7929e-18  1.81946e-17  6.42347e-19  5.21913e-18  8.79589e-22   9.3953e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.1551, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 900 K
            Well    Collision, 1/sec
              W1         2.26425e+09
      global relaxation matrix dimension = 740
      setting global matrices ... done, cpu time[sec] = 1.11351, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.4459, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            14565.8      7627.03      4207.02      4415.63      615.416      24920.2      6388.18      323.835
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.157344, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.011848, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.169398, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.22803e-09  3.27992e-15  7.31935e-16
      low eigenvalue method done, cpu time[sec] = 0.169936, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.28e-15  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.35e-16  2.22e-16         1
         *Z       ---       ---  4.31e+42
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16  5.99087e-16   1.0773e-16   3.5091e-18  1.65769e-17  5.90279e-19  5.09073e-18  8.82258e-22  9.39673e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.0179, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 900 K
            Well    Collision, 1/sec
              W1         3.39637e+09
      global relaxation matrix dimension = 740
      setting global matrices ... done, cpu time[sec] = 1.11083, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.54564, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            9710.55      5084.69      2804.68      2943.75      410.277      16613.4      4258.79       215.89
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.157189, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.011864, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.169266, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.01855e-10  2.61841e-15  5.48728e-16
      low eigenvalue method done, cpu time[sec] = 0.1698, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.62e-15  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.08e-16  2.22e-16         1
         *Z       ---       ---  4.31e+42
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.22045e-16  4.54672e-16  7.55061e-17  2.57632e-18  1.14906e-17  4.22792e-19   4.5459e-18  8.94663e-22  9.38273e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.1139, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 900 K
            Well    Collision, 1/sec
              W1         4.52849e+09
      global relaxation matrix dimension = 740
      setting global matrices ... done, cpu time[sec] = 1.10899, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.5265, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            7282.92      3813.52      2103.51      2207.82      307.708      12460.1      3194.09      161.918
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.157091, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.011889, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.169211, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.84761e-11  2.21284e-15  4.41389e-16
      low eigenvalue method done, cpu time[sec] = 0.169747, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.21e-15         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.13e-17         0         1
         *Z       ---       ---  4.31e+42
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  3.68525e-16  5.79681e-17  2.04867e-18  8.78537e-18  3.30761e-19  4.12271e-18   9.0564e-22  9.39307e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.1495, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 900 K
            Well    Collision, 1/sec
              W1         5.66062e+09
      global relaxation matrix dimension = 740
      setting global matrices ... done, cpu time[sec] = 1.10928, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.48115, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            5826.33      3050.81      1682.81      1766.25      246.166      9968.07      2555.27      129.534
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.157327, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.011879, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.169414, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -9.90004e-11  1.93257e-15  3.69904e-16
      low eigenvalue method done, cpu time[sec] = 0.170034, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.93e-15  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.97e-17  4.44e-16         1
         *Z       ---       ---  4.31e+42
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  4.44089e-16  3.10484e-16  4.68914e-17  1.70469e-18  7.09701e-18  2.71944e-19  3.78238e-18  9.15134e-22  9.38198e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.1045, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 900 K
            Well    Collision, 1/sec
              W1         6.79274e+09
      global relaxation matrix dimension = 740
      setting global matrices ... done, cpu time[sec] = 1.10904, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.47858, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            4855.28      2542.34      1402.34      1471.88      205.139      8306.72      2129.39      107.945
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.157076, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.011869, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.169145, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.05883e-10  1.72463e-15  3.18515e-16
      low eigenvalue method done, cpu time[sec] = 0.169675, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.72e-15         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.12e-17         0         1
         *Z       ---       ---  4.31e+42
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.68414e-16    3.925e-17  1.46095e-18  5.94022e-18  2.30886e-19  3.50103e-18  9.23261e-22  9.34105e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.1083, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 900 K
            Well    Collision, 1/sec
              W1         7.92486e+09
      global relaxation matrix dimension = 740
      setting global matrices ... done, cpu time[sec] = 1.10755, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.51047, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            4161.67      2179.15         1202      1261.61      175.833      7120.05      1825.19      92.5244
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.152722, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.011549, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.164499, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.60279e-10  1.56288e-15  2.79633e-16
      low eigenvalue method done, cpu time[sec] = 0.165026, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.56e-15         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.45e-17         0         1
         *Z       ---       ---  4.31e+42
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.36382e-16  3.36589e-17  1.27844e-18  5.09732e-18  2.00506e-19   3.2634e-18  9.30042e-22  9.37528e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.1114, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 900 K
            Well    Collision, 1/sec
              W1         9.05698e+09
      global relaxation matrix dimension = 740
      setting global matrices ... done, cpu time[sec] = 1.1093, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.52386, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            3641.46      1906.76      1051.75      1103.91      153.854      6230.04      1597.04      80.9588
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.152975, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.011575, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.164775, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.66142e-10  1.43269e-15  2.49111e-16
      low eigenvalue method done, cpu time[sec] = 0.165342, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.43e-15         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.91e-17         0         1
         *Z       ---       ---  4.31e+42
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1            0  2.11111e-16  2.93916e-17  1.13628e-18  4.45561e-18  1.77074e-19  3.05927e-18   9.3565e-22  9.30304e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.0852, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1000 K
      Energy reference = 86280 1/cm
      Energy step      = 167 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -81.1 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.015507
         W1 Well: collisional kernel bandwidth = 50
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.636712
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.678201
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.613521
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 4.98231
         W1 Well: minimal relaxation eigenvalue = 0.0391889
         W1 Well: maximal relaxation eigenvalue = 1.75747
         W1 Well:       grid size = 706
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31621 1/cm
         B1 Barrier:        grid size = 517
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -58 1/cm
         B2 Barrier:        grid size = 516
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 108 1/cm
         B3 Barrier:        grid size = 545
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4734 1/cm
         B4 Barrier:        grid size = 554
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6237 1/cm
         B5 Barrier: nonpositive number of states at -23105 1/cm => truncating
         B5 Barrier:        grid size = 655
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23104 1/cm
         B6 Barrier:        grid size = 508
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1444 1/cm
         B7 Barrier:        grid size = 489
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4617 1/cm
         B8 Barrier:        grid size = 417
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16641 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 7.05189, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31621 -23104 4.87e+05 8.09e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -58 9.37e+18
         B2    109 5.43e+18
         B3  -4734 3.38e+18
         B4  -6237 3.52e+18
         B5 -23104 4.97e+17
         B6   1445 1.72e+19
         B7   4618 4.69e+18
         B8  16642 2.85e+17
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  0.000594   0.00102  1.11e-05  1.15e-06  1.12e-17    0.0887      25.6  7.28e+09
          R  1.68e+03         1      1.72    0.0186   0.00194  1.89e-14       149   4.3e+04  1.23e+13
         P1       980     0.582         1    0.0108   0.00113   1.1e-14      86.9   2.5e+04  7.13e+12
         P2  9.04e+04      53.7      92.3         1     0.104  1.01e-12  8.01e+03  2.31e+06  6.58e+14
         P3  8.67e+05       515       885      9.59         1  9.73e-12  7.69e+04  2.22e+07  6.31e+15
         P4  8.91e+16  5.29e+13  9.09e+13  9.86e+11  1.03e+11         1   7.9e+15  2.28e+18  6.49e+26
         P5      11.3    0.0067    0.0115  0.000125   1.3e-05  1.27e-16         1       288  8.21e+10
         P6    0.0391  2.32e-05  3.99e-05  4.33e-07  4.51e-08  4.39e-19   0.00347         1  2.85e+08
         P7  1.37e-10  8.15e-14   1.4e-13  1.52e-15  1.58e-16  1.54e-27  1.22e-11  3.51e-09         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  4.52e-07  7.78e-07  8.43e-09  8.79e-10  8.55e-21  6.76e-05    0.0195  5.55e+06
          R  2.21e+06         1      1.72    0.0186   0.00194  1.89e-14       149   4.3e+04  1.23e+13
         P1  1.29e+06     0.582         1    0.0108   0.00113   1.1e-14      86.9   2.5e+04  7.13e+12
         P2  1.19e+08      53.7      92.3         1     0.104  1.01e-12  8.01e+03  2.31e+06  6.58e+14
         P3  1.14e+09       515       885      9.59         1  9.73e-12  7.69e+04  2.22e+07  6.31e+15
         P4  1.17e+20  5.29e+13  9.09e+13  9.86e+11  1.03e+11         1   7.9e+15  2.28e+18  6.49e+26
         P5  1.48e+04    0.0067    0.0115  0.000125   1.3e-05  1.27e-16         1       288  8.21e+10
         P6      51.4  2.32e-05  3.99e-05  4.33e-07  4.51e-08  4.39e-19   0.00347         1  2.85e+08
         P7   1.8e-07  8.15e-14   1.4e-13  1.52e-15  1.58e-16  1.54e-27  1.22e-11  3.51e-09         1
   MasterEquation::set:  done, cpu time[sec] = 7.05858, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 1000 K
            Well    Collision, 1/sec
              W1         2.11461e+08
      global relaxation matrix dimension = 706
      setting global matrices ... done, cpu time[sec] = 0.329871, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.18017, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             164342      95210.2      59200.9      61659.7       8719.8       301879      82172.5      4993.54
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.133603, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010222, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.143991, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -7.85332e-09  1.17469e-12  3.47315e-13
      low eigenvalue method done, cpu time[sec] = 0.144455, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.17e-12  3.47e-13         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   4.6e-14  3.47e-13         1
         *Z       ---       ---  1.08e+41
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.475e-13
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  3.47056e-13    2.581e-13  7.14298e-14  2.07207e-15  1.37643e-14   4.1168e-16  1.06766e-15  2.60597e-19   2.0252e-28

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.7007, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 1000 K
            Well    Collision, 1/sec
              W1         6.34382e+08
      global relaxation matrix dimension = 706
      setting global matrices ... done, cpu time[sec] = 1.01013, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.16034, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            54780.7      31736.7      19733.6      20553.2       2906.6       100626      27390.8      1664.51
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.133751, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010181, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.144109, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.49911e-09   7.8766e-13  2.16355e-13
      low eigenvalue method done, cpu time[sec] = 0.144595, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.88e-13  2.16e-13         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.09e-14  2.16e-13         1
         *Z       ---       ---  1.08e+41
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.16271e-13
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.15938e-13  1.70197e-13   3.7342e-14  1.12078e-15  6.14711e-15  2.01976e-16  1.05296e-15  2.62226e-19  2.02518e-28

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.3542, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 1000 K
            Well    Collision, 1/sec
              W1          1.0573e+09
      global relaxation matrix dimension = 706
      setting global matrices ... done, cpu time[sec] = 1.00922, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.15086, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            32868.4        19042      11840.2      12331.9      1743.96      60375.8      16434.5      998.708
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.133636, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010222, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.144022, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.27579e-12  6.36146e-13  1.66823e-13
      low eigenvalue method done, cpu time[sec] = 0.144516, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.36e-13  1.67e-13         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.49e-14  1.67e-13         1
         *Z       ---       ---  1.08e+41
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.66533e-13
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  1.66311e-13  1.34056e-13  2.63898e-14  8.25612e-16  4.17117e-15  1.43152e-16   1.0115e-15  2.63827e-19  2.02528e-28

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.3445, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 1000 K
            Well    Collision, 1/sec
              W1         1.48022e+09
      global relaxation matrix dimension = 706
      setting global matrices ... done, cpu time[sec] = 1.01066, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.16697, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            23477.5      13601.5      8457.28      8808.53      1245.69      43125.6      11738.9      713.363
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.133617, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010206, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.143983, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   6.0179e-09  5.46819e-13   1.3846e-13
      low eigenvalue method done, cpu time[sec] = 0.144457, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.47e-13  1.39e-13         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.14e-14  1.39e-13         1
         *Z       ---       ---  1.08e+41
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.38778e-13
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  1.38556e-13  1.12638e-13  2.06743e-14  6.68915e-16  3.20888e-15  1.13307e-16  9.69126e-16  2.65386e-19  2.02522e-28

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.368, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 1000 K
            Well    Collision, 1/sec
              W1         1.90315e+09
      global relaxation matrix dimension = 706
      setting global matrices ... done, cpu time[sec] = 1.00907, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.18903, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            18260.2      10578.9      6577.88      6851.08      968.866      33542.1      9130.28      554.838
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.133628, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010182, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.143967, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.18563e-10   4.8561e-13  1.19486e-13
      low eigenvalue method done, cpu time[sec] = 0.144443, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.86e-13  1.19e-13         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.9e-14  1.19e-13         1
         *Z       ---       ---  1.08e+41
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.1946e-13
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  1.19349e-13  9.80118e-14  1.70922e-14  5.68571e-16  2.62705e-15  9.47419e-17  9.29689e-16  2.66895e-19  2.02557e-28

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.3803, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 1000 K
            Well    Collision, 1/sec
              W1         2.11461e+09
      global relaxation matrix dimension = 706
      setting global matrices ... done, cpu time[sec] = 1.00953, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.21031, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            16434.2      9521.02      5920.09      6165.97       871.98      30187.9      8217.25      499.354
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.133613, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.010208, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.143978, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.05332e-09  4.61351e-13  1.12086e-13
      low eigenvalue method done, cpu time[sec] = 0.14444, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.61e-13  1.12e-13         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.81e-14  1.12e-13         1
         *Z       ---       ---  1.08e+41
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.1191e-13
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  1.11799e-13  9.22422e-14  1.57498e-14  5.30351e-16   2.4129e-15  8.77888e-17   9.1127e-16  2.67626e-19  2.02539e-28

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.4094, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 1000 K
            Well    Collision, 1/sec
              W1         3.17191e+09
      global relaxation matrix dimension = 706
      setting global matrices ... done, cpu time[sec] = 1.01028, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.20491, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            10956.1      6347.35      3946.73      4110.65       581.32      20125.3      5478.17      332.903
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.13363, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010184, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.143971, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.50776e-10  3.75645e-13  8.65789e-14
      low eigenvalue method done, cpu time[sec] = 0.144487, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.76e-13  8.66e-14         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.47e-14  8.66e-14         1
         *Z       ---       ---  1.08e+41
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 8.65974e-14
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  8.64864e-14  7.20676e-14  1.13683e-14  4.02298e-16  1.72742e-15  6.49989e-17  8.31053e-16  2.71062e-19  2.02543e-28

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.4021, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 1000 K
            Well    Collision, 1/sec
              W1         4.22921e+09
      global relaxation matrix dimension = 706
      setting global matrices ... done, cpu time[sec] = 1.00935, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.20954, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            8217.11      4760.51      2960.05      3082.99       435.99      15093.9      4108.62      249.677
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.1335, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010218, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.143878, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.31021e-10  3.22047e-13  7.12181e-14
      low eigenvalue method done, cpu time[sec] = 0.144358, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.22e-13  7.13e-14         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.26e-14  7.13e-14         1
         *Z       ---       ---  1.08e+41
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 7.12763e-14
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  7.11653e-14  5.96994e-14   8.9228e-15  3.27775e-16  1.35287e-15  5.21194e-17  7.66623e-16  2.74103e-19  2.02536e-28

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.409, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 1000 K
            Well    Collision, 1/sec
              W1         5.28652e+09
      global relaxation matrix dimension = 706
      setting global matrices ... done, cpu time[sec] = 1.00882, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.21111, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            6573.69      3808.41      2368.04      2466.39      348.792      12075.2       3286.9      199.742
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.13349, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010221, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.143878, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.46911e-10  2.84452e-13  6.07689e-14
      low eigenvalue method done, cpu time[sec] = 0.144341, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.84e-13  6.11e-14         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.11e-14  6.11e-14         1
         *Z       ---       ---  1.08e+41
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 6.10623e-14
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  6.09512e-14  5.11892e-14   7.3478e-15  2.78111e-16  1.11417e-15  4.37072e-17  7.13511e-16  2.76759e-19   2.0258e-28

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.4119, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 1000 K
            Well    Collision, 1/sec
              W1         6.34382e+09
      global relaxation matrix dimension = 706
      setting global matrices ... done, cpu time[sec] = 1.01323, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.20957, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            5478.07      3173.67      1973.36      2055.32       290.66      10062.6      2739.08      166.451
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.133558, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010192, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.143904, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -1.5637e-12  2.56223e-13  5.31256e-14
      low eigenvalue method done, cpu time[sec] = 0.144385, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.56e-13  5.31e-14         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0     1e-14  5.31e-14         1
         *Z       ---       ---  1.08e+41
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 5.30687e-14
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  5.29576e-14  4.49134e-14   6.2436e-15  2.42277e-16  9.47785e-16  3.77289e-17  6.68725e-16  2.79051e-19  2.02593e-28

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.4104, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 1000 K
            Well    Collision, 1/sec
              W1         7.40112e+09
      global relaxation matrix dimension = 706
      setting global matrices ... done, cpu time[sec] = 1.0133, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.19224, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            4695.49      2720.29      1691.46      1761.71      249.137      8625.11      2347.79      142.673
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.13324, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010186, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.143579, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -7.77457e-10   2.3404e-13  4.72561e-14
      low eigenvalue method done, cpu time[sec] = 0.144035, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.34e-13  4.71e-14         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.17e-15  4.71e-14         1
         *Z       ---       ---  1.08e+41
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 4.70735e-14
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  4.69624e-14  4.00643e-14  5.42444e-15  2.15028e-16  8.24746e-16  3.32369e-17  6.30263e-16  2.81011e-19  2.02536e-28

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.395, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 1000 K
            Well    Collision, 1/sec
              W1         8.45843e+09
      global relaxation matrix dimension = 706
      setting global matrices ... done, cpu time[sec] = 1.01403, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.19524, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            4108.55      2380.25      1480.02      1541.49      217.995      7546.97      2054.31      124.839
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.133505, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010169, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.143834, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.81544e-10  2.16031e-13  4.25885e-14
      low eigenvalue method done, cpu time[sec] = 0.144291, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.16e-13  4.29e-14         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.47e-15  4.29e-14         1
         *Z       ---       ---  1.08e+41
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 4.28546e-14
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  4.27436e-14  3.61892e-14   4.7916e-15  1.93515e-16  7.29857e-16  2.97255e-17  5.96743e-16   2.8267e-19  2.02573e-28

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.3979, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1100 K
      Energy reference = 93231 1/cm
      Energy step      = 183 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -79.4 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.015281
         W1 Well: collisional kernel bandwidth = 50
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.748704
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.634366
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.458445
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 4.66462
         W1 Well: minimal relaxation eigenvalue = 0.0374358
         W1 Well: maximal relaxation eigenvalue = 1.48001
         W1 Well:       grid size = 682
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31575 1/cm
         B1 Barrier:        grid size = 510
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -98 1/cm
         B2 Barrier:        grid size = 509
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 84 1/cm
         B3 Barrier:        grid size = 535
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4673 1/cm
         B4 Barrier:        grid size = 544
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6320 1/cm
         B5 Barrier: nonpositive number of states at -23157 1/cm => truncating
         B5 Barrier:        grid size = 636
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23157 1/cm
         B6 Barrier:        grid size = 502
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1365 1/cm
         B7 Barrier:        grid size = 484
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4659 1/cm
         B8 Barrier:        grid size = 418
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16737 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 6.77515, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31575 -23157 4.69e+05 1.52e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -98 1.82e+19
         B2     85 1.16e+19
         B3  -4673  8.1e+18
         B4  -6320 8.37e+18
         B5 -23157  1.2e+18
         B6   1366 3.57e+19
         B7   4660 1.02e+19
         B8  16738 7.32e+17
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  8.05e-06  1.39e-05  2.72e-07  3.52e-08  3.77e-18  0.000947     0.185  1.18e+07
          R  1.24e+05         1      1.72    0.0337   0.00438  4.69e-13       118   2.3e+04  1.47e+12
         P1  7.22e+04     0.581         1    0.0196   0.00254  2.72e-13      68.3  1.34e+04  8.53e+11
         P2  3.68e+06      29.6        51         1      0.13  1.39e-11  3.49e+03  6.82e+05  4.35e+13
         P3  2.84e+07       229       393      7.71         1  1.07e-10  2.69e+04  5.26e+06  3.36e+14
         P4  2.65e+17  2.13e+12  3.67e+12   7.2e+10  9.34e+09         1  2.51e+14  4.91e+16  3.13e+24
         P5  1.06e+03    0.0085    0.0146  0.000287  3.72e-05  3.98e-15         1       196  1.25e+10
         P6       5.4  4.35e-05  7.48e-05  1.47e-06   1.9e-07  2.04e-17   0.00511         1  6.38e+07
         P7  8.46e-08  6.81e-13  1.17e-12   2.3e-14  2.98e-15  3.19e-25  8.01e-11  1.57e-08         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  6.72e-09  1.16e-08  2.27e-10  2.94e-11  3.15e-21  7.91e-07  0.000155  9.87e+03
          R  1.49e+08         1      1.72    0.0337   0.00438  4.69e-13       118   2.3e+04  1.47e+12
         P1  8.64e+07     0.581         1    0.0196   0.00254  2.72e-13      68.3  1.34e+04  8.53e+11
         P2  4.41e+09      29.6        51         1      0.13  1.39e-11  3.49e+03  6.82e+05  4.35e+13
         P3   3.4e+10       229       393      7.71         1  1.07e-10  2.69e+04  5.26e+06  3.36e+14
         P4  3.17e+20  2.13e+12  3.67e+12   7.2e+10  9.34e+09         1  2.51e+14  4.91e+16  3.13e+24
         P5  1.27e+06    0.0085    0.0146  0.000287  3.72e-05  3.98e-15         1       196  1.25e+10
         P6  6.47e+03  4.35e-05  7.48e-05  1.47e-06   1.9e-07  2.04e-17   0.00511         1  6.38e+07
         P7  0.000101  6.81e-13  1.17e-12   2.3e-14  2.98e-15  3.19e-25  8.01e-11  1.57e-08         1
   MasterEquation::set:  done, cpu time[sec] = 6.78116, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 1100 K
            Well    Collision, 1/sec
              W1          1.9878e+08
      global relaxation matrix dimension = 682
      setting global matrices ... done, cpu time[sec] = 0.307736, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.89718, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             180474       114762      80255.1        83003      11891.7       353609       101468      7257.98
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.121507, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.009329, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.130986, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.23231e-08  5.82545e-11  1.80071e-11
      low eigenvalue method done, cpu time[sec] = 0.131414, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.83e-11   1.8e-11         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.18e-12   1.8e-11         1
         *Z       ---       ---  5.49e+39
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.80065e-11
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  1.79801e-11  1.35353e-11  3.57587e-12  1.04969e-13  6.75913e-13  2.05168e-14  6.81204e-14  2.72076e-17  1.05803e-25

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.235, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 1100 K
            Well    Collision, 1/sec
              W1         5.96341e+08
      global relaxation matrix dimension = 682
      setting global matrices ... done, cpu time[sec] = 0.941734, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.95493, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            60158.1      38254.1      26751.7      27667.7      3963.91       117870      33822.7      2419.33
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.12158, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.009277, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.131009, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.57146e-09  4.05778e-11   1.1768e-11
      low eigenvalue method done, cpu time[sec] = 0.131502, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.06e-11  1.18e-11         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.52e-12  1.18e-11         1
         *Z       ---       ---  5.49e+39
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.17675e-11
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  1.17503e-11  9.33627e-12    1.957e-12  6.00481e-14  3.18856e-13  1.06579e-14  6.79375e-14  2.73688e-17  1.05805e-25

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.919, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 1100 K
            Well    Collision, 1/sec
              W1         9.93901e+08
      global relaxation matrix dimension = 682
      setting global matrices ... done, cpu time[sec] = 0.941558, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.98147, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            36094.8      22952.5        16051      16600.6      2378.35      70721.9      20293.6       1451.6
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.121508, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.009273, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.130939, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.76203e-10  3.34121e-11  9.31283e-12
      low eigenvalue method done, cpu time[sec] = 0.131441, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.34e-11  9.31e-12         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.25e-12  9.31e-12         1
         *Z       ---       ---  5.49e+39
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 9.31188e-12
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  9.29823e-12  7.53852e-12  1.41856e-12  4.55552e-14  2.22749e-13  7.78436e-15  6.59928e-14  2.75248e-17  1.05806e-25

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.9596, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 1100 K
            Well    Collision, 1/sec
              W1         1.39146e+09
      global relaxation matrix dimension = 682
      setting global matrices ... done, cpu time[sec] = 0.946142, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.97197, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
              25782      16394.6        11465      11857.6      1698.82      50515.6      14495.4      1036.85
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.121667, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.009283, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.131101, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.08616e-10  2.91067e-11  7.87373e-12
      low eigenvalue method done, cpu time[sec] = 0.131538, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.91e-11  7.87e-12         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.09e-12  7.87e-12         1
         *Z       ---       ---  5.49e+39
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 7.87326e-12
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  7.86171e-12  6.44769e-12  1.13175e-12  3.76801e-14  1.74912e-13  6.29288e-15  6.38493e-14  2.76752e-17  1.05808e-25

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.9456, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 1100 K
            Well    Collision, 1/sec
              W1         1.78902e+09
      global relaxation matrix dimension = 682
      setting global matrices ... done, cpu time[sec] = 0.941354, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.97267, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            20052.7      12751.4      8917.24      9222.56       1321.3      39289.9      11274.2      806.442
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.121571, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.009301, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.131012, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -2.0855e-09  2.61163e-11  6.89431e-12
      low eigenvalue method done, cpu time[sec] = 0.131448, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.61e-11  6.89e-12         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.78e-13  6.89e-12         1
         *Z       ---       ---  5.49e+39
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 6.89337e-12
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  6.88327e-12  5.68977e-12  9.49232e-13  3.25488e-14  1.45512e-13  5.34914e-15   6.1781e-14    2.782e-17  1.05808e-25

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.9471, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 1100 K
            Well    Collision, 1/sec
              W1          1.9878e+09
      global relaxation matrix dimension = 682
      setting global matrices ... done, cpu time[sec] = 0.942623, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.96901, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            18047.4      11476.2      8025.51       8300.3      1189.17      35360.9      10146.8      725.798
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.121565, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.00926, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.130972, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.80846e-09  2.49211e-11  6.50814e-12
      low eigenvalue method done, cpu time[sec] = 0.131409, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.49e-11  6.51e-12         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.33e-13  6.51e-12         1
         *Z       ---       ---  5.49e+39
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 6.50768e-12
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  6.49814e-12  5.38748e-12  8.80158e-13  3.05724e-14  1.34576e-13   4.9918e-15  6.07966e-14  2.78902e-17   1.0581e-25

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.9364, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 1100 K
            Well    Collision, 1/sec
              W1          2.9817e+09
      global relaxation matrix dimension = 682
      setting global matrices ... done, cpu time[sec] = 0.946567, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.96286, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            12031.6      7650.83      5350.34      5533.54      792.782        23574      6764.54      483.865
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.12138, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00926, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.130788, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.31421e-09   2.0647e-11  5.15569e-12
      low eigenvalue method done, cpu time[sec] = 0.131236, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.06e-11  5.15e-12         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.73e-13  5.15e-12         1
         *Z       ---       ---  5.49e+39
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 5.15499e-12
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  5.14744e-12  4.31353e-12  6.51491e-13  2.38431e-14  9.90433e-14  3.80194e-15  5.63994e-14  2.82184e-17  1.05814e-25

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.9395, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 1100 K
            Well    Collision, 1/sec
              W1         3.97561e+09
      global relaxation matrix dimension = 682
      setting global matrices ... done, cpu time[sec] = 0.943487, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.00715, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            9023.71      5738.12      4012.76      4150.15      594.586      17680.5       5073.4      362.899
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.121356, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.0093, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.130805, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.23369e-09  1.79278e-11  4.32212e-12
      low eigenvalue method done, cpu time[sec] = 0.131237, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.79e-11  4.32e-12         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.71e-13  4.32e-12         1
         *Z       ---       ---  5.49e+39
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 4.32143e-12
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1   4.3151e-12  3.63974e-12  5.21137e-13  1.98322e-14   7.9183e-14  3.11348e-15  5.27549e-14  2.85093e-17  1.05818e-25

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.9874, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 1100 K
            Well    Collision, 1/sec
              W1         4.96951e+09
      global relaxation matrix dimension = 682
      setting global matrices ... done, cpu time[sec] = 0.946796, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.98718, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            7218.97       4590.5       3210.2      3320.12      475.669      14144.4      4058.72      290.319
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.121522, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.009256, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.130933, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.92767e-10  1.59953e-11  3.74484e-12
      low eigenvalue method done, cpu time[sec] = 0.131368, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.6e-11  3.74e-12         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.99e-13  3.74e-12         1
         *Z       ---       ---  5.49e+39
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.74412e-12
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  3.73868e-12  3.16779e-12  4.35786e-13  1.71092e-14  6.63013e-14  2.65549e-15  4.96823e-14  2.87649e-17  1.05822e-25

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.9612, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 1100 K
            Well    Collision, 1/sec
              W1         5.96341e+09
      global relaxation matrix dimension = 682
      setting global matrices ... done, cpu time[sec] = 0.942918, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.99888, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            6015.81      3825.41      2675.17      2766.77      396.391        11787      3382.27      241.933
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.121526, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.009265, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.130948, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.23028e-09  1.45289e-11   3.3163e-12
      low eigenvalue method done, cpu time[sec] = 0.131377, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.45e-11  3.32e-12         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.44e-13  3.32e-12         1
         *Z       ---       ---  5.49e+39
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.31557e-12
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  3.31069e-12  2.81461e-12  3.75125e-13  1.51142e-14  5.71903e-14  2.32505e-15  4.70449e-14  2.89879e-17  1.05827e-25

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.966, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 1100 K
            Well    Collision, 1/sec
              W1         6.95731e+09
      global relaxation matrix dimension = 682
      setting global matrices ... done, cpu time[sec] = 0.944851, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.00847, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            5156.41      3278.93         2293      2371.52      339.764      10103.1      2899.09      207.371
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.121592, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.009273, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.131016, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.62528e-10  1.33663e-11  2.98305e-12
      low eigenvalue method done, cpu time[sec] = 0.131448, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.34e-11  2.98e-12         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0     5e-13  2.98e-12         1
         *Z       ---       ---  5.49e+39
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.9825e-12
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.97817e-12   2.5383e-12  3.29593e-13  1.35772e-14  5.03684e-14  2.07353e-15  4.47461e-14  2.91812e-17  1.05831e-25

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.9812, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 1100 K
            Well    Collision, 1/sec
              W1         7.95121e+09
      global relaxation matrix dimension = 682
      setting global matrices ... done, cpu time[sec] = 0.944203, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.99763, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            4511.86      2869.06      2006.38      2075.08      297.293      8840.24       2536.7      181.449
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.121655, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.009247, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.131056, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.52577e-10  1.24151e-11  2.71511e-12
      low eigenvalue method done, cpu time[sec] = 0.131489, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.24e-11  2.71e-12         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.65e-13  2.71e-12         1
         *Z       ---       ---  5.49e+39
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.71472e-12
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.71072e-12  2.31506e-12  2.94053e-13  1.23497e-14  4.50493e-14  1.87466e-15   4.2717e-14  2.93477e-17  1.05835e-25

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.9842, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1200 K
      Energy reference = 100181 1/cm
      Energy step      = 200 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -77.7 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.014548
         W1 Well: collisional kernel bandwidth = 49
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.7065
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.591178
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.528324
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 4.10488
         W1 Well: minimal relaxation eigenvalue = 0.0359369
         W1 Well: maximal relaxation eigenvalue = 1.64128
         W1 Well:       grid size = 659
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31619 1/cm
         B1 Barrier:        grid size = 501
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -18 1/cm
         B2 Barrier:        grid size = 500
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 180 1/cm
         B3 Barrier:        grid size = 524
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4618 1/cm
         B4 Barrier:        grid size = 532
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6218 1/cm
         B5 Barrier: nonpositive number of states at -23219 1/cm => truncating
         B5 Barrier:        grid size = 617
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23218 1/cm
         B6 Barrier:        grid size = 494
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1381 1/cm
         B7 Barrier:        grid size = 478
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4581 1/cm
         B8 Barrier:        grid size = 418
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16580 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 6.29777, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31619 -23218 4.48e+05 2.77e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -18 3.37e+19
         B2    181 2.34e+19
         B3  -4618 1.83e+19
         B4  -6218 1.88e+19
         B5 -23218 2.73e+18
         B6   1382 7.01e+19
         B7   4582 2.11e+19
         B8  16581 1.75e+18
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  2.23e-07  3.85e-07  1.23e-08  1.91e-09  1.51e-18  2.12e-05   0.00301  5.56e+04
          R  4.49e+06         1      1.73    0.0551   0.00858  6.79e-12      95.4  1.35e+04   2.5e+11
         P1   2.6e+06     0.578         1    0.0319   0.00496  3.92e-12      55.1  7.81e+03  1.44e+11
         P2  8.15e+07      18.1      31.4         1     0.156  1.23e-10  1.73e+03  2.45e+05  4.53e+12
         P3  5.23e+08       116       202      6.42         1  7.91e-10  1.11e+04  1.57e+06  2.91e+13
         P4  6.62e+17  1.47e+11  2.55e+11  8.12e+09  1.26e+09         1  1.41e+13  1.99e+15  3.68e+22
         P5  4.71e+04    0.0105    0.0181  0.000578     9e-05  7.12e-14         1       142  2.62e+09
         P6       332   7.4e-05  0.000128  4.08e-06  6.35e-07  5.03e-16   0.00706         1  1.85e+07
         P7   1.8e-05  4.01e-12  6.93e-12  2.21e-13  3.44e-14  2.72e-23  3.82e-10  5.41e-08         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  2.03e-10  3.51e-10  1.12e-11  1.74e-12  1.38e-21  1.94e-08  2.74e-06      50.7
          R  4.92e+09         1      1.73    0.0551   0.00858  6.79e-12      95.4  1.35e+04   2.5e+11
         P1  2.85e+09     0.578         1    0.0319   0.00496  3.92e-12      55.1  7.81e+03  1.44e+11
         P2  8.93e+10      18.1      31.4         1     0.156  1.23e-10  1.73e+03  2.45e+05  4.53e+12
         P3  5.73e+11       116       202      6.42         1  7.91e-10  1.11e+04  1.57e+06  2.91e+13
         P4  7.25e+20  1.47e+11  2.55e+11  8.12e+09  1.26e+09         1  1.41e+13  1.99e+15  3.68e+22
         P5  5.16e+07    0.0105    0.0181  0.000578     9e-05  7.12e-14         1       142  2.62e+09
         P6  3.64e+05   7.4e-05  0.000128  4.08e-06  6.35e-07  5.03e-16   0.00706         1  1.85e+07
         P7    0.0197  4.01e-12  6.93e-12  2.21e-13  3.44e-14  2.72e-23  3.82e-10  5.41e-08         1
   MasterEquation::set:  done, cpu time[sec] = 6.31268, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 1200 K
            Well    Collision, 1/sec
              W1          1.8787e+08
      global relaxation matrix dimension = 659
      setting global matrices ... done, cpu time[sec] = 0.494313, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.55428, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             193987       134474       105467       108253      15709.5       403206       121255      10057.5
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.110615, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008503, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.119253, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.13267e-08  1.42553e-09  4.59722e-10
      low eigenvalue method done, cpu time[sec] = 0.119656, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.43e-09   4.6e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.12e-11   4.6e-10         1
         *Z       ---       ---  4.71e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 4.59722e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  4.59221e-10  3.49121e-10  8.83975e-11   2.6312e-12  1.64688e-11  5.06823e-13  2.09551e-12  1.27122e-15  1.90808e-23

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.96127, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 1200 K
            Well    Collision, 1/sec
              W1          5.6361e+08
      global relaxation matrix dimension = 659
      setting global matrices ... done, cpu time[sec] = 0.881225, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.80458, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            64662.4      44824.8      35155.5      36084.4      5236.51       134402      40418.3      3352.49
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.110477, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008521, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.119135, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -9.92829e-09    1.026e-09  3.12923e-10
      low eigenvalue method done, cpu time[sec] = 0.119548, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.03e-09  3.13e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.69e-11  3.13e-10         1
         *Z       ---       ---  4.71e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.12923e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  3.12582e-10  2.50139e-10  5.03346e-11  1.57934e-12  8.14426e-12  2.76574e-13  2.10709e-12  1.27832e-15  1.90811e-23

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.5629, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 1200 K
            Well    Collision, 1/sec
              W1          9.3935e+08
      global relaxation matrix dimension = 659
      setting global matrices ... done, cpu time[sec] = 0.880669, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.82999, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            38797.4      26894.9      21093.3      21650.6      3141.91      80641.1        24251      2011.49
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.110545, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008495, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.119177, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   1.3048e-09  8.59152e-10  2.53179e-10
      low eigenvalue method done, cpu time[sec] = 0.119588, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.59e-10  2.53e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.09e-11  2.53e-10         1
         *Z       ---       ---  4.71e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.53178e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.52902e-10  2.06271e-10  3.72954e-11   1.2288e-12  5.83403e-12  2.07305e-13  2.06469e-12  1.28508e-15  1.90814e-23

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.5833, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 1200 K
            Well    Collision, 1/sec
              W1         1.31509e+09
      global relaxation matrix dimension = 659
      setting global matrices ... done, cpu time[sec] = 0.880525, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.80597, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            27712.4      19210.6      15066.7      15464.7      2244.22      57600.8      17322.1      1436.78
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.110529, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.008497, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.119164, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.05962e-09  7.57256e-10  2.17459e-10
      low eigenvalue method done, cpu time[sec] = 0.119569, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.57e-10  2.17e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.72e-11  2.17e-10         1
         *Z       ---       ---  4.71e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.17459e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.17222e-10  1.79111e-10  3.02279e-11  1.03457e-12  4.66295e-12  1.70661e-13  2.01328e-12  1.29157e-15  1.90816e-23

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.5619, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 1200 K
            Well    Collision, 1/sec
              W1         1.69083e+09
      global relaxation matrix dimension = 659
      setting global matrices ... done, cpu time[sec] = 0.880169, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.81033, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            21554.1      14941.6      11718.5      12028.1       1745.5      44800.6      13472.8       1117.5
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.110602, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008487, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.119228, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.36064e-09  6.85646e-10   1.9279e-10
      low eigenvalue method done, cpu time[sec] = 0.119638, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.86e-10  1.93e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.46e-11  1.93e-10         1
         *Z       ---       ---  4.71e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.92789e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  1.92579e-10  1.59959e-10  2.56713e-11   9.0615e-13  3.93327e-12   1.4714e-13  1.96166e-12  1.29778e-15  1.90819e-23

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.57, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 1200 K
            Well    Collision, 1/sec
              W1          1.8787e+09
      global relaxation matrix dimension = 659
      setting global matrices ... done, cpu time[sec] = 0.880096, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.82026, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            19398.7      13447.4      10546.7      10825.3      1570.95      40320.6      12125.5      1005.75
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.110545, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008498, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.119181, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.77122e-10  6.56814e-10  1.82972e-10
      low eigenvalue method done, cpu time[sec] = 0.119591, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.57e-10  1.83e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.36e-11  1.83e-10         1
         *Z       ---       ---  4.71e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.82971e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  1.82772e-10  1.52248e-10  2.39324e-11   8.5622e-13  3.65947e-12  1.38152e-13   1.9366e-12  1.30079e-15  1.90821e-23

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.5749, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 1200 K
            Well    Collision, 1/sec
              W1         2.81805e+09
      global relaxation matrix dimension = 659
      setting global matrices ... done, cpu time[sec] = 0.880542, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.80718, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            12932.5      8964.96      7031.11      7216.88       1047.3      26880.4      8083.65      670.497
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.110509, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.008489, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.119137, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.13554e-10   5.5261e-10  1.48116e-10
      low eigenvalue method done, cpu time[sec] = 0.119544, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.53e-10  1.48e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.99e-11  1.48e-10         1
         *Z       ---       ---  4.71e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.48116e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  1.47954e-10  1.24476e-10  1.81058e-11  6.83866e-13  2.75833e-12  1.07819e-13  1.82178e-12  1.31484e-15  1.90828e-23

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.5625, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 1200 K
            Well    Collision, 1/sec
              W1          3.7574e+09
      global relaxation matrix dimension = 659
      setting global matrices ... done, cpu time[sec] = 0.880019, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.80838, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            9699.36      6723.72      5273.33      5412.66      785.476      20160.3      6062.74      502.873
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.110382, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008487, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.119008, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.32263e-09  4.85304e-10  1.26203e-10
      low eigenvalue method done, cpu time[sec] = 0.119417, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.85e-10  1.26e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.74e-11  1.26e-10         1
         *Z       ---       ---  4.71e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.26203e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  1.26066e-10  1.06703e-10  1.47237e-11  5.79033e-13  2.24492e-12  8.99148e-14   1.7237e-12  1.32734e-15  1.90835e-23

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.5643, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 1200 K
            Well    Collision, 1/sec
              W1         4.69675e+09
      global relaxation matrix dimension = 659
      setting global matrices ... done, cpu time[sec] = 0.880272, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.81178, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            7759.49      5378.98      4218.66      4330.13      628.381      16128.2      4850.19      402.298
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.110527, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008497, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.119167, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -9.07989e-10   4.3692e-10  1.10793e-10
      low eigenvalue method done, cpu time[sec] = 0.119591, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.37e-10  1.11e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.57e-11  1.11e-10         1
         *Z       ---       ---  4.71e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.10793e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  1.10672e-10  9.40629e-11  1.24777e-11   5.0673e-13  1.90689e-12  7.78175e-14  1.63925e-12   1.3384e-15  1.90842e-23

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.5692, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 1200 K
            Well    Collision, 1/sec
              W1          5.6361e+09
      global relaxation matrix dimension = 659
      setting global matrices ... done, cpu time[sec] = 0.880295, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.81432, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            6466.24      4482.48      3515.55      3608.44      523.651      13440.2      4041.83      335.249
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.110434, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008519, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.119093, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.68774e-09  3.99858e-10  9.92084e-11
      low eigenvalue method done, cpu time[sec] = 0.119503, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0     4e-10  9.92e-11         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.44e-11  9.92e-11         1
         *Z       ---       ---  4.71e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 9.92082e-11
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  9.91001e-11  8.44839e-11  1.08626e-11  4.53062e-13  1.66482e-12  6.89758e-14  1.56557e-12  1.34816e-15  1.90849e-23

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.5707, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 1200 K
            Well    Collision, 1/sec
              W1         6.57545e+09
      global relaxation matrix dimension = 659
      setting global matrices ... done, cpu time[sec] = 0.879623, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.81901, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            5542.49      3842.13      3013.33      3092.95      448.844      11520.2      3464.42      287.356
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.110627, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008502, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.119267, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.27612e-10  3.70241e-10  9.01018e-11
      low eigenvalue method done, cpu time[sec] = 0.119683, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   3.7e-10  9.01e-11         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.33e-11  9.01e-11         1
         *Z       ---       ---  4.71e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 9.01013e-11
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  9.00031e-11  7.69087e-11  9.63809e-12  4.11247e-13  1.48162e-12  6.21708e-14  1.50048e-12  1.35672e-15  1.90855e-23

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.5708, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 1200 K
            Well    Collision, 1/sec
              W1          7.5148e+09
      global relaxation matrix dimension = 659
      setting global matrices ... done, cpu time[sec] = 0.876825, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.82744, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            4849.68      3361.86      2636.66      2706.33      392.738      10080.1      3031.37      251.437
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.110556, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00852, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.119214, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.33935e-09  3.45843e-10  8.27102e-11
      low eigenvalue method done, cpu time[sec] = 0.119627, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.46e-10  8.27e-11         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.24e-11  8.27e-11         1
         *Z       ---       ---  4.71e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 8.27096e-11
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  8.26195e-11  7.07308e-11   8.6738e-12  3.77524e-13  1.33744e-12  5.67378e-14  1.44236e-12  1.36422e-15  1.90863e-23

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.5768, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1300 K
      Energy reference = 107132 1/cm
      Energy step      = 217 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -75.8 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.014549
         W1 Well: collisional kernel bandwidth = 49
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.597382
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.558937
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.560884
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 3.82607
         W1 Well: minimal relaxation eigenvalue = 0.0346438
         W1 Well: maximal relaxation eigenvalue = 3.6149
         W1 Well:       grid size = 640
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31748 1/cm
         B1 Barrier:        grid size = 494
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -66 1/cm
         B2 Barrier:        grid size = 493
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 150 1/cm
         B3 Barrier:        grid size = 515
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4622 1/cm
         B4 Barrier:        grid size = 523
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6359 1/cm
         B5 Barrier: nonpositive number of states at -23285 1/cm => truncating
         B5 Barrier:        grid size = 601
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23285 1/cm
         B6 Barrier:        grid size = 487
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1452 1/cm
         B7 Barrier:        grid size = 472
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4707 1/cm
         B8 Barrier:        grid size = 417
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16643 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 5.9043, elapsed time[sec] = 1
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31748 -23285 4.27e+05 4.91e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -66 5.99e+19
         B2    151  4.5e+19
         B3  -4622 3.95e+19
         B4  -6359 4.02e+19
         B5 -23285  5.9e+18
         B6   1453 1.31e+20
         B7   4708 4.12e+19
         B8  16643 3.92e+18
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  1.07e-08  1.87e-08  8.92e-10  1.62e-10  6.97e-19  8.48e-07  9.13e-05       594
          R  9.34e+07         1      1.74    0.0833    0.0152  6.51e-11      79.2  8.53e+03  5.55e+10
         P1  5.36e+07     0.574         1    0.0478   0.00869  3.73e-11      45.4  4.89e+03  3.18e+10
         P2  1.12e+09        12      20.9         1     0.182  7.81e-10       951  1.02e+05  6.66e+11
         P3  6.16e+09        66       115       5.5         1  4.29e-09  5.23e+03  5.63e+05  3.66e+12
         P4  1.43e+18  1.54e+10  2.68e+10  1.28e+09  2.33e+08         1  1.22e+12  1.31e+14  8.53e+20
         P5  1.18e+06    0.0126     0.022   0.00105  0.000191  8.21e-13         1       108  7.01e+08
         P6  1.09e+04  0.000117  0.000204  9.77e-06  1.78e-06  7.63e-15   0.00929         1  6.51e+06
         P7   0.00168   1.8e-11  3.14e-11   1.5e-12  2.73e-13  1.17e-21  1.43e-09  1.54e-07         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  1.06e-11  1.85e-11  8.83e-13  1.61e-13   6.9e-22   8.4e-10  9.04e-08     0.588
          R  9.43e+10         1      1.74    0.0833    0.0152  6.51e-11      79.2  8.53e+03  5.55e+10
         P1  5.41e+10     0.574         1    0.0478   0.00869  3.73e-11      45.4  4.89e+03  3.18e+10
         P2  1.13e+12        12      20.9         1     0.182  7.81e-10       951  1.02e+05  6.66e+11
         P3  6.22e+12        66       115       5.5         1  4.29e-09  5.23e+03  5.63e+05  3.66e+12
         P4  1.45e+21  1.54e+10  2.68e+10  1.28e+09  2.33e+08         1  1.22e+12  1.31e+14  8.53e+20
         P5  1.19e+09    0.0126     0.022   0.00105  0.000191  8.21e-13         1       108  7.01e+08
         P6  1.11e+07  0.000117  0.000204  9.77e-06  1.78e-06  7.63e-15   0.00929         1  6.51e+06
         P7       1.7   1.8e-11  3.14e-11   1.5e-12  2.73e-13  1.17e-21  1.43e-09  1.54e-07         1
   MasterEquation::set:  done, cpu time[sec] = 5.91962, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 1300 K
            Well    Collision, 1/sec
              W1         1.78363e+08
      global relaxation matrix dimension = 640
      setting global matrices ... done, cpu time[sec] = 0.73836, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.36198, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             204958       153979       135026       137670        20206       449839       141097      13403.4
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.102018, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007968, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.110645, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.08911e-08  2.02741e-08  6.82183e-09
      low eigenvalue method done, cpu time[sec] = 0.111197, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.03e-08  6.82e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.03e-10  6.82e-09         1
         *Z       ---       ---  6.04e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 6.82183e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  6.81391e-09  5.22392e-09  1.27284e-09  3.84544e-11  2.34466e-10  7.30977e-12  3.68756e-11  3.20878e-14  1.51904e-21

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.81761, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 1300 K
            Well    Collision, 1/sec
              W1          5.3509e+08
      global relaxation matrix dimension = 640
      setting global matrices ... done, cpu time[sec] = 0.829289, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.66887, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            68319.5      51326.5      45008.7        45890      6735.32       149946      47032.2       4467.8
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.101903, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007942, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.110504, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.64798e-09  1.50159e-08  4.80919e-09
      low eigenvalue method done, cpu time[sec] = 0.111057, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.5e-08  4.81e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.21e-10  4.81e-09         1
         *Z       ---       ---  6.04e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 4.80919e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  4.80361e-09  3.86694e-09  7.50306e-10  2.40666e-11  1.20816e-10  4.16412e-12  3.72809e-11  3.22581e-14  1.51906e-21

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.2228, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 1300 K
            Well    Collision, 1/sec
              W1         8.91816e+08
      global relaxation matrix dimension = 640
      setting global matrices ... done, cpu time[sec] = 0.831549, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.66667, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            40991.7      30795.9      27005.2        27534      4041.19      89967.7      28219.3      2680.68
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.101971, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.007923, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.110551, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.78041e-08  1.27623e-08  3.96597e-09
      low eigenvalue method done, cpu time[sec] = 0.111095, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.28e-08  3.97e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.42e-10  3.97e-09         1
         *Z       ---       ---  6.04e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.96597e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  3.96136e-09  3.24707e-09  5.66693e-10  1.91399e-11  8.84597e-11  3.19244e-12  3.67707e-11   3.2418e-14  1.51908e-21

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.2188, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 1300 K
            Well    Collision, 1/sec
              W1         1.24854e+09
      global relaxation matrix dimension = 640
      setting global matrices ... done, cpu time[sec] = 0.830911, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.6961, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            29279.8      21997.1      19289.4      19667.1      2886.57      64262.7      20156.7      1914.77
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.10203, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007955, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.110653, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.47071e-09  1.13661e-08  3.45311e-09
      low eigenvalue method done, cpu time[sec] = 0.111202, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.14e-08  3.45e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.94e-10  3.45e-09         1
         *Z       ---       ---  6.04e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.45311e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1   3.4491e-09  2.85649e-09  4.65671e-10  1.63646e-11  7.18032e-11  2.67009e-12  3.60742e-11  3.25702e-14   1.5191e-21

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.2534, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 1300 K
            Well    Collision, 1/sec
              W1         1.60527e+09
      global relaxation matrix dimension = 640
      setting global matrices ... done, cpu time[sec] = 0.847404, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.65896, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            22773.2      17108.8      15002.9      15296.7      2245.11      49982.1      15677.4      1489.27
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.102081, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007914, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.110657, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.85878e-09  1.03746e-08   3.0944e-09
      low eigenvalue method done, cpu time[sec] = 0.111206, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.04e-08  3.09e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   3.6e-10  3.09e-09         1
         *Z       ---       ---  6.04e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.0944e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1   3.0908e-09  2.57748e-09  3.99808e-10  1.45065e-11  6.13035e-11  2.33072e-12  3.53443e-11  3.27153e-14  1.51912e-21

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.2306, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 1300 K
            Well    Collision, 1/sec
              W1         1.78363e+09
      global relaxation matrix dimension = 640
      setting global matrices ... done, cpu time[sec] = 0.830512, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.67513, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            20495.8      15397.9      13502.6        13767       2020.6      44983.9      14109.7      1340.34
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.101919, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.007941, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.110532, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   1.7441e-08  9.97278e-09  2.95048e-09
      low eigenvalue method done, cpu time[sec] = 0.111086, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.97e-09  2.95e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.46e-10  2.95e-09         1
         *Z       ---       ---  6.04e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.95048e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.94705e-09  2.46423e-09  3.74492e-10  1.37783e-11  5.73338e-11  2.20001e-12  3.49828e-11  3.27854e-14  1.51913e-21

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.2321, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 1300 K
            Well    Collision, 1/sec
              W1         2.67545e+09
      global relaxation matrix dimension = 640
      setting global matrices ... done, cpu time[sec] = 0.831151, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.67196, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            13663.9      10265.3      9001.74         9178      1347.06      29989.2      9406.44      893.561
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.102141, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007929, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.110732, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.20101e-08  8.50683e-09  2.43349e-09
      low eigenvalue method done, cpu time[sec] = 0.111286, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.51e-09  2.43e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.95e-10  2.43e-09         1
         *Z       ---       ---  6.04e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.43349e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.43066e-09  2.05145e-09  2.88776e-10  1.12347e-11  4.41258e-11  1.75383e-12   3.3284e-11  3.31125e-14  1.51919e-21

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.2163, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 1300 K
            Well    Collision, 1/sec
              W1         3.56726e+09
      global relaxation matrix dimension = 640
      setting global matrices ... done, cpu time[sec] = 0.831459, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.67975, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            10247.9      7698.97      6751.31       6883.5       1010.3      22491.9      7054.83      670.171
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.101921, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007936, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.110525, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.75349e-09  7.54714e-09  2.10285e-09
      low eigenvalue method done, cpu time[sec] = 0.111077, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.55e-09   2.1e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.62e-10   2.1e-09         1
         *Z       ---       ---  6.04e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.10285e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.10041e-09  1.78272e-09  2.38242e-10  9.66052e-12  3.64763e-11  1.48593e-12  3.17905e-11  3.34038e-14  1.51924e-21

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.2328, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 1300 K
            Well    Collision, 1/sec
              W1         4.45908e+09
      global relaxation matrix dimension = 640
      setting global matrices ... done, cpu time[sec] = 0.834425, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.66993, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            8198.34      6159.18      5401.05       5506.8      808.239      17993.5      5643.87      536.136
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.102029, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.00791, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.110604, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.11992e-09  6.85013e-09  1.86722e-09
      low eigenvalue method done, cpu time[sec] = 0.111159, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.85e-09  1.87e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.37e-10  1.87e-09         1
         *Z       ---       ---  6.04e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.86722e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  1.86506e-09  1.58903e-09  2.04274e-10  8.55994e-12  3.13749e-11  1.30249e-12  3.04792e-11  3.36629e-14  1.51929e-21

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.2277, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 1300 K
            Well    Collision, 1/sec
              W1          5.3509e+09
      global relaxation matrix dimension = 640
      setting global matrices ... done, cpu time[sec] = 0.827239, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.69872, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            6831.95      5132.65      4500.87         4589      673.532      14994.6      4703.22       446.78
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.102069, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007922, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.110646, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.95355e-09  6.31173e-09  1.68814e-09
      low eigenvalue method done, cpu time[sec] = 0.111271, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.31e-09  1.69e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.19e-10  1.69e-09         1
         *Z       ---       ---  6.04e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.68814e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  1.68618e-09  1.44064e-09    1.796e-10  7.73378e-12  2.76826e-11  1.16692e-12  2.93177e-11   3.3893e-14  1.51934e-21

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.2446, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 1300 K
            Well    Collision, 1/sec
              W1         6.24271e+09
      global relaxation matrix dimension = 640
      setting global matrices ... done, cpu time[sec] = 0.826486, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.70102, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            5855.96      4399.41      3857.89      3933.43      577.313      12852.5      4031.33      382.955
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.101995, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007915, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.110579, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   5.7544e-09  5.87843e-09  1.54604e-09
      low eigenvalue method done, cpu time[sec] = 0.111137, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.88e-09  1.55e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.04e-10  1.55e-09         1
         *Z       ---       ---  6.04e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.54604e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  1.54425e-09   1.3222e-09  1.60728e-10  7.08385e-12  2.48625e-11  1.06158e-12   2.8279e-11  3.40971e-14   1.5194e-21

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.2449, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 1300 K
            Well    Collision, 1/sec
              W1         7.13453e+09
      global relaxation matrix dimension = 640
      setting global matrices ... done, cpu time[sec] = 0.831403, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.70061, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            5123.96      3849.49      3375.65      3441.75      505.149        11246      3527.42      335.085
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.102036, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007927, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.11063, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.77629e-09  5.51928e-09  1.42975e-09
      low eigenvalue method done, cpu time[sec] = 0.111179, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.52e-09  1.43e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.91e-10  1.43e-09         1
         *Z       ---       ---  6.04e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.42975e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  1.42809e-09  1.22481e-09  1.45753e-10  6.55522e-12  2.26251e-11  9.76775e-13  2.73418e-11  3.42779e-14  1.51945e-21

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.2572, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 1400 K
      Energy reference = 114082 1/cm
      Energy step      = 233 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -73.9 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.014822
         W1 Well: collisional kernel bandwidth = 48
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.671921
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.535112
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.475692
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 3.65667
         W1 Well: minimal relaxation eigenvalue = 0.0335082
         W1 Well: maximal relaxation eigenvalue = 6.14721
         W1 Well:       grid size = 626
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31776 1/cm
         B1 Barrier:        grid size = 490
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -87 1/cm
         B2 Barrier:        grid size = 489
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 144 1/cm
         B3 Barrier:        grid size = 510
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4748 1/cm
         B4 Barrier:        grid size = 517
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6378 1/cm
         B5 Barrier: nonpositive number of states at -23155 1/cm => truncating
         B5 Barrier:        grid size = 589
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23155 1/cm
         B6 Barrier:        grid size = 484
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1310 1/cm
         B7 Barrier:        grid size = 470
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4571 1/cm
         B8 Barrier:        grid size = 418
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16688 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 5.70536, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31776 -23155  4.7e+05 8.47e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -87 1.03e+20
         B2    145 8.31e+19
         B3  -4748 8.12e+19
         B4  -6378 8.23e+19
         B5 -23155 1.22e+19
         B6   1311 2.37e+20
         B7   4572 7.72e+19
         B8  16688 8.31e+18
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  7.99e-10  1.41e-09  9.47e-11  1.97e-11  3.61e-19  5.36e-08  4.56e-06      12.2
          R  1.25e+09         1      1.76     0.119    0.0246  4.51e-10      67.1   5.7e+03  1.53e+10
         P1  7.11e+08     0.568         1    0.0673     0.014  2.56e-10      38.1  3.24e+03  8.66e+09
         P2  1.06e+10      8.44      14.8         1     0.208  3.81e-09       566  4.81e+04  1.29e+11
         P3  5.08e+10      40.6      71.4      4.81         1  1.83e-08  2.72e+03  2.31e+05  6.19e+11
         P4  2.77e+18  2.22e+09   3.9e+09  2.63e+08  5.46e+07         1  1.49e+11  1.26e+13  3.38e+19
         P5  1.87e+07    0.0149    0.0262   0.00177  0.000367  6.72e-12         1        85  2.27e+08
         P6  2.19e+05  0.000175  0.000309  2.08e-05  4.32e-06  7.91e-14    0.0118         1  2.67e+06
         P7     0.082  6.56e-11  1.15e-10  7.77e-12  1.62e-12  2.96e-20   4.4e-09  3.74e-07         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1   8.5e-13   1.5e-12  1.01e-13  2.09e-14  3.83e-22   5.7e-11  4.85e-09     0.013
          R  1.18e+12         1      1.76     0.119    0.0246  4.51e-10      67.1   5.7e+03  1.53e+10
         P1  6.69e+11     0.568         1    0.0673     0.014  2.56e-10      38.1  3.24e+03  8.66e+09
         P2  9.93e+12      8.44      14.8         1     0.208  3.81e-09       566  4.81e+04  1.29e+11
         P3  4.78e+13      40.6      71.4      4.81         1  1.83e-08  2.72e+03  2.31e+05  6.19e+11
         P4  2.61e+21  2.22e+09   3.9e+09  2.63e+08  5.46e+07         1  1.49e+11  1.26e+13  3.38e+19
         P5  1.75e+10    0.0149    0.0262   0.00177  0.000367  6.72e-12         1        85  2.27e+08
         P6  2.06e+08  0.000175  0.000309  2.08e-05  4.32e-06  7.91e-14    0.0118         1  2.67e+06
         P7      77.2  6.56e-11  1.15e-10  7.77e-12  1.62e-12  2.96e-20   4.4e-09  3.74e-07         1
   MasterEquation::set:  done, cpu time[sec] = 5.72033, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 1400 K
            Well    Collision, 1/sec
              W1         1.69991e+08
      global relaxation matrix dimension = 626
      setting global matrices ... done, cpu time[sec] = 0.792961, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.26153, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             213553       172980       169064       171353      25404.2       492955       160628      17292.4
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.64e-07  6.62e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.88e-09  6.62e-08        -1
         *Z       ---       ---  1.07e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 6.61969e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  6.61008e-08  5.10527e-08      1.2e-08  3.68579e-10  2.19315e-09  6.92216e-11   4.1677e-10  4.98578e-13  6.36385e-20

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.6528, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 1400 K
            Well    Collision, 1/sec
              W1         5.09973e+08
      global relaxation matrix dimension = 626
      setting global matrices ... done, cpu time[sec] = 0.795491, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.58742, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            71184.4      57660.1      56354.6      57117.8      8468.08       164318      53542.8      5764.13
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.27e-07  4.81e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.26e-09  4.81e-08         1
         *Z       ---       ---  1.07e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 4.81102e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  4.80403e-08  3.88701e-08  7.29437e-09  2.39261e-10  1.17158e-09  4.09499e-11  4.23578e-10  5.01086e-13  6.36393e-20

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.9658, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 1400 K
            Well    Collision, 1/sec
              W1         8.49955e+08
      global relaxation matrix dimension = 626
      setting global matrices ... done, cpu time[sec] = 0.795124, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.5804, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            42710.6      34596.1      33812.8      34270.7      5080.85        98591      32125.7      3458.48
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.42e-07  4.03e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.77e-09  4.03e-08        -1
         *Z       ---       ---  1.07e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 4.03388e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  4.02803e-08  3.31556e-08  5.60358e-09  1.93964e-10  8.74461e-10  3.20225e-11  4.20186e-10  5.03409e-13  6.36401e-20

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.9369, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 1400 K
            Well    Collision, 1/sec
              W1         1.18994e+09
      global relaxation matrix dimension = 626
      setting global matrices ... done, cpu time[sec] = 0.796037, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.60779, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            30507.6      24711.5        24152      24479.1      3629.18      70422.2      22946.9      2470.34
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.1e-07  3.55e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   3.7e-09  3.55e-08         1
         *Z       ---       ---  1.07e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.55413e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  3.54898e-08   2.9499e-08  4.66109e-09  1.68085e-10  7.19502e-10  2.71579e-11   4.1439e-10  5.05605e-13  6.36409e-20

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.9929, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 1400 K
            Well    Collision, 1/sec
              W1         1.52992e+09
      global relaxation matrix dimension = 626
      setting global matrices ... done, cpu time[sec] = 0.795624, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.61176, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            23728.1        19220      18784.9      19039.3      2822.69      54772.8      17847.6      1921.38
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.095653, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008024, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.103822, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.24517e-08  1.01817e-07  3.21484e-08
      low eigenvalue method done, cpu time[sec] = 0.104191, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.02e-07  3.21e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.42e-09  3.21e-08         1
         *Z       ---       ---  1.07e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.21484e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  3.21017e-08  2.68573e-08  4.04059e-09  1.50574e-10  6.20849e-10  2.39645e-11  4.07925e-10  5.07693e-13  6.36417e-20

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.084, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 1400 K
            Well    Collision, 1/sec
              W1         1.69991e+09
      global relaxation matrix dimension = 626
      setting global matrices ... done, cpu time[sec] = 0.799935, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.58755, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            21355.3        17298      16906.4      17135.3      2540.42      49295.5      16062.8      1729.24
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.09578, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008031, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.103954, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.70317e-08  9.81783e-08  3.07775e-08
      low eigenvalue method done, cpu time[sec] = 0.104332, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.82e-08  3.08e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   3.3e-09  3.08e-08         1
         *Z       ---       ---  1.07e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.07775e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  3.07329e-08  2.57774e-08   3.8006e-09  1.43664e-10  5.83311e-10  2.27263e-11   4.0464e-10    5.087e-13  6.36422e-20

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.0621, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 1400 K
            Well    Collision, 1/sec
              W1         2.54986e+09
      global relaxation matrix dimension = 626
      setting global matrices ... done, cpu time[sec] = 0.798549, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.59244, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            14236.9        11532      11270.9      11423.6      1693.62      32863.7      10708.6      1152.83
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.095806, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.008062, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.104012, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.72375e-08  8.47911e-08  2.58019e-08
      low eigenvalue method done, cpu time[sec] = 0.104382, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.48e-08  2.58e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.85e-09  2.58e-08         1
         *Z       ---       ---  1.07e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.58019e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.57645e-08  2.17997e-08  2.98056e-09  1.19281e-10  4.57238e-10   1.8458e-11  3.88719e-10  5.13398e-13  6.36442e-20

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.0631, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 1400 K
            Well    Collision, 1/sec
              W1         3.39982e+09
      global relaxation matrix dimension = 626
      setting global matrices ... done, cpu time[sec] = 0.797379, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.57467, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            10677.7      8649.02      8453.19      8567.67      1270.21      24647.8      8031.41      864.619
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.095856, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008051, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.104049, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.67193e-08  7.59206e-08  2.25719e-08
      low eigenvalue method done, cpu time[sec] = 0.10442, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.59e-08  2.26e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.55e-09  2.26e-08         1
         *Z       ---       ---  1.07e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.25719e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.25392e-08  1.91709e-08  2.49053e-09  1.03962e-10  3.83189e-10  1.58574e-11  3.74267e-10   5.1759e-13  6.36463e-20

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.045, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 1400 K
            Well    Collision, 1/sec
              W1         4.24977e+09
      global relaxation matrix dimension = 626
      setting global matrices ... done, cpu time[sec] = 0.798496, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.57701, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            8542.12      6919.22      6762.55      6854.14      1016.17      19718.2      6425.13      691.695
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.095882, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008034, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.104057, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.20493e-08  6.94182e-08  2.02433e-08
      low eigenvalue method done, cpu time[sec] = 0.104425, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.94e-08  2.02e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.33e-09  2.02e-08         1
         *Z       ---       ---  1.07e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.02433e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.02139e-08   1.7254e-08  2.15762e-09  9.31261e-11  3.33256e-10  1.40561e-11  3.61315e-10  5.21339e-13  6.36484e-20

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.0445, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 1400 K
            Well    Collision, 1/sec
              W1         5.09973e+09
      global relaxation matrix dimension = 626
      setting global matrices ... done, cpu time[sec] = 0.797147, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.57818, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            7118.44      5766.01      5635.46      5711.78      846.808      16431.8      5354.28      576.413
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.095871, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.008035, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.104047, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.41992e-08  6.43575e-08  1.84564e-08
      low eigenvalue method done, cpu time[sec] = 0.104424, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.44e-08  1.85e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.16e-09  1.85e-08         1
         *Z       ---       ---  1.07e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.84564e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  1.84296e-08  1.57713e-08  1.91366e-09  8.49121e-11  2.96782e-10   1.2712e-11  3.49669e-10  5.24693e-13  6.36504e-20

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.0468, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 1400 K
            Well    Collision, 1/sec
              W1         5.94968e+09
      global relaxation matrix dimension = 626
      setting global matrices ... done, cpu time[sec] = 0.798166, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.58066, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            6101.52       4942.3      4830.39      4895.81      725.835      14084.4      4589.38      494.068
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.095915, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008056, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.104112, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.99223e-08  6.02583e-08  1.70269e-08
      low eigenvalue method done, cpu time[sec] = 0.104478, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.03e-08   1.7e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.02e-09   1.7e-08         1
         *Z       ---       ---  1.07e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.70269e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  1.70022e-08  1.45781e-08  1.72565e-09  7.83957e-11  2.68703e-10   1.1659e-11  3.39127e-10  5.27695e-13  6.36525e-20

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.0684, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 1400 K
            Well    Collision, 1/sec
              W1         6.79964e+09
      global relaxation matrix dimension = 626
      setting global matrices ... done, cpu time[sec] = 0.797011, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.56495, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            5338.83      4324.51      4226.59      4283.83      635.106      12323.9      4015.71      432.309
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.095916, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008056, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.104114, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.75975e-08  5.68417e-08  1.58486e-08
      low eigenvalue method done, cpu time[sec] = 0.10448, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.68e-08  1.58e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.91e-09  1.58e-08         1
         *Z       ---       ---  1.07e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.58486e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  1.58256e-08  1.35899e-08  1.57546e-09  7.30563e-11  2.46268e-10   1.0805e-11  3.29519e-10  5.30382e-13  6.36546e-20

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.0318, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1500 K
      Energy reference = 121033 1/cm
      Energy step      = 250 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -72 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.014554
         W1 Well: collisional kernel bandwidth = 48
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.626378
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.510104
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.444691
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 3.38826
         W1 Well: minimal relaxation eigenvalue = 0.0325489
         W1 Well: maximal relaxation eigenvalue = 2.64645
         W1 Well:       grid size = 611
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31717 1/cm
         B1 Barrier:        grid size = 485
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -217 1/cm
         B2 Barrier:        grid size = 484
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 32 1/cm
         B3 Barrier:        grid size = 503
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4717 1/cm
         B4 Barrier:        grid size = 509
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6217 1/cm
         B5 Barrier: nonpositive number of states at -23718 1/cm => truncating
         B5 Barrier:        grid size = 579
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23717 1/cm
         B6 Barrier:        grid size = 479
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1282 1/cm
         B7 Barrier:        grid size = 466
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4532 1/cm
         B8 Barrier:        grid size = 418
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16532 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 5.33184, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31717 -23717 3.11e+05 1.43e+17
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -217  1.7e+20
         B2     33 1.48e+20
         B3  -4717 1.61e+20
         B4  -6217 1.62e+20
         B5 -23717 2.43e+19
         B6   1283 4.12e+20
         B7   4533 1.39e+20
         B8  16533 1.68e+19
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  8.42e-11   1.5e-10  1.35e-11  3.16e-12  2.03e-19  4.86e-09  3.37e-07     0.418
          R  1.19e+10         1      1.78     0.161    0.0375  2.41e-09      57.7     4e+03  4.96e+09
         P1  6.67e+09     0.562         1    0.0903    0.0211  1.36e-09      32.4  2.25e+03  2.79e+09
         P2  7.39e+10      6.23      11.1         1     0.233   1.5e-08       359  2.49e+04  3.09e+10
         P3  3.17e+11      26.7      47.5      4.28         1  6.43e-08  1.54e+03  1.07e+05  1.32e+11
         P4  4.92e+18  4.15e+08  7.38e+08  6.66e+07  1.55e+07         1  2.39e+10  1.66e+12  2.06e+18
         P5  2.06e+08    0.0173    0.0308   0.00278   0.00065  4.18e-11         1      69.3   8.6e+07
         P6  2.97e+06   0.00025  0.000445  4.02e-05  9.38e-06  6.04e-13    0.0144         1  1.24e+06
         P7      2.39  2.02e-10  3.59e-10  3.24e-11  7.56e-12  4.86e-19  1.16e-08  8.06e-07         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  9.61e-14  1.71e-13  1.54e-14   3.6e-15  2.32e-22  5.54e-12  3.84e-10  0.000476
          R  1.04e+13         1      1.78     0.161    0.0375  2.41e-09      57.7     4e+03  4.96e+09
         P1  5.85e+12     0.562         1    0.0903    0.0211  1.36e-09      32.4  2.25e+03  2.79e+09
         P2  6.48e+13      6.23      11.1         1     0.233   1.5e-08       359  2.49e+04  3.09e+10
         P3  2.78e+14      26.7      47.5      4.28         1  6.43e-08  1.54e+03  1.07e+05  1.32e+11
         P4  4.32e+21  4.15e+08  7.38e+08  6.66e+07  1.55e+07         1  2.39e+10  1.66e+12  2.06e+18
         P5   1.8e+11    0.0173    0.0308   0.00278   0.00065  4.18e-11         1      69.3   8.6e+07
         P6  2.61e+09   0.00025  0.000445  4.02e-05  9.38e-06  6.04e-13    0.0144         1  1.24e+06
         P7   2.1e+03  2.02e-10  3.59e-10  3.24e-11  7.56e-12  4.86e-19  1.16e-08  8.06e-07         1
   MasterEquation::set:  done, cpu time[sec] = 5.34684, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 1500 K
            Well    Collision, 1/sec
              W1          1.6255e+08
      global relaxation matrix dimension = 611
      setting global matrices ... done, cpu time[sec] = 0.750611, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.30694, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             219985       191257       207677       209375      31322.2       532247       179566      21711.1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.23e-06  4.58e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.02e-08  4.58e-07         1
         *Z       ---       ---  2.41e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 4.58137e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  4.57515e-07  3.55463e-07  8.10414e-08  2.52575e-09  1.46902e-08  4.69135e-10  3.32068e-09  5.26355e-12  1.59555e-18

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.57467, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 1500 K
            Well    Collision, 1/sec
              W1          4.8765e+08
      global relaxation matrix dimension = 611
      setting global matrices ... done, cpu time[sec] = 0.754279, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.5215, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            73328.5      63752.2      69225.7      69791.6      10440.7       177416      59855.5      7237.04
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.69e-07  3.42e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.17e-08  3.42e-07         1
         *Z       ---       ---  2.41e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.41902e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  3.41438e-07  2.77381e-07  5.05808e-08  1.69348e-09  8.10254e-09   2.8699e-10   3.3873e-09  5.28876e-12  1.59557e-18

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.8079, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 1500 K
            Well    Collision, 1/sec
              W1         8.12751e+08
      global relaxation matrix dimension = 611
      setting global matrices ... done, cpu time[sec] = 0.751129, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.49919, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            43997.1      38251.3      41535.4        41875      6264.44       106449      35913.3      4342.22
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.49e-07  2.91e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.78e-08  2.91e-07         1
         *Z       ---       ---  2.41e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.9086e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.90465e-07  2.39875e-07   3.9434e-08  1.39627e-09  6.15151e-09  2.28395e-10  3.37529e-09  5.31179e-12  1.59559e-18

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.7868, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 1500 K
            Well    Collision, 1/sec
              W1         1.13785e+09
      global relaxation matrix dimension = 611
      setting global matrices ... done, cpu time[sec] = 0.754273, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.49535, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            31426.5      27322.4      29668.1      29910.7       4474.6      76035.3      25652.3      3101.59
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.59e-07  2.59e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.48e-08  2.59e-07         1
         *Z       ---       ---  2.41e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.58938e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.58587e-07  2.15543e-07  3.31521e-08  1.22441e-09  5.12258e-09  1.96094e-10  3.34281e-09  5.33343e-12  1.59561e-18

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.7902, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 1500 K
            Well    Collision, 1/sec
              W1         1.46295e+09
      global relaxation matrix dimension = 611
      setting global matrices ... done, cpu time[sec] = 0.750408, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.99807, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            24442.8      21250.7      23075.2      23263.9      3480.24      59138.6      19951.8      2412.35
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.04e-07  2.36e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   2.3e-08  2.36e-07        -1
         *Z       ---       ---  2.41e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.36144e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  2.35823e-07  1.97788e-07  2.89823e-08  1.10705e-09  4.46194e-09  1.74702e-10  3.30342e-09  5.35395e-12  1.59563e-18

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.2825, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 1500 K
            Well    Collision, 1/sec
              W1          1.6255e+09
      global relaxation matrix dimension = 611
      setting global matrices ... done, cpu time[sec] = 0.752402, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.49252, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            21998.5      19125.7      20767.7      20937.5      3132.22      53224.7      17956.6      2171.11
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.78e-07  2.27e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.22e-08  2.27e-07         1
         *Z       ---       ---  2.41e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.26877e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1   2.2657e-07  1.90484e-07   2.7361e-08  1.06046e-09  4.20918e-09   1.6636e-10  3.28275e-09  5.36383e-12  1.59564e-18

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.7913, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 1500 K
            Well    Collision, 1/sec
              W1         2.43825e+09
      global relaxation matrix dimension = 611
      setting global matrices ... done, cpu time[sec] = 0.752276, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.47879, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            14665.7      12750.4      13845.1      13958.3      2088.15      35483.1      11971.1      1447.41
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.97e-07  1.93e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.95e-08  1.93e-07         1
         *Z       ---       ---  2.41e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.92939e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  1.92677e-07   1.6333e-07  2.17778e-08  8.94614e-10   3.3534e-09  1.37358e-10  3.17906e-09  5.40989e-12  1.59569e-18

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.7645, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 1500 K
            Well    Collision, 1/sec
              W1           3.251e+09
      global relaxation matrix dimension = 611
      setting global matrices ... done, cpu time[sec] = 0.751433, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.48664, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            10999.3      9562.83      10383.9      10468.7      1566.11      26612.4      8978.32      1085.56
      eigenvector populations normalized:
          L        *R        *P        W1
          0   5.4e-07  1.71e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.76e-08  1.71e-07        -1
         *Z       ---       ---  2.41e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.70618e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  1.70386e-07  1.45143e-07  1.84026e-08  7.89058e-10  2.84461e-09  1.19463e-10  3.08163e-09  5.45107e-12  1.59573e-18

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.7762, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 1500 K
            Well    Collision, 1/sec
              W1         4.06375e+09
      global relaxation matrix dimension = 611
      setting global matrices ... done, cpu time[sec] = 0.753367, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.48394, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            8799.41      7650.26      8307.08         8375      1252.89      21289.9      7182.65      868.445
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.95e-07  1.54e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.62e-08  1.54e-07        -1
         *Z       ---       ---  2.41e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.5436e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  1.54151e-07  1.31745e-07  1.60887e-08  7.13622e-10  2.49824e-09  1.06944e-10  2.99246e-09  5.48805e-12  1.59578e-18

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.7557, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 1500 K
            Well    Collision, 1/sec
              W1          4.8765e+09
      global relaxation matrix dimension = 611
      setting global matrices ... done, cpu time[sec] = 0.752469, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.49981, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            7332.85      6375.22      6922.57      6979.16      1044.07      17741.6      5985.55      723.704
      eigenvector populations normalized:
          L        *R        *P        W1
          0   4.6e-07  1.42e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.5e-08  1.42e-07         1
         *Z       ---       ---  2.41e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.4178e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  1.41588e-07  1.21295e-07  1.43801e-08  6.55951e-10   2.2432e-09  9.75241e-11  2.91106e-09  5.52133e-12  1.59583e-18

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.793, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 1500 K
            Well    Collision, 1/sec
              W1         5.68926e+09
      global relaxation matrix dimension = 611
      setting global matrices ... done, cpu time[sec] = 0.757204, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.47729, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             6285.3      5464.47      5933.63      5982.14       894.92      15207.1      5130.47      620.318
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.33e-07  1.32e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.41e-08  1.32e-07        -1
         *Z       ---       ---  2.41e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.31644e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  1.31465e-07  1.12823e-07  1.30547e-08  6.09863e-10   2.0455e-09  9.00912e-11   2.8365e-09  5.55134e-12  1.59588e-18

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.7796, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 1500 K
            Well    Collision, 1/sec
              W1         6.50201e+09
      global relaxation matrix dimension = 611
      setting global matrices ... done, cpu time[sec] = 0.757552, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.49111, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            5499.63      4781.42      5191.93      5234.37      783.055      13306.2      4489.16      542.778
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.13e-07  1.23e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.35e-08  1.23e-07         1
         *Z       ---       ---  2.41e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.23236e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1            1  1.23069e-07  1.05763e-07  1.19898e-08  5.71855e-10  1.88657e-09  8.40248e-11  2.76788e-09  5.57843e-12  1.59593e-18

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.788, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1600 K
      Energy reference = 127983 1/cm
      Energy step      = 267 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -70 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.014053
         W1 Well: collisional kernel bandwidth = 47
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.604286
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.489582
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.410705
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 3.20988
         W1 Well: minimal relaxation eigenvalue = 0.0316844
         W1 Well: maximal relaxation eigenvalue = 2.06141
         W1 Well:       grid size = 598
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31683 1/cm
         B1 Barrier:        grid size = 480
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -177 1/cm
         B2 Barrier:        grid size = 479
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 89 1/cm
         B3 Barrier:        grid size = 497
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4716 1/cm
         B4 Barrier:        grid size = 503
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6318 1/cm
         B5 Barrier: nonpositive number of states at -23139 1/cm => truncating
         B5 Barrier:        grid size = 566
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23139 1/cm
         B6 Barrier:        grid size = 474
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1424 1/cm
         B7 Barrier:        grid size = 462
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4628 1/cm
         B8 Barrier:        grid size = 417
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16643 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 5.07613, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31683 -23139 4.75e+05 2.35e+17
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -177 2.75e+20
         B2     90 2.55e+20
         B3  -4716 3.07e+20
         B4  -6318 3.08e+20
         B5 -23139 4.65e+19
         B6   1425 6.95e+20
         B7   4629 2.42e+20
         B8  16644 3.26e+19
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  1.18e-11  2.12e-11  2.46e-12  6.37e-13  1.23e-19  5.92e-10  3.42e-08    0.0218
          R   8.5e+10         1       1.8     0.209    0.0541  1.04e-08      50.3  2.91e+03  1.85e+09
         P1  4.72e+10     0.555         1     0.116      0.03   5.8e-09      27.9  1.62e+03  1.03e+09
         P2  4.06e+11      4.78       8.6         1     0.259  4.99e-08       240  1.39e+04  8.84e+09
         P3  1.57e+12      18.5      33.3      3.87         1  1.93e-07       930  5.38e+04  3.42e+10
         P4  8.13e+18  9.57e+07  1.72e+08     2e+07  5.18e+06         1  4.81e+09  2.78e+11  1.77e+17
         P5  1.69e+09    0.0199    0.0358   0.00416   0.00108  2.08e-10         1      57.8  3.68e+07
         P6  2.92e+07  0.000344  0.000619  7.19e-05  1.86e-05  3.59e-12    0.0173         1  6.36e+05
         P7      45.9   5.4e-10  9.73e-10  1.13e-10  2.92e-11  5.65e-18  2.72e-08  1.57e-06         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  1.43e-14  2.58e-14     3e-15  7.76e-16   1.5e-22  7.22e-13  4.17e-11  2.66e-05
          R  6.97e+13         1       1.8     0.209    0.0541  1.04e-08      50.3  2.91e+03  1.85e+09
         P1  3.87e+13     0.555         1     0.116      0.03   5.8e-09      27.9  1.62e+03  1.03e+09
         P2  3.33e+14      4.78       8.6         1     0.259  4.99e-08       240  1.39e+04  8.84e+09
         P3  1.29e+15      18.5      33.3      3.87         1  1.93e-07       930  5.38e+04  3.42e+10
         P4  6.67e+21  9.57e+07  1.72e+08     2e+07  5.18e+06         1  4.81e+09  2.78e+11  1.77e+17
         P5  1.39e+12    0.0199    0.0358   0.00416   0.00108  2.08e-10         1      57.8  3.68e+07
         P6   2.4e+10  0.000344  0.000619  7.19e-05  1.86e-05  3.59e-12    0.0173         1  6.36e+05
         P7  3.77e+04   5.4e-10  9.73e-10  1.13e-10  2.92e-11  5.65e-18  2.72e-08  1.57e-06         1
   MasterEquation::set:  done, cpu time[sec] = 5.09116, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 1600 K
            Well    Collision, 1/sec
              W1         1.55885e+08
      global relaxation matrix dimension = 598
      setting global matrices ... done, cpu time[sec] = 0.728724, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.29528, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             224490       208648       250929       251775      37972.1       567586       197697      26638.1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.12e-06  2.41e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.97e-07  2.41e-06        -1
         *Z       ---       ---  6.71e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.41295e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999998  2.40848e-06  1.88184e-06  4.15885e-07   1.3202e-08  7.51565e-08  2.42727e-09  1.99306e-08  4.06184e-11  2.63742e-17

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.48966, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 1600 K
            Well    Collision, 1/sec
              W1         4.67655e+08
      global relaxation matrix dimension = 598
      setting global matrices ... done, cpu time[sec] = 0.727687, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.43214, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            74829.9      69549.3      83642.9        83925      12657.4       189195      65899.1      8879.37
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.91e-06  1.84e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.58e-07  1.84e-06        -1
         *Z       ---       ---  6.71e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.84389e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999998  1.84048e-06  1.50064e-06  2.66123e-07  9.10907e-09  4.26467e-08  1.52979e-09  2.03844e-08  4.08049e-11  2.63745e-17

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.6157, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 1600 K
            Well    Collision, 1/sec
              W1         7.79424e+08
      global relaxation matrix dimension = 598
      setting global matrices ... done, cpu time[sec] = 0.727939, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.44464, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            44897.9      41729.6      50185.8        50355      7594.42       113517      39539.5      5327.62
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.33e-06  1.59e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.39e-07  1.59e-06         1
         *Z       ---       ---  6.71e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.58898e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999998  1.58604e-06  1.31356e-06  2.10318e-07   7.6239e-09  3.28724e-08  1.23662e-09   2.0385e-08   4.0973e-11  2.63748e-17

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.6434, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 1600 K
            Well    Collision, 1/sec
              W1         1.09119e+09
      global relaxation matrix dimension = 598
      setting global matrices ... done, cpu time[sec] = 0.725552, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.434, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            32069.9      29806.8        35847      35967.8      5424.58      81083.7      28242.5      3805.44
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.95e-06  1.43e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.27e-07  1.43e-06         1
         *Z       ---       ---  6.71e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.42769e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999999  1.42504e-06   1.1907e-06  1.78545e-07  6.75627e-09  2.76687e-08  1.07342e-09  2.02586e-08  4.11299e-11  2.63751e-17

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.6309, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 1600 K
            Well    Collision, 1/sec
              W1         1.40296e+09
      global relaxation matrix dimension = 598
      setting global matrices ... done, cpu time[sec] = 0.726132, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.42953, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            24943.3      23183.1        27881        27975      4219.12      63065.1      21966.4      2959.79
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.67e-06  1.31e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.17e-07  1.31e-06         1
         *Z       ---       ---  6.71e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.3115e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999999  1.30907e-06  1.10023e-06  1.57292e-07  6.15904e-09  2.43032e-08  9.64515e-10   2.0084e-08  4.12782e-11  2.63754e-17

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.6311, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 1600 K
            Well    Collision, 1/sec
              W1         1.55885e+09
      global relaxation matrix dimension = 598
      setting global matrices ... done, cpu time[sec] = 0.730707, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.42314, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
              22449      20864.8      25092.9      25177.5      3797.21      56758.6      19769.7      2663.81
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.56e-06  1.26e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.14e-07  1.26e-06         1
         *Z       ---       ---  6.71e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.26401e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999999  1.26167e-06   1.0628e-06  1.48989e-07  5.92073e-09  2.30095e-08  9.21837e-10  1.99885e-08  4.13494e-11  2.63756e-17

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.6288, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 1600 K
            Well    Collision, 1/sec
              W1         2.33827e+09
      global relaxation matrix dimension = 598
      setting global matrices ... done, cpu time[sec] = 0.727081, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.41289, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
              14966      13909.9      16728.6        16785      2531.47      37839.1      13179.8      1775.87
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.15e-06  1.09e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.01e-07  1.09e-06         1
         *Z       ---       ---  6.71e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.08866e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999999  1.08665e-06  9.22488e-07  1.20191e-07   5.0659e-09  1.85984e-08  7.72368e-10  1.94881e-08  4.16812e-11  2.63763e-17

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.6117, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 1600 K
            Well    Collision, 1/sec
              W1          3.1177e+09
      global relaxation matrix dimension = 598
      setting global matrices ... done, cpu time[sec] = 0.727775, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.44586, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            11224.5      10432.4      12546.4      12588.7       1898.6      28379.3      9884.86      1331.91
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.87e-06  9.72e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.17e-08  9.72e-07        -1
         *Z       ---       ---  6.71e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 9.71979e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999999  9.70178e-07  8.27394e-07  1.02599e-07  4.51562e-09  1.59482e-08  6.79123e-10  1.89993e-08   4.1978e-11  2.63771e-17

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.6456, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 1600 K
            Well    Collision, 1/sec
              W1         3.89712e+09
      global relaxation matrix dimension = 598
      setting global matrices ... done, cpu time[sec] = 0.727495, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.4138, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            8979.58      8345.92      10037.2        10071      1518.88      22703.4      7907.89      1065.52
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.66e-06  8.86e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.49e-08  8.86e-07        -1
         *Z       ---       ---  6.71e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 8.86222e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999999   8.8458e-07  7.56695e-07  9.04396e-08  4.11881e-09  1.41289e-08  6.13318e-10  1.85418e-08  4.22453e-11  2.63778e-17

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.6002, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 1600 K
            Well    Collision, 1/sec
              W1         4.67655e+09
      global relaxation matrix dimension = 598
      setting global matrices ... done, cpu time[sec] = 0.726682, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.42528, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            7482.99      6954.93      8364.29       8392.5      1265.74      18919.5      6589.91      887.937
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.49e-06  8.19e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.96e-08  8.19e-07         1
         *Z       ---       ---  6.71e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 8.19363e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999999  8.17845e-07   7.0113e-07  8.13993e-08  3.81318e-09    1.278e-08  5.63446e-10  1.81175e-08  4.24871e-11  2.63786e-17

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.625, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 1600 K
            Well    Collision, 1/sec
              W1         5.45597e+09
      global relaxation matrix dimension = 598
      setting global matrices ... done, cpu time[sec] = 0.731282, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.41136, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            6413.99      5961.37      7169.39      7193.57      1084.92      16216.7      5648.49      761.089
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.36e-06  7.65e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.52e-08  7.65e-07         1
         *Z       ---       ---  6.71e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 7.65146e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999999  7.63728e-07  6.55797e-07  7.43455e-08  3.56735e-09   1.1728e-08  5.23844e-10  1.77243e-08  4.27063e-11  2.63793e-17

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.6192, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 1600 K
            Well    Collision, 1/sec
              W1          6.2354e+09
      global relaxation matrix dimension = 598
      setting global matrices ... done, cpu time[sec] = 0.729795, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.43496, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            5612.24       5216.2      6273.22      6294.37      949.302      14189.7      4942.43      665.953
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.24e-06   7.2e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.15e-08   7.2e-07        -1
         *Z       ---       ---  6.71e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 7.1992e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999999  7.18586e-07  6.17804e-07  6.86484e-08  3.36346e-09  1.08778e-08  4.91343e-10  1.73588e-08  4.29055e-11  2.63801e-17

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.6407, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1700 K
      Energy reference = 134933 1/cm
      Energy step      = 283 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -67.9 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.014176
         W1 Well: collisional kernel bandwidth = 47
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.619989
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.474361
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.33596
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 3.05945
         W1 Well: minimal relaxation eigenvalue = 0.0309043
         W1 Well: maximal relaxation eigenvalue = 3.06995
         W1 Well:       grid size = 589
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31754 1/cm
         B1 Barrier:        grid size = 477
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -57 1/cm
         B2 Barrier:        grid size = 477
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = -57 1/cm
         B3 Barrier:        grid size = 494
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4869 1/cm
         B4 Barrier:        grid size = 499
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6284 1/cm
         B5 Barrier: nonpositive number of states at -23547 1/cm => truncating
         B5 Barrier:        grid size = 560
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23546 1/cm
         B6 Barrier:        grid size = 472
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1357 1/cm
         B7 Barrier:        grid size = 461
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4470 1/cm
         B8 Barrier:        grid size = 418
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16639 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 4.84591, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31754 -23546 3.53e+05 3.81e+17
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -57 4.32e+20
         B2    -57 4.28e+20
         B3  -4869 5.68e+20
         B4  -6284 5.68e+20
         B5 -23546 8.63e+19
         B6   1358 1.14e+21
         B7   4471 4.09e+20
         B8  16640  6.1e+19
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  2.09e-12  3.81e-12  5.51e-13  1.56e-13  7.95e-20  9.26e-11  4.56e-09   0.00161
          R  4.79e+11         1      1.82     0.264    0.0747  3.81e-08      44.4  2.19e+03  7.73e+08
         P1  2.63e+11     0.549         1     0.145     0.041  2.09e-08      24.3   1.2e+03  4.24e+08
         P2  1.81e+12      3.79      6.91         1     0.283  1.44e-07       168  8.28e+03  2.93e+09
         P3  6.41e+12      13.4      24.4      3.53         1   5.1e-07       594  2.93e+04  1.03e+10
         P4  1.26e+19  2.63e+07  4.79e+07  6.94e+06  1.96e+06         1  1.17e+09  5.74e+10  2.03e+16
         P5  1.08e+10    0.0225    0.0411   0.00595   0.00168  8.58e-10         1      49.3  1.74e+07
         P6  2.19e+08  0.000457  0.000834  0.000121  3.42e-05  1.74e-11    0.0203         1  3.54e+05
         P7       620  1.29e-09  2.36e-09  3.41e-10  9.66e-11  4.92e-17  5.74e-08  2.83e-06         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1   2.7e-15  4.91e-15  7.12e-16  2.01e-16  1.03e-22   1.2e-13   5.9e-12  2.08e-06
          R  3.71e+14         1      1.82     0.264    0.0747  3.81e-08      44.4  2.19e+03  7.73e+08
         P1  2.03e+14     0.549         1     0.145     0.041  2.09e-08      24.3   1.2e+03  4.24e+08
         P2  1.41e+15      3.79      6.91         1     0.283  1.44e-07       168  8.28e+03  2.93e+09
         P3  4.97e+15      13.4      24.4      3.53         1   5.1e-07       594  2.93e+04  1.03e+10
         P4  9.74e+21  2.63e+07  4.79e+07  6.94e+06  1.96e+06         1  1.17e+09  5.74e+10  2.03e+16
         P5  8.36e+12    0.0225    0.0411   0.00595   0.00168  8.58e-10         1      49.3  1.74e+07
         P6   1.7e+11  0.000457  0.000834  0.000121  3.42e-05  1.74e-11    0.0203         1  3.54e+05
         P7   4.8e+05  1.29e-09  2.36e-09  3.41e-10  9.66e-11  4.92e-17  5.74e-08  2.83e-06         1
   MasterEquation::set:  done, cpu time[sec] = 4.85978, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 1700 K
            Well    Collision, 1/sec
              W1         1.49873e+08
      global relaxation matrix dimension = 589
      setting global matrices ... done, cpu time[sec] = 0.703393, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.32307, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             227305       225042       298836       298552      45358.8       598973       214864      32043.9
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.46e-05  1.02e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.81e-07  1.02e-05        -1
         *Z       ---       ---  2.21e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.01685e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1      0.99999  1.01517e-05  7.96459e-06  1.71816e-06  5.53123e-08  3.08578e-07  1.00741e-08  9.47306e-08  2.42115e-10  3.09476e-16

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.4303, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 1700 K
            Well    Collision, 1/sec
              W1         4.49619e+08
      global relaxation matrix dimension = 589
      setting global matrices ... done, cpu time[sec] = 0.702133, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.40589, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            75768.3        75014        99612      99517.2      15119.6       199658      71621.3      10681.3
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.99e-05  7.93e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.28e-07  7.93e-06        -1
         *Z       ---       ---  2.21e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 7.93166e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999992  7.91851e-06  6.47377e-06   1.1221e-06  3.91553e-08  1.79612e-07  6.52148e-09  9.71178e-08  2.43181e-10  3.09479e-16

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.5099, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 1700 K
            Well    Collision, 1/sec
              W1         7.49365e+08
      global relaxation matrix dimension = 589
      setting global matrices ... done, cpu time[sec] = 0.701665, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.41541, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
              45461      45008.4      59767.2      59710.3      9071.75       119795      42972.8      6408.78
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.77e-05  6.91e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.58e-07  6.91e-06        -1
         *Z       ---       ---  2.21e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 6.91298e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999993  6.90152e-06   5.7278e-06  8.97169e-07   3.3212e-08  1.40335e-07  5.34582e-09  9.74168e-08  2.44129e-10  3.09482e-16

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.5314, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 1700 K
            Well    Collision, 1/sec
              W1         1.04911e+09
      global relaxation matrix dimension = 589
      setting global matrices ... done, cpu time[sec] = 0.702719, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.40174, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            32472.1      32148.9      42690.8      42650.2      6479.82      85567.6      30694.8       4577.7
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.63e-05  6.26e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.13e-07  6.26e-06        -1
         *Z       ---       ---  2.21e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 6.26188e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999994   6.2515e-06  5.23244e-06  7.68071e-07  2.97092e-08  1.19255e-07  4.68588e-09  9.70968e-08  2.45009e-10  3.09486e-16

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.5218, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 1700 K
            Well    Collision, 1/sec
              W1         1.34886e+09
      global relaxation matrix dimension = 589
      setting global matrices ... done, cpu time[sec] = 0.706636, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.38528, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            25256.1      25004.7        33204      33172.4      5039.86      66552.6      23873.8      3560.43
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.52e-05  5.79e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   4.8e-07  5.79e-06        -1
         *Z       ---       ---  2.21e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 5.78936e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999994  5.77976e-06  4.86474e-06  6.81194e-07  2.72815e-08  1.05536e-07  4.24265e-09  9.65224e-08  2.45838e-10  3.09489e-16

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.509, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 1700 K
            Well    Collision, 1/sec
              W1         1.49873e+09
      global relaxation matrix dimension = 589
      setting global matrices ... done, cpu time[sec] = 0.698908, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.41749, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            22730.5      22504.2      29883.6      29855.2      4535.88      59897.3      21486.4      3204.39
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.48e-05   5.6e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.66e-07   5.6e-06         1
         *Z       ---       ---  2.21e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 5.59529e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999994  5.58602e-06  4.71185e-06  6.47115e-07  2.63086e-08  1.00241e-07  4.06822e-09  9.61867e-08  2.46237e-10  3.09491e-16

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.5345, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 1700 K
            Well    Collision, 1/sec
              W1         2.24809e+09
      global relaxation matrix dimension = 589
      setting global matrices ... done, cpu time[sec] = 0.70805, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.40457, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            15153.7      15002.8      19922.4      19903.4      3023.92      39931.6      14324.3      2136.26
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.32e-05  4.87e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.15e-07  4.87e-06         1
         *Z       ---       ---  2.21e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 4.87359e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999995  4.86551e-06  4.13438e-06  5.28233e-07  2.27951e-08  8.20786e-08  3.45345e-09  9.43213e-08  2.48089e-10  3.09499e-16

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.5264, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 1700 K
            Well    Collision, 1/sec
              W1         2.99746e+09
      global relaxation matrix dimension = 589
      setting global matrices ... done, cpu time[sec] = 0.706722, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.41885, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            11365.2      11252.1      14941.8      14927.6      2267.94      29948.7      10743.2       1602.2
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.21e-05  4.39e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   3.8e-07  4.39e-06        -1
         *Z       ---       ---  2.21e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 4.38838e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999996  4.38111e-06  3.73883e-06   4.5497e-07  2.05109e-08  7.10667e-08  3.06627e-09  9.24082e-08  2.49749e-10  3.09507e-16

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.5422, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 1700 K
            Well    Collision, 1/sec
              W1         3.74682e+09
      global relaxation matrix dimension = 589
      setting global matrices ... done, cpu time[sec] = 0.69944, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.41235, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             9092.2      9001.68      11953.4      11942.1      1814.35      23958.9      8594.56      1281.76
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.13e-05  4.03e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.54e-07  4.03e-06         1
         *Z       ---       ---  2.21e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 4.02892e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999996  4.02224e-06  3.44234e-06  4.03977e-07  1.88508e-08  6.34524e-08  2.79096e-09   9.0571e-08  2.51248e-10  3.09516e-16

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.5262, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 1700 K
            Well    Collision, 1/sec
              W1         4.49619e+09
      global relaxation matrix dimension = 589
      setting global matrices ... done, cpu time[sec] = 0.704343, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.40663, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            7576.83       7501.4       9961.2      9951.72      1511.96      19965.8      7162.13      1068.13
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.06e-05  3.75e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.33e-07  3.75e-06        -1
         *Z       ---       ---  2.21e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.74681e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999996  3.74059e-06  3.20774e-06  3.65846e-07  1.75637e-08  5.77723e-08  2.58099e-09  8.88381e-08  2.52611e-10  3.09524e-16

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.5244, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 1700 K
            Well    Collision, 1/sec
              W1         5.24555e+09
      global relaxation matrix dimension = 589
      setting global matrices ... done, cpu time[sec] = 0.705679, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.41646, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            6494.43      6429.77      8538.17      8530.05      1295.96      17113.5      6138.97       915.54
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.01e-05  3.52e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.16e-07  3.52e-06        -1
         *Z       ---       ---  2.21e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.51673e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999996   3.5109e-06  3.01524e-06  3.35943e-07  1.65226e-08  5.33194e-08  2.41333e-09  8.72113e-08  2.53853e-10  3.09532e-16

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.5361, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 1700 K
            Well    Collision, 1/sec
              W1         5.99492e+09
      global relaxation matrix dimension = 589
      setting global matrices ... done, cpu time[sec] = 0.707084, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.40404, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            5682.62      5626.05       7470.9      7463.79      1133.97      14974.3       5371.6      801.098
      eigenvector populations normalized:
          L        *R        *P        W1
          0   9.6e-06  3.32e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.02e-07  3.32e-06         1
         *Z       ---       ---  2.21e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.32385e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999997  3.31834e-06  2.85309e-06  3.11683e-07  1.56547e-08  4.97039e-08  2.27507e-09  8.56841e-08  2.54988e-10  3.09541e-16

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.5323, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1800 K
      Energy reference = 141884 1/cm
      Energy step      = 300 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -65.8 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.013488
         W1 Well: collisional kernel bandwidth = 46
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.596898
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.459121
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.356561
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 2.89049
         W1 Well: minimal relaxation eigenvalue = 0.0302005
         W1 Well: maximal relaxation eigenvalue = 4.23673
         W1 Well:       grid size = 579
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31816 1/cm
         B1 Barrier:        grid size = 473
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -16 1/cm
         B2 Barrier:        grid size = 473
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = -16 1/cm
         B3 Barrier:        grid size = 489
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4816 1/cm
         B4 Barrier:        grid size = 494
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6315 1/cm
         B5 Barrier: nonpositive number of states at -23716 1/cm => truncating
         B5 Barrier:        grid size = 552
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23715 1/cm
         B6 Barrier:        grid size = 468
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1483 1/cm
         B7 Barrier:        grid size = 458
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4483 1/cm
         B8 Barrier:        grid size = 418
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16484 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 4.65645, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31816 -23715 3.12e+05 6.04e+17
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -16 6.65e+20
         B2    -16 6.99e+20
         B3  -4816 1.02e+21
         B4  -6315 1.02e+21
         B5 -23715 1.56e+20
         B6   1484 1.82e+21
         B7   4484 6.72e+20
         B8  16485  1.1e+20
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  4.48e-13  8.27e-13  1.45e-13  4.45e-14  5.38e-20  1.77e-11  7.56e-10  0.000159
          R  2.23e+12         1      1.85     0.324    0.0995   1.2e-07      39.5  1.69e+03  3.55e+08
         P1  1.21e+12     0.542         1     0.176    0.0539   6.5e-08      21.4       915  1.92e+08
         P2  6.88e+12      3.08      5.69         1     0.307   3.7e-07       122  5.21e+03  1.09e+09
         P3  2.24e+13      10.1      18.6      3.26         1  1.21e-06       397   1.7e+04  3.57e+09
         P4  1.86e+19  8.33e+06  1.54e+07   2.7e+06  8.29e+05         1  3.29e+08  1.41e+10  2.96e+15
         P5  5.65e+10    0.0253    0.0468   0.00821   0.00252  3.04e-09         1      42.8  8.98e+06
         P6  1.32e+09  0.000592   0.00109  0.000192  5.89e-05  7.11e-11    0.0234         1   2.1e+05
         P7  6.29e+03  2.82e-09   5.2e-09  9.14e-10   2.8e-10  3.38e-16  1.11e-07  4.76e-06         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  6.13e-16  1.13e-15  1.99e-16   6.1e-17  7.36e-23  2.42e-14  1.04e-12  2.18e-07
          R  1.63e+15         1      1.85     0.324    0.0995   1.2e-07      39.5  1.69e+03  3.55e+08
         P1  8.83e+14     0.542         1     0.176    0.0539   6.5e-08      21.4       915  1.92e+08
         P2  5.03e+15      3.08      5.69         1     0.307   3.7e-07       122  5.21e+03  1.09e+09
         P3  1.64e+16      10.1      18.6      3.26         1  1.21e-06       397   1.7e+04  3.57e+09
         P4  1.36e+22  8.33e+06  1.54e+07   2.7e+06  8.29e+05         1  3.29e+08  1.41e+10  2.96e+15
         P5  4.13e+13    0.0253    0.0468   0.00821   0.00252  3.04e-09         1      42.8  8.98e+06
         P6  9.66e+11  0.000592   0.00109  0.000192  5.89e-05  7.11e-11    0.0234         1   2.1e+05
         P7   4.6e+06  2.82e-09   5.2e-09  9.14e-10   2.8e-10  3.38e-16  1.11e-07  4.76e-06         1
   MasterEquation::set:  done, cpu time[sec] = 4.6705, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 1800 K
            Well    Collision, 1/sec
              W1         1.44417e+08
      global relaxation matrix dimension = 579
      setting global matrices ... done, cpu time[sec] = 0.685402, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.29998, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             228659       240374       351410       349700      53485.8       626514       230966      37897.1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.01e-05  3.56e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.53e-06  3.56e-05         1
         *Z       ---       ---  8.35e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.56021e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999964  3.55418e-05  2.79972e-05  5.88885e-06  1.92935e-07  1.05579e-06  3.48316e-08  3.71048e-07  1.16488e-09  2.73044e-15

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.34794, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 1800 K
            Well    Collision, 1/sec
              W1         4.33252e+08
      global relaxation matrix dimension = 579
      setting global matrices ... done, cpu time[sec] = 0.682428, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.3412, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            76219.5      80124.7       117137       116567      17828.6       208838      76988.6      12632.4
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.59e-05  2.83e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.07e-06  2.83e-05         1
         *Z       ---       ---  8.35e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.8297e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999972  2.82491e-05  2.31507e-05  3.92426e-06  1.39774e-07  6.28864e-07   2.3102e-08  3.81171e-07  1.16982e-09  2.73047e-15

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.3802, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 1800 K
            Well    Collision, 1/sec
              W1         7.22087e+08
      global relaxation matrix dimension = 579
      setting global matrices ... done, cpu time[sec] = 0.682287, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.33976, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            45731.7      48074.8      70281.9      69940.1      10697.2       125303      46193.2      7579.41
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.93e-05  2.49e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.86e-06  2.49e-05         1
         *Z       ---       ---  8.35e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.49167e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999975  2.48745e-05  2.06812e-05  3.17219e-06  1.19993e-07   4.9741e-07  1.91778e-08  3.83338e-07  1.17415e-09   2.7305e-15

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.3804, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 1800 K
            Well    Collision, 1/sec
              W1         1.01092e+09
      global relaxation matrix dimension = 579
      setting global matrices ... done, cpu time[sec] = 0.681831, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.33235, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            32665.5      34339.1      50201.4      49957.2      7640.83        89502      32995.1      5413.87
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.49e-05  2.27e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.72e-06  2.27e-05        -1
         *Z       ---       ---  8.35e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.27359e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999977  2.26974e-05  1.90245e-05   2.7371e-06  1.08245e-07  4.26364e-07  1.69593e-08  3.83037e-07  1.17816e-09  2.73053e-15

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.3845, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 1800 K
            Well    Collision, 1/sec
              W1         1.29976e+09
      global relaxation matrix dimension = 579
      setting global matrices ... done, cpu time[sec] = 0.685276, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.34194, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            25406.5      26708.2      39045.5      38855.6      5942.87      69612.6      25662.9      4210.79
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.17e-05  2.11e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.62e-06  2.11e-05         1
         *Z       ---       ---  8.35e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.11422e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999979  2.11064e-05  1.77856e-05  2.44258e-06  1.00055e-07  3.79879e-07   1.5461e-08  3.81662e-07  1.18192e-09  2.73055e-15

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.3981, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 1800 K
            Well    Collision, 1/sec
              W1         1.44417e+09
      global relaxation matrix dimension = 579
      setting global matrices ... done, cpu time[sec] = 0.687288, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.34347, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            22865.9      24037.4        35141        34970      5348.58      62651.4      23096.6      3789.71
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.03e-05  2.05e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.57e-06  2.05e-05         1
         *Z       ---       ---  8.35e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.04848e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1      0.99998  2.04501e-05  1.72681e-05  2.32662e-06  9.67602e-08  3.61874e-07  1.48692e-08  3.80754e-07  1.18372e-09  2.73057e-15

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.3996, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 1800 K
            Well    Collision, 1/sec
              W1         2.16626e+09
      global relaxation matrix dimension = 579
      setting global matrices ... done, cpu time[sec] = 0.687123, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.34751, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            15243.9      16024.9      23427.3      23313.4      3565.72      41767.6      15397.7      2526.47
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.53e-05   1.8e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.41e-06   1.8e-05        -1
         *Z       ---       ---  8.35e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.80241e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999982  1.79936e-05  1.52999e-05  1.91989e-06  8.47909e-08  2.99785e-07  1.27718e-08  3.75231e-07  1.19211e-09  2.73064e-15

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.4012, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 1800 K
            Well    Collision, 1/sec
              W1         2.88835e+09
      global relaxation matrix dimension = 579
      setting global matrices ... done, cpu time[sec] = 0.688031, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.34691, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            11432.9      12018.7      17570.5        17485      2674.29      31325.7      11548.3      1894.85
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.18e-05  1.64e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.3e-06  1.64e-05         1
         *Z       ---       ---  8.35e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.63542e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999984  1.63265e-05  1.39387e-05   1.6672e-06  7.69411e-08   2.6184e-07  1.14399e-08  3.69187e-07  1.19963e-09   2.7307e-15

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.4006, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 1800 K
            Well    Collision, 1/sec
              W1         3.61043e+09
      global relaxation matrix dimension = 579
      setting global matrices ... done, cpu time[sec] = 0.688766, elapsed time[sec] = 1
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.34761, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            9146.34      9614.96      14056.4        13988      2139.43      25060.6      9238.63      1515.88
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.91e-05  1.51e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.22e-06  1.51e-05        -1
         *Z       ---       ---  8.35e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.51081e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999985  1.50825e-05  1.29108e-05   1.4902e-06  7.11964e-08  2.35436e-07  1.04866e-08  3.63199e-07  1.20644e-09  2.73077e-15

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.4111, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 1800 K
            Well    Collision, 1/sec
              W1         4.33252e+09
      global relaxation matrix dimension = 579
      setting global matrices ... done, cpu time[sec] = 0.688087, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.34602, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            7621.95      8012.47      11713.7      11656.7      1782.86      20883.8      7698.86      1263.24
      eigenvector populations normalized:
          L        *R        *P        W1
          0   3.7e-05  1.41e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.15e-06  1.41e-05        -1
         *Z       ---       ---  8.35e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.41243e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999986  1.41004e-05  1.20924e-05  1.35715e-06  6.67166e-08  2.15634e-07  9.75536e-09  3.57439e-07  1.21265e-09  2.73084e-15

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.4012, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 1800 K
            Well    Collision, 1/sec
              W1         5.05461e+09
      global relaxation matrix dimension = 579
      setting global matrices ... done, cpu time[sec] = 0.689874, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.34861, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             6533.1      6867.83      10040.3      9991.44      1528.17      17900.4      6599.02      1082.77
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.53e-05  1.33e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.1e-06  1.33e-05        -1
         *Z       ---       ---  8.35e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.33178e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999987  1.32952e-05  1.14174e-05  1.25233e-06  6.30745e-08  2.00038e-07  9.16869e-09  3.51955e-07  1.21834e-09  2.73091e-15

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.4074, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 1800 K
            Well    Collision, 1/sec
              W1         5.77669e+09
      global relaxation matrix dimension = 579
      setting global matrices ... done, cpu time[sec] = 0.689159, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.34443, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            5716.46      6009.35      8785.24      8742.51      1337.15      15662.8      5774.15      947.427
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.38e-05  1.26e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.05e-06  1.26e-05         1
         *Z       ---       ---  8.35e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.26386e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999987  1.26172e-05  1.08462e-05  1.16695e-06  6.00251e-08  1.87323e-07  8.68277e-09  3.46751e-07  1.22357e-09  2.73098e-15

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.4032, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1900 K
      Energy reference = 148834 1/cm
      Energy step      = 317 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -63.6 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.014268
         W1 Well: collisional kernel bandwidth = 46
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.584573
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.445565
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.432084
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 2.79061
         W1 Well: minimal relaxation eigenvalue = 0.0295452
         W1 Well: maximal relaxation eigenvalue = 8.3511
         W1 Well:       grid size = 570
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31856 1/cm
         B1 Barrier:        grid size = 470
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -155 1/cm
         B2 Barrier:        grid size = 469
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 161 1/cm
         B3 Barrier:        grid size = 485
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4911 1/cm
         B4 Barrier:        grid size = 489
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6179 1/cm
         B5 Barrier: nonpositive number of states at -23297 1/cm => truncating
         B5 Barrier:        grid size = 543
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23297 1/cm
         B6 Barrier:        grid size = 465
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1429 1/cm
         B7 Barrier:        grid size = 455
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4598 1/cm
         B8 Barrier:        grid size = 417
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16645 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 4.60879, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31856 -23297 4.24e+05 9.41e+17
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -155    1e+21
         B2    162 1.11e+21
         B3  -4911 1.79e+21
         B4  -6179 1.77e+21
         B5 -23297 2.73e+20
         B6   1430 2.85e+21
         B7   4599 1.08e+21
         B8  16646 1.93e+20
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  1.13e-13  2.12e-13  4.41e-14  1.45e-14   3.8e-20  4.02e-12  1.51e-10     2e-05
          R  8.83e+12         1      1.87      0.39     0.128  3.35e-07      35.5  1.33e+03  1.76e+08
         P1  4.72e+12     0.534         1     0.208    0.0687  1.79e-07        19       713  9.43e+07
         P2  2.27e+13      2.57       4.8         1      0.33   8.6e-07        91  3.42e+03  4.52e+08
         P3  6.88e+13      7.79      14.6      3.03         1  2.61e-06       276  1.04e+04  1.37e+09
         P4  2.63e+19  2.98e+06  5.58e+06  1.16e+06  3.83e+05         1  1.06e+08  3.98e+09  5.26e+14
         P5  2.49e+11    0.0282    0.0527     0.011   0.00362  9.45e-09         1      37.6  4.97e+06
         P6  6.62e+09  0.000749    0.0014  0.000292  9.62e-05  2.51e-10    0.0266         1  1.32e+05
         P7  5.01e+04  5.67e-09  1.06e-08  2.21e-09  7.28e-10   1.9e-15  2.01e-07  7.57e-06         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  1.64e-16  3.06e-16  6.38e-17   2.1e-17  5.49e-23  5.81e-15  2.19e-13  2.89e-08
          R   6.1e+15         1      1.87      0.39     0.128  3.35e-07      35.5  1.33e+03  1.76e+08
         P1  3.26e+15     0.534         1     0.208    0.0687  1.79e-07        19       713  9.43e+07
         P2  1.57e+16      2.57       4.8         1      0.33   8.6e-07        91  3.42e+03  4.52e+08
         P3  4.75e+16      7.79      14.6      3.03         1  2.61e-06       276  1.04e+04  1.37e+09
         P4  1.82e+22  2.98e+06  5.58e+06  1.16e+06  3.83e+05         1  1.06e+08  3.98e+09  5.26e+14
         P5  1.72e+14    0.0282    0.0527     0.011   0.00362  9.45e-09         1      37.6  4.97e+06
         P6  4.57e+12  0.000749    0.0014  0.000292  9.62e-05  2.51e-10    0.0266         1  1.32e+05
         P7  3.46e+07  5.67e-09  1.06e-08  2.21e-09  7.28e-10   1.9e-15  2.01e-07  7.57e-06         1
   MasterEquation::set:  done, cpu time[sec] = 4.62356, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 1900 K
            Well    Collision, 1/sec
              W1          1.3944e+08
      global relaxation matrix dimension = 570
      setting global matrices ... done, cpu time[sec] = 0.662348, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.27626, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             228766       254608       408617       405176      62349.9       650375       245940        44161
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000222  0.000107         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.03e-06  0.000107         1
         *Z       ---       ---  3.55e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.000106786
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999893  0.000106598  8.42607e-05  1.73143e-05  5.77338e-07  3.10114e-06  1.03366e-07  1.23656e-06  4.68391e-09  1.89549e-14

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.24466, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 1900 K
            Well    Collision, 1/sec
              W1         4.18319e+08
      global relaxation matrix dimension = 570
      setting global matrices ... done, cpu time[sec] = 0.658854, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.186, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            76255.2      84869.3       136206       135059      20783.3       216792      81979.9      14720.3
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000186  8.63e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.85e-06  8.63e-05        -1
         *Z       ---       ---  3.55e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 8.63181e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999914   8.6166e-05  7.07569e-05  1.17489e-05  4.27091e-07  1.88613e-06  7.00842e-08  1.27217e-06  4.70317e-09   1.8955e-14

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.1486, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 1900 K
            Well    Collision, 1/sec
              W1         6.97198e+08
      global relaxation matrix dimension = 570
      setting global matrices ... done, cpu time[sec] = 0.675099, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.16735, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            45753.1      50921.6      81723.4      81035.2        12470       130075      49187.9      8832.19
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000169  7.67e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.29e-06  7.67e-05         1
         *Z       ---       ---  3.55e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 7.67134e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999923  7.65781e-05  6.37603e-05  9.59285e-06  3.70663e-07  1.50862e-06  5.88517e-08  1.28212e-06  4.71988e-09  1.89552e-14

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.1555, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 1900 K
            Well    Collision, 1/sec
              W1         9.76077e+08
      global relaxation matrix dimension = 570
      setting global matrices ... done, cpu time[sec] = 0.663765, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.17153, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            32680.8      36372.5      58373.9      57882.3      8907.13      92910.7      35134.2      6308.71
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000157  7.05e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.92e-06  7.05e-05         1
         *Z       ---       ---  3.55e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 7.0464e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1      0.99993  7.03398e-05  5.90218e-05  8.33664e-06  3.36935e-07  1.30338e-06   5.2463e-08  1.28381e-06  4.73522e-09  1.89554e-14

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.1494, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 1900 K
            Well    Collision, 1/sec
              W1         1.25496e+09
      global relaxation matrix dimension = 570
      setting global matrices ... done, cpu time[sec] = 0.658973, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.16764, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            25418.4      28289.8      45401.9      45019.6      6927.76      72263.9      27326.6      4906.77
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000149  6.59e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.65e-06  6.59e-05         1
         *Z       ---       ---  3.55e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 6.58684e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999934  6.57523e-05  5.54541e-05  7.48185e-06  3.13299e-07  1.16845e-06  4.81274e-08  1.28173e-06  4.74957e-09  1.89556e-14

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.144, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 1900 K
            Well    Collision, 1/sec
              W1          1.3944e+09
      global relaxation matrix dimension = 570
      setting global matrices ... done, cpu time[sec] = 0.664895, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.17085, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            22876.6      25460.8      40861.7      40517.6      6234.99      65037.5        24594       4416.1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000145   6.4e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.54e-06   6.4e-05        -1
         *Z       ---       ---  3.55e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 6.39651e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999936  6.38524e-05  5.39574e-05  7.14416e-06  3.03757e-07  1.11603e-06  4.64095e-08  1.27989e-06  4.75645e-09  1.89557e-14

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.1371, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 1900 K
            Well    Collision, 1/sec
              W1         2.09159e+09
      global relaxation matrix dimension = 570
      setting global matrices ... done, cpu time[sec] = 0.658425, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.1639, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
              15251      16973.9      27241.1      27011.7      4156.66      43358.3        16396      2944.06
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000132  5.68e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   4.1e-06  5.68e-05         1
         *Z       ---       ---  3.55e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 5.67987e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999943  5.66986e-05  4.82296e-05  5.95386e-06  2.68917e-07  9.34416e-07  4.02917e-08  1.26672e-06  4.78835e-09  1.89561e-14

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.1252, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 1900 K
            Well    Collision, 1/sec
              W1         2.78879e+09
      global relaxation matrix dimension = 570
      setting global matrices ... done, cpu time[sec] = 0.662623, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.17034, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            11438.3      12730.4      20430.9      20258.8      3117.49      32518.7        12297      2208.05
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000122  5.19e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   3.8e-06  5.19e-05         1
         *Z       ---       ---  3.55e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 5.1894e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999948  5.18026e-05  4.42329e-05    5.209e-06  2.45891e-07  8.22649e-07  3.63784e-08  1.25092e-06  4.81695e-09  1.89566e-14

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.1353, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 1900 K
            Well    Collision, 1/sec
              W1         3.48599e+09
      global relaxation matrix dimension = 570
      setting global matrices ... done, cpu time[sec] = 0.657833, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.16096, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            9150.63      10184.3      16344.7        16207         2494        26015      9837.59      1766.44
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000115  4.82e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.57e-06  4.82e-05        -1
         *Z       ---       ---  3.55e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 4.82098e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999952  4.81248e-05  4.11941e-05   4.6843e-06  2.28935e-07  7.44439e-07  3.35608e-08  1.23463e-06  4.84289e-09   1.8957e-14

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.1319, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 1900 K
            Well    Collision, 1/sec
              W1         4.18319e+09
      global relaxation matrix dimension = 570
      setting global matrices ... done, cpu time[sec] = 0.665464, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.17338, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            7625.52      8486.93      13620.6      13505.9      2078.33      21679.2      8197.99      1472.03
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000109  4.53e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.39e-06  4.53e-05        -1
         *Z       ---       ---  3.55e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 4.52851e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999955  4.52053e-05  3.87613e-05  4.28798e-06  2.15644e-07  6.85505e-07  3.13891e-08   1.2186e-06  4.86662e-09  1.89575e-14

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.1547, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 1900 K
            Well    Collision, 1/sec
              W1         4.88039e+09
      global relaxation matrix dimension = 570
      setting global matrices ... done, cpu time[sec] = 0.664716, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.16941, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            6536.16      7274.51      11674.8      11576.5      1781.43      18582.1      7026.85      1261.74
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000105  4.29e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.24e-06  4.29e-05        -1
         *Z       ---       ---  3.55e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 4.28765e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999957  4.28009e-05  3.67451e-05  3.97448e-06   2.0479e-07  6.38898e-07  2.96391e-08  1.20308e-06  4.88842e-09  1.89579e-14

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.1456, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 1900 K
            Well    Collision, 1/sec
              W1         5.57758e+09
      global relaxation matrix dimension = 570
      setting global matrices ... done, cpu time[sec] = 0.664919, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.14218, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            5719.14      6365.19      10215.4      10129.4      1558.75      16259.4      6148.49      1104.02
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000101  4.08e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.11e-06  4.08e-05        -1
         *Z       ---       ---  3.55e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 4.08397e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999959  4.07678e-05  3.50319e-05   3.7182e-06  1.95666e-07  6.00761e-07  2.81841e-08  1.18817e-06  4.90854e-09  1.89584e-14

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.1212, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 2000 K
      Energy reference = 155784 1/cm
      Energy step      = 333 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -61.4 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.013692
         W1 Well: collisional kernel bandwidth = 46
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.582151
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.43592
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.339459
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 2.67163
         W1 Well: minimal relaxation eigenvalue = 0.0290006
         W1 Well: maximal relaxation eigenvalue = 2.46323
         W1 Well:       grid size = 563
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31694 1/cm
         B1 Barrier:        grid size = 468
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -59 1/cm
         B2 Barrier:        grid size = 468
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = -59 1/cm
         B3 Barrier:        grid size = 482
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4721 1/cm
         B4 Barrier:        grid size = 487
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6386 1/cm
         B5 Barrier: nonpositive number of states at -23703 1/cm => truncating
         B5 Barrier:        grid size = 539
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23702 1/cm
         B6 Barrier:        grid size = 464
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1272 1/cm
         B7 Barrier:        grid size = 454
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4602 1/cm
         B8 Barrier:        grid size = 418
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16590 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 4.39093, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31694 -23702 3.15e+05 1.44e+18
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -59 1.48e+21
         B2    -59 1.74e+21
         B3  -4721 3.06e+21
         B4  -6386 3.02e+21
         B5 -23702 4.68e+20
         B6   1273 4.36e+21
         B7   4603 1.69e+21
         B8  16591  3.3e+20
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1   3.3e-14  6.26e-14  1.52e-14  5.34e-15  2.79e-20  1.06e-12  3.55e-11   3.1e-06
          R  3.03e+13         1       1.9      0.46     0.162  8.45e-07      32.1  1.08e+03  9.38e+07
         P1   1.6e+13     0.527         1     0.242    0.0853  4.45e-07      16.9       568  4.95e+07
         P2  6.59e+13      2.18      4.13         1     0.352  1.84e-06      69.8  2.34e+03  2.04e+08
         P3  1.87e+14      6.19      11.7      2.84         1  5.22e-06       199  6.66e+03   5.8e+08
         P4  3.59e+19  1.18e+06  2.24e+06  5.44e+05  1.91e+05         1   3.8e+07  1.27e+09  1.11e+14
         P5  9.44e+11    0.0312    0.0591    0.0143   0.00504  2.63e-08         1      33.5  2.92e+06
         P6  2.82e+10  0.000929   0.00176  0.000427   0.00015  7.85e-10    0.0298         1  8.71e+04
         P7  3.23e+05  1.07e-08  2.02e-08   4.9e-09  1.72e-09  9.01e-15  3.42e-07  1.15e-05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  5.02e-17  9.51e-17  2.31e-17  8.11e-18  4.24e-23  1.61e-15   5.4e-14   4.7e-09
          R  1.99e+16         1       1.9      0.46     0.162  8.45e-07      32.1  1.08e+03  9.38e+07
         P1  1.05e+16     0.527         1     0.242    0.0853  4.45e-07      16.9       568  4.95e+07
         P2  4.34e+16      2.18      4.13         1     0.352  1.84e-06      69.8  2.34e+03  2.04e+08
         P3  1.23e+17      6.19      11.7      2.84         1  5.22e-06       199  6.66e+03   5.8e+08
         P4  2.36e+22  1.18e+06  2.24e+06  5.44e+05  1.91e+05         1   3.8e+07  1.27e+09  1.11e+14
         P5  6.21e+14    0.0312    0.0591    0.0143   0.00504  2.63e-08         1      33.5  2.92e+06
         P6  1.85e+13  0.000929   0.00176  0.000427   0.00015  7.85e-10    0.0298         1  8.71e+04
         P7  2.13e+08  1.07e-08  2.02e-08   4.9e-09  1.72e-09  9.01e-15  3.42e-07  1.15e-05         1
   MasterEquation::set:  done, cpu time[sec] = 4.40617, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 2000 K
            Well    Collision, 1/sec
              W1         1.34876e+08
      global relaxation matrix dimension = 563
      setting global matrices ... done, cpu time[sec] = 0.649834, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.28981, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             227819       267737       470425       464935      71947.1       670769       259759      50799.6
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000534  0.000281         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.72e-05  0.000281         1
         *Z       ---       ---  1.66e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.000280817
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1      0.99972  0.000280402  0.000222229  4.47882e-05  1.51588e-06  7.99269e-06  2.69196e-07  3.59048e-06  1.61688e-08  1.07364e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.1703, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 2000 K
            Well    Collision, 1/sec
              W1         4.04628e+08
      global relaxation matrix dimension = 563
      setting global matrices ... done, cpu time[sec] = 0.648118, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.14942, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            75939.8      89245.5       156808       154978      23982.4       223590      86586.2      16933.2
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000454  0.000231         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.45e-05  0.000231        -1
         *Z       ---       ---  1.66e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00023051
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1      0.99977  0.000230169  0.000189278   3.0887e-05   1.1436e-06  4.95885e-06   1.8637e-07  3.69949e-06  1.62334e-08  1.07365e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.0187, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 2000 K
            Well    Collision, 1/sec
              W1          6.7438e+08
      global relaxation matrix dimension = 563
      setting global matrices ... done, cpu time[sec] = 0.64694, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.14389, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            45563.9      53547.3      94084.9        92987      14389.4       134154      51951.7      10159.9
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000415  0.000207         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.32e-05  0.000207         1
         *Z       ---       ---  1.66e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.000206589
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999794  0.000206283  0.000171918   2.5444e-05  1.00253e-06  4.00791e-06  1.58178e-07  3.73562e-06  1.62887e-08  1.07366e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.0128, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 2000 K
            Well    Collision, 1/sec
              W1         9.44132e+08
      global relaxation matrix dimension = 563
      setting global matrices ... done, cpu time[sec] = 0.648232, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.14263, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            32545.6      38248.1      67203.5      66419.3      10278.2      95824.1      37108.4      7257.08
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000389  0.000191         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.23e-05  0.000191         1
         *Z       ---       ---  1.66e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.000190903
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999809  0.000190621  0.000160055  2.22541e-05  9.17709e-07  3.48804e-06  1.42056e-07  3.74751e-06  1.63393e-08  1.07367e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.0128, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 2000 K
            Well    Collision, 1/sec
              W1         1.21388e+09
      global relaxation matrix dimension = 563
      setting global matrices ... done, cpu time[sec] = 0.646346, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.14785, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            25313.3      29748.5      52269.4      51659.4      7994.12      74529.9      28862.1       5644.4
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00037  0.000179         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.17e-05  0.000179        -1
         *Z       ---       ---  1.66e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.000179303
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999821  0.000179038  0.000151065  2.00739e-05  8.57991e-07  3.14483e-06  1.31067e-07    3.748e-06  1.63864e-08  1.07368e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.0251, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 2000 K
            Well    Collision, 1/sec
              W1         1.34876e+09
      global relaxation matrix dimension = 563
      setting global matrices ... done, cpu time[sec] = 0.650457, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.14316, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            22781.9      26773.7      47042.5      46493.5      7194.71      67076.9      25975.9      5079.96
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000362  0.000174         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.14e-05  0.000174        -1
         *Z       ---       ---  1.66e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.000174481
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999826  0.000174223  0.000147279  1.92101e-05  8.33809e-07  3.01111e-06  1.26701e-07  3.74571e-06   1.6409e-08  1.07368e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.0305, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 2000 K
            Well    Collision, 1/sec
              W1         2.02314e+09
      global relaxation matrix dimension = 563
      setting global matrices ... done, cpu time[sec] = 0.654012, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.16235, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
              15188      17849.1      31361.6      30995.7      4796.47      44717.9      17317.2      3386.64
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000331  0.000156         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.04e-05  0.000156         1
         *Z       ---       ---  1.66e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.000156227
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999844  0.000155996  0.000132704  1.61529e-05  7.45101e-07  2.54593e-06  1.11084e-07  3.72113e-06  1.65135e-08  1.07371e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.0463, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 2000 K
            Well    Collision, 1/sec
              W1         2.69752e+09
      global relaxation matrix dimension = 563
      setting global matrices ... done, cpu time[sec] = 0.661785, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.16955, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
              11391      13386.8      23521.2      23246.7      3597.36      33538.4      12987.9      2539.98
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000309  0.000144         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   9.7e-06  0.000144         1
         *Z       ---       ---  1.66e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.000143638
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999857  0.000143425  0.000122449  1.42278e-05  6.86064e-07  2.25784e-06  1.01029e-07  3.68663e-06  1.66072e-08  1.07373e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.0722, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 2000 K
            Well    Collision, 1/sec
              W1          3.3719e+09
      global relaxation matrix dimension = 563
      setting global matrices ... done, cpu time[sec] = 0.650706, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.18102, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            9112.77      10709.5        18817      18597.4      2877.88      26830.8      10390.3      2031.98
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000292  0.000134         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.16e-06  0.000134         1
         *Z       ---       ---  1.66e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.000134124
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999866  0.000133925  0.000114603  1.28651e-05   6.4235e-07  2.05523e-06  9.37516e-08  3.64905e-06  1.66924e-08  1.07376e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.0615, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 2000 K
            Well    Collision, 1/sec
              W1         4.04628e+09
      global relaxation matrix dimension = 563
      setting global matrices ... done, cpu time[sec] = 0.647881, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.17998, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            7593.98      8924.55      15680.8      15497.8      2398.24        22359      8658.62      1693.32
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000279  0.000127         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.72e-06  0.000127        -1
         *Z       ---       ---  1.66e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.000126534
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999874  0.000126347  0.000108289  1.18315e-05  6.07922e-07  1.90191e-06  8.81173e-08  3.61091e-06  1.67704e-08  1.07378e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.0592, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 2000 K
            Well    Collision, 1/sec
              W1         4.72066e+09
      global relaxation matrix dimension = 563
      setting global matrices ... done, cpu time[sec] = 0.655088, elapsed time[sec] = 1
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.14529, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            6509.12      7649.62      13440.7      13283.9      2055.63      19164.8      7421.68      1451.42
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000268   0.00012         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.36e-06   0.00012         1
         *Z       ---       ---  1.66e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.000120256
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1      0.99988  0.000120078  0.000103034   1.1011e-05  5.79691e-07   1.7802e-06  8.35596e-08  3.57327e-06  1.68424e-08   1.0738e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.0212, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 2000 K
            Well    Collision, 1/sec
              W1         5.39504e+09
      global relaxation matrix dimension = 563
      setting global matrices ... done, cpu time[sec] = 0.647732, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.14477, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            5695.48      6693.42      11760.6      11623.4      1798.68      16769.2      6493.97      1269.99
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000258  0.000115         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.05e-06  0.000115        -1
         *Z       ---       ---  1.66e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.000114928
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999885  0.000114758  9.85504e-05  1.03381e-05  5.55872e-07  1.68029e-06  7.97569e-08  3.53659e-06  1.69091e-08  1.07383e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.0124, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2100 K
      Energy reference = 162735 1/cm
      Energy step      = 350 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -59.2 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.0131
         W1 Well: collisional kernel bandwidth = 45
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.563488
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.424076
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.34101
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 2.61559
         W1 Well: minimal relaxation eigenvalue = 0.0284665
         W1 Well: maximal relaxation eigenvalue = 5.20749
         W1 Well:       grid size = 556
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31865 1/cm
         B1 Barrier:        grid size = 465
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -14 1/cm
         B2 Barrier:        grid size = 465
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = -14 1/cm
         B3 Barrier:        grid size = 479
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4914 1/cm
         B4 Barrier:        grid size = 483
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6315 1/cm
         B5 Barrier: nonpositive number of states at -23115 1/cm => truncating
         B5 Barrier:        grid size = 531
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23114 1/cm
         B6 Barrier:        grid size = 461
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1384 1/cm
         B7 Barrier:        grid size = 452
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4535 1/cm
         B8 Barrier:        grid size = 418
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16435 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 4.30438, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31865 -23114 4.84e+05 2.19e+18
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -14 2.15e+21
         B2    -14 2.67e+21
         B3  -4914 5.11e+21
         B4  -6315 5.04e+21
         B5 -23114 7.84e+20
         B6   1385 6.55e+21
         B7   4536  2.6e+21
         B8  16436  5.5e+20
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  1.08e-14  2.08e-14  5.76e-15  2.15e-15   2.1e-20  3.16e-13  9.54e-12  5.71e-07
          R  9.25e+13         1      1.92     0.533     0.199  1.95e-06      29.2       882  5.28e+07
         P1  4.82e+13     0.521         1     0.278     0.104  1.01e-06      15.2       459  2.75e+07
         P2  1.74e+14      1.88       3.6         1     0.373  3.65e-06      54.8  1.65e+03  9.91e+07
         P3  4.65e+14      5.03      9.66      2.68         1  9.79e-06       147  4.43e+03  2.65e+08
         P4  4.75e+19  5.13e+05  9.87e+05  2.74e+05  1.02e+05         1   1.5e+07  4.53e+08  2.71e+13
         P5  3.16e+12    0.0342    0.0657    0.0182   0.00681  6.66e-08         1      30.2  1.81e+06
         P6  1.05e+11   0.00113   0.00218  0.000604  0.000225  2.21e-09    0.0331         1  5.99e+04
         P7  1.75e+06  1.89e-08  3.64e-08  1.01e-08  3.77e-09  3.69e-14  5.53e-07  1.67e-05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  1.73e-17  3.32e-17   9.2e-18  3.43e-18  3.36e-23  5.05e-16  1.52e-14  9.12e-10
          R  5.79e+16         1      1.92     0.533     0.199  1.95e-06      29.2       882  5.28e+07
         P1  3.01e+16     0.521         1     0.278     0.104  1.01e-06      15.2       459  2.75e+07
         P2  1.09e+17      1.88       3.6         1     0.373  3.65e-06      54.8  1.65e+03  9.91e+07
         P3  2.91e+17      5.03      9.66      2.68         1  9.79e-06       147  4.43e+03  2.65e+08
         P4  2.97e+22  5.13e+05  9.87e+05  2.74e+05  1.02e+05         1   1.5e+07  4.53e+08  2.71e+13
         P5  1.98e+15    0.0342    0.0657    0.0182   0.00681  6.66e-08         1      30.2  1.81e+06
         P6  6.56e+13   0.00113   0.00218  0.000604  0.000225  2.21e-09    0.0331         1  5.99e+04
         P7   1.1e+09  1.89e-08  3.64e-08  1.01e-08  3.77e-09  3.69e-14  5.53e-07  1.67e-05         1
   MasterEquation::set:  done, cpu time[sec] = 4.3183, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 2100 K
            Well    Collision, 1/sec
              W1         1.30674e+08
      global relaxation matrix dimension = 556
      setting global matrices ... done, cpu time[sec] = 0.628413, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.28554, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             225992       279773       536786       528923      82271.6       687932       272422      57776.7
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00114  0.000659         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.74e-05  0.000659        -1
         *Z       ---       ---  8.49e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.000659429
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999342  0.000658301  0.000523402  0.000102962  3.55896e-06  1.84158e-05  6.26912e-07  9.28637e-06  4.89978e-08  5.11001e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.15419, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 2100 K
            Well    Collision, 1/sec
              W1         3.92021e+08
      global relaxation matrix dimension = 556
      setting global matrices ... done, cpu time[sec] = 0.62736, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.97618, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            75330.5      93257.7       178929       176308      27423.9       229311      90807.2      19258.9
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000982  0.000549         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   3.2e-05  0.000549         1
         *Z       ---       ---  8.49e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.000549228
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999452  0.000548289  0.000451586   7.2263e-05  2.73391e-06  1.16389e-05  4.42527e-07  9.57479e-06  4.91881e-08  5.11005e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.85095, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 2100 K
            Well    Collision, 1/sec
              W1         6.53369e+08
      global relaxation matrix dimension = 556
      setting global matrices ... done, cpu time[sec] = 0.632283, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.98799, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            45198.3      55954.6       107357       105785      16454.3       137586      54484.3      11555.3
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000905  0.000496         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.93e-05  0.000496        -1
         *Z       ---       ---  8.49e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.000496118
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999505   0.00049527   0.00041317  6.00709e-05  2.41912e-06  9.49954e-06  3.79356e-07  9.68165e-06  4.93493e-08  5.11009e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.86787, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 2100 K
            Well    Collision, 1/sec
              W1         9.14716e+08
      global relaxation matrix dimension = 556
      setting global matrices ... done, cpu time[sec] = 0.62831, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.98616, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            32284.5      39967.6      76683.8      75560.5      11753.1      98275.9      38917.4      8253.82
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000853  0.000461         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.76e-05  0.000461         1
         *Z       ---       ---  8.49e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.000461029
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1      0.99954   0.00046024  0.000386692  5.28756e-05  2.22888e-06   8.3243e-06  3.43056e-07  9.72663e-06  4.94957e-08  5.11014e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.85308, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 2100 K
            Well    Collision, 1/sec
              W1         1.17606e+09
      global relaxation matrix dimension = 556
      setting global matrices ... done, cpu time[sec] = 0.624449, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.98666, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            25110.2      31085.9      59642.9      58769.3      9141.29      76436.8      30269.1      6419.64
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000814  0.000435         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.62e-05  0.000435         1
         *Z       ---       ---  8.49e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.000434933
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999566  0.000434189  0.000366506   4.7934e-05  2.09438e-06  7.54547e-06  3.18221e-07  9.74169e-06  4.96319e-08  5.11018e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.86115, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 2100 K
            Well    Collision, 1/sec
              W1         1.30674e+09
      global relaxation matrix dimension = 556
      setting global matrices ... done, cpu time[sec] = 0.632725, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.99112, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            22599.2      27977.3      53678.6      52892.3      8227.16      68793.2      27242.2      5777.67
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000798  0.000424         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.57e-05  0.000424         1
         *Z       ---       ---  8.49e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.000424048
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999577  0.000423323  0.000357971  4.59703e-05  2.03977e-06  7.24126e-06  3.08327e-07  9.74241e-06   4.9697e-08   5.1102e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.87457, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 2100 K
            Well    Collision, 1/sec
              W1         1.96011e+09
      global relaxation matrix dimension = 556
      setting global matrices ... done, cpu time[sec] = 0.631068, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.94649, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            15066.1      18651.5      35785.8      35261.6      5484.77      45862.1      18161.4      3851.78
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000735  0.000383         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.35e-05  0.000383        -1
         *Z       ---       ---  8.49e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.000382629
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999618  0.000381974  0.000324935  3.89894e-05  1.83858e-06  6.17895e-06  2.72803e-07  9.70915e-06  4.99983e-08  5.11031e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.82549, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 2100 K
            Well    Collision, 1/sec
              W1         2.61347e+09
      global relaxation matrix dimension = 556
      setting global matrices ... done, cpu time[sec] = 0.627017, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.98895, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            11299.6      13988.7      26839.3      26446.2      4113.58      34396.6      13621.1      2888.84
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000691  0.000354         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   2.2e-05  0.000354         1
         *Z       ---       ---  8.49e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.000353852
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999647  0.000353246  0.000301513   3.4566e-05  1.70384e-06  5.51728e-06  2.49795e-07  9.64594e-06  5.02684e-08  5.11041e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.86367, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 2100 K
            Well    Collision, 1/sec
              W1         3.26684e+09
      global relaxation matrix dimension = 556
      setting global matrices ... done, cpu time[sec] = 0.631764, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.9757, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            9039.66      11190.9      21471.5      21156.9      3290.86      27517.3      10896.9      2311.07
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000657  0.000332         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.09e-05  0.000332         1
         *Z       ---       ---  8.49e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00033198
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999669  0.000331413  0.000283485  3.14193e-05  1.60355e-06  5.04979e-06  2.33063e-07  9.57133e-06  5.05143e-08  5.11052e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.84418, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 2100 K
            Well    Collision, 1/sec
              W1         3.92021e+09
      global relaxation matrix dimension = 556
      setting global matrices ... done, cpu time[sec] = 0.625841, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.9852, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            7533.05      9325.77      17892.9      17630.8      2742.39      22931.1      9080.72      1925.89
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000629  0.000314         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0     2e-05  0.000314        -1
         *Z       ---       ---  8.49e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00031445
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999686  0.000313912  0.000268907   2.9023e-05  1.52423e-06  4.69464e-06  2.20057e-07  9.49256e-06  5.07402e-08  5.11062e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.84474, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 2100 K
            Well    Collision, 1/sec
              W1         4.57358e+09
      global relaxation matrix dimension = 556
      setting global matrices ... done, cpu time[sec] = 0.627024, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.99197, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             6456.9      7993.52      15336.8      15112.1      2350.62      19655.2      7783.48      1650.76
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000606    0.0003         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.92e-05    0.0003         1
         *Z       ---       ---  8.49e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.000299893
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999701   0.00029938  0.000256722  2.71141e-05  1.45895e-06  4.41178e-06  2.09498e-07  9.41289e-06  5.09491e-08  5.11073e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.865, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 2100 K
            Well    Collision, 1/sec
              W1         5.22695e+09
      global relaxation matrix dimension = 556
      setting global matrices ... done, cpu time[sec] = 0.631562, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.98935, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            5649.79      6994.33      13419.7      13223.1      2056.79      17198.3      6810.54      1444.42
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000586  0.000287         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.85e-05  0.000287         1
         *Z       ---       ---  8.49e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.000287494
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999713  0.000287002   0.00024629  2.55437e-05  1.40368e-06  4.17885e-06  2.00661e-07   9.3339e-06  5.11431e-08  5.11084e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.85815, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2200 K
      Energy reference = 169685 1/cm
      Energy step      = 367 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -57 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.013802
         W1 Well: collisional kernel bandwidth = 45
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.552617
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.412903
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.398747
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 2.50298
         W1 Well: minimal relaxation eigenvalue = 0.0279867
         W1 Well: maximal relaxation eigenvalue = 3.34568
         W1 Well:       grid size = 549
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31797 1/cm
         B1 Barrier:        grid size = 463
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -236 1/cm
         B2 Barrier:        grid size = 462
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 130 1/cm
         B3 Barrier:        grid size = 475
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4640 1/cm
         B4 Barrier:        grid size = 480
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6474 1/cm
         B5 Barrier: nonpositive number of states at -23357 1/cm => truncating
         B5 Barrier:        grid size = 526
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23357 1/cm
         B6 Barrier:        grid size = 459
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1231 1/cm
         B7 Barrier:        grid size = 450
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4535 1/cm
         B8 Barrier:        grid size = 417
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16645 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 4.21957, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31797 -23357 4.06e+05 3.26e+18
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -236 3.08e+21
         B2    131 4.01e+21
         B3  -4640 8.38e+21
         B4  -6474 8.23e+21
         B5 -23357 1.29e+21
         B6   1232 9.68e+21
         B7   4536 3.91e+21
         B8  16646 8.97e+20
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  3.92e-15  7.64e-15  2.39e-15  9.43e-16  1.63e-20  1.05e-13  2.88e-12  1.23e-07
          R  2.55e+14         1      1.95      0.61      0.24  4.16e-06      26.8       735  3.13e+07
         P1  1.31e+14     0.514         1     0.313     0.123  2.14e-06      13.8       377  1.61e+07
         P2  4.18e+14      1.64      3.19         1     0.394  6.82e-06      43.9   1.2e+03  5.13e+07
         P3  1.06e+15      4.16       8.1      2.54         1  1.73e-05       112  3.06e+03   1.3e+08
         P4  6.12e+19   2.4e+05  4.68e+05  1.47e+05  5.77e+04         1  6.44e+06  1.77e+08  7.52e+12
         P5  9.51e+12    0.0373    0.0727    0.0228   0.00897  1.55e-07         1      27.4  1.17e+06
         P6  3.47e+11   0.00136   0.00265   0.00083  0.000327  5.66e-09    0.0365         1  4.26e+04
         P7  8.14e+06   3.2e-08  6.22e-08  1.95e-08  7.68e-09  1.33e-13  8.56e-07  2.35e-05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  6.57e-18  1.28e-17  4.01e-18  1.58e-18  2.73e-23  1.76e-16  4.83e-15  2.06e-10
          R  1.52e+17         1      1.95      0.61      0.24  4.16e-06      26.8       735  3.13e+07
         P1  7.82e+16     0.514         1     0.313     0.123  2.14e-06      13.8       377  1.61e+07
         P2  2.49e+17      1.64      3.19         1     0.394  6.82e-06      43.9   1.2e+03  5.13e+07
         P3  6.33e+17      4.16       8.1      2.54         1  1.73e-05       112  3.06e+03   1.3e+08
         P4  3.66e+22   2.4e+05  4.68e+05  1.47e+05  5.77e+04         1  6.44e+06  1.77e+08  7.52e+12
         P5  5.68e+15    0.0373    0.0727    0.0228   0.00897  1.55e-07         1      27.4  1.17e+06
         P6  2.07e+14   0.00136   0.00265   0.00083  0.000327  5.66e-09    0.0365         1  4.26e+04
         P7  4.86e+09   3.2e-08  6.22e-08  1.95e-08  7.68e-09  1.33e-13  8.56e-07  2.35e-05         1
   MasterEquation::set:  done, cpu time[sec] = 4.23482, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 2200 K
            Well    Collision, 1/sec
              W1         1.26789e+08
      global relaxation matrix dimension = 549
      setting global matrices ... done, cpu time[sec] = 0.611363, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.26436, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             223438       290744       607622       597057      93311.9       702112       283945      65054.4
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00218    0.0014         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.43e-05    0.0014     0.999
         *Z       ---       ---  4.65e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00140455
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.998598   0.00140249   0.00111736   0.00021595   7.5812e-06  3.84632e-05  1.32432e-06  2.16811e-05  1.32794e-07  2.09342e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.14115, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 2200 K
            Well    Collision, 1/sec
              W1         3.80367e+08
      global relaxation matrix dimension = 549
      setting global matrices ... done, cpu time[sec] = 0.611547, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.90361, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            74479.5      96914.5       202541       199019        31104       234037      94648.4      21684.8
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00191   0.00118         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.42e-05   0.00118     0.999
         *Z       ---       ---  4.65e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00118495
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.998817   0.00118321  0.000975561  0.000153515  5.92402e-06  2.47475e-05  9.52371e-07  2.23753e-05  1.33297e-07  2.09344e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.69888, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 2200 K
            Well    Collision, 1/sec
              W1         6.33945e+08
      global relaxation matrix dimension = 549
      setting global matrices ... done, cpu time[sec] = 0.600312, elapsed time[sec] = 1
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.83326, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            44687.7      58148.7       121524       119411      18662.4       140422        56789      13010.9
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00177   0.00108         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.92e-05   0.00108    -0.999
         *Z       ---       ---  4.65e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00107807
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.998924   0.00107649  0.000898597  0.000128603  5.28776e-06  2.03877e-05  8.24147e-07  2.26557e-05  1.33718e-07  2.09345e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.63967, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 2200 K
            Well    Collision, 1/sec
              W1         8.87523e+08
      global relaxation matrix dimension = 549
      setting global matrices ... done, cpu time[sec] = 0.610506, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.90543, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            31919.8      41534.8      86803.2      85293.8      13330.3       100302      40563.6      9293.48
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00168   0.00101         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.59e-05   0.00101     0.999
         *Z       ---       ---  4.65e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.001007
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.998994   0.00100552  0.000845126  0.000113839  4.90152e-06  1.79821e-05  7.50157e-07  2.27919e-05  1.34098e-07  2.09347e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.72903, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 2200 K
            Well    Collision, 1/sec
              W1          1.1411e+09
      global relaxation matrix dimension = 549
      setting global matrices ... done, cpu time[sec] = 0.618144, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.90719, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            24826.5      32304.8      67513.6      66339.7        10368      78012.5      31549.5      7228.26
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00161  0.000954         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.34e-05  0.000954         1
         *Z       ---       ---  4.65e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.000953887
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999048  0.000952489  0.000804124  0.000103664  4.62746e-06  1.63824e-05  6.99363e-07  2.28567e-05  1.34451e-07  2.09349e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.73992, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 2200 K
            Well    Collision, 1/sec
              W1         1.26789e+09
      global relaxation matrix dimension = 549
      setting global matrices ... done, cpu time[sec] = 0.616086, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.91099, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            22343.8      29074.4      60762.2      59705.7      9331.19      70211.2      28394.5      6505.44
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00158  0.000932         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.23e-05  0.000932         1
         *Z       ---       ---  4.65e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.000931664
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1      0.99907  0.000930297  0.000786728  9.96114e-05   4.5159e-06  1.57561e-05  6.79082e-07  2.28725e-05  1.34619e-07   2.0935e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.7314, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 2200 K
            Well    Collision, 1/sec
              W1         1.90183e+09
      global relaxation matrix dimension = 549
      setting global matrices ... done, cpu time[sec] = 0.609622, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.90206, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            14895.9      19382.9      40508.2      39803.8      6220.79      46807.5      18929.7      4336.96
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00147  0.000847         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.83e-05  0.000847        -1
         *Z       ---       ---  4.65e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.000846695
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999155  0.000845454  0.000719034  8.51541e-05  4.10337e-06  1.35616e-05  6.06005e-07  2.28592e-05  1.35398e-07  2.09354e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.73291, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 2200 K
            Well    Collision, 1/sec
              W1         2.53578e+09
      global relaxation matrix dimension = 549
      setting global matrices ... done, cpu time[sec] = 0.615406, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.88231, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            11171.9      14537.2      30381.1      29852.8       4665.6      35105.6      14197.3      3252.72
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00139  0.000787         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.54e-05  0.000787         1
         *Z       ---       ---  4.65e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.000787261
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999214  0.000786107  0.000670687  7.59452e-05  3.82549e-06  1.21875e-05  5.58423e-07   2.2767e-05  1.36096e-07  2.09358e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.71383, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 2200 K
            Well    Collision, 1/sec
              W1         3.16972e+09
      global relaxation matrix dimension = 549
      setting global matrices ... done, cpu time[sec] = 0.616124, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.92378, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            8937.54      11629.7      24304.9      23882.3      3732.48      28084.5      11357.8      2602.18
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00132  0.000742         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.32e-05  0.000742        -1
         *Z       ---       ---  4.65e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.000741852
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999259  0.000740764  0.000633265  6.93668e-05   3.6177e-06  1.12125e-05  5.23668e-07   2.2641e-05  1.36731e-07  2.09362e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.7483, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 2200 K
            Well    Collision, 1/sec
              W1         3.80367e+09
      global relaxation matrix dimension = 549
      setting global matrices ... done, cpu time[sec] = 0.615351, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.89863, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            7447.95      9691.45      20254.1      19901.9       3110.4      23403.7      9464.84      2168.48
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00127  0.000705         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.14e-05  0.000705        -1
         *Z       ---       ---  4.65e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.000705296
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999296  0.000704261  0.000602866  6.43395e-05   3.4527e-06  1.04692e-05  4.96551e-07  2.24997e-05  1.37316e-07  2.09366e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.7251, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 2200 K
            Well    Collision, 1/sec
              W1         4.43761e+09
      global relaxation matrix dimension = 549
      setting global matrices ... done, cpu time[sec] = 0.61029, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.88423, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            6383.96      8306.96      17360.6      17058.8      2666.05      20060.3      8112.72       1858.7
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00123  0.000675         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.99e-05  0.000675         1
         *Z       ---       ---  4.65e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.000674825
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999326  0.000673836  0.000577358  6.03223e-05  3.31642e-06  9.87533e-06  4.74466e-07  2.23518e-05  1.37859e-07   2.0937e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.7066, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 2200 K
            Well    Collision, 1/sec
              W1         5.07156e+09
      global relaxation matrix dimension = 549
      setting global matrices ... done, cpu time[sec] = 0.611168, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.92455, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            5585.96      7268.59      15190.6      14926.4       2332.8      17552.8      7098.63      1626.36
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00119  0.000649         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.86e-05  0.000649         1
         *Z       ---       ---  4.65e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.000648788
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.999352  0.000647836  0.000555446  5.70086e-05  3.20069e-06  9.38494e-06  4.55927e-07  2.22019e-05  1.38364e-07  2.09374e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.75093, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2300 K
      Energy reference = 176636 1/cm
      Energy step      = 383 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -54.7 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.013601
         W1 Well: collisional kernel bandwidth = 45
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.548012
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.407395
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.340233
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 2.46951
         W1 Well: minimal relaxation eigenvalue = 0.0275442
         W1 Well: maximal relaxation eigenvalue = 2.88509
         W1 Well:       grid size = 544
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31715 1/cm
         B1 Barrier:        grid size = 462
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -309 1/cm
         B2 Barrier:        grid size = 461
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 73 1/cm
         B3 Barrier:        grid size = 474
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4906 1/cm
         B4 Barrier:        grid size = 478
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6437 1/cm
         B5 Barrier: nonpositive number of states at -23673 1/cm => truncating
         B5 Barrier:        grid size = 523
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23673 1/cm
         B6 Barrier:        grid size = 458
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1222 1/cm
         B7 Barrier:        grid size = 449
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4669 1/cm
         B8 Barrier:        grid size = 418
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16542 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 4.11889, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31715 -23673 3.22e+05  4.8e+18
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -309 4.35e+21
         B2     74 5.93e+21
         B3  -4906 1.35e+22
         B4  -6437 1.32e+22
         B5 -23673 2.07e+21
         B6   1223 1.41e+22
         B7   4670 5.81e+21
         B8  16543 1.43e+21
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  1.56e-15  3.08e-15  1.08e-15  4.46e-16   1.3e-20  3.85e-14  9.68e-13  3.03e-08
          R   6.4e+14         1      1.97      0.69     0.285  8.32e-06      24.7       620  1.94e+07
         P1  3.25e+14     0.507         1      0.35     0.145  4.22e-06      12.5       314  9.82e+06
         P2  9.28e+14      1.45      2.86         1     0.414  1.21e-05      35.8       899  2.81e+07
         P3  2.24e+15       3.5      6.91      2.42         1  2.92e-05      86.5  2.17e+03  6.79e+07
         P4  7.69e+19   1.2e+05  2.37e+05  8.29e+04  3.43e+04         1  2.97e+06  7.45e+07  2.33e+12
         P5  2.59e+13    0.0405    0.0799     0.028    0.0116  3.37e-07         1      25.1  7.85e+05
         P6  1.03e+12   0.00161   0.00318   0.00111   0.00046  1.34e-08    0.0398         1  3.12e+04
         P7  3.31e+07  5.16e-08  1.02e-07  3.56e-08  1.47e-08   4.3e-13  1.27e-06   3.2e-05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  2.73e-18  5.39e-18  1.88e-18  7.79e-19  2.27e-23  6.74e-17  1.69e-15  5.29e-11
          R  3.66e+17         1      1.97      0.69     0.285  8.32e-06      24.7       620  1.94e+07
         P1  1.86e+17     0.507         1      0.35     0.145  4.22e-06      12.5       314  9.82e+06
         P2  5.31e+17      1.45      2.86         1     0.414  1.21e-05      35.8       899  2.81e+07
         P3  1.28e+18       3.5      6.91      2.42         1  2.92e-05      86.5  2.17e+03  6.79e+07
         P4   4.4e+22   1.2e+05  2.37e+05  8.29e+04  3.43e+04         1  2.97e+06  7.45e+07  2.33e+12
         P5  1.48e+16    0.0405    0.0799     0.028    0.0116  3.37e-07         1      25.1  7.85e+05
         P6  5.91e+14   0.00161   0.00318   0.00111   0.00046  1.34e-08    0.0398         1  3.12e+04
         P7  1.89e+10  5.16e-08  1.02e-07  3.56e-08  1.47e-08   4.3e-13  1.27e-06   3.2e-05         1
   MasterEquation::set:  done, cpu time[sec] = 4.13393, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 2300 K
            Well    Collision, 1/sec
              W1         1.23185e+08
      global relaxation matrix dimension = 544
      setting global matrices ... done, cpu time[sec] = 0.60335, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.23548, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             220291       300686       682874       669273       105060       713559       294363      72598.6
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00383   0.00274         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000136   0.00274     0.999
         *Z       ---       ---  2.72e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00274302
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.997261   0.00273855    0.0021884  0.000412318  1.48272e-05  7.36645e-05  2.56753e-06  4.64387e-05  3.26594e-07  7.52937e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.07557, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 2300 K
            Well    Collision, 1/sec
              W1         3.69555e+08
      global relaxation matrix dimension = 544
      setting global matrices ... done, cpu time[sec] = 0.603341, elapsed time[sec] = 1
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.81357, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            73430.4       100229       227625       223091      35019.9       237853      98120.9      24199.5
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00339   0.00234         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000119   0.00234     0.999
         *Z       ---       ---  2.72e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00234364
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1      0.99766   0.00233982   0.00193175  0.000297932  1.17759e-05  4.82242e-05  1.87987e-06  4.79327e-05  3.27795e-07  7.52943e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.60864, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 2300 K
            Well    Collision, 1/sec
              W1         6.15924e+08
      global relaxation matrix dimension = 544
      setting global matrices ... done, cpu time[sec] = 0.602936, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.82014, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            44058.2      60137.2       136575       133855        21012       142712      58872.5      14519.7
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00317   0.00215         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   0.00011   0.00215    -0.999
         *Z       ---       ---  2.72e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00214693
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.997857   0.00214343   0.00179052  0.000251677  1.05985e-05  4.00891e-05  1.64157e-06  4.85755e-05  3.28791e-07  7.52948e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.60285, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 2300 K
            Well    Collision, 1/sec
              W1         8.62294e+08
      global relaxation matrix dimension = 544
      setting global matrices ... done, cpu time[sec] = 0.603954, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.83618, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            31470.2      42955.1      97553.5      95610.4      15008.5       101937      42051.8      10371.2
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00302   0.00202         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000104   0.00202     0.999
         *Z       ---       ---  2.72e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00201523
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.997988   0.00201195   0.00169165  0.000224087   9.8808e-06  3.55818e-05  1.50354e-06   4.8916e-05  3.29686e-07  7.52954e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.6318, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 2300 K
            Well    Collision, 1/sec
              W1         1.10866e+09
      global relaxation matrix dimension = 544
      setting global matrices ... done, cpu time[sec] = 0.604299, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.82174, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            24476.8      33409.5      75874.9      74363.6      11673.3      79284.3        32707      8066.52
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00291   0.00192         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0    0.0001   0.00192     0.999
         *Z       ---       ---  2.72e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00191631
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.998087   0.00191319   0.00161541  0.000204988  9.36982e-06  3.25747e-05  1.40847e-06  4.91044e-05  3.30515e-07  7.52959e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.6146, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 2300 K
            Well    Collision, 1/sec
              W1         1.23185e+09
      global relaxation matrix dimension = 544
      setting global matrices ... done, cpu time[sec] = 0.604949, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.82484, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            22029.1      30068.6      68287.4      66927.3        10506      71355.9      29436.3      7259.86
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00286   0.00187         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.82e-05   0.00187    -0.999
         *Z       ---       ---  2.72e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0018748
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.998128   0.00187174   0.00158296  0.000197361  9.16135e-06  3.13949e-05  1.37044e-06  4.91627e-05   3.3091e-07  7.52962e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.61891, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 2300 K
            Well    Collision, 1/sec
              W1         1.84777e+09
      global relaxation matrix dimension = 544
      setting global matrices ... done, cpu time[sec] = 0.601944, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.84278, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            14686.1      20045.7        45525      44618.2      7003.99      47570.6      19624.2      4839.91
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00267   0.00172         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.11e-05   0.00172     0.999
         *Z       ---       ---  2.72e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00171532
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.998287   0.00171253   0.00145603  0.000170044  8.38768e-06  2.72471e-05  1.23293e-06  4.92491e-05  3.32733e-07  7.52976e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.63779, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 2300 K
            Well    Collision, 1/sec
              W1          2.4637e+09
      global relaxation matrix dimension = 544
      setting global matrices ... done, cpu time[sec] = 0.608636, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.84498, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            11014.6      15034.3      34143.7      33463.6      5252.99      35677.9      14718.1      3629.93
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00254    0.0016         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   8.6e-05    0.0016    -0.999
         *Z       ---       ---  2.72e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00160304
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1       0.9984   0.00160043   0.00136475  0.000152545  7.86373e-06  2.46372e-05  1.14295e-06  4.91535e-05  3.34366e-07   7.5299e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.6516, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 2300 K
            Well    Collision, 1/sec
              W1         3.07962e+09
      global relaxation matrix dimension = 544
      setting global matrices ... done, cpu time[sec] = 0.608422, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.82701, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            8811.65      12027.4        27315      26770.9      4202.39      28542.3      11774.5      2903.95
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00243   0.00152         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.21e-05   0.00152     0.999
         *Z       ---       ---  2.72e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00151682
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.998486   0.00151434   0.00129372  0.000139991  7.47024e-06   2.2778e-05  1.07696e-06  4.89747e-05  3.35856e-07  7.53004e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.63342, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 2300 K
            Well    Collision, 1/sec
              W1         3.69555e+09
      global relaxation matrix dimension = 544
      setting global matrices ... done, cpu time[sec] = 0.607746, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.81947, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            7343.04      10022.9      22762.5      22309.1      3501.99      23785.3      9812.09      2419.95
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00235   0.00145         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.89e-05   0.00145    -0.999
         *Z       ---       ---  2.72e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00144711
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.998555   0.00144475   0.00123576  0.000130362   7.1566e-06  2.13558e-05  1.02529e-06  4.87538e-05  3.37229e-07  7.53017e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.6222, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 2300 K
            Well    Collision, 1/sec
              W1         4.31147e+09
      global relaxation matrix dimension = 544
      setting global matrices ... done, cpu time[sec] = 0.607564, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.81942, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            6294.03      8591.02      19510.7      19122.1      3001.71      20387.4      8410.36      2074.25
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00227   0.00139         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.63e-05   0.00139    -0.999
         *Z       ---       ---  2.72e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00138881
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.998613   0.00138654   0.00118695  0.000122644   6.8967e-06  2.02161e-05  9.83082e-07   4.8511e-05  3.38504e-07  7.53031e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.624, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 2300 K
            Well    Collision, 1/sec
              W1          4.9274e+09
      global relaxation matrix dimension = 544
      setting global matrices ... done, cpu time[sec] = 0.607728, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.79605, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            5507.28      7517.15      17071.9      16731.8       2626.5        17839      7359.07      1814.97
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00221   0.00134         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   7.4e-05   0.00134     0.999
         *Z       ---       ---  2.72e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00133883
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.998663   0.00133664   0.00114489  0.000116261  6.67537e-06  1.92726e-05  9.47554e-07  4.82573e-05  3.39695e-07  7.53045e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.60085, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2400 K
      Energy reference = 183586 1/cm
      Energy step      = 400 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -52.4 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.013447
         W1 Well: collisional kernel bandwidth = 44
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.529626
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.396815
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.336875
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 2.37091
         W1 Well: minimal relaxation eigenvalue = 0.0271304
         W1 Well: maximal relaxation eigenvalue = 2.53486
         W1 Well:       grid size = 538
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31614 1/cm
         B1 Barrier:        grid size = 459
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -14 1/cm
         B2 Barrier:        grid size = 459
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = -14 1/cm
         B3 Barrier:        grid size = 471
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4814 1/cm
         B4 Barrier:        grid size = 475
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6414 1/cm
         B5 Barrier: nonpositive number of states at -23614 1/cm => truncating
         B5 Barrier:        grid size = 518
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23614 1/cm
         B6 Barrier:        grid size = 456
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1185 1/cm
         B7 Barrier:        grid size = 448
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4385 1/cm
         B8 Barrier:        grid size = 418
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16385 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 3.98629, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31614 -23614 3.36e+05 6.98e+18
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -14 6.05e+21
         B2    -14 8.64e+21
         B3  -4814 2.13e+22
         B4  -6414 2.08e+22
         B5 -23614 3.28e+21
         B6   1186 2.02e+22
         B7   4386 8.48e+21
         B8  16386 2.24e+21
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  6.71e-16  1.34e-15  5.18e-16  2.24e-16  1.05e-20  1.53e-14  3.55e-13  8.35e-09
          R  1.49e+15         1         2     0.772     0.334  1.57e-05      22.8       529  1.25e+07
         P1  7.46e+14       0.5         1     0.386     0.167  7.86e-06      11.4       265  6.23e+06
         P2  1.93e+15       1.3      2.59         1     0.433  2.03e-05      29.6       686  1.61e+07
         P3  4.46e+15      2.99      5.98      2.31         1   4.7e-05      68.4  1.58e+03  3.73e+07
         P4  9.49e+19  6.37e+04  1.27e+05  4.92e+04  2.13e+04         1  1.45e+06  3.37e+07  7.93e+11
         P5  6.53e+13    0.0438    0.0875    0.0338    0.0146  6.88e-07         1      23.2  5.45e+05
         P6  2.82e+12   0.00189   0.00378   0.00146  0.000631  2.97e-08    0.0432         1  2.35e+04
         P7   1.2e+08  8.03e-08   1.6e-07   6.2e-08  2.68e-08  1.26e-12  1.83e-06  4.25e-05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  1.22e-18  2.45e-18  9.45e-19  4.09e-19  1.92e-23   2.8e-17  6.48e-16  1.52e-11
          R  8.17e+17         1         2     0.772     0.334  1.57e-05      22.8       529  1.25e+07
         P1  4.09e+17       0.5         1     0.386     0.167  7.86e-06      11.4       265  6.23e+06
         P2  1.06e+18       1.3      2.59         1     0.433  2.03e-05      29.6       686  1.61e+07
         P3  2.44e+18      2.99      5.98      2.31         1   4.7e-05      68.4  1.58e+03  3.73e+07
         P4   5.2e+22  6.37e+04  1.27e+05  4.92e+04  2.13e+04         1  1.45e+06  3.37e+07  7.93e+11
         P5  3.58e+16    0.0438    0.0875    0.0338    0.0146  6.88e-07         1      23.2  5.45e+05
         P6  1.54e+15   0.00189   0.00378   0.00146  0.000631  2.97e-08    0.0432         1  2.35e+04
         P7  6.56e+10  8.03e-08   1.6e-07   6.2e-08  2.68e-08  1.26e-12  1.83e-06  4.25e-05         1
   MasterEquation::set:  done, cpu time[sec] = 4.00175, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 2400 K
            Well    Collision, 1/sec
              W1          1.1983e+08
      global relaxation matrix dimension = 538
      setting global matrices ... done, cpu time[sec] = 0.588993, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.28425, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             216669       309645       762207       745472       117501       722519       303716        80374
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00621   0.00497         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000232   0.00497    -0.998
         *Z       ---       ---  1.67e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00496558
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.995042   0.00495763   0.00397319  0.000729409  2.69007e-05  0.000130664  4.61542e-06  9.21125e-05  7.38229e-07   2.4173e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.02472, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 2400 K
            Well    Collision, 1/sec
              W1         3.59491e+08
      global relaxation matrix dimension = 538
      setting global matrices ... done, cpu time[sec] = 0.586732, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.71469, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            72222.9       103215       254069       248491      39166.9       240840       101239      26791.3
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00557   0.00429         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000204   0.00429    -0.998
         *Z       ---       ---  1.67e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00429348
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.995713    0.0042866    0.0035431  0.000535525  2.17027e-05  8.70157e-05  3.43929e-06  9.50752e-05  7.40857e-07  2.41732e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.45215, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 2400 K
            Well    Collision, 1/sec
              W1         5.99151e+08
      global relaxation matrix dimension = 538
      setting global matrices ... done, cpu time[sec] = 0.58767, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.73237, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            43333.7      61928.9       152441       149094      23500.1       144504      60743.2      16074.8
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00524   0.00396         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000191   0.00396     0.998
         *Z       ---       ---  1.67e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00395844
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.996048   0.00395211   0.00330324  0.000456008  1.96874e-05  7.29772e-05  3.02972e-06  9.64155e-05  7.43013e-07  2.41733e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.47102, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 2400 K
            Well    Collision, 1/sec
              W1         8.38812e+08
      global relaxation matrix dimension = 538
      setting global matrices ... done, cpu time[sec] = 0.58823, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.7141, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            30952.7        44235       108887       106496      16785.8       103217        43388        11482
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00501   0.00373         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000181   0.00373    -0.998
         *Z       ---       ---  1.67e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00373266
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.996273   0.00372669   0.00313407  0.000408285  1.84543e-05  6.51683e-05   2.7916e-06  9.71707e-05  7.44945e-07  2.41735e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.45166, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 2400 K
            Well    Collision, 1/sec
              W1         1.07847e+09
      global relaxation matrix dimension = 538
      setting global matrices ... done, cpu time[sec] = 0.587233, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.70848, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            24074.3        34405      84689.7      82830.2      13055.6      80279.9      33746.2      8930.44
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00484   0.00356         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000174   0.00356    -0.998
         *Z       ---       ---  1.67e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00356228
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.996443   0.00355658   0.00300295  0.000375112  1.75735e-05  5.99422e-05  2.62712e-06  9.76267e-05   7.4673e-07  2.41737e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.45421, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 2400 K
            Well    Collision, 1/sec
              W1          1.1983e+09
      global relaxation matrix dimension = 538
      setting global matrices ... done, cpu time[sec] = 0.592769, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.7161, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            21666.9      30964.5      76220.7      74547.2      11750.1      72251.9      30371.6       8037.4
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00477   0.00349         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000171   0.00349    -0.998
         *Z       ---       ---  1.67e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00349056
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.996515   0.00348497   0.00294695  0.000361829  1.72134e-05  5.78876e-05  2.56118e-06  9.77832e-05  7.47578e-07  2.41738e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.47265, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 2400 K
            Well    Collision, 1/sec
              W1         1.79745e+09
      global relaxation matrix dimension = 538
      setting global matrices ... done, cpu time[sec] = 0.593151, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.73097, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            14444.6        20643      50813.8      49698.1      7833.38      48167.9      20247.7      5358.27
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00448   0.00321         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   0.00016   0.00321    -0.998
         *Z       ---       ---  1.67e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00321385
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.996791    0.0032087   0.00272688  0.000314082  1.58726e-05  5.06421e-05  2.32207e-06  9.81495e-05  7.51497e-07  2.41742e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.47246, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 2400 K
            Well    Collision, 1/sec
              W1         2.39661e+09
      global relaxation matrix dimension = 538
      setting global matrices ... done, cpu time[sec] = 0.586589, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.72927, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            10833.4      15482.2      38110.4      37273.6      5875.04      36125.9      15185.8       4018.7
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00428   0.00302         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000151   0.00302     0.998
         *Z       ---       ---  1.67e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00301781
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.996987   0.00301297   0.00256756  0.000283336    1.496e-05  4.60616e-05  2.16486e-06  9.81366e-05  7.55005e-07  2.41746e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.47545, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 2400 K
            Well    Collision, 1/sec
              W1         2.99576e+09
      global relaxation matrix dimension = 538
      setting global matrices ... done, cpu time[sec] = 0.58502, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.71012, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            8666.75      12385.8      30488.3      29818.9      4700.03      28900.8      12148.6      3214.96
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00412   0.00287         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000145   0.00287     0.999
         *Z       ---       ---  1.67e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00286654
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.997138   0.00286195   0.00244296  0.000261187  1.42718e-05  4.27864e-05  2.04913e-06  9.79413e-05  7.58207e-07   2.4175e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.45548, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 2400 K
            Well    Collision, 1/sec
              W1         3.59491e+09
      global relaxation matrix dimension = 538
      setting global matrices ... done, cpu time[sec] = 0.587071, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.71027, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            7222.29      10321.5      25406.9      24849.1      3916.69        24084      10123.9      2679.13
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00399   0.00274         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   0.00014   0.00274    -0.999
         *Z       ---       ---  1.67e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00274377
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.997261   0.00273938   0.00234087  0.000244143  1.37213e-05   4.0273e-05  1.95823e-06  9.76477e-05  7.61164e-07  2.41754e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.4592, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 2400 K
            Well    Collision, 1/sec
              W1         4.19406e+09
      global relaxation matrix dimension = 538
      setting global matrices ... done, cpu time[sec] = 0.590312, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.72506, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            6190.53      8846.99      21777.4      21299.2      3357.16      20643.4      8677.61       2296.4
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00387   0.00264         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000135   0.00264    -0.999
         *Z       ---       ---  1.67e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00264073
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.997363    0.0026365    0.0022546  0.000230442  1.32638e-05  3.82533e-05  1.88375e-06  9.72983e-05  7.63915e-07  2.41758e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.47204, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 2400 K
            Well    Collision, 1/sec
              W1         4.79321e+09
      global relaxation matrix dimension = 538
      setting global matrices ... done, cpu time[sec] = 0.587872, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.72936, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            5416.72      7741.12      19055.2      18636.8      2937.52        18063      7592.91      2009.35
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00378   0.00255         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000132   0.00255     0.999
         *Z       ---       ---  1.67e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00255214
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.997452   0.00254805   0.00218002  0.000219081  1.28731e-05  3.65771e-05   1.8209e-06  9.69163e-05  7.66489e-07  2.41763e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.47533, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2500 K
      Energy reference = 190536 1/cm
      Energy step      = 417 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -50.1 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.013129
         W1 Well: collisional kernel bandwidth = 44
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.525656
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.391066
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.368664
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 2.29404
         W1 Well: minimal relaxation eigenvalue = 0.0267421
         W1 Well: maximal relaxation eigenvalue = 3.02277
         W1 Well:       grid size = 533
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31724 1/cm
         B1 Barrier:        grid size = 457
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -32 1/cm
         B2 Barrier:        grid size = 457
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = -32 1/cm
         B3 Barrier:        grid size = 468
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4619 1/cm
         B4 Barrier:        grid size = 472
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6287 1/cm
         B5 Barrier: nonpositive number of states at -23385 1/cm => truncating
         B5 Barrier:        grid size = 513
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23385 1/cm
         B6 Barrier:        grid size = 454
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1217 1/cm
         B7 Barrier:        grid size = 446
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4554 1/cm
         B8 Barrier:        grid size = 417
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16647 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 3.93156, elapsed time[sec] = 1
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31724 -23385 3.97e+05    1e+19
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -32 8.32e+21
         B2    -32 1.24e+22
         B3  -4619 3.31e+22
         B4  -6287 3.23e+22
         B5 -23385 5.11e+21
         B6   1218 2.85e+22
         B7   4555 1.22e+22
         B8  16648 3.45e+21
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  3.09e-16  6.25e-16  2.64e-16  1.19e-16  8.69e-21  6.55e-15  1.41e-13  2.56e-09
          R  3.24e+15         1      2.02     0.856     0.386  2.82e-05      21.2       457  8.28e+06
         P1   1.6e+15     0.494         1     0.423     0.191  1.39e-05      10.5       225  4.09e+06
         P2  3.79e+15      1.17      2.37         1     0.451  3.29e-05      24.8       534  9.68e+06
         P3  8.39e+15      2.59      5.24      2.22         1  7.29e-05        55  1.18e+03  2.14e+07
         P4  1.15e+20  3.55e+04  7.19e+04  3.04e+04  1.37e+04         1  7.54e+05  1.62e+07  2.94e+11
         P5  1.53e+14    0.0471    0.0954    0.0403    0.0182  1.33e-06         1      21.5   3.9e+05
         P6   7.1e+12   0.00219   0.00443   0.00187  0.000846  6.17e-08    0.0465         1  1.81e+04
         P7  3.91e+08  1.21e-07  2.44e-07  1.03e-07  4.66e-08   3.4e-12  2.56e-06  5.51e-05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  5.87e-19  1.19e-18  5.03e-19  2.27e-19  1.65e-23  1.25e-17  2.68e-16  4.86e-12
          R   1.7e+18         1      2.02     0.856     0.386  2.82e-05      21.2       457  8.28e+06
         P1  8.41e+17     0.494         1     0.423     0.191  1.39e-05      10.5       225  4.09e+06
         P2  1.99e+18      1.17      2.37         1     0.451  3.29e-05      24.8       534  9.68e+06
         P3  4.41e+18      2.59      5.24      2.22         1  7.29e-05        55  1.18e+03  2.14e+07
         P4  6.05e+22  3.55e+04  7.19e+04  3.04e+04  1.37e+04         1  7.54e+05  1.62e+07  2.94e+11
         P5  8.02e+16    0.0471    0.0954    0.0403    0.0182  1.33e-06         1      21.5   3.9e+05
         P6  3.73e+15   0.00219   0.00443   0.00187  0.000846  6.17e-08    0.0465         1  1.81e+04
         P7  2.06e+11  1.21e-07  2.44e-07  1.03e-07  4.66e-08   3.4e-12  2.56e-06  5.51e-05         1
   MasterEquation::set:  done, cpu time[sec] = 3.94535, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 2500 K
            Well    Collision, 1/sec
              W1         1.16698e+08
      global relaxation matrix dimension = 533
      setting global matrices ... done, cpu time[sec] = 0.58139, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.28245, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             212670       317670       845263       825575       130623       729227       312056        88349
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00944   0.00841         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000373   0.00841     0.996
         *Z       ---       ---  1.08e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00841399
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1       0.9916    0.0084002   0.00674715   0.00121032  4.56921e-05  0.000216584  7.76324e-06  0.000171137  1.55003e-06  7.02414e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.00455, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 2500 K
            Well    Collision, 1/sec
              W1         3.50095e+08
      global relaxation matrix dimension = 533
      setting global matrices ... done, cpu time[sec] = 0.582372, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.70796, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            70889.9       105890       281754       275192        43541       243076       104019      29449.7
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00856   0.00735         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000332   0.00735     0.996
         *Z       ---       ---  1.08e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00735434
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.992658   0.00734228   0.00607363  0.000900574  3.74249e-05  0.000146703   5.8858e-06  0.000176506  1.55537e-06  7.02418e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.37812, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 2500 K
            Well    Collision, 1/sec
              W1         5.83492e+08
      global relaxation matrix dimension = 533
      setting global matrices ... done, cpu time[sec] = 0.582806, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.7072, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            42533.9        63534       169053       165115      26124.6       145845      62411.3      17669.8
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0081   0.00682         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000311   0.00682    -0.997
         *Z       ---       ---  1.08e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00682077
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1      0.99319   0.00680959   0.00569307  0.000772393  3.42049e-05  0.000124097  5.22881e-06  0.000179033  1.55971e-06  7.02423e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.38672, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 2500 K
            Well    Collision, 1/sec
              W1         8.16889e+08
      global relaxation matrix dimension = 533
      setting global matrices ... done, cpu time[sec] = 0.581813, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.71263, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            30381.4      45381.4       120752       117939      18660.4       104175      44579.5      12621.3
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00778   0.00646         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000297   0.00646    -0.997
         *Z       ---       ---  1.08e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00645909
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.993552    0.0064485   0.00542276  0.000695103  3.22276e-05  0.000111474  4.84552e-06  0.000180521  1.56359e-06  7.02427e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.39323, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 2500 K
            Well    Collision, 1/sec
              W1         1.05029e+09
      global relaxation matrix dimension = 533
      setting global matrices ... done, cpu time[sec] = 0.581594, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.70859, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
              23630      35296.7      93918.1      91730.6      14513.7      81025.2      34672.9      9816.55
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00754   0.00618         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000286   0.00618    -0.997
         *Z       ---       ---  1.08e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00618498
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.993825   0.00617483   0.00521221  0.000641197  3.08112e-05  0.000103002  4.58004e-06  0.000181471  1.56715e-06  7.02432e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.38973, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 2500 K
            Well    Collision, 1/sec
              W1         1.16698e+09
      global relaxation matrix dimension = 533
      setting global matrices ... done, cpu time[sec] = 0.586572, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.71354, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
              21267        31767      84526.3      82557.5      13062.3      72922.7      31205.6       8834.9
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00744   0.00607         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000281   0.00607     0.997
         *Z       ---       ---  1.08e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00606927
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.993941   0.00605932     0.005122  0.000619567   3.0231e-05  9.96645e-05   4.4734e-06  0.000181816  1.56884e-06  7.02434e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.39817, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 2500 K
            Well    Collision, 1/sec
              W1         1.75048e+09
      global relaxation matrix dimension = 533
      setting global matrices ... done, cpu time[sec] = 0.582291, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.70388, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
              14178        21178      56350.9      55038.3       8708.2      48615.1      20803.8      5889.93
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00703   0.00562         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000263   0.00562     0.997
         *Z       ---       ---  1.08e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00562107
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.994388   0.00561186   0.00476592  0.000541573  2.80639e-05  8.78611e-05  4.08564e-06  0.000182774  1.57665e-06  7.02446e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.376, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 2500 K
            Well    Collision, 1/sec
              W1         2.33397e+09
      global relaxation matrix dimension = 533
      setting global matrices ... done, cpu time[sec] = 0.581928, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.71157, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            10633.5      15883.5      42263.1      41278.8      6531.15      36461.4      15602.8      4417.45
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00674    0.0053         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000251    0.0053     0.997
         *Z       ---       ---  1.08e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00530171
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.994707   0.00529302   0.00450652  0.000491121   2.6582e-05  8.03664e-05  3.82961e-06  0.000183016  1.58363e-06  7.02457e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.37927, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 2500 K
            Well    Collision, 1/sec
              W1         2.91746e+09
      global relaxation matrix dimension = 533
      setting global matrices ... done, cpu time[sec] = 0.582356, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.71568, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            8506.78      12706.8      33810.5        33023      5224.92      29169.1      12482.3      3533.96
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00651   0.00505         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000241   0.00505    -0.997
         *Z       ---       ---  1.08e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00505419
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.994954    0.0050459   0.00430267  0.000454647  2.54602e-05  7.49885e-05  3.64045e-06    0.0001829  1.59001e-06  7.02469e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.39793, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 2500 K
            Well    Collision, 1/sec
              W1         3.50095e+09
      global relaxation matrix dimension = 533
      setting global matrices ... done, cpu time[sec] = 0.581567, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.72549, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            7088.99        10589      28175.4      27519.2       4354.1      24307.6      10401.9      2944.97
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00632   0.00485         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000232   0.00485    -0.998
         *Z       ---       ---  1.08e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00485256
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.995155    0.0048446   0.00413502  0.000426497    2.456e-05  7.08492e-05  3.49142e-06  0.000182584  1.59589e-06   7.0248e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.39216, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 2500 K
            Well    Collision, 1/sec
              W1         4.08445e+09
      global relaxation matrix dimension = 533
      setting global matrices ... done, cpu time[sec] = 0.583237, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.70707, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            6076.27      9076.28      24150.4      23587.9      3732.09      20835.1      8915.89      2524.26
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00616   0.00468         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000226   0.00468     0.998
         *Z       ---       ---  1.08e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00468279
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.995325   0.00467511   0.00399286  0.000403809  2.38097e-05  6.75144e-05    3.369e-06  0.000182148  1.60138e-06  7.02491e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.37555, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 2500 K
            Well    Collision, 1/sec
              W1         4.66794e+09
      global relaxation matrix dimension = 533
      setting global matrices ... done, cpu time[sec] = 0.581452, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.7011, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            5316.74      7941.75      21131.6      20639.4      3265.58      18230.7      7801.41      2208.72
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00602   0.00454         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   0.00022   0.00454     0.998
         *Z       ---       ---  1.08e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00453643
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.995471   0.00452899   0.00386962  0.000384954  2.31673e-05  6.47402e-05  3.26545e-06  0.000181636  1.60652e-06  7.02503e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.37071, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 2600 K
      Energy reference = 197487 1/cm
      Energy step      = 433 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -47.8 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.013511
         W1 Well: collisional kernel bandwidth = 44
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.518429
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.383672
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.291613
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 2.29133
         W1 Well: minimal relaxation eigenvalue = 0.0263845
         W1 Well: maximal relaxation eigenvalue = 2.80577
         W1 Well:       grid size = 529
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31569 1/cm
         B1 Barrier:        grid size = 457
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -393 1/cm
         B2 Barrier:        grid size = 456
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 39 1/cm
         B3 Barrier:        grid size = 467
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4723 1/cm
         B4 Barrier:        grid size = 471
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6455 1/cm
         B5 Barrier: nonpositive number of states at -23343 1/cm => truncating
         B5 Barrier:        grid size = 510
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23343 1/cm
         B6 Barrier:        grid size = 453
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1338 1/cm
         B7 Barrier:        grid size = 446
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4369 1/cm
         B8 Barrier:        grid size = 418
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16493 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 3.84372, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31569 -23343  4.1e+05 1.43e+19
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -393 1.13e+22
         B2     40 1.76e+22
         B3  -4723 5.06e+22
         B4  -6455 4.93e+22
         B5 -23343 7.83e+21
         B6   1339 3.98e+22
         B7   4370 1.73e+22
         B8  16494 5.23e+21
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  1.51e-16   3.1e-16  1.42e-16  6.68e-17   7.3e-21     3e-15  6.01e-14  8.59e-10
          R  6.61e+15         1      2.05     0.941     0.441  4.83e-05      19.8       398  5.68e+06
         P1  3.22e+15     0.488         1     0.459     0.215  2.35e-05      9.66       194  2.77e+06
         P2  7.02e+15      1.06      2.18         1     0.469  5.13e-05        21       423  6.03e+06
         P3   1.5e+16      2.27      4.65      2.13         1  0.000109      44.9       901  1.29e+07
         P4  1.37e+20  2.07e+04  4.25e+04  1.95e+04  9.15e+03         1   4.1e+05  8.24e+06  1.18e+11
         P5  3.34e+14    0.0505     0.104    0.0475    0.0223  2.44e-06         1      20.1  2.87e+05
         P6  1.66e+13   0.00252   0.00516   0.00237   0.00111  1.21e-07    0.0498         1  1.43e+04
         P7  1.16e+09  1.76e-07  3.61e-07  1.66e-07  7.78e-08   8.5e-12  3.49e-06  7.01e-05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  2.99e-19  6.13e-19  2.81e-19  1.32e-19  1.44e-23  5.92e-18  1.19e-16   1.7e-12
          R  3.35e+18         1      2.05     0.941     0.441  4.83e-05      19.8       398  5.68e+06
         P1  1.63e+18     0.488         1     0.459     0.215  2.35e-05      9.66       194  2.77e+06
         P2  3.55e+18      1.06      2.18         1     0.469  5.13e-05        21       423  6.03e+06
         P3  7.58e+18      2.27      4.65      2.13         1  0.000109      44.9       901  1.29e+07
         P4  6.93e+22  2.07e+04  4.25e+04  1.95e+04  9.15e+03         1   4.1e+05  8.24e+06  1.18e+11
         P5  1.69e+17    0.0505     0.104    0.0475    0.0223  2.44e-06         1      20.1  2.87e+05
         P6  8.41e+15   0.00252   0.00516   0.00237   0.00111  1.21e-07    0.0498         1  1.43e+04
         P7  5.89e+11  1.76e-07  3.61e-07  1.66e-07  7.78e-08   8.5e-12  3.49e-06  7.01e-05         1
   MasterEquation::set:  done, cpu time[sec] = 3.85856, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 2600 K
            Well    Collision, 1/sec
              W1         1.13767e+08
      global relaxation matrix dimension = 529
      setting global matrices ... done, cpu time[sec] = 0.568006, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.33183, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             208378       324814       932379       909502       144415       733904       319437      96494.2
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0136    0.0135         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000571    0.0135    -0.993
         *Z       ---       ---  7.29e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0134551
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.986567     0.013433    0.0108033   0.00190326  7.32227e-05  0.000338011  1.23127e-05  0.000299818  3.04895e-06  1.86908e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.02568, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 2600 K
            Well    Collision, 1/sec
              W1           3.413e+08
      global relaxation matrix dimension = 529
      setting global matrices ... done, cpu time[sec] = 0.568082, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.65646, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            69459.4       108271       310793       303167      48138.2       244635       106479      32164.7
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0124    0.0119         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000511    0.0119     0.994
         *Z       ---       ---  7.29e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0118734
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.988146    0.0118539   0.00980907   0.00142956  6.08641e-05  0.000232896  9.49648e-06  0.000308917  3.05903e-06  1.86909e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.35051, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 2600 K
            Well    Collision, 1/sec
              W1         5.68833e+08
      global relaxation matrix dimension = 529
      setting global matrices ... done, cpu time[sec] = 0.570307, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.63578, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            41675.6      64962.7       186476       181900      28882.9       146781      63887.4      19298.8
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0118    0.0111         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000481    0.0111     0.994
         *Z       ---       ---  7.29e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0110716
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.988947    0.0110534    0.0092402   0.00123359  5.60262e-05  0.000198677  8.50565e-06  0.000313326  3.06716e-06   1.8691e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.32696, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 2600 K
            Well    Collision, 1/sec
              W1         7.96367e+08
      global relaxation matrix dimension = 529
      setting global matrices ... done, cpu time[sec] = 0.573916, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.64013, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            29768.3        46402       133197       129929      20630.6       104843      45633.9      13784.9
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0114    0.0105         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   0.00046    0.0105    -0.995
         *Z       ---       ---  7.29e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0105255
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.989492    0.0105082   0.00883342   0.00111518  5.30452e-05  0.000179498  7.92566e-06  0.000316012  3.07438e-06  1.86912e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.33399, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 2600 K
            Well    Collision, 1/sec
              W1          1.0239e+09
      global relaxation matrix dimension = 529
      setting global matrices ... done, cpu time[sec] = 0.573118, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.62012, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            23153.1      36090.4       103598       101056      16046.1      81544.9        35493      10721.6
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0111    0.0101         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000444    0.0101    -0.995
         *Z       ---       ---  7.29e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.01011
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.989907    0.0100934   0.00851506   0.00103242   5.0904e-05  0.000166587  7.52286e-06  0.000317797  3.08101e-06  1.86913e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.31602, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 2600 K
            Well    Collision, 1/sec
              W1         1.13767e+09
      global relaxation matrix dimension = 529
      setting global matrices ... done, cpu time[sec] = 0.572715, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.62638, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            20837.8      32481.4      93237.9      90950.2      14441.5      73390.4      31943.7      9649.42
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0109   0.00993         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000438   0.00993    -0.995
         *Z       ---       ---  7.29e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00993423
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.990082   0.00991787   0.00837827  0.000999171  5.00251e-05  0.000161493  7.36079e-06  0.000318469  3.08416e-06  1.86913e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.3193, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 2600 K
            Well    Collision, 1/sec
              W1          1.7065e+09
      global relaxation matrix dimension = 529
      setting global matrices ... done, cpu time[sec] = 0.572428, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.63956, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            13891.9      21654.2      62158.6      60633.5      9627.64        48927      21295.8      6432.95
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0104   0.00925         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000412   0.00925     0.995
         *Z       ---       ---  7.29e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00925079
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.990764   0.00923556   0.00783603   0.00087899  4.67331e-05  0.000143422  6.76983e-06  0.000320514  3.09866e-06  1.86916e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.33305, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 2600 K
            Well    Collision, 1/sec
              W1         2.27533e+09
      global relaxation matrix dimension = 529
      setting global matrices ... done, cpu time[sec] = 0.571685, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.62342, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            10418.9      16240.7        46619      45475.1      7220.73      36695.2      15971.8      4824.71
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00999   0.00876         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000393   0.00876    -0.996
         *Z       ---       ---  7.29e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00876126
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.991253   0.00874683   0.00743869  0.000800974   4.4472e-05    0.0001319  6.37802e-06  0.000321311  3.11161e-06  1.86919e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.31596, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 2600 K
            Well    Collision, 1/sec
              W1         2.84417e+09
      global relaxation matrix dimension = 529
      setting global matrices ... done, cpu time[sec] = 0.572499, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.65875, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            8335.12      12992.5      37295.2      36380.1      5776.58      29356.2      12777.5      3859.77
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00968   0.00838         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000378   0.00838     0.996
         *Z       ---       ---  7.29e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0083803
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.991634    0.0083665   0.00712505  0.000744409  4.27542e-05  0.000123605  6.08759e-06  0.000321467  3.12345e-06  1.86922e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.34133, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 2600 K
            Well    Collision, 1/sec
              W1           3.413e+09
      global relaxation matrix dimension = 529
      setting global matrices ... done, cpu time[sec] = 0.568446, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.63666, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            6945.94      10827.1      31079.3      30316.7      4813.82      24463.5      10647.9      3216.47
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00943   0.00807         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000366   0.00807    -0.996
         *Z       ---       ---  7.29e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00806891
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.991944   0.00805563   0.00686616  0.000700643  4.13716e-05  0.000117202  5.85812e-06  0.000321252  3.13439e-06  1.86925e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.328, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 2600 K
            Well    Collision, 1/sec
              W1         3.98183e+09
      global relaxation matrix dimension = 529
      setting global matrices ... done, cpu time[sec] = 0.571845, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.63786, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            5953.66      9280.39      26639.4      25985.8      4126.13      20968.7      9126.77      2756.98
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00921   0.00781         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000356   0.00781    -0.996
         *Z       ---       ---  7.29e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00780597
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.992207   0.00779312   0.00664596  0.000665294   4.0216e-05  0.000112031  5.66915e-06  0.000320806   3.1446e-06  1.86928e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.3295, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 2600 K
            Well    Collision, 1/sec
              W1         4.55067e+09
      global relaxation matrix dimension = 529
      setting global matrices ... done, cpu time[sec] = 0.571761, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.6432, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            5209.45      8120.34      23309.5      22737.5      3610.36      18347.6      7985.92      2412.36
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00901   0.00758         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000347   0.00758     0.996
         *Z       ---       ---  7.29e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0075787
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.992434   0.00756622   0.00645455  0.000635857  3.92243e-05  0.000107719  5.50895e-06   0.00032021  3.15418e-06  1.86931e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.33007, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 2700 K
      Energy reference = 204437 1/cm
      Energy step      = 450 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -45.5 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.013169
         W1 Well: collisional kernel bandwidth = 44
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.516175
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.37875
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.360662
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 2.23903
         W1 Well: minimal relaxation eigenvalue = 0.0260413
         W1 Well: maximal relaxation eigenvalue = 3.92639
         W1 Well:       grid size = 525
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31813 1/cm
         B1 Barrier:        grid size = 455
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -313 1/cm
         B2 Barrier:        grid size = 454
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 136 1/cm
         B3 Barrier:        grid size = 465
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4813 1/cm
         B4 Barrier:        grid size = 469
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6613 1/cm
         B5 Barrier: nonpositive number of states at -23263 1/cm => truncating
         B5 Barrier:        grid size = 506
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23263 1/cm
         B6 Barrier:        grid size = 451
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1486 1/cm
         B7 Barrier:        grid size = 444
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4636 1/cm
         B8 Barrier:        grid size = 418
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16336 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 3.84717, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31813 -23263 4.34e+05 2.01e+19
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -313 1.52e+22
         B2    137 2.47e+22
         B3  -4813 7.63e+22
         B4  -6613 7.44e+22
         B5 -23263 1.18e+22
         B6   1487 5.49e+22
         B7   4637 2.43e+22
         B8  16337 7.81e+21
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  7.81e-17  1.62e-16  8.02e-17   3.9e-17  6.21e-21  1.45e-15  2.73e-14  3.12e-10
          R  1.28e+16         1      2.08      1.03     0.499  7.95e-05      18.5       349  3.99e+06
         P1  6.17e+15     0.482         1     0.495      0.24  3.83e-05      8.93       168  1.92e+06
         P2  1.25e+16     0.973      2.02         1     0.486  7.74e-05        18       340  3.89e+06
         P3  2.56e+16         2      4.16      2.06         1  0.000159      37.1       699     8e+06
         P4  1.61e+20  1.26e+04  2.61e+04  1.29e+04  6.28e+03         1  2.33e+05  4.39e+06  5.03e+10
         P5  6.91e+14    0.0539     0.112    0.0554    0.0269  4.29e-06         1      18.8  2.15e+05
         P6  3.67e+13   0.00286   0.00595   0.00294   0.00143  2.28e-07    0.0531         1  1.14e+04
         P7  3.21e+09   2.5e-07   5.2e-07  2.57e-07  1.25e-07  1.99e-11  4.64e-06  8.74e-05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1   1.6e-19  3.33e-19  1.65e-19  8.01e-20  1.27e-23  2.97e-18   5.6e-17  6.41e-13
          R  6.24e+18         1      2.08      1.03     0.499  7.95e-05      18.5       349  3.99e+06
         P1     3e+18     0.482         1     0.495      0.24  3.83e-05      8.93       168  1.92e+06
         P2  6.07e+18     0.973      2.02         1     0.486  7.74e-05        18       340  3.89e+06
         P3  1.25e+19         2      4.16      2.06         1  0.000159      37.1       699     8e+06
         P4  7.85e+22  1.26e+04  2.61e+04  1.29e+04  6.28e+03         1  2.33e+05  4.39e+06  5.03e+10
         P5  3.36e+17    0.0539     0.112    0.0554    0.0269  4.29e-06         1      18.8  2.15e+05
         P6  1.79e+16   0.00286   0.00595   0.00294   0.00143  2.28e-07    0.0531         1  1.14e+04
         P7  1.56e+12   2.5e-07   5.2e-07  2.57e-07  1.25e-07  1.99e-11  4.64e-06  8.74e-05         1
   MasterEquation::set:  done, cpu time[sec] = 3.86172, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 2700 K
            Well    Collision, 1/sec
              W1         1.11015e+08
      global relaxation matrix dimension = 525
      setting global matrices ... done, cpu time[sec] = 0.563476, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.29046, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             203870       331130  1.02345e+06       997144       158858       736764       325915       104780
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0186    0.0204         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000836    0.0204     -0.99
         *Z       ---       ---  5.09e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0204398
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.979594    0.0204058    0.0164131   0.00285851    0.0001115  0.000500182  1.85458e-05  0.000498264  5.66312e-06  4.60042e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.95614, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 2700 K
            Well    Collision, 1/sec
              W1         3.33045e+08
      global relaxation matrix dimension = 525
      setting global matrices ... done, cpu time[sec] = 0.563386, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.62922, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            67956.6       110377       341149       332381      52952.7       245588       108638      34926.6
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0172    0.0182         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000754    0.0182     0.991
         *Z       ---       ---  5.09e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0181949
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.981835    0.0181646    0.0150266   0.00216002  9.40386e-05  0.000350726   1.4553e-05  0.000512968   5.6811e-06  4.60044e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.24726, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 2700 K
            Well    Collision, 1/sec
              W1         5.55075e+08
      global relaxation matrix dimension = 525
      setting global matrices ... done, cpu time[sec] = 0.564795, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.63672, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            40773.9      66225.9       204689       199429      31771.6       147353      65183.1        20956
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0164    0.0171         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000712    0.0171     0.991
         *Z       ---       ---  5.09e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0170501
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.982978    0.0170217    0.0142209   0.00187295  8.71542e-05  0.000301682   1.3138e-05  0.000520272  5.69545e-06  4.60047e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.25469, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 2700 K
            Well    Collision, 1/sec
              W1         7.77105e+08
      global relaxation matrix dimension = 525
      setting global matrices ... done, cpu time[sec] = 0.563259, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.63289, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            29124.2      47304.2       146207       142449        22694       105252      46559.3      14968.5
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0159    0.0163         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000683    0.0163    -0.992
         *Z       ---       ---  5.09e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0162671
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1      0.98376    0.0162401    0.0136406   0.00169957  8.28967e-05  0.000274087  1.23067e-05  0.000524836  5.70815e-06   4.6005e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.25682, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 2700 K
            Well    Collision, 1/sec
              W1         9.99135e+08
      global relaxation matrix dimension = 525
      setting global matrices ... done, cpu time[sec] = 0.56273, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.63856, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            22652.2      36792.2       113716       110794      17650.9      81862.7      36212.8      11642.2
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0155    0.0157         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000661    0.0157    -0.992
         *Z       ---       ---  5.09e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0156695
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.984357    0.0156435    0.0131844   0.00157835  7.98302e-05  0.000255457  1.17279e-05  0.000527956  5.71979e-06  4.60052e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.25354, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 2700 K
            Well    Collision, 1/sec
              W1         1.11015e+09
      global relaxation matrix dimension = 525
      setting global matrices ... done, cpu time[sec] = 0.564373, elapsed time[sec] = 1
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.62185, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
              20387        33113       102345      99714.4      15885.8      73676.4      32591.5        10478
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0153    0.0154         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000651    0.0154    -0.992
         *Z       ---       ---  5.09e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0154162
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.984609    0.0153905    0.0129879   0.00152962  7.85694e-05  0.000248092  1.14946e-05  0.000529162   5.7253e-06  4.60054e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.24103, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 2700 K
            Well    Collision, 1/sec
              W1         1.66523e+09
      global relaxation matrix dimension = 525
      setting global matrices ... done, cpu time[sec] = 0.563437, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.64835, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            13591.3      22075.3      68229.7      66476.3      10590.5      49117.6      21727.7      6985.32
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0146    0.0144         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000615    0.0144    -0.993
         *Z       ---       ---  5.09e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0144279
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.985596    0.0144039    0.0122054   0.00135328  7.38335e-05  0.000221899  1.06418e-05  0.000533048  5.75066e-06   4.6006e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.26404, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 2700 K
            Well    Collision, 1/sec
              W1          2.2203e+09
      global relaxation matrix dimension = 525
      setting global matrices ... done, cpu time[sec] = 0.563236, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.6478, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            10193.5      16556.5      51172.3      49857.2      7942.91      36838.2      16295.8      5238.99
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0141    0.0137         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000588    0.0137     0.993
         *Z       ---       ---  5.09e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0137167
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.986306    0.0136938    0.0116289   0.00123857  7.05674e-05  0.000205132  1.00742e-05  0.000534878  5.77329e-06  4.60067e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.27115, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 2700 K
            Well    Collision, 1/sec
              W1         2.77538e+09
      global relaxation matrix dimension = 525
      setting global matrices ... done, cpu time[sec] = 0.563177, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.64578, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            8154.79      13245.2      40937.8      39885.8      6354.33      29470.6      13036.6      4191.19
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0137    0.0132         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000568    0.0132    -0.993
         *Z       ---       ---  5.09e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0131611
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.986861    0.0131392    0.0111718   0.00115523  6.80778e-05  0.000193022  9.65222e-06  0.000535632  5.79396e-06  4.60074e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.26903, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 2700 K
            Well    Collision, 1/sec
              W1         3.33045e+09
      global relaxation matrix dimension = 525
      setting global matrices ... done, cpu time[sec] = 0.566875, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.62636, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            6795.66      11037.7      34114.9      33238.1      5295.27      24558.8      10863.8      3492.66
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0134    0.0127         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000551    0.0127     0.994
         *Z       ---       ---  5.09e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0127056
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.987316    0.0126845    0.0107933   0.00109063  6.60682e-05  0.000183649  9.31789e-06  0.000535747  5.81308e-06   4.6008e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.25474, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 2700 K
            Well    Collision, 1/sec
              W1         3.88553e+09
      global relaxation matrix dimension = 525
      setting global matrices ... done, cpu time[sec] = 0.563469, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.63054, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            5824.85      9460.85      29241.3      28489.8      4538.81      21050.4      9311.86      2993.71
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0131    0.0123         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000536    0.0123     0.994
         *Z       ---       ---  5.09e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.01232
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.987701    0.0122995    0.0104703   0.00103837  6.43845e-05  0.000176063  9.04194e-06  0.000535456  5.83092e-06  4.60087e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.25995, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 2700 K
            Well    Collision, 1/sec
              W1          4.4406e+09
      global relaxation matrix dimension = 525
      setting global matrices ... done, cpu time[sec] = 0.569252, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.63477, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            5096.74      8278.24      25586.1      24928.6      3971.46      18419.1      8147.88      2619.49
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0128     0.012         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000524     0.012    -0.994
         *Z       ---       ---  5.09e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0119858
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6           P7
           W1     0.988034    0.0119659    0.0101889  0.000994774  6.29362e-05  0.000169725   8.8075e-06  0.000534892  5.84769e-06  4.60094e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.2638, elapsed time[sec] = 1
   MasterEquation::set:  starts
